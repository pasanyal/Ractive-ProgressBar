{"version":3,"sources":["webpack:////js/app-bundle.min.js","webpack:///webpack/bootstrap e2ccfe4f452d62546a93","webpack:///./app/js/app.js","webpack:///./~/ractive/ractive.js","webpack:///./app/views/app.html","webpack:///./app/js/components/progressbarHandler.js","webpack:///./app/views/progressbar.html"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_ractive","_ractive2","_app","_app2","_progressbarHandler","_progressbarHandler2","App","el","template","components","ProgressbarHandler","global","factory","this","createDocumentFragment","doc","getElement","input","output","win","nodeType","getElementById","querySelector","detachNode","node","parentNode","removeChild","safeToStringValue","toString","safeAttributeString","string","replace","camelize","camel","s","charAt","toUpperCase","decamelize","decamel","toLowerCase","extend$1","target","sources","len","arguments","length","prop","forEach","source","hasOwn","fillGaps","key","isArray","thing","toString$1$1","isEqual","a","b","isNumeric","isNaN","parseFloat","isFinite","isObject","format","message","args","shift","fatal","Error","logIfDebug","Ractive","DEBUG","log","apply","warn","printWarning","warnOnce","alreadyWarned","warnIfDebug","warnOnceIfDebug","findInViewHierarchy","registryName","ractive","name","instance","findInstance","isolated","parent","interpolate","from","to","type","interpol","missingPlugin","interpolators","number","array","object","snap","addToArray","index","indexOf","push","arrayContains","i","arrayContentsMatch","ensureArray","x","undefined","lastItem","removeFromArray","member","splice","toArray","arrayLike","wait","callback","setTimeout","makeDispatcher","handlers","result","handler","resolve$1","promise","fulfil","reject","then","TypeError","_Promise","e","called","resolvePromise","rejectPromise","y","r","detach$1","element","detach","_detachNodes","tm","detachNodes","check","ready","outros","outroChildren","outrosComplete","decrementOutros","intros","totalChildren","notifiedTotal","decrementTotal","detachImmediate","manager","trans","queue","detachQueue","collectAllOutros","j","start","contains","list","children","concat","dispatch$1","observer","dispatch","flushChanges","which","batch","immediateObservers","fragment","fragments","ractives","changeHook","fire","viewmodel","changes","update","ractive$1","transitionManager","deferredObservers","tasks","escapeKey","escapeKeyPattern","normalise","ref","refPattern","splitKeypath","keypath","match","splitPattern","exec","substr","unescapeKey","unescapeKeyPattern","bind$1$1","fn","context","test","bound","bind","set$1","pairs","runloop","model","set","end","gather","base","star","findMatches","joinAll","build","sets","loop","k","hasOwnProperty","map","add$1","d","pair","add","get","errorMessage","Ractive$add","getOptions","options","easing$$1","easing","linear","duration","complete","noop","step","animate$1","noAnimation","interpolator","animate","Ractive$animate","keys","join","Ractive$detach","isDetached","__ractive_instances__","detachHook","Ractive$find","selector","find","sortByDocumentPosition","otherNode","compareDocumentPosition","bitmask","sortByItemPosition","mutualAncestor","ancestryA","getAncestry","component","proxy","ancestryB","oldestA","oldestB","pop","fragmentA","parentFragment","fragmentB","indexA","items","indexB","iterations","indexA$1","indexB$1","getParent","item","owner","ancestry","ancestor","Ractive$findAll","liveQueries","_liveQueries","query","live","slice","Query","findAll","init","Ractive$findAllComponents","_liveComponentQueries","findAllComponents","Ractive$findComponent","findComponent","Ractive$findContainer","container","findContainer","Ractive$findParent","findParent","enqueue","event","_eventQueue","dequeue","getPotentialWildcardMatches","starMap","mapper","wildcardKeypath","starMaps","getStarMap","num","max","binary","l","ones","parseInt","digit","fireEvent","eventName","_noArg","eventNames","getWildcardNames","fireEventAs","wildcardCache","initialFire","subscribers","bubble","_subs","notifySubscribers","fullName","originalEvent","stopEvent","original","preventDefault","stopPropagation","Ractive$fire","badReference","resolveAmbiguousReference","hasContextChain","crossedComponentBoundary","aliases","localViewmodel","findContext","root","isIteration","keyRef","getKeyModel","indexRef","isRoot","has","createLink","joinKey","componentParent","startCapturing","stack","captureGroup","stopCapturing","dependencies","capture","bind$2","cancel$1","cancel","handleChange$1$1","handleChange","mark$1$1","mark","marked","notifiedUpstream","render$1$1","render","teardown$1$1","teardown","unbind$1$1","unbind","unrender$1$1","unrender","unrenderAndDestroy","update$1$1","toString$2","toEscapedString","updateFromBindings","findBoundValue","checked","fireShuffleTasks","stage","shuffleTasks","register","registerQueue","rebindMatch","next","previous","isKey","isKeypath","parts","split","shuffling","tick","ticker","now","getTime","tickers","rAF","running","prefixKeypath","prefix","prefixed","getPrefixer","rootKeypath","rootDot","prefixers","relativeKeypath","recreateArray","childByKey","resolveReference","keypathExpr","getKeypathModel","match$1","model$1","repeater","findRepeatingFragment","getRactiveModel","GlobalModel$1","part","Ractive$get","opts","gatherRefs","getNewIndices","methodName","spliceArguments","removeStart","removeEnd","balance","newIndices","getSpliceEquivalent","Math","min","startIndex","touchedFrom","getComparator","option","JSON","stringify","comparators","merge$2","comparator","compare","merge","thisRactive$merge","update$3","wrapper","registerChange","getKeypath","clearUnresolveds","notifyUpstream","updateHook","Ractive$update","build$1","findModel","get$1","_element","resolve$2","path","frag","add$2","val","animate$2","link$1","dest","there","here","link","merge$1","modelPop","values","modelPush","reverse","modelReverse","set$2","modelShift","drop","unshift","modelSplice","sort","modelSort","subtract","toggle","unlink$1","_link","unlink","modelUnshift","update$2","updateModel$1","cascade","isBound","getBindingModel","getBindingPath","getBinding","ctx","binding","setBinding","resolve","rootpath","addHelpers","defineProperties","updateModel","getNodeInfo","staticInfo","Ractive$insert","anchor","rendered","insertBefore","fireInsertHook","insertHook","child","link$2","sourcePath","observe","this$1","observers","createObserver","keypaths","_observers","wildcardIndex","Observer","baseModel","PatternObserver","observeList","ListObserver","negativeOne","observeOnce","onceOptions","Ractive$off","trim","filter","notEmptyString","Ractive$on","n","listeners","on","listener","off","Ractive$once","addCSS","styleDefinition","styleDefinitions","isDirty","applyCSS","useCssText","styleElement","styleSheet","cssText","getCSS","innerHTML","cssIds","filteredStyleDefinitions","style","reduce","styles","PREFIX","render$2","occupants","transitionsEnabled","noIntro","scheduleTask","renderHook","cssId","docFrag","completeHook","Ractive$render","torndown","Promise","append","others","enhance","childNodes","combine","trim$1","str","extractString","unit","transformSelector","selectorUnits","selectorUnitPattern","modifiers","transformed","appended","prepended","transformCss","css","dataAttr","dataRvcGuidPattern","commentsPattern","selectorsPattern","$1","excludePattern","selectors","s4","floor","random","substring","uuid","validate","data","constructor","combine$1","parentValue","childValue","parentIsFn","childIsFn","callDataFunction","fromProperties","primary","secondary","fromExpression","body","Array","Function","fromComputationString","bindTo","hasThis","functionBody","pattern","getFunction","functions","createFunction","addFunctions","exp","readDelimiterChange","parser","opening","closing","matchString","pos","allowWhitespace","matchPattern","delimiterChangePattern","whitespacePattern","readNumberLiteral","regexpPattern","t","REGEXP_LITERAL","v","escapeRegExp","pattern$1","decodeCharacterReferences","html","entityPattern","entity","code","htmlEntities","codeToChar","validateCode","escapeHtml","amp","lessThan","greaterThan","controlCharacters","invalid","codePointSupport","readNumberLiteral$1","numberPattern","NUMBER_LITERAL","readBooleanLiteral","remaining","BOOLEAN_LITERAL","readKey","token","readStringLiteral","identifier","readKeyValuePair","refKey","nextChar","readExpression","KEY_VALUE_PAIR","error","REFERENCE","readKeyValuePairs","keyValuePairs","readExpressionList","expr","expressions","expectedExpression","readLiteral","readObjectLiteral","readArrayLiteral","readReference","startPos","reference","fullLength","lastDotIndex","spread","specials","specialCall","spreadArgs","spreadPattern","prefixPattern","relaxedNames","relaxedName","legalReference","keywords","globals","GLOBAL","lastIndexOf","refLength","readBracketedExpression","expectedParen","BRACKETED","readRefinement","strictRefinement","name$$1","REFINEMENT","getConditional","expression","ifTrue","ifFalse","readLogicalOr$1","CONDITIONAL","o","flattenExpression","getVars","vars","count","STRING_LITERAL","String","ARRAY_LITERAL","OBJECT_LITERAL","PREFIX_OPERATOR","INFIX_OPERATOR","INVOCATION","MEMBER","refs","stringified","extractRefs","getKeyValuePair","valueToken","read","processDirective","tokens","parentParser","colonIndex","directiveName","directiveArgs","parsed","DECORATOR","TRANSITION","ExpressionParser","EVENT","methodCallPattern","parser$1","parseJSON","readAttribute","attr","nearest","idx","attributeNamePattern","tags","open","readAttributeValue","f","valueStart","startDepth","sectionDepth","readQuotedAttributeValue","readUnquotedAttributeValue","readUnquotedAttributeValueToken","text","haystack","needles","unquotedAttributeValueTextPattern","getLowestIndex","inAttribute","readMustache","quoteMark","readQuotedStringToken","readAttributeOrDirective","attribute","directive","directives","decoratorPattern","transitionPattern","proxyEventPattern","reservedEventNames","sanitizeEventAttributes","onPattern","exclude","ATTRIBUTE","mustache","inside","readMustacheOfType","inTag","tag","reader","close","sortMustacheTags","delimiterChangeToken","rewind","readers","isStatic","includeLinePositions","getLinePos","refineExpression","referenceExpression","getReferenceExpression","rx","refinement","members","readTriple","triple","TRIPLE","readUnescaped","readAliases","alias","readAlias","asRE","legalAlias","readPartial","partial","PARTIAL","ALIAS","z","SECTION","SECTION_WITH","readComment","COMMENT","readExpressionOrReference","expectedFollowers","readInterpolator","err","INTERPOLATOR","readYielder","yieldPattern","yielder","YIELDER","readClosing","CLOSING","readElse","elsePattern","ELSE","readElseIf","elsePattern$1","ELSEIF","readSection","section","hasElse","block","unlessBlock","conditions","closed","expectedClose","aliasOnly","SECTION_UNLESS","standardDelimiters","handlebarsBlockPattern","handlebarsBlockCodes","indexRefPattern","extra","keyIndexRefPattern","SECTION_IF","READERS","readHtmlComment","content","endIndex","comment","OPEN_COMMENT","CLOSE_COMMENT","isString","isComment","DELIMCHANGE","isSection","INVERTED","cleanup","stripComments","preserveWhitespace","removeLeadingWhitespace","removeTrailingWhitespace","previousItem","nextItem","preserveWhitespaceInsideFragment","removeLeadingWhitespaceInsideFragment","removeTrailingWhitespaceInsideFragment","stripStandalones","trimWhitespace","leadingWhitespace$1","trailingWhitespace","isPreserveWhitespaceElement","ELEMENT","preserveWhitespaceElements","leadingNewLine","trailingNewLine","contiguousWhitespace","readClosingTag","closingTagPattern","CLOSING_TAG","readElement$1","selfClosing","partials","hasPartials","closingTag","DOCTYPE","tagNamePattern","validTagNameFollower","lowerCaseName","voidElementNames","elementStack","create","canContain","closingTagName","PARTIAL_READERS","sanitizeElements","disallowed","disallowedContents","readText","barrier","textOnlyMode","readPartialDefinitionComment$1","startPattern","namePattern","finishPattern","endPattern","RegExp","INLINE_PARTIAL","readPartialDefinitionSection","delimiters","partialDefinitionSectionPattern","readTemplate","TEMPLATE_VERSION","insertExpressions","isExpression","addTo","hasChildren","parse","StandardParser","throwNoParse","method","instructions","TEMPLATE_INSTRUCTIONS","createFunctionFromString","COMPUTATION_INSTRUCTIONS","resetValue","initial","_config","getDynamicTemplate","fromId","isParsed","getParseOptions","parseTemplate","parseAsString","validate$1","parseFor","extendPartials","existingPartials","newPartials","overwrite","wrap","superMethod","getSuperMethod","_parent","hasSuper","oldSuper","_super","_method","getMessage","deprecated","correct","isError","deprecateOption","deprecatedOption","deprecate","adaptors","configure$1","Parent","isStandardKey","registries","registry","adaptConfigurator","templateConfigurator","cssConfigurator","extendOtherMethods","prototype","isBlacklisted","makeObj","Ractive$reset","dataConfigurator","reset","rerender","config","shouldRerender","unrenderHook","resetTemplate","renderHook$1","completeHook$1","resetHook","collect","refName","COMPONENT","attributes","forceResetTemplate$1","forceResetTemplate","createResolver","resolver","resolvers","models","resolve$3","ExpressionProxy","ReferenceExpressionProxy","resolveAliases","findElement","orComponent","readStyle","escape","remove$1","rule","rules","camelCase","specials$2","readClass","space","getUpdateDelegate","updateId","getAttribute","updateMultipleSelectValue","updateSelectValue","updateStringValue","updateContentEditableValue","updateRadioValue","textTypes","updateValue","isTwoway","updateRadioName","updateCheckboxName","updateStyleAttribute","updateInlineStyle","namespaceURI","updateClassName","updateInlineClass","isBoolean","type$1","updateBoolean","namespace","updateNamespacedAttribute","updateAttribute","getValue","nodes","removeAttribute","selected","optionValue","locked","wasSelected","disabled","selectedIndex","wasChecked","group","setAttribute","valueAttribute","isChecked","props","prev","styleName","className","inlineClass","useProperty","propertyName","getString","removeAttributeNS","setAttributeNS","lookupNamespace","qualified","hasAttribute","namespaces","set$3","flag","current","recreateTwowayBinding","inAttributes","doInAttributes","parseAttributes","isSvg","tagName","div$1","notIn","needle","createOrWrapDescriptor","originalDescriptor","__magic","dependants","setting","descriptor","enumerable","revert","dependant","prettify","fnBody","lines","tabs","minIndent","line","Infinity","truncateStack","Computation","truncated","getComputationSignature","signature","getter","setter","getterString","getterUseStack","setterString","construct","welcome","initialiseProperties","deprecateRactiveData","constructHook","registryNames$1","RootModel","adapt","getAdaptors","computed","compute","combine$2","protoAdapt","lookup","adaptor","magic$$1","magic","modifyArrays","magicArrayAdaptor","magicAdaptor$1","arrayAdaptor","_guid","uid","getChildQueue","fire$1","hookQueue","childQueue","hook","initialise","userOptions","computations","computation","configHook","initHook","begin","Fragment","DEBUG_PROMISES","updateLiveQueries","removeFromLiveComponentQueries","remove","makeDirty$1","makeDirty","updateLiveQueries$1","findParentForm","warnAboutAmbiguity","description","handleDomEvent","getBindingGroup","hash","BindingGroup","getValue$1$1","all","bindings","res","handleBlur","handleDelay","delay","timeout","clearTimeout","getSelectedOptions","select","selectedOptions","getSiblings","siblings","getValue$2","isBindable","selectBinding","attributeByName","contenteditable","ContentEditableBinding","bindName","bindChecked","CheckboxBinding","RadioNameBinding","CheckboxNameBinding","RadioBinding","Binding","NumericBinding","GenericBinding","MultipleSelectBinding","SingleSelectBinding","makeDirty$2","inputIsCheckedRadio","typeAttribute","nameAttribute","stringifyAttribute","removeFromLiveQueries","getNamespace","xmlns$$1","svg$1","handleReset","formBindings","updateModel$2","createMapping","childData","boundFragment","valueOf","findParentSelect","getPartialTemplate","getPartialFromRegistry","noThrow","findParentPartial","isOwner","noRegistryFunctionReturn","findOwner","_fn","findConstructor","_Parent","parsePartial","isEmpty","getType","hasIndexRef","SECTION_EACH","SECTION_IF_WITH","valueContains","selectValue","onChange","visible","hidden","onHide","onShow","resetStyle","elementCache","createElement","getComponentConstructor","Component","createItem","Text","ComponentConstructor","ElementConstructor","specialElements","Element","Item","Mapping","Attribute","constructors","processItems","guid","counter","TEXT","placeholderId","newModel","unrenderAndDestroy$1","Ractive$resetTemplate","shouldDestroy","findParentNode","findNextNode","Ractive$set","Ractive$subtract","Ractive$teardown","Promise$1","teardownHook$1","Ractive$toggle","badArguments","Ractive$toCSS","uniqueCssIds","ids","Ractive$toHTML","Ractive$transition","params","HTMLElement","transition","Transition","registerTransition","unlink$2","lastLink","Ractive$unrender","unrenderHook$1","Ractive$updateModel","needsSuper","unwrap","Child","addRegistries","addOtherOptions","addRegistry","useDefaults","wrap$1","extend$3","extendOne","proto","defaults","extend","writable","configurable","joinKeys","splitKeypath$1","tripleDelimiters","staticDelimiters","staticTripleDelimiters","csp","sanitize","twoway","lazy","noCssTransform","easeIn","pow","easeOut","easeInOut","legacy","window","document","isClient","hasConsole","navigator","appName","console","matches","div","methodNames","unprefixed","makeFunction","svg","implementation","hasFeature","vendors","mathml","xlink","xml","xmlns","ns","createElementNS","cloneNode","appendChild","querySelectorAll","desc","F","welcomeIntro","welcomeMessage","hasGroup","groupCollapsed","groupEnd","delta","intermediate","properties","deprecations","replacement","Hook","arg","PENDING","FULFILLED","REJECTED","dispatchHandlers","makeResolver","fulfilledHandlers","rejectedHandlers","state","newState","onFulfilled","onRejected","promise2","processResolutionHandler","forward","p1result","promises","pending","processPromise","reason","TransitionManager","addChild","isIntro","returnPromise","fulfilPromise","previousBatch","addFragment","addFragmentToRoot","addInstance","addObserver","defer","_manager","detachWhenReady","task","postRender","_batch","isComponentQuery","dirty","_root","nodeOrComponent","KeyModel","isReadonly","deps","links","shouldCapture","rebinding","registerLink","unregister","unregisterLink","KeypathModel","getChild","rebindChildren","dep","hasProp","early","ModelBase","keyModels","unresolved","unresolvedByKey","patternObservers","addUnresolved","addShuffleTask","addShuffleRegister","specificKey","hasKey","attemptResolution","resolved","existingMatches","getValueChildren","skip","getVirtual","virtual","child$1","notify","safe","relinking","keypathModel","registerPatternObserver","registerTwowayBinding","removeUnresolved","shuffled","rewrap","unregisterPatternObserver","unregisterTwowayBinding","oneway","LinkModel","ModelBase$$1","isLink","applyValue","relinked","shuffle","upstream","lnk","ln","requestAnimationFrame","vendors$$1","lastTime","win$$1","currTime","timeToCall","Date","performance","Ticker","elapsed","eased","stop","abort","Model","shouldTeardown","createBranch","__model","branch","retrieve","old","oldArray","newArray","oldLength","usedIndices","firstUnusedIndex","GlobalModel","Model$$1","arrayProto","makeArrayMethod","mdl","result$1","promise$1","storage","ReferenceResolver","contexts","forceResolution","oldValue","newValue","once","strict","cancelled","baseKeypath","oldValues","newValues","changed","newKeys","wildcards","suffix","i$1","ok","sliced","inserted","deleted","hadIndex","newIndex","oldIndex","pop$1","push$1","getElementsByTagName","Parser","ParseError","leadingWhitespace","lineStart","lineEnds","lineEnd","leftover","postProcess","converters","char","columnNum","lineNum","numTabs","annotation","character","shortMessage","stringMiddlePattern","escapeSequencePattern","lineContinuationPattern","Parser$1","BINDING_FLAG","regExpCache","search","booleanAttributes","quot","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","fromCodePoint","fromCharCode","makeQuotedStringMatcher","okQuote","literal","done","charCodeAt","getSingleQuotedString","getDoubleQuotedString","expressionList","readTypeOf","makePrefixSequenceMatcher","readPrimary","readMemberOrInvocation","symbol","fallthrough","matcher","prefixOperators","readLogicalOr","makeInfixSequenceMatcher","readTypeof","left","right","infixOperators","specials$1","true","false","null","specialsPattern","numberPattern$1","placeholderPattern","placeholderAtStartPattern","onlyWhitespace","JsonParser","placeholder","special","stringLiteral","intro-outro","intro","outro","decorator","each","if","with","unless","leadingLinebreak","trailingLinebreak","backOne","backTwo","lastSectionItem","leadingPattern","trailingPattern","li","dt","dd","rt","rp","optgroup","thead","tbody","tfoot","tr","td","th","STANDARD_READERS","TRIPLE_READERS","STATIC_READERS","computedStrings","isTriple","script","textarea","elements","eventAttributes","parseOptions","textContent","registryNames","Registry","configure","custom","defaultKeys","order","resetPartial","collection","destroyed","ComputationChild","actuallyChanged","registered","ReferenceExpressionChild","baseResolver","intermediary","isUnresolved","Alias","Item$$1","firstNode","skipParent","hyphenatedStr","float","propertyNames","accept-charset","accesskey","bgcolor","class","codebase","colspan","datetime","dirname","for","http-equiv","ismap","maxlength","novalidate","pubdate","readonly","rowspan","tabindex","usemap","updateDelegate","twowayBinding","lastVal","BindingFlag","ConditionalAttribute","attrs","processWrapper","mutatorMethods","patchedArrayProto","wrappers","patchArrayMethods","unpatchArrayMethods","__proto__","unpatch","patch","errorMessage$1","ArrayWrapper","instances","magicAdaptor","MagicWrapper","originalDescriptors","getOwnPropertyDescriptor","childKeypath","MagicArrayWrapper","magicWrapper","arrayWrapper","computationContext","setDependencies","dependent","RactiveModel","hasProp$1","applyChanges","_changeHash","flush","targetPath","ractiveModel","localKey","origin","local","HookQueue","inProcess","DOMEvent","listen","addEventListener","unlisten","removeEventListener","CustomEvent","eventPlugin","RactiveEvent","specialPattern","dollarArgsPattern","EventDirective","events","action","specialMatch","dollarMatch","passedArgs","oldEvent","getArgsList","teardownHook","_partials","yielders","_inlinePartials","leftovers","eventHandlers","setupEvents","checkYielders","toHTML","missingDecorator","Decorator","dynamicName","dynamicArgs","nameFragment","argsFragment","decorators","argsFn","nameChanged","args$1","Doctype","wasUndefined","getInitialValue","parentForm","lastValue","setFromNode","Binding$$1","attachEvent","push$2","checkboxName","noInitialValue","existingValue","bindingValue","valueSoFar","forceUpdate","selectedValues","previousValue","setValue","initialValue","GenericBinding$$1","nameAttributeBinding","optionWasSelected","endsWithSemi","isVoid","deferContent","createTwowayBinding","shouldBind","matches$$1","existing","nodeName","foundNode","_introTransition","isSelected","cls","_outroTransition","Form","Element$$1","Mustache","Interpolator","Mustache$$1","nodeValue","createTextNode","Input","defaultValue","Option","selectedAttribute","Partial","templateObj","named","setTemplate","partialTemplate","RepeatedFragment","pendingNewIndices","previousIterations","createIteration","found","iteration","updatePostShuffle","updating","toRemove","oldKeys","wasArray","fragment$1","newLength","indices","oldLen","removed","contiguous","Section","sectionType","templateSectionType","subordinate","sibling","nextSibling","isTruthy","siblingFalsey","lastType","newFragment","fragmentShouldExist","Select","sync","defaultSelected","selectNode","isMultiple","shouldSelect","Textarea","Input$$1","prefixCache","testStyle","capped","vendor","prefix$1","prefix$2","createTransitions","unprefixPattern","unprefix","vendorPattern","hyphenate","TRANSITION$1","TRANSITIONEND","CSS_TRANSITIONS_ENABLED","TRANSITION_DURATION","TRANSITION_PROPERTY","TRANSITION_TIMING_FUNCTION","testStyle$1","linear$1","canUseCssTransitions","cannotUseCssTransitions","webkitTransition","changedProperties","transitionDone","cssTimeout","checkComplete","jsTransitionsComplete","cssTransitionsComplete","unregisterCompleteHandler","transitionEndHandler","cssTransitionsDone","property","timing","hashPrefix","registerCompleteHandler","originalValue","propertiesToTransitionInJs","getStyle","createTransitions$1","getComputedStyle","resolved$1","names","t0","t1","t2","onComplete","animateStyle","setStyle","computedStyle","value$1","processParams","completed","originalStyle","noReset","ieBug","ieBlacklist","TABLE","THEAD","TBODY","TR","SELECT","insertHtml","html$$1","selectedOption","firstChild","Triple","queryResult","queryAllResult","numNodes","Yielder","containerFragment","doctype","form","dirtyArgs","dirtyValue","createItems","argsList","wasBound","wasRendered","toHtml","reverse$1","shift$1","sort$1","splice$1","unshift$1","insert","toCSS","toCss","force","FUNCTION","VERSION","transitions","_progressbar","_progressbar2","changeInterval","selectedBar","keyPath","keyPath1","nextVal","selectedProgressBar","progressbars","showvalue","intervals"],"mappings":"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AA,IAAAC,IAAA,IAAAC,KAAA,IAAAC,IAAA,IAAAC,OAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,MAAA,IAAAC,MAAA,IAAAC,KAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,KAAA,IAAAC,MAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,KAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,KAAA,IAAAC,IAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,KAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,KAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,KAAA,IAAAC,MAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,KAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,KAAA,IAAAC,IAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,KAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,KAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,KAAA,IAAAC,MAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,MAAA,IAAAC,MAAA,IAAAC,KAAA,IAAAC,MAAA,IAAAC,MAAA,IAAAC,QAAA,IAAAC,KAAA,IAAAC,IAAA,IAAAC,MAAA,IAAAC,KAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,QAAA,IAAAC,GAAA,IAAAC,IAAA,IAAAC,MAAA,IAAAC,IAA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","file":"/js/app-bundle.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _ractive = __webpack_require__(1);\n\t\n\tvar _ractive2 = _interopRequireDefault(_ractive);\n\t\n\tvar _app = __webpack_require__(2);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\tvar _progressbarHandler = __webpack_require__(3);\n\t\n\tvar _progressbarHandler2 = _interopRequireDefault(_progressbarHandler);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* Imports component to be used in ractive instance */\n\t\n\t__webpack_require__(5); /* Incorporates the scss styles */\n\t\n\t/* Creates a new ractive instance,\r\n\t  el: the element to show the content,\r\n\t  template: the content to be shown,\r\n\t  components: the component modules to be used in the ractive instance */\n\t/* Imports template to be used in ractive instance */\n\t/* Name- app.js\r\n\t  Description- The entry js of the ractive application\r\n\t  Version- 1.0\r\n\t*/\n\t\n\tvar App = new _ractive2.default({\n\t  el: '#app',\n\t  template: _app2.default,\n\t  components: {\n\t    ProgressbarHandler: _progressbarHandler2.default\n\t  }\n\t});\n\t\n\texports.default = App;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t\tRactive.js v0.8.0\n\t\tSun Oct 09 2016 20:58:50 GMT-0400 (EDT) - commit 7c01d1418d335a9a33c57929b24b8bac7c9c421a\n\t\n\t\thttp://ractivejs.org\n\t\thttp://twitter.com/RactiveJS\n\t\n\t\tReleased under the MIT License.\n\t*/\n\t\n\t\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  ((function() { var current = global.Ractive; var next = factory(); next.noConflict = function() { global.Ractive = current; return next; }; return global.Ractive = next; })());\n\t}(this, (function () { 'use strict';\n\t\n\tvar defaults = {\n\t\t// render placement:\n\t\tel:                     void 0,\n\t\tappend:\t\t\t\t    false,\n\t\n\t\t// template:\n\t\ttemplate:               null,\n\t\n\t\t// parse:\n\t\tdelimiters:             [ '{{', '}}' ],\n\t\ttripleDelimiters:       [ '{{{', '}}}' ],\n\t\tstaticDelimiters:       [ '[[', ']]' ],\n\t\tstaticTripleDelimiters: [ '[[[', ']]]' ],\n\t\tcsp: \t\t\t\t\ttrue,\n\t\tinterpolate:            false,\n\t\tpreserveWhitespace:     false,\n\t\tsanitize:               false,\n\t\tstripComments:          true,\n\t\n\t\t// data & binding:\n\t\tdata:                   {},\n\t\tcomputed:               {},\n\t\tmagic:                  false,\n\t\tmodifyArrays:           false,\n\t\tadapt:                  [],\n\t\tisolated:               false,\n\t\ttwoway:                 true,\n\t\tlazy:                   false,\n\t\n\t\t// transitions:\n\t\tnoIntro:                false,\n\t\ttransitionsEnabled:     true,\n\t\tcomplete:               void 0,\n\t\n\t\t// css:\n\t\tcss:                    null,\n\t\tnoCssTransform:         false\n\t};\n\t\n\t// These are a subset of the easing equations found at\n\t// https://raw.github.com/danro/easing-js - license info\n\t// follows:\n\t\n\t// --------------------------------------------------\n\t// easing.js v0.5.4\n\t// Generic set of easing functions with AMD support\n\t// https://github.com/danro/easing-js\n\t// This code may be freely distributed under the MIT license\n\t// http://danro.mit-license.org/\n\t// --------------------------------------------------\n\t// All functions adapted from Thomas Fuchs & Jeremy Kahn\n\t// Easing Equations (c) 2003 Robert Penner, BSD license\n\t// https://raw.github.com/danro/easing-js/master/LICENSE\n\t// --------------------------------------------------\n\t\n\t// In that library, the functions named easeIn, easeOut, and\n\t// easeInOut below are named easeInCubic, easeOutCubic, and\n\t// (you guessed it) easeInOutCubic.\n\t//\n\t// You can add additional easing functions to this list, and they\n\t// will be globally available.\n\t\n\t\n\tvar easing = {\n\t\tlinear: function ( pos ) { return pos; },\n\t\teaseIn: function ( pos ) { return Math.pow( pos, 3 ); },\n\t\teaseOut: function ( pos ) { return ( Math.pow( ( pos - 1 ), 3 ) + 1 ); },\n\t\teaseInOut: function ( pos ) {\n\t\t\tif ( ( pos /= 0.5 ) < 1 ) { return ( 0.5 * Math.pow( pos, 3 ) ); }\n\t\t\treturn ( 0.5 * ( Math.pow( ( pos - 2 ), 3 ) + 2 ) );\n\t\t}\n\t};\n\t\n\tvar legacy = null;\n\t\n\t/*global console, navigator */\n\t\n\tvar win = typeof window !== 'undefined' ? window : null;\n\tvar doc = win ? document : null;\n\t\n\tvar isClient = !!doc;\n\tvar isJsdom = ( typeof navigator !== 'undefined' && /jsDom/.test( navigator.appName ) );\n\tvar hasConsole = ( typeof console !== 'undefined' && typeof console.warn === 'function' && typeof console.warn.apply === 'function' );\n\t\n\tvar magic;\n\ttry {\n\t\tObject.defineProperty({}, 'test', { value: 0 });\n\t\tmagic = true;\n\t} catch ( e ) {\n\t\tmagic = false;\n\t}\n\t\n\tvar svg = doc ?\n\t\tdoc.implementation.hasFeature( 'http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1' ) :\n\t\tfalse;\n\t\n\tvar vendors = [ 'o', 'ms', 'moz', 'webkit' ];\n\t\n\tvar html   = 'http://www.w3.org/1999/xhtml';\n\tvar mathml = 'http://www.w3.org/1998/Math/MathML';\n\tvar svg$1    = 'http://www.w3.org/2000/svg';\n\tvar xlink  = 'http://www.w3.org/1999/xlink';\n\tvar xml    = 'http://www.w3.org/XML/1998/namespace';\n\tvar xmlns  = 'http://www.w3.org/2000/xmlns';\n\t\n\tvar namespaces = { html: html, mathml: mathml, svg: svg$1, xlink: xlink, xml: xml, xmlns: xmlns };\n\t\n\tvar createElement;\n\tvar matches;\n\tvar div;\n\tvar methodNames;\n\tvar unprefixed;\n\tvar prefixed;\n\tvar i;\n\tvar j;\n\tvar makeFunction;\n\t\n\t// Test for SVG support\n\tif ( !svg ) {\n\t\tcreateElement = function ( type, ns, extend ) {\n\t\t\tif ( ns && ns !== html ) {\n\t\t\t\tthrow 'This browser does not support namespaces other than http://www.w3.org/1999/xhtml. The most likely cause of this error is that you\\'re trying to render SVG in an older browser. See http://docs.ractivejs.org/latest/svg-and-older-browsers for more information';\n\t\t\t}\n\t\n\t\t\treturn extend ?\n\t\t\t\tdoc.createElement( type, extend ) :\n\t\t\t\tdoc.createElement( type );\n\t\t};\n\t} else {\n\t\tcreateElement = function ( type, ns, extend ) {\n\t\t\tif ( !ns || ns === html ) {\n\t\t\t\treturn extend ?\n\t\t\t\t\tdoc.createElement( type, extend ) :\n\t\t\t\t\tdoc.createElement( type );\n\t\t\t}\n\t\n\t\t\treturn extend ?\n\t\t\t\tdoc.createElementNS( ns, type, extend ) :\n\t\t\t\tdoc.createElementNS( ns, type );\n\t\t};\n\t}\n\t\n\tfunction createDocumentFragment () {\n\t\treturn doc.createDocumentFragment();\n\t}\n\t\n\tfunction getElement ( input ) {\n\t\tvar output;\n\t\n\t\tif ( !input || typeof input === 'boolean' ) { return; }\n\t\n\t\tif ( !win || !doc || !input ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// We already have a DOM node - no work to do. (Duck typing alert!)\n\t\tif ( input.nodeType ) {\n\t\t\treturn input;\n\t\t}\n\t\n\t\t// Get node from string\n\t\tif ( typeof input === 'string' ) {\n\t\t\t// try ID first\n\t\t\toutput = doc.getElementById( input );\n\t\n\t\t\t// then as selector, if possible\n\t\t\tif ( !output && doc.querySelector ) {\n\t\t\t\toutput = doc.querySelector( input );\n\t\t\t}\n\t\n\t\t\t// did it work?\n\t\t\tif ( output && output.nodeType ) {\n\t\t\t\treturn output;\n\t\t\t}\n\t\t}\n\t\n\t\t// If we've been given a collection (jQuery, Zepto etc), extract the first item\n\t\tif ( input[0] && input[0].nodeType ) {\n\t\t\treturn input[0];\n\t\t}\n\t\n\t\treturn null;\n\t}\n\t\n\tif ( !isClient ) {\n\t\tmatches = null;\n\t} else {\n\t\tdiv = createElement( 'div' );\n\t\tmethodNames = [ 'matches', 'matchesSelector' ];\n\t\n\t\tmakeFunction = function ( methodName ) {\n\t\t\treturn function ( node, selector ) {\n\t\t\t\treturn node[ methodName ]( selector );\n\t\t\t};\n\t\t};\n\t\n\t\ti = methodNames.length;\n\t\n\t\twhile ( i-- && !matches ) {\n\t\t\tunprefixed = methodNames[i];\n\t\n\t\t\tif ( div[ unprefixed ] ) {\n\t\t\t\tmatches = makeFunction( unprefixed );\n\t\t\t} else {\n\t\t\t\tj = vendors.length;\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\tprefixed = vendors[i] + unprefixed.substr( 0, 1 ).toUpperCase() + unprefixed.substring( 1 );\n\t\n\t\t\t\t\tif ( div[ prefixed ] ) {\n\t\t\t\t\t\tmatches = makeFunction( prefixed );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// IE8...\n\t\tif ( !matches ) {\n\t\t\tmatches = function ( node, selector ) {\n\t\t\t\tvar nodes, parentNode, i;\n\t\n\t\t\t\tparentNode = node.parentNode;\n\t\n\t\t\t\tif ( !parentNode ) {\n\t\t\t\t\t// empty dummy <div>\n\t\t\t\t\tdiv.innerHTML = '';\n\t\n\t\t\t\t\tparentNode = div;\n\t\t\t\t\tnode = node.cloneNode();\n\t\n\t\t\t\t\tdiv.appendChild( node );\n\t\t\t\t}\n\t\n\t\t\t\tnodes = parentNode.querySelectorAll( selector );\n\t\n\t\t\t\ti = nodes.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( nodes[i] === node ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}\n\t}\n\t\n\tfunction detachNode ( node ) {\n\t\tif ( node && typeof node.parentNode !== 'unknown' && node.parentNode ) {\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t\n\t\treturn node;\n\t}\n\t\n\tfunction safeToStringValue ( value ) {\n\t\treturn ( value == null || !value.toString ) ? '' : '' + value;\n\t}\n\t\n\tfunction safeAttributeString ( string ) {\n\t\treturn safeToStringValue( string )\n\t\t\t.replace( /&/g, '&amp;' )\n\t\t\t.replace( /\"/g, '&quot;' )\n\t\t\t.replace( /'/g, '&#39;' );\n\t}\n\t\n\tvar camel = /(-.)/g;\n\tfunction camelize ( string ) {\n\t\treturn string.replace( camel, function ( s ) { return s.charAt( 1 ).toUpperCase(); } );\n\t}\n\t\n\tvar decamel = /[A-Z]/g;\n\tfunction decamelize ( string ) {\n\t\treturn string.replace( decamel, function ( s ) { return (\"-\" + (s.toLowerCase())); } );\n\t}\n\t\n\tvar create;\n\tvar defineProperty;\n\tvar defineProperties;\n\t\n\ttry {\n\t\tObject.defineProperty({}, 'test', { get: function() {}, set: function() {} });\n\t\n\t\tif ( doc ) {\n\t\t\tObject.defineProperty( createElement( 'div' ), 'test', { value: 0 });\n\t\t}\n\t\n\t\tdefineProperty = Object.defineProperty;\n\t} catch ( err ) {\n\t\t// Object.defineProperty doesn't exist, or we're in IE8 where you can\n\t\t// only use it with DOM objects (what were you smoking, MSFT?)\n\t\tdefineProperty = function ( obj, prop, desc ) {\n\t\t\tif ( desc.get ) obj[ prop ] = desc.get();\n\t\t\telse obj[ prop ] = desc.value;\n\t\t};\n\t}\n\t\n\ttry {\n\t\ttry {\n\t\t\tObject.defineProperties({}, { test: { value: 0 } });\n\t\t} catch ( err ) {\n\t\t\t// TODO how do we account for this? noMagic = true;\n\t\t\tthrow err;\n\t\t}\n\t\n\t\tif ( doc ) {\n\t\t\tObject.defineProperties( createElement( 'div' ), { test: { value: 0 } });\n\t\t}\n\t\n\t\tdefineProperties = Object.defineProperties;\n\t} catch ( err ) {\n\t\tdefineProperties = function ( obj, props ) {\n\t\t\tvar prop;\n\t\n\t\t\tfor ( prop in props ) {\n\t\t\t\tif ( props.hasOwnProperty( prop ) ) {\n\t\t\t\t\tdefineProperty( obj, prop, props[ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\ttry {\n\t\tObject.create( null );\n\t\n\t\tcreate = Object.create;\n\t} catch ( err ) {\n\t\t// sigh\n\t\tcreate = (function () {\n\t\t\tvar F = function () {};\n\t\n\t\t\treturn function ( proto, props ) {\n\t\t\t\tvar obj;\n\t\n\t\t\t\tif ( proto === null ) {\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\n\t\t\t\tF.prototype = proto;\n\t\t\t\tobj = new F();\n\t\n\t\t\t\tif ( props ) {\n\t\t\t\t\tObject.defineProperties( obj, props );\n\t\t\t\t}\n\t\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}());\n\t}\n\t\n\tfunction extend$1 ( target ) {\n\t\tvar sources = [], len = arguments.length - 1;\n\t\twhile ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\t\n\t\tvar prop;\n\t\n\t\tsources.forEach( function ( source ) {\n\t\t\tfor ( prop in source ) {\n\t\t\t\tif ( hasOwn.call( source, prop ) ) {\n\t\t\t\t\ttarget[ prop ] = source[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\treturn target;\n\t}\n\t\n\tfunction fillGaps ( target ) {\n\t\tvar sources = [], len = arguments.length - 1;\n\t\twhile ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\t\n\t\tsources.forEach( function ( s ) {\n\t\t\tfor ( var key in s ) {\n\t\t\t\tif ( hasOwn.call( s, key ) && !( key in target ) ) {\n\t\t\t\t\ttarget[ key ] = s[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\treturn target;\n\t}\n\t\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\t\n\tvar toString$1$1 = Object.prototype.toString;\n\tvar arrayLikePattern = /^\\[object (?:Array|FileList)\\]$/;\n\t\n\t// thanks, http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\n\tfunction isArray ( thing ) {\n\t\treturn toString$1$1.call( thing ) === '[object Array]';\n\t}\n\t\n\t\n\t\n\tfunction isEqual ( a, b ) {\n\t\tif ( a === null && b === null ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( typeof a === 'object' || typeof b === 'object' ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\treturn a === b;\n\t}\n\t\n\t// http://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric\n\tfunction isNumeric ( thing ) {\n\t\treturn !isNaN( parseFloat( thing ) ) && isFinite( thing );\n\t}\n\t\n\tfunction isObject ( thing ) {\n\t\treturn ( thing && toString$1$1.call( thing ) === '[object Object]' );\n\t}\n\t\n\tvar noop = function () {};\n\t\n\t/* global console */\n\tvar alreadyWarned = {};\n\tvar log;\n\tvar printWarning;\n\tvar welcome;\n\t\n\tif ( hasConsole ) {\n\t\tvar welcomeIntro = [\n\t\t\t(\"%cRactive.js %c0.8.0 %cin debug mode, %cmore...\"),\n\t\t\t'color: rgb(114, 157, 52); font-weight: normal;',\n\t\t\t'color: rgb(85, 85, 85); font-weight: normal;',\n\t\t\t'color: rgb(85, 85, 85); font-weight: normal;',\n\t\t\t'color: rgb(82, 140, 224); font-weight: normal; text-decoration: underline;'\n\t\t];\n\t\tvar welcomeMessage = \"You're running Ractive 0.8.0 in debug mode - messages will be printed to the console to help you fix problems and optimise your application.\\n\\nTo disable debug mode, add this line at the start of your app:\\n  Ractive.DEBUG = false;\\n\\nTo disable debug mode when your app is minified, add this snippet:\\n  Ractive.DEBUG = /unminified/.test(function(){/*unminified*/});\\n\\nGet help and support:\\n  http://docs.ractivejs.org\\n  http://stackoverflow.com/questions/tagged/ractivejs\\n  http://groups.google.com/forum/#!forum/ractive-js\\n  http://twitter.com/ractivejs\\n\\nFound a bug? Raise an issue:\\n  https://github.com/ractivejs/ractive/issues\\n\\n\";\n\t\n\t\twelcome = function () {\n\t\t\tvar hasGroup = !!console.groupCollapsed;\n\t\t\tconsole[ hasGroup ? 'groupCollapsed' : 'log' ].apply( console, welcomeIntro );\n\t\t\tconsole.log( welcomeMessage );\n\t\t\tif ( hasGroup ) {\n\t\t\t\tconsole.groupEnd( welcomeIntro );\n\t\t\t}\n\t\n\t\t\twelcome = noop;\n\t\t};\n\t\n\t\tprintWarning = function ( message, args ) {\n\t\t\twelcome();\n\t\n\t\t\t// extract information about the instance this message pertains to, if applicable\n\t\t\tif ( typeof args[ args.length - 1 ] === 'object' ) {\n\t\t\t\tvar options = args.pop();\n\t\t\t\tvar ractive = options ? options.ractive : null;\n\t\n\t\t\t\tif ( ractive ) {\n\t\t\t\t\t// if this is an instance of a component that we know the name of, add\n\t\t\t\t\t// it to the message\n\t\t\t\t\tvar name;\n\t\t\t\t\tif ( ractive.component && ( name = ractive.component.name ) ) {\n\t\t\t\t\t\tmessage = \"<\" + name + \"> \" + message;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar node;\n\t\t\t\t\tif ( node = ( options.node || ( ractive.fragment && ractive.fragment.rendered && ractive.find( '*' ) ) ) ) {\n\t\t\t\t\t\targs.push( node );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tconsole.warn.apply( console, [ '%cRactive.js: %c' + message, 'color: rgb(114, 157, 52);', 'color: rgb(85, 85, 85);' ].concat( args ) );\n\t\t};\n\t\n\t\tlog = function () {\n\t\t\tconsole.log.apply( console, arguments );\n\t\t};\n\t} else {\n\t\tprintWarning = log = welcome = noop;\n\t}\n\t\n\tfunction format ( message, args ) {\n\t\treturn message.replace( /%s/g, function () { return args.shift(); } );\n\t}\n\t\n\tfunction fatal ( message ) {\n\t\tvar args = [], len = arguments.length - 1;\n\t\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\t\n\t\tmessage = format( message, args );\n\t\tthrow new Error( message );\n\t}\n\t\n\tfunction logIfDebug () {\n\t\tif ( Ractive.DEBUG ) {\n\t\t\tlog.apply( null, arguments );\n\t\t}\n\t}\n\t\n\tfunction warn ( message ) {\n\t\tvar args = [], len = arguments.length - 1;\n\t\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\t\n\t\tmessage = format( message, args );\n\t\tprintWarning( message, args );\n\t}\n\t\n\tfunction warnOnce ( message ) {\n\t\tvar args = [], len = arguments.length - 1;\n\t\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\t\n\t\tmessage = format( message, args );\n\t\n\t\tif ( alreadyWarned[ message ] ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\talreadyWarned[ message ] = true;\n\t\tprintWarning( message, args );\n\t}\n\t\n\tfunction warnIfDebug () {\n\t\tif ( Ractive.DEBUG ) {\n\t\t\twarn.apply( null, arguments );\n\t\t}\n\t}\n\t\n\tfunction warnOnceIfDebug () {\n\t\tif ( Ractive.DEBUG ) {\n\t\t\twarnOnce.apply( null, arguments );\n\t\t}\n\t}\n\t\n\t// Error messages that are used (or could be) in multiple places\n\tvar badArguments = 'Bad arguments';\n\tvar noRegistryFunctionReturn = 'A function was specified for \"%s\" %s, but no %s was returned';\n\tvar missingPlugin = function ( name, type ) { return (\"Missing \\\"\" + name + \"\\\" \" + type + \" plugin. You may need to download a plugin via http://docs.ractivejs.org/latest/plugins#\" + type + \"s\"); };\n\t\n\tfunction findInViewHierarchy ( registryName, ractive, name ) {\n\t\tvar instance = findInstance( registryName, ractive, name );\n\t\treturn instance ? instance[ registryName ][ name ] : null;\n\t}\n\t\n\tfunction findInstance ( registryName, ractive, name ) {\n\t\twhile ( ractive ) {\n\t\t\tif ( name in ractive[ registryName ] ) {\n\t\t\t\treturn ractive;\n\t\t\t}\n\t\n\t\t\tif ( ractive.isolated ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tractive = ractive.parent;\n\t\t}\n\t}\n\t\n\tfunction interpolate ( from, to, ractive, type ) {\n\t\tif ( from === to ) return null;\n\t\n\t\tif ( type ) {\n\t\t\tvar interpol = findInViewHierarchy( 'interpolators', ractive, type );\n\t\t\tif ( interpol ) return interpol( from, to ) || null;\n\t\n\t\t\tfatal( missingPlugin( type, 'interpolator' ) );\n\t\t}\n\t\n\t\treturn interpolators.number( from, to ) ||\n\t\t       interpolators.array( from, to ) ||\n\t\t       interpolators.object( from, to ) ||\n\t\t       null;\n\t}\n\t\n\tfunction snap ( to ) {\n\t\treturn function () { return to; };\n\t}\n\t\n\tvar interpolators = {\n\t\tnumber: function ( from, to ) {\n\t\t\tvar delta;\n\t\n\t\t\tif ( !isNumeric( from ) || !isNumeric( to ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tfrom = +from;\n\t\t\tto = +to;\n\t\n\t\t\tdelta = to - from;\n\t\n\t\t\tif ( !delta ) {\n\t\t\t\treturn function () { return from; };\n\t\t\t}\n\t\n\t\t\treturn function ( t ) {\n\t\t\t\treturn from + ( t * delta );\n\t\t\t};\n\t\t},\n\t\n\t\tarray: function ( from, to ) {\n\t\t\tvar intermediate, interpolators, len, i;\n\t\n\t\t\tif ( !isArray( from ) || !isArray( to ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tintermediate = [];\n\t\t\tinterpolators = [];\n\t\n\t\t\ti = len = Math.min( from.length, to.length );\n\t\t\twhile ( i-- ) {\n\t\t\t\tinterpolators[i] = interpolate( from[i], to[i] );\n\t\t\t}\n\t\n\t\t\t// surplus values - don't interpolate, but don't exclude them either\n\t\t\tfor ( i=len; i<from.length; i+=1 ) {\n\t\t\t\tintermediate[i] = from[i];\n\t\t\t}\n\t\n\t\t\tfor ( i=len; i<to.length; i+=1 ) {\n\t\t\t\tintermediate[i] = to[i];\n\t\t\t}\n\t\n\t\t\treturn function ( t ) {\n\t\t\t\tvar i = len;\n\t\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tintermediate[i] = interpolators[i]( t );\n\t\t\t\t}\n\t\n\t\t\t\treturn intermediate;\n\t\t\t};\n\t\t},\n\t\n\t\tobject: function ( from, to ) {\n\t\t\tvar properties, len, interpolators, intermediate, prop;\n\t\n\t\t\tif ( !isObject( from ) || !isObject( to ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tproperties = [];\n\t\t\tintermediate = {};\n\t\t\tinterpolators = {};\n\t\n\t\t\tfor ( prop in from ) {\n\t\t\t\tif ( hasOwn.call( from, prop ) ) {\n\t\t\t\t\tif ( hasOwn.call( to, prop ) ) {\n\t\t\t\t\t\tproperties.push( prop );\n\t\t\t\t\t\tinterpolators[ prop ] = interpolate( from[ prop ], to[ prop ] ) || snap( to[ prop ] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\telse {\n\t\t\t\t\t\tintermediate[ prop ] = from[ prop ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( prop in to ) {\n\t\t\t\tif ( hasOwn.call( to, prop ) && !hasOwn.call( from, prop ) ) {\n\t\t\t\t\tintermediate[ prop ] = to[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tlen = properties.length;\n\t\n\t\t\treturn function ( t ) {\n\t\t\t\tvar i = len, prop;\n\t\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tprop = properties[i];\n\t\n\t\t\t\t\tintermediate[ prop ] = interpolators[ prop ]( t );\n\t\t\t\t}\n\t\n\t\t\t\treturn intermediate;\n\t\t\t};\n\t\t}\n\t};\n\t\n\t// TODO: deprecate in future release\n\tvar deprecations = {\n\t\tconstruct: {\n\t\t\tdeprecated: 'beforeInit',\n\t\t\treplacement: 'onconstruct'\n\t\t},\n\t\trender: {\n\t\t\tdeprecated: 'init',\n\t\t\tmessage: 'The \"init\" method has been deprecated ' +\n\t\t\t\t'and will likely be removed in a future release. ' +\n\t\t\t\t'You can either use the \"oninit\" method which will fire ' +\n\t\t\t\t'only once prior to, and regardless of, any eventual ractive ' +\n\t\t\t\t'instance being rendered, or if you need to access the ' +\n\t\t\t\t'rendered DOM, use \"onrender\" instead. ' +\n\t\t\t\t'See http://docs.ractivejs.org/latest/migrating for more information.'\n\t\t},\n\t\tcomplete: {\n\t\t\tdeprecated: 'complete',\n\t\t\treplacement: 'oncomplete'\n\t\t}\n\t};\n\t\n\tvar Hook = function Hook ( event ) {\n\t\tthis.event = event;\n\t\tthis.method = 'on' + event;\n\t\tthis.deprecate = deprecations[ event ];\n\t};\n\t\n\tHook.prototype.call = function call ( method, ractive, arg ) {\n\t\tif ( ractive[ method ] ) {\n\t\t\targ ? ractive[ method ]( arg ) : ractive[ method ]();\n\t\t\treturn true;\n\t\t}\n\t};\n\t\n\tHook.prototype.fire = function fire ( ractive, arg ) {\n\t\tthis.call( this.method, ractive, arg );\n\t\n\t\t// handle deprecations\n\t\tif ( !ractive[ this.method ] && this.deprecate && this.call( this.deprecate.deprecated, ractive, arg ) ) {\n\t\t\tif ( this.deprecate.message ) {\n\t\t\t\twarnIfDebug( this.deprecate.message );\n\t\t\t} else {\n\t\t\t\twarnIfDebug( 'The method \"%s\" has been deprecated in favor of \"%s\" and will likely be removed in a future release. See http://docs.ractivejs.org/latest/migrating for more information.', this.deprecate.deprecated, this.deprecate.replacement );\n\t\t\t}\n\t\t}\n\t\n\t\t// TODO should probably use internal method, in case ractive.fire was overwritten\n\t\targ ? ractive.fire( this.event, arg ) : ractive.fire( this.event );\n\t};\n\t\n\tfunction addToArray ( array, value ) {\n\t\tvar index = array.indexOf( value );\n\t\n\t\tif ( index === -1 ) {\n\t\t\tarray.push( value );\n\t\t}\n\t}\n\t\n\tfunction arrayContains ( array, value ) {\n\t\tfor ( var i = 0, c = array.length; i < c; i++ ) {\n\t\t\tif ( array[i] == value ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn false;\n\t}\n\t\n\tfunction arrayContentsMatch ( a, b ) {\n\t\tvar i;\n\t\n\t\tif ( !isArray( a ) || !isArray( b ) ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif ( a.length !== b.length ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\ti = a.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( a[i] !== b[i] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\n\t\treturn true;\n\t}\n\t\n\tfunction ensureArray ( x ) {\n\t\tif ( typeof x === 'string' ) {\n\t\t\treturn [ x ];\n\t\t}\n\t\n\t\tif ( x === undefined ) {\n\t\t\treturn [];\n\t\t}\n\t\n\t\treturn x;\n\t}\n\t\n\tfunction lastItem ( array ) {\n\t\treturn array[ array.length - 1 ];\n\t}\n\t\n\tfunction removeFromArray ( array, member ) {\n\t\tif ( !array ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar index = array.indexOf( member );\n\t\n\t\tif ( index !== -1 ) {\n\t\t\tarray.splice( index, 1 );\n\t\t}\n\t}\n\t\n\tfunction toArray ( arrayLike ) {\n\t\tvar array = [], i = arrayLike.length;\n\t\twhile ( i-- ) {\n\t\t\tarray[i] = arrayLike[i];\n\t\t}\n\t\n\t\treturn array;\n\t}\n\t\n\tvar _Promise;\n\tvar PENDING = {};\n\tvar FULFILLED = {};\n\tvar REJECTED = {};\n\t\n\tif ( typeof Promise === 'function' ) {\n\t\t// use native Promise\n\t\t_Promise = Promise;\n\t} else {\n\t\t_Promise = function ( callback ) {\n\t\t\tvar fulfilledHandlers = [],\n\t\t\t\trejectedHandlers = [],\n\t\t\t\tstate = PENDING,\n\t\n\t\t\t\tresult,\n\t\t\t\tdispatchHandlers,\n\t\t\t\tmakeResolver,\n\t\t\t\tfulfil,\n\t\t\t\treject,\n\t\n\t\t\t\tpromise;\n\t\n\t\t\tmakeResolver = function ( newState ) {\n\t\t\t\treturn function ( value ) {\n\t\t\t\t\tif ( state !== PENDING ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tresult = value;\n\t\t\t\t\tstate = newState;\n\t\n\t\t\t\t\tdispatchHandlers = makeDispatcher( ( state === FULFILLED ? fulfilledHandlers : rejectedHandlers ), result );\n\t\n\t\t\t\t\t// dispatch onFulfilled and onRejected handlers asynchronously\n\t\t\t\t\twait( dispatchHandlers );\n\t\t\t\t};\n\t\t\t};\n\t\n\t\t\tfulfil = makeResolver( FULFILLED );\n\t\t\treject = makeResolver( REJECTED );\n\t\n\t\t\ttry {\n\t\t\t\tcallback( fulfil, reject );\n\t\t\t} catch ( err ) {\n\t\t\t\treject( err );\n\t\t\t}\n\t\n\t\t\tpromise = {\n\t\t\t\t// `then()` returns a Promise - 2.2.7\n\t\t\t\tthen: function ( onFulfilled, onRejected ) {\n\t\t\t\t\tvar promise2 = new _Promise( function ( fulfil, reject ) {\n\t\n\t\t\t\t\t\tvar processResolutionHandler = function ( handler, handlers, forward ) {\n\t\n\t\t\t\t\t\t\t// 2.2.1.1\n\t\t\t\t\t\t\tif ( typeof handler === 'function' ) {\n\t\t\t\t\t\t\t\thandlers.push( function ( p1result ) {\n\t\t\t\t\t\t\t\t\tvar x;\n\t\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tx = handler( p1result );\n\t\t\t\t\t\t\t\t\t\tresolve$1( promise2, x, fulfil, reject );\n\t\t\t\t\t\t\t\t\t} catch ( err ) {\n\t\t\t\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Forward the result of promise1 to promise2, if resolution handlers\n\t\t\t\t\t\t\t\t// are not given\n\t\t\t\t\t\t\t\thandlers.push( forward );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t// 2.2\n\t\t\t\t\t\tprocessResolutionHandler( onFulfilled, fulfilledHandlers, fulfil );\n\t\t\t\t\t\tprocessResolutionHandler( onRejected, rejectedHandlers, reject );\n\t\n\t\t\t\t\t\tif ( state !== PENDING ) {\n\t\t\t\t\t\t\t// If the promise has resolved already, dispatch the appropriate handlers asynchronously\n\t\t\t\t\t\t\twait( dispatchHandlers );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t});\n\t\n\t\t\t\t\treturn promise2;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tpromise[ 'catch' ] = function ( onRejected ) {\n\t\t\t\treturn this.then( null, onRejected );\n\t\t\t};\n\t\n\t\t\treturn promise;\n\t\t};\n\t\n\t\t_Promise.all = function ( promises ) {\n\t\t\treturn new _Promise( function ( fulfil, reject ) {\n\t\t\t\tvar result = [], pending, i, processPromise;\n\t\n\t\t\t\tif ( !promises.length ) {\n\t\t\t\t\tfulfil( result );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tprocessPromise = function ( promise, i ) {\n\t\t\t\t\tif ( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\tpromise.then( function ( value ) {\n\t\t\t\t\t\t\tresult[i] = value;\n\t\t\t\t\t\t\t--pending || fulfil( result );\n\t\t\t\t\t\t}, reject );\n\t\t\t\t\t}\n\t\n\t\t\t\t\telse {\n\t\t\t\t\t\tresult[i] = promise;\n\t\t\t\t\t\t--pending || fulfil( result );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tpending = i = promises.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tprocessPromise( promises[i], i );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\n\t\t_Promise.resolve = function ( value ) {\n\t\t\treturn new _Promise( function ( fulfil ) {\n\t\t\t\tfulfil( value );\n\t\t\t});\n\t\t};\n\t\n\t\t_Promise.reject = function ( reason ) {\n\t\t\treturn new _Promise( function ( fulfil, reject ) {\n\t\t\t\treject( reason );\n\t\t\t});\n\t\t};\n\t}\n\t\n\tvar Promise$1 = _Promise;\n\t\n\t// TODO use MutationObservers or something to simulate setImmediate\n\tfunction wait ( callback ) {\n\t\tsetTimeout( callback, 0 );\n\t}\n\t\n\tfunction makeDispatcher ( handlers, result ) {\n\t\treturn function () {\n\t\t\tvar handler;\n\t\n\t\t\twhile ( handler = handlers.shift() ) {\n\t\t\t\thandler( result );\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction resolve$1 ( promise, x, fulfil, reject ) {\n\t\t// Promise Resolution Procedure\n\t\tvar then;\n\t\n\t\t// 2.3.1\n\t\tif ( x === promise ) {\n\t\t\tthrow new TypeError( 'A promise\\'s fulfillment handler cannot return the same promise' );\n\t\t}\n\t\n\t\t// 2.3.2\n\t\tif ( x instanceof _Promise ) {\n\t\t\tx.then( fulfil, reject );\n\t\t}\n\t\n\t\t// 2.3.3\n\t\telse if ( x && ( typeof x === 'object' || typeof x === 'function' ) ) {\n\t\t\ttry {\n\t\t\t\tthen = x.then; // 2.3.3.1\n\t\t\t} catch ( e ) {\n\t\t\t\treject( e ); // 2.3.3.2\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// 2.3.3.3\n\t\t\tif ( typeof then === 'function' ) {\n\t\t\t\tvar called, resolvePromise, rejectPromise;\n\t\n\t\t\t\tresolvePromise = function ( y ) {\n\t\t\t\t\tif ( called ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcalled = true;\n\t\t\t\t\tresolve$1( promise, y, fulfil, reject );\n\t\t\t\t};\n\t\n\t\t\t\trejectPromise = function ( r ) {\n\t\t\t\t\tif ( called ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcalled = true;\n\t\t\t\t\treject( r );\n\t\t\t\t};\n\t\n\t\t\t\ttry {\n\t\t\t\t\tthen.call( x, resolvePromise, rejectPromise );\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\tif ( !called ) { // 2.3.3.3.4.1\n\t\t\t\t\t\treject( e ); // 2.3.3.3.4.2\n\t\t\t\t\t\tcalled = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\telse {\n\t\t\t\tfulfil( x );\n\t\t\t}\n\t\t}\n\t\n\t\telse {\n\t\t\tfulfil( x );\n\t\t}\n\t}\n\t\n\tvar TransitionManager = function TransitionManager ( callback, parent ) {\n\t\tthis.callback = callback;\n\t\tthis.parent = parent;\n\t\n\t\tthis.intros = [];\n\t\tthis.outros = [];\n\t\n\t\tthis.children = [];\n\t\tthis.totalChildren = this.outroChildren = 0;\n\t\n\t\tthis.detachQueue = [];\n\t\tthis.outrosComplete = false;\n\t\n\t\tif ( parent ) {\n\t\t\tparent.addChild( this );\n\t\t}\n\t};\n\t\n\tTransitionManager.prototype.add = function add ( transition ) {\n\t\tvar list = transition.isIntro ? this.intros : this.outros;\n\t\tlist.push( transition );\n\t};\n\t\n\tTransitionManager.prototype.addChild = function addChild ( child ) {\n\t\tthis.children.push( child );\n\t\n\t\tthis.totalChildren += 1;\n\t\tthis.outroChildren += 1;\n\t};\n\t\n\tTransitionManager.prototype.decrementOutros = function decrementOutros () {\n\t\tthis.outroChildren -= 1;\n\t\tcheck( this );\n\t};\n\t\n\tTransitionManager.prototype.decrementTotal = function decrementTotal () {\n\t\tthis.totalChildren -= 1;\n\t\tcheck( this );\n\t};\n\t\n\tTransitionManager.prototype.detachNodes = function detachNodes () {\n\t\tthis.detachQueue.forEach( detach$1 );\n\t\tthis.children.forEach( _detachNodes );\n\t};\n\t\n\tTransitionManager.prototype.ready = function ready () {\n\t\tdetachImmediate( this );\n\t};\n\t\n\tTransitionManager.prototype.remove = function remove ( transition ) {\n\t\tvar list = transition.isIntro ? this.intros : this.outros;\n\t\tremoveFromArray( list, transition );\n\t\tcheck( this );\n\t};\n\t\n\tTransitionManager.prototype.start = function start () {\n\t\tthis.children.forEach( function ( c ) { return c.start(); } );\n\t\tthis.intros.concat( this.outros ).forEach( function ( t ) { return t.start(); } );\n\t\tthis.ready = true;\n\t\tcheck( this );\n\t};\n\t\n\tfunction detach$1 ( element ) {\n\t\telement.detach();\n\t}\n\t\n\tfunction _detachNodes ( tm ) { // _ to avoid transpiler quirk\n\t\ttm.detachNodes();\n\t}\n\t\n\tfunction check ( tm ) {\n\t\tif ( !tm.ready || tm.outros.length || tm.outroChildren ) return;\n\t\n\t\t// If all outros are complete, and we haven't already done this,\n\t\t// we notify the parent if there is one, otherwise\n\t\t// start detaching nodes\n\t\tif ( !tm.outrosComplete ) {\n\t\t\ttm.outrosComplete = true;\n\t\n\t\t\tif ( tm.parent && !tm.parent.outrosComplete ) {\n\t\t\t\ttm.parent.decrementOutros( tm );\n\t\t\t} else {\n\t\t\t\ttm.detachNodes();\n\t\t\t}\n\t\t}\n\t\n\t\t// Once everything is done, we can notify parent transition\n\t\t// manager and call the callback\n\t\tif ( !tm.intros.length && !tm.totalChildren ) {\n\t\t\tif ( typeof tm.callback === 'function' ) {\n\t\t\t\ttm.callback();\n\t\t\t}\n\t\n\t\t\tif ( tm.parent && !tm.notifiedTotal ) {\n\t\t\t\ttm.notifiedTotal = true;\n\t\t\t\ttm.parent.decrementTotal();\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// check through the detach queue to see if a node is up or downstream from a\n\t// transition and if not, go ahead and detach it\n\tfunction detachImmediate ( manager ) {\n\t\tvar queue = manager.detachQueue;\n\t\tvar outros = collectAllOutros( manager );\n\t\n\t\tvar i = queue.length, j = 0, node, trans;\n\t\tstart: while ( i-- ) {\n\t\t\tnode = queue[i].node;\n\t\t\tj = outros.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\ttrans = outros[j].element.node;\n\t\t\t\t// check to see if the node is, contains, or is contained by the transitioning node\n\t\t\t\tif ( trans === node || trans.contains( node ) || node.contains( trans ) ) continue start;\n\t\t\t}\n\t\n\t\t\t// no match, we can drop it\n\t\t\tqueue[i].detach();\n\t\t\tqueue.splice( i, 1 );\n\t\t}\n\t}\n\t\n\tfunction collectAllOutros ( manager, list ) {\n\t\tif ( !list ) {\n\t\t\tlist = [];\n\t\t\tvar parent = manager;\n\t\t\twhile ( parent.parent ) parent = parent.parent;\n\t\t\treturn collectAllOutros( parent, list );\n\t\t} else {\n\t\t\tvar i = manager.children.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tlist = collectAllOutros( manager.children[i], list );\n\t\t\t}\n\t\t\tlist = list.concat( manager.outros );\n\t\t\treturn list;\n\t\t}\n\t}\n\t\n\tvar changeHook = new Hook( 'change' );\n\t\n\tvar batch;\n\t\n\tvar runloop = {\n\t\tstart: function ( instance, returnPromise ) {\n\t\t\tvar promise, fulfilPromise;\n\t\n\t\t\tif ( returnPromise ) {\n\t\t\t\tpromise = new Promise$1( function ( f ) { return ( fulfilPromise = f ); } );\n\t\t\t}\n\t\n\t\t\tbatch = {\n\t\t\t\tpreviousBatch: batch,\n\t\t\t\ttransitionManager: new TransitionManager( fulfilPromise, batch && batch.transitionManager ),\n\t\t\t\tfragments: [],\n\t\t\t\ttasks: [],\n\t\t\t\timmediateObservers: [],\n\t\t\t\tdeferredObservers: [],\n\t\t\t\tractives: [],\n\t\t\t\tinstance: instance\n\t\t\t};\n\t\n\t\t\treturn promise;\n\t\t},\n\t\n\t\tend: function () {\n\t\t\tflushChanges();\n\t\n\t\t\tif ( !batch.previousBatch ) batch.transitionManager.start();\n\t\n\t\t\tbatch = batch.previousBatch;\n\t\t},\n\t\n\t\taddFragment: function ( fragment ) {\n\t\t\taddToArray( batch.fragments, fragment );\n\t\t},\n\t\n\t\t// TODO: come up with a better way to handle fragments that trigger their own update\n\t\taddFragmentToRoot: function ( fragment ) {\n\t\t\tif ( !batch ) return;\n\t\n\t\t\tvar b = batch;\n\t\t\twhile ( b.previousBatch ) {\n\t\t\t\tb = b.previousBatch;\n\t\t\t}\n\t\n\t\t\taddToArray( b.fragments, fragment );\n\t\t},\n\t\n\t\taddInstance: function ( instance ) {\n\t\t\tif ( batch ) addToArray( batch.ractives, instance );\n\t\t},\n\t\n\t\taddObserver: function ( observer, defer ) {\n\t\t\taddToArray( defer ? batch.deferredObservers : batch.immediateObservers, observer );\n\t\t},\n\t\n\t\tregisterTransition: function ( transition ) {\n\t\t\ttransition._manager = batch.transitionManager;\n\t\t\tbatch.transitionManager.add( transition );\n\t\t},\n\t\n\t\t// synchronise node detachments with transition ends\n\t\tdetachWhenReady: function ( thing ) {\n\t\t\tbatch.transitionManager.detachQueue.push( thing );\n\t\t},\n\t\n\t\tscheduleTask: function ( task, postRender ) {\n\t\t\tvar _batch;\n\t\n\t\t\tif ( !batch ) {\n\t\t\t\ttask();\n\t\t\t} else {\n\t\t\t\t_batch = batch;\n\t\t\t\twhile ( postRender && _batch.previousBatch ) {\n\t\t\t\t\t// this can't happen until the DOM has been fully updated\n\t\t\t\t\t// otherwise in some situations (with components inside elements)\n\t\t\t\t\t// transitions and decorators will initialise prematurely\n\t\t\t\t\t_batch = _batch.previousBatch;\n\t\t\t\t}\n\t\n\t\t\t\t_batch.tasks.push( task );\n\t\t\t}\n\t\t}\n\t};\n\t\n\tfunction dispatch$1 ( observer ) {\n\t\tobserver.dispatch();\n\t}\n\t\n\tfunction flushChanges () {\n\t\tvar which = batch.immediateObservers;\n\t\tbatch.immediateObservers = [];\n\t\twhich.forEach( dispatch$1 );\n\t\n\t\t// Now that changes have been fully propagated, we can update the DOM\n\t\t// and complete other tasks\n\t\tvar i = batch.fragments.length;\n\t\tvar fragment;\n\t\n\t\twhich = batch.fragments;\n\t\tbatch.fragments = [];\n\t\tvar ractives = batch.ractives;\n\t\tbatch.ractives = [];\n\t\n\t\twhile ( i-- ) {\n\t\t\tfragment = which[i];\n\t\n\t\t\t// TODO deprecate this. It's annoying and serves no useful function\n\t\t\tvar ractive = fragment.ractive;\n\t\t\tchangeHook.fire( ractive, ractive.viewmodel.changes );\n\t\t\tractive.viewmodel.changes = {};\n\t\t\tremoveFromArray( ractives, ractive );\n\t\n\t\t\tfragment.update();\n\t\t}\n\t\n\t\ti = ractives.length;\n\t\twhile ( i-- ) {\n\t\t\tvar ractive$1 = ractives[i];\n\t\t\tchangeHook.fire( ractive$1, ractive$1.viewmodel.changes );\n\t\t\tractive$1.viewmodel.changes = {};\n\t\t}\n\t\n\t\tbatch.transitionManager.ready();\n\t\n\t\twhich = batch.deferredObservers;\n\t\tbatch.deferredObservers = [];\n\t\twhich.forEach( dispatch$1 );\n\t\n\t\tvar tasks = batch.tasks;\n\t\tbatch.tasks = [];\n\t\n\t\tfor ( i = 0; i < tasks.length; i += 1 ) {\n\t\t\ttasks[i]();\n\t\t}\n\t\n\t\t// If updating the view caused some model blowback - e.g. a triple\n\t\t// containing <option> elements caused the binding on the <select>\n\t\t// to update - then we start over\n\t\tif ( batch.fragments.length || batch.immediateObservers.length || batch.deferredObservers.length || batch.ractives.length ) return flushChanges();\n\t}\n\t\n\tvar refPattern = /\\[\\s*(\\*|[0-9]|[1-9][0-9]+)\\s*\\]/g;\n\tvar splitPattern = /([^\\\\](?:\\\\\\\\)*)\\./;\n\tvar escapeKeyPattern = /\\\\|\\./g;\n\tvar unescapeKeyPattern = /((?:\\\\)+)\\1|\\\\(\\.)/g;\n\t\n\tfunction escapeKey ( key ) {\n\t\tif ( typeof key === 'string' ) {\n\t\t\treturn key.replace( escapeKeyPattern, '\\\\$&' );\n\t\t}\n\t\n\t\treturn key;\n\t}\n\t\n\tfunction normalise ( ref ) {\n\t\treturn ref ? ref.replace( refPattern, '.$1' ) : '';\n\t}\n\t\n\tfunction splitKeypath ( keypath ) {\n\t\tvar result = [],\n\t\t\tmatch;\n\t\n\t\tkeypath = normalise( keypath );\n\t\n\t\twhile ( match = splitPattern.exec( keypath ) ) {\n\t\t\tvar index = match.index + match[1].length;\n\t\t\tresult.push( keypath.substr( 0, index ) );\n\t\t\tkeypath = keypath.substr( index + 1 );\n\t\t}\n\t\n\t\tresult.push(keypath);\n\t\n\t\treturn result;\n\t}\n\t\n\tfunction unescapeKey ( key ) {\n\t\tif ( typeof key === 'string' ) {\n\t\t\treturn key.replace( unescapeKeyPattern, '$1$2' );\n\t\t}\n\t\n\t\treturn key;\n\t}\n\t\n\tfunction bind$1$1 ( fn, context ) {\n\t\tif ( !/this/.test( fn.toString() ) ) return fn;\n\t\n\t\tvar bound = fn.bind( context );\n\t\tfor ( var prop in fn ) bound[ prop ] = fn[ prop ];\n\t\n\t\treturn bound;\n\t}\n\t\n\tfunction set$1 ( ractive, pairs ) {\n\t\tvar promise = runloop.start( ractive, true );\n\t\n\t\tvar i = pairs.length;\n\t\twhile ( i-- ) {\n\t\t\tvar ref = pairs[i], model = ref[0], value = ref[1];\n\t\t\tif ( typeof value === 'function' ) value = bind$1$1( value, ractive );\n\t\t\tmodel.set( value );\n\t\t}\n\t\n\t\trunloop.end();\n\t\n\t\treturn promise;\n\t}\n\t\n\tvar star = /\\*/;\n\tfunction gather ( ractive, keypath, base ) {\n\t\tif ( base === void 0 ) base = ractive.viewmodel;\n\t\n\t\tif ( star.test( keypath ) ) {\n\t\t\treturn base.findMatches( splitKeypath( keypath ) );\n\t\t} else {\n\t\t\treturn [ base.joinAll( splitKeypath( keypath ) ) ];\n\t\t}\n\t}\n\t\n\tfunction build ( ractive, keypath, value ) {\n\t\tvar sets = [];\n\t\n\t\t// set multiple keypaths in one go\n\t\tif ( isObject( keypath ) ) {\n\t\t\tvar loop = function ( k ) {\n\t\t\t\tif ( keypath.hasOwnProperty( k ) ) {\n\t\t\t\t\tsets.push.apply( sets, gather( ractive, k ).map( function ( m ) { return [ m, keypath[k] ]; } ) );\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tfor ( var k in keypath ) loop( k );\n\t\n\t\t}\n\t\t// set a single keypath\n\t\telse {\n\t\t\tsets.push.apply( sets, gather( ractive, keypath ).map( function ( m ) { return [ m, value ]; } ) );\n\t\t}\n\t\n\t\treturn sets;\n\t}\n\t\n\tvar errorMessage = 'Cannot add to a non-numeric value';\n\t\n\tfunction add$1 ( ractive, keypath, d ) {\n\t\tif ( typeof keypath !== 'string' || !isNumeric( d ) ) {\n\t\t\tthrow new Error( 'Bad arguments' );\n\t\t}\n\t\n\t\tvar sets = build( ractive, keypath, d );\n\t\n\t\treturn set$1( ractive, sets.map( function ( pair ) {\n\t\t\tvar model = pair[0], add = pair[1], value = model.get();\n\t\t\tif ( !isNumeric( add ) || !isNumeric( value ) ) throw new Error( errorMessage );\n\t\t\treturn [ model, value + add ];\n\t\t}));\n\t}\n\t\n\tfunction Ractive$add ( keypath, d ) {\n\t\treturn add$1( this, keypath, ( d === undefined ? 1 : +d ) );\n\t}\n\t\n\tvar noAnimation = Promise$1.resolve();\n\tdefineProperty( noAnimation, 'stop', { value: noop });\n\t\n\tvar linear = easing.linear;\n\t\n\tfunction getOptions ( options, instance ) {\n\t\toptions = options || {};\n\t\n\t\tvar easing$$1;\n\t\tif ( options.easing ) {\n\t\t\teasing$$1 = typeof options.easing === 'function' ?\n\t\t\t\toptions.easing :\n\t\t\t\tinstance.easing[ options.easing ];\n\t\t}\n\t\n\t\treturn {\n\t\t\teasing: easing$$1 || linear,\n\t\t\tduration: 'duration' in options ? options.duration : 400,\n\t\t\tcomplete: options.complete || noop,\n\t\t\tstep: options.step || noop\n\t\t};\n\t}\n\t\n\tfunction animate$1 ( ractive, model, to, options ) {\n\t\toptions = getOptions( options, ractive );\n\t\tvar from = model.get();\n\t\n\t\t// don't bother animating values that stay the same\n\t\tif ( isEqual( from, to ) ) {\n\t\t\toptions.complete( options.to );\n\t\t\treturn noAnimation; // TODO should this have .then and .catch methods?\n\t\t}\n\t\n\t\tvar interpolator = interpolate( from, to, ractive, options.interpolator );\n\t\n\t\t// if we can't interpolate the value, set it immediately\n\t\tif ( !interpolator ) {\n\t\t\trunloop.start();\n\t\t\tmodel.set( to );\n\t\t\trunloop.end();\n\t\n\t\t\treturn noAnimation;\n\t\t}\n\t\n\t\treturn model.animate( from, to, options, interpolator );\n\t}\n\t\n\tfunction Ractive$animate ( keypath, to, options ) {\n\t\tif ( typeof keypath === 'object' ) {\n\t\t\tvar keys = Object.keys( keypath );\n\t\n\t\t\tthrow new Error( (\"ractive.animate(...) no longer supports objects. Instead of ractive.animate({\\n  \" + (keys.map( function ( key ) { return (\"'\" + key + \"': \" + (keypath[ key ])); } ).join( '\\n  ' )) + \"\\n}, {...}), do\\n\\n\" + (keys.map( function ( key ) { return (\"ractive.animate('\" + key + \"', \" + (keypath[ key ]) + \", {...});\"); } ).join( '\\n' )) + \"\\n\") );\n\t\t}\n\t\n\t\n\t\treturn animate$1( this, this.viewmodel.joinAll( splitKeypath( keypath ) ), to, options );\n\t}\n\t\n\tvar detachHook = new Hook( 'detach' );\n\t\n\tfunction Ractive$detach () {\n\t\tif ( this.isDetached ) {\n\t\t\treturn this.el;\n\t\t}\n\t\n\t\tif ( this.el ) {\n\t\t\tremoveFromArray( this.el.__ractive_instances__, this );\n\t\t}\n\t\n\t\tthis.el = this.fragment.detach();\n\t\tthis.isDetached = true;\n\t\n\t\tdetachHook.fire( this );\n\t\treturn this.el;\n\t}\n\t\n\tfunction Ractive$find ( selector ) {\n\t\tif ( !this.el ) throw new Error( (\"Cannot call ractive.find('\" + selector + \"') unless instance is rendered to the DOM\") );\n\t\n\t\treturn this.fragment.find( selector );\n\t}\n\t\n\tfunction sortByDocumentPosition ( node, otherNode ) {\n\t\tif ( node.compareDocumentPosition ) {\n\t\t\tvar bitmask = node.compareDocumentPosition( otherNode );\n\t\t\treturn ( bitmask & 2 ) ? 1 : -1;\n\t\t}\n\t\n\t\t// In old IE, we can piggy back on the mechanism for\n\t\t// comparing component positions\n\t\treturn sortByItemPosition( node, otherNode );\n\t}\n\t\n\tfunction sortByItemPosition ( a, b ) {\n\t\tvar ancestryA = getAncestry( a.component || a._ractive.proxy );\n\t\tvar ancestryB = getAncestry( b.component || b._ractive.proxy );\n\t\n\t\tvar oldestA = lastItem( ancestryA );\n\t\tvar oldestB = lastItem( ancestryB );\n\t\tvar mutualAncestor;\n\t\n\t\t// remove items from the end of both ancestries as long as they are identical\n\t\t// - the final one removed is the closest mutual ancestor\n\t\twhile ( oldestA && ( oldestA === oldestB ) ) {\n\t\t\tancestryA.pop();\n\t\t\tancestryB.pop();\n\t\n\t\t\tmutualAncestor = oldestA;\n\t\n\t\t\toldestA = lastItem( ancestryA );\n\t\t\toldestB = lastItem( ancestryB );\n\t\t}\n\t\n\t\t// now that we have the mutual ancestor, we can find which is earliest\n\t\toldestA = oldestA.component || oldestA;\n\t\toldestB = oldestB.component || oldestB;\n\t\n\t\tvar fragmentA = oldestA.parentFragment;\n\t\tvar fragmentB = oldestB.parentFragment;\n\t\n\t\t// if both items share a parent fragment, our job is easy\n\t\tif ( fragmentA === fragmentB ) {\n\t\t\tvar indexA = fragmentA.items.indexOf( oldestA );\n\t\t\tvar indexB = fragmentB.items.indexOf( oldestB );\n\t\n\t\t\t// if it's the same index, it means one contains the other,\n\t\t\t// so we see which has the longest ancestry\n\t\t\treturn ( indexA - indexB ) || ancestryA.length - ancestryB.length;\n\t\t}\n\t\n\t\t// if mutual ancestor is a section, we first test to see which section\n\t\t// fragment comes first\n\t\tvar fragments = mutualAncestor.iterations;\n\t\tif ( fragments ) {\n\t\t\tvar indexA$1 = fragments.indexOf( fragmentA );\n\t\t\tvar indexB$1 = fragments.indexOf( fragmentB );\n\t\n\t\t\treturn ( indexA$1 - indexB$1 ) || ancestryA.length - ancestryB.length;\n\t\t}\n\t\n\t\tthrow new Error( 'An unexpected condition was met while comparing the position of two components. Please file an issue at https://github.com/ractivejs/ractive/issues - thanks!' );\n\t}\n\t\n\tfunction getParent ( item ) {\n\t\tvar parentFragment = item.parentFragment;\n\t\n\t\tif ( parentFragment ) return parentFragment.owner;\n\t\n\t\tif ( item.component && ( parentFragment = item.component.parentFragment ) ) {\n\t\t\treturn parentFragment.owner;\n\t\t}\n\t}\n\t\n\tfunction getAncestry ( item ) {\n\t\tvar ancestry = [ item ];\n\t\tvar ancestor = getParent( item );\n\t\n\t\twhile ( ancestor ) {\n\t\t\tancestry.push( ancestor );\n\t\t\tancestor = getParent( ancestor );\n\t\t}\n\t\n\t\treturn ancestry;\n\t}\n\t\n\t\n\tvar Query = function Query ( ractive, selector, live, isComponentQuery ) {\n\t\tthis.ractive = ractive;\n\t\tthis.selector = selector;\n\t\tthis.live = live;\n\t\tthis.isComponentQuery = isComponentQuery;\n\t\n\t\tthis.result = [];\n\t\n\t\tthis.dirty = true;\n\t};\n\t\n\tQuery.prototype.add = function add ( item ) {\n\t\tthis.result.push( item );\n\t\tthis.makeDirty();\n\t};\n\t\n\tQuery.prototype.cancel = function cancel () {\n\t\tvar liveQueries = this._root[ this.isComponentQuery ? 'liveComponentQueries' : 'liveQueries' ];\n\t\tvar selector = this.selector;\n\t\n\t\tvar index = liveQueries.indexOf( selector );\n\t\n\t\tif ( index !== -1 ) {\n\t\t\tliveQueries.splice( index, 1 );\n\t\t\tliveQueries[ selector ] = null;\n\t\t}\n\t};\n\t\n\tQuery.prototype.init = function init () {\n\t\tthis.dirty = false;\n\t};\n\t\n\tQuery.prototype.makeDirty = function makeDirty () {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( !this.dirty ) {\n\t\t\tthis.dirty = true;\n\t\n\t\t\t// Once the DOM has been updated, ensure the query\n\t\t\t// is correctly ordered\n\t\t\trunloop.scheduleTask( function () { return this$1.update(); } );\n\t\t}\n\t};\n\t\n\tQuery.prototype.remove = function remove ( nodeOrComponent ) {\n\t\tvar index = this.result.indexOf( this.isComponentQuery ? nodeOrComponent.instance : nodeOrComponent );\n\t\tif ( index !== -1 ) this.result.splice( index, 1 );\n\t};\n\t\n\tQuery.prototype.update = function update () {\n\t\tthis.result.sort( this.isComponentQuery ? sortByItemPosition : sortByDocumentPosition );\n\t\tthis.dirty = false;\n\t};\n\t\n\tQuery.prototype.test = function test ( item ) {\n\t\treturn this.isComponentQuery ?\n\t\t\t( !this.selector || item.name === this.selector ) :\n\t\t\t( item ? matches( item, this.selector ) : null );\n\t};\n\t\n\tfunction Ractive$findAll ( selector, options ) {\n\t\tif ( !this.el ) throw new Error( (\"Cannot call ractive.findAll('\" + selector + \"', ...) unless instance is rendered to the DOM\") );\n\t\n\t\toptions = options || {};\n\t\tvar liveQueries = this._liveQueries;\n\t\n\t\t// Shortcut: if we're maintaining a live query with this\n\t\t// selector, we don't need to traverse the parallel DOM\n\t\tvar query = liveQueries[ selector ];\n\t\tif ( query ) {\n\t\t\t// Either return the exact same query, or (if not live) a snapshot\n\t\t\treturn ( options && options.live ) ? query : query.slice();\n\t\t}\n\t\n\t\tquery = new Query( this, selector, !!options.live, false );\n\t\n\t\t// Add this to the list of live queries Ractive needs to maintain,\n\t\t// if applicable\n\t\tif ( query.live ) {\n\t\t\tliveQueries.push( selector );\n\t\t\tliveQueries[ '_' + selector ] = query;\n\t\t}\n\t\n\t\tthis.fragment.findAll( selector, query );\n\t\n\t\tquery.init();\n\t\treturn query.result;\n\t}\n\t\n\tfunction Ractive$findAllComponents ( selector, options ) {\n\t\toptions = options || {};\n\t\tvar liveQueries = this._liveComponentQueries;\n\t\n\t\t// Shortcut: if we're maintaining a live query with this\n\t\t// selector, we don't need to traverse the parallel DOM\n\t\tvar query = liveQueries[ selector ];\n\t\tif ( query ) {\n\t\t\t// Either return the exact same query, or (if not live) a snapshot\n\t\t\treturn ( options && options.live ) ? query : query.slice();\n\t\t}\n\t\n\t\tquery = new Query( this, selector, !!options.live, true );\n\t\n\t\t// Add this to the list of live queries Ractive needs to maintain,\n\t\t// if applicable\n\t\tif ( query.live ) {\n\t\t\tliveQueries.push( selector );\n\t\t\tliveQueries[ '_' + selector ] = query;\n\t\t}\n\t\n\t\tthis.fragment.findAllComponents( selector, query );\n\t\n\t\tquery.init();\n\t\treturn query.result;\n\t}\n\t\n\tfunction Ractive$findComponent ( selector ) {\n\t\treturn this.fragment.findComponent( selector );\n\t}\n\t\n\tfunction Ractive$findContainer ( selector ) {\n\t\tif ( this.container ) {\n\t\t\tif ( this.container.component && this.container.component.name === selector ) {\n\t\t\t\treturn this.container;\n\t\t\t} else {\n\t\t\t\treturn this.container.findContainer( selector );\n\t\t\t}\n\t\t}\n\t\n\t\treturn null;\n\t}\n\t\n\tfunction Ractive$findParent ( selector ) {\n\t\n\t\tif ( this.parent ) {\n\t\t\tif ( this.parent.component && this.parent.component.name === selector ) {\n\t\t\t\treturn this.parent;\n\t\t\t} else {\n\t\t\t\treturn this.parent.findParent ( selector );\n\t\t\t}\n\t\t}\n\t\n\t\treturn null;\n\t}\n\t\n\tfunction enqueue ( ractive, event ) {\n\t\tif ( ractive.event ) {\n\t\t\tractive._eventQueue.push( ractive.event );\n\t\t}\n\t\n\t\tractive.event = event;\n\t}\n\t\n\tfunction dequeue ( ractive ) {\n\t\tif ( ractive._eventQueue.length ) {\n\t\t\tractive.event = ractive._eventQueue.pop();\n\t\t} else {\n\t\t\tractive.event = null;\n\t\t}\n\t}\n\t\n\tvar starMaps = {};\n\t\n\t// This function takes a keypath such as 'foo.bar.baz', and returns\n\t// all the variants of that keypath that include a wildcard in place\n\t// of a key, such as 'foo.bar.*', 'foo.*.baz', 'foo.*.*' and so on.\n\t// These are then checked against the dependants map (ractive.viewmodel.depsMap)\n\t// to see if any pattern observers are downstream of one or more of\n\t// these wildcard keypaths (e.g. 'foo.bar.*.status')\n\tfunction getPotentialWildcardMatches ( keypath ) {\n\t\tvar keys, starMap, mapper, i, result, wildcardKeypath;\n\t\n\t\tkeys = splitKeypath( keypath );\n\t\tif( !( starMap = starMaps[ keys.length ]) ) {\n\t\t\tstarMap = getStarMap( keys.length );\n\t\t}\n\t\n\t\tresult = [];\n\t\n\t\tmapper = function ( star, i ) {\n\t\t\treturn star ? '*' : keys[i];\n\t\t};\n\t\n\t\ti = starMap.length;\n\t\twhile ( i-- ) {\n\t\t\twildcardKeypath = starMap[i].map( mapper ).join( '.' );\n\t\n\t\t\tif ( !result.hasOwnProperty( wildcardKeypath ) ) {\n\t\t\t\tresult.push( wildcardKeypath );\n\t\t\t\tresult[ wildcardKeypath ] = true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn result;\n\t}\n\t\n\t// This function returns all the possible true/false combinations for\n\t// a given number - e.g. for two, the possible combinations are\n\t// [ true, true ], [ true, false ], [ false, true ], [ false, false ].\n\t// It does so by getting all the binary values between 0 and e.g. 11\n\tfunction getStarMap ( num ) {\n\t\tvar ones = '', max, binary, starMap, mapper, i, j, l, map;\n\t\n\t\tif ( !starMaps[ num ] ) {\n\t\t\tstarMap = [];\n\t\n\t\t\twhile ( ones.length < num ) {\n\t\t\t\tones += 1;\n\t\t\t}\n\t\n\t\t\tmax = parseInt( ones, 2 );\n\t\n\t\t\tmapper = function ( digit ) {\n\t\t\t\treturn digit === '1';\n\t\t\t};\n\t\n\t\t\tfor ( i = 0; i <= max; i += 1 ) {\n\t\t\t\tbinary = i.toString( 2 );\n\t\t\t\twhile ( binary.length < num ) {\n\t\t\t\t\tbinary = '0' + binary;\n\t\t\t\t}\n\t\n\t\t\t\tmap = [];\n\t\t\t\tl = binary.length;\n\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\tmap.push( mapper( binary[j] ) );\n\t\t\t\t}\n\t\t\t\tstarMap[i] = map;\n\t\t\t}\n\t\n\t\t\tstarMaps[ num ] = starMap;\n\t\t}\n\t\n\t\treturn starMaps[ num ];\n\t}\n\t\n\tvar wildcardCache = {};\n\t\n\tfunction fireEvent ( ractive, eventName, options ) {\n\t\tif ( options === void 0 ) options = {};\n\t\n\t\tif ( !eventName ) { return; }\n\t\n\t\tif ( !options.event ) {\n\t\t\toptions.event = {\n\t\t\t\tname: eventName,\n\t\t\t\t// until event not included as argument default\n\t\t\t\t_noArg: true\n\t\t\t};\n\t\t} else {\n\t\t\toptions.event.name = eventName;\n\t\t}\n\t\n\t\tvar eventNames = getWildcardNames( eventName );\n\t\n\t\treturn fireEventAs( ractive, eventNames, options.event, options.args, true );\n\t}\n\t\n\tfunction getWildcardNames ( eventName ) {\n\t\tif ( wildcardCache.hasOwnProperty( eventName ) ) {\n\t\t\treturn wildcardCache[ eventName ];\n\t\t} else {\n\t\t\treturn wildcardCache[ eventName ] = getPotentialWildcardMatches( eventName );\n\t\t}\n\t}\n\t\n\tfunction fireEventAs  ( ractive, eventNames, event, args, initialFire ) {\n\t\n\t\tif ( initialFire === void 0 ) initialFire = false;\n\t\n\t\tvar subscribers, i, bubble = true;\n\t\n\t\tenqueue( ractive, event );\n\t\n\t\tfor ( i = eventNames.length; i >= 0; i-- ) {\n\t\t\tsubscribers = ractive._subs[ eventNames[ i ] ];\n\t\n\t\t\tif ( subscribers ) {\n\t\t\t\tbubble = notifySubscribers( ractive, subscribers, event, args ) && bubble;\n\t\t\t}\n\t\t}\n\t\n\t\tdequeue( ractive );\n\t\n\t\tif ( ractive.parent && bubble ) {\n\t\n\t\t\tif ( initialFire && ractive.component ) {\n\t\t\t\tvar fullName = ractive.component.name + '.' + eventNames[ eventNames.length-1 ];\n\t\t\t\teventNames = getWildcardNames( fullName );\n\t\n\t\t\t\tif( event && !event.component ) {\n\t\t\t\t\tevent.component = ractive;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfireEventAs( ractive.parent, eventNames, event, args );\n\t\t}\n\t\n\t\treturn bubble;\n\t}\n\t\n\tfunction notifySubscribers ( ractive, subscribers, event, args ) {\n\t\tvar originalEvent = null, stopEvent = false;\n\t\n\t\tif ( event && !event._noArg ) {\n\t\t\targs = [ event ].concat( args );\n\t\t}\n\t\n\t\t// subscribers can be modified inflight, e.g. \"once\" functionality\n\t\t// so we need to copy to make sure everyone gets called\n\t\tsubscribers = subscribers.slice();\n\t\n\t\tfor ( var i = 0, len = subscribers.length; i < len; i += 1 ) {\n\t\t\tif ( subscribers[ i ].apply( ractive, args ) === false ) {\n\t\t\t\tstopEvent = true;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( event && !event._noArg && stopEvent && ( originalEvent = event.original ) ) {\n\t\t\toriginalEvent.preventDefault && originalEvent.preventDefault();\n\t\t\toriginalEvent.stopPropagation && originalEvent.stopPropagation();\n\t\t}\n\t\n\t\treturn !stopEvent;\n\t}\n\t\n\tfunction Ractive$fire ( eventName ) {\n\t\tvar args = [], len = arguments.length - 1;\n\t\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\t\n\t\treturn fireEvent( this, eventName, { args: args });\n\t}\n\t\n\tfunction badReference ( key ) {\n\t\tthrow new Error( (\"An index or key reference (\" + key + \") cannot have child properties\") );\n\t}\n\t\n\tfunction resolveAmbiguousReference ( fragment, ref ) {\n\t\tvar localViewmodel = fragment.findContext().root;\n\t\tvar keys = splitKeypath( ref );\n\t\tvar key = keys[0];\n\t\n\t\tvar hasContextChain;\n\t\tvar crossedComponentBoundary;\n\t\tvar aliases;\n\t\n\t\twhile ( fragment ) {\n\t\t\t// repeated fragments\n\t\t\tif ( fragment.isIteration ) {\n\t\t\t\tif ( key === fragment.parent.keyRef ) {\n\t\t\t\t\tif ( keys.length > 1 ) badReference( key );\n\t\t\t\t\treturn fragment.context.getKeyModel( fragment.key );\n\t\t\t\t}\n\t\n\t\t\t\tif ( key === fragment.parent.indexRef ) {\n\t\t\t\t\tif ( keys.length > 1 ) badReference( key );\n\t\t\t\t\treturn fragment.context.getKeyModel( fragment.index );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// alias node or iteration\n\t\t\tif ( ( ( aliases = fragment.owner.aliases ) || ( aliases = fragment.aliases ) ) && aliases.hasOwnProperty( key ) ) {\n\t\t\t\tvar model = aliases[ key ];\n\t\n\t\t\t\tif ( keys.length === 1 ) return model;\n\t\t\t\telse if ( typeof model.joinAll === 'function' ) {\n\t\t\t\t\treturn model.joinAll( keys.slice( 1 ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( fragment.context ) {\n\t\t\t\t// TODO better encapsulate the component check\n\t\t\t\tif ( !fragment.isRoot || fragment.ractive.component ) hasContextChain = true;\n\t\n\t\t\t\tif ( fragment.context.has( key ) ) {\n\t\t\t\t\tif ( crossedComponentBoundary ) {\n\t\t\t\t\t\treturn localViewmodel.createLink( key, fragment.context.joinKey( keys.shift() ), key ).joinAll( keys );\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn fragment.context.joinAll( keys );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( fragment.componentParent && !fragment.ractive.isolated ) {\n\t\t\t\t// ascend through component boundary\n\t\t\t\tfragment = fragment.componentParent;\n\t\t\t\tcrossedComponentBoundary = true;\n\t\t\t} else {\n\t\t\t\tfragment = fragment.parent;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( !hasContextChain ) {\n\t\t\treturn localViewmodel.joinAll( keys );\n\t\t}\n\t}\n\t\n\tvar stack = [];\n\tvar captureGroup;\n\t\n\tfunction startCapturing () {\n\t\tstack.push( captureGroup = [] );\n\t}\n\t\n\tfunction stopCapturing () {\n\t\tvar dependencies = stack.pop();\n\t\tcaptureGroup = stack[ stack.length - 1 ];\n\t\treturn dependencies;\n\t}\n\t\n\tfunction capture ( model ) {\n\t\tif ( captureGroup ) {\n\t\t\tcaptureGroup.push( model );\n\t\t}\n\t}\n\t\n\tvar KeyModel = function KeyModel ( key, parent ) {\n\t\tthis.value = key;\n\t\tthis.isReadonly = this.isKey = true;\n\t\tthis.deps = [];\n\t\tthis.links = [];\n\t\tthis.parent = parent;\n\t};\n\t\n\tKeyModel.prototype.get = function get ( shouldCapture ) {\n\t\tif ( shouldCapture ) capture( this );\n\t\treturn unescapeKey( this.value );\n\t};\n\t\n\tKeyModel.prototype.getKeypath = function getKeypath () {\n\t\treturn unescapeKey( this.value );\n\t};\n\t\n\tKeyModel.prototype.rebinding = function rebinding ( next, previous ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar i = this.deps.length;\n\t\twhile ( i-- ) this$1.deps[i].rebinding( next, previous, false );\n\t\n\t\ti = this.links.length;\n\t\twhile ( i-- ) this$1.links[i].rebinding( next, previous, false );\n\t};\n\t\n\tKeyModel.prototype.register = function register ( dependant ) {\n\t\tthis.deps.push( dependant );\n\t};\n\t\n\tKeyModel.prototype.registerLink = function registerLink ( link ) {\n\t\taddToArray( this.links, link );\n\t};\n\t\n\tKeyModel.prototype.unregister = function unregister ( dependant ) {\n\t\tremoveFromArray( this.deps, dependant );\n\t};\n\t\n\tKeyModel.prototype.unregisterLink = function unregisterLink ( link ) {\n\t\tremoveFromArray( this.links, link );\n\t};\n\t\n\tfunction bind$2               ( x ) { x.bind(); }\n\tfunction cancel$1             ( x ) { x.cancel(); }\n\tfunction handleChange$1$1       ( x ) { x.handleChange(); }\n\tfunction mark$1$1               ( x ) { x.mark(); }\n\tfunction marked             ( x ) { x.marked(); }\n\tfunction notifiedUpstream   ( x ) { x.notifiedUpstream(); }\n\tfunction render$1$1             ( x ) { x.render(); }\n\tfunction teardown$1$1           ( x ) { x.teardown(); }\n\tfunction unbind$1$1             ( x ) { x.unbind(); }\n\tfunction unrender$1$1           ( x ) { x.unrender(); }\n\tfunction unrenderAndDestroy ( x ) { x.unrender( true ); }\n\tfunction update$1$1             ( x ) { x.update(); }\n\tfunction toString$2           ( x ) { return x.toString(); }\n\tfunction toEscapedString    ( x ) { return x.toString( true ); }\n\t\n\tvar KeypathModel = function KeypathModel ( parent, ractive ) {\n\t\tthis.parent = parent;\n\t\tthis.ractive = ractive;\n\t\tthis.value = ractive ? parent.getKeypath( ractive ) : parent.getKeypath();\n\t\tthis.deps = [];\n\t\tthis.children = {};\n\t\tthis.isReadonly = this.isKeypath = true;\n\t};\n\t\n\tKeypathModel.prototype.get = function get ( shouldCapture ) {\n\t\tif ( shouldCapture ) capture( this );\n\t\treturn this.value;\n\t};\n\t\n\tKeypathModel.prototype.getChild = function getChild ( ractive ) {\n\t\tif ( !( ractive._guid in this.children ) ) {\n\t\t\tvar model = new KeypathModel( this.parent, ractive );\n\t\t\tthis.children[ ractive._guid ] = model;\n\t\t\tmodel.owner = this;\n\t\t}\n\t\treturn this.children[ ractive._guid ];\n\t};\n\t\n\tKeypathModel.prototype.getKeypath = function getKeypath () {\n\t\treturn this.value;\n\t};\n\t\n\tKeypathModel.prototype.handleChange = function handleChange$1 () {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar keys = Object.keys( this.children );\n\t\tvar i = keys.length;\n\t\twhile ( i-- ) {\n\t\t\tthis$1.children[ keys[i] ].handleChange();\n\t\t}\n\t\n\t\tthis.deps.forEach( handleChange$1$1 );\n\t};\n\t\n\tKeypathModel.prototype.rebindChildren = function rebindChildren ( next ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar keys = Object.keys( this.children );\n\t\tvar i = keys.length;\n\t\twhile ( i-- ) {\n\t\t\tvar child = this$1.children[keys[i]];\n\t\t\tchild.value = next.getKeypath( child.ractive );\n\t\t\tchild.handleChange();\n\t\t}\n\t};\n\t\n\tKeypathModel.prototype.rebinding = function rebinding ( next, previous ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar model = next ? next.getKeypathModel( this.ractive ) : undefined;\n\t\n\t\tvar keys = Object.keys( this.children );\n\t\tvar i = keys.length;\n\t\twhile ( i-- ) {\n\t\t\tthis$1.children[ keys[i] ].rebinding( next, previous, false );\n\t\t}\n\t\n\t\ti = this.deps.length;\n\t\twhile ( i-- ) {\n\t\t\tthis$1.deps[i].rebinding( model, this$1, false );\n\t\t}\n\t};\n\t\n\tKeypathModel.prototype.register = function register ( dep ) {\n\t\tthis.deps.push( dep );\n\t};\n\t\n\tKeypathModel.prototype.removeChild = function removeChild( model ) {\n\t\tif ( model.ractive ) delete this.children[ model.ractive._guid ];\n\t};\n\t\n\tKeypathModel.prototype.teardown = function teardown () {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( this.owner ) this.owner.removeChild( this );\n\t\n\t\tvar keys = Object.keys( this.children );\n\t\tvar i = keys.length;\n\t\twhile ( i-- ) {\n\t\t\tthis$1.children[ keys[i] ].teardown();\n\t\t}\n\t};\n\t\n\tKeypathModel.prototype.unregister = function unregister ( dep ) {\n\t\tremoveFromArray( this.deps, dep );\n\t\tif ( !this.deps.length ) this.teardown();\n\t};\n\t\n\tvar hasProp = Object.prototype.hasOwnProperty;\n\t\n\tvar shuffleTasks = { early: [], mark: [] };\n\tvar registerQueue = { early: [], mark: [] };\n\t\n\tvar ModelBase = function ModelBase ( parent ) {\n\t\tthis.deps = [];\n\t\n\t\tthis.children = [];\n\t\tthis.childByKey = {};\n\t\tthis.links = [];\n\t\n\t\tthis.keyModels = {};\n\t\n\t\tthis.unresolved = [];\n\t\tthis.unresolvedByKey = {};\n\t\n\t\tthis.bindings = [];\n\t\tthis.patternObservers = [];\n\t\n\t\tif ( parent ) {\n\t\t\tthis.parent = parent;\n\t\t\tthis.root = parent.root;\n\t\t}\n\t};\n\t\n\tModelBase.prototype.addUnresolved = function addUnresolved ( key, resolver ) {\n\t\tif ( !this.unresolvedByKey[ key ] ) {\n\t\t\tthis.unresolved.push( key );\n\t\t\tthis.unresolvedByKey[ key ] = [];\n\t\t}\n\t\n\t\tthis.unresolvedByKey[ key ].push( resolver );\n\t};\n\t\n\tModelBase.prototype.addShuffleTask = function addShuffleTask ( task, stage ) { if ( stage === void 0 ) stage = 'early';\n\t\n\t\tshuffleTasks[stage].push( task ); };\n\tModelBase.prototype.addShuffleRegister = function addShuffleRegister ( item, stage ) { if ( stage === void 0 ) stage = 'early';\n\t\n\t\tregisterQueue[stage].push({ model: this, item: item }); };\n\t\n\tModelBase.prototype.clearUnresolveds = function clearUnresolveds ( specificKey ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar i = this.unresolved.length;\n\t\n\t\twhile ( i-- ) {\n\t\t\tvar key = this$1.unresolved[i];\n\t\n\t\t\tif ( specificKey && key !== specificKey ) continue;\n\t\n\t\t\tvar resolvers = this$1.unresolvedByKey[ key ];\n\t\t\tvar hasKey = this$1.has( key );\n\t\n\t\t\tvar j = resolvers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\tif ( hasKey ) resolvers[j].attemptResolution();\n\t\t\t\tif ( resolvers[j].resolved ) resolvers.splice( j, 1 );\n\t\t\t}\n\t\n\t\t\tif ( !resolvers.length ) {\n\t\t\t\tthis$1.unresolved.splice( i, 1 );\n\t\t\t\tthis$1.unresolvedByKey[ key ] = null;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tModelBase.prototype.findMatches = function findMatches ( keys ) {\n\t\tvar len = keys.length;\n\t\n\t\tvar existingMatches = [ this ];\n\t\tvar matches;\n\t\tvar i;\n\t\n\t\tvar loop = function (  ) {\n\t\t\tvar key = keys[i];\n\t\n\t\t\tif ( key === '*' ) {\n\t\t\t\tmatches = [];\n\t\t\t\texistingMatches.forEach( function ( model ) {\n\t\t\t\t\tmatches.push.apply( matches, model.getValueChildren( model.get() ) );\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tmatches = existingMatches.map( function ( model ) { return model.joinKey( key ); } );\n\t\t\t}\n\t\n\t\t\texistingMatches = matches;\n\t\t};\n\t\n\t\t\tfor ( i = 0; i < len; i += 1 ) loop(  );\n\t\n\t\treturn matches;\n\t};\n\t\n\tModelBase.prototype.getKeyModel = function getKeyModel ( key, skip ) {\n\t\tif ( key !== undefined && !skip ) return this.parent.getKeyModel( key, true );\n\t\n\t\tif ( !( key in this.keyModels ) ) this.keyModels[ key ] = new KeyModel( escapeKey( key ), this );\n\t\n\t\treturn this.keyModels[ key ];\n\t};\n\t\n\tModelBase.prototype.getKeypath = function getKeypath ( ractive ) {\n\t\tif ( ractive !== this.ractive && this._link ) return this._link.target.getKeypath( ractive );\n\t\n\t\tif ( !this.keypath ) {\n\t\t\tthis.keypath = this.parent.isRoot ? this.key : (\"\" + (this.parent.getKeypath( ractive )) + \".\" + (escapeKey( this.key )));\n\t\t}\n\t\n\t\treturn this.keypath;\n\t};\n\t\n\tModelBase.prototype.getValueChildren = function getValueChildren ( value ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar children;\n\t\tif ( isArray( value ) ) {\n\t\t\tchildren = [];\n\t\t\tif ( 'length' in this && this.length !== value.length ) {\n\t\t\t\tchildren.push( this.joinKey( 'length' ) );\n\t\t\t}\n\t\t\tvalue.forEach( function ( m, i ) {\n\t\t\t\tchildren.push( this$1.joinKey( i ) );\n\t\t\t});\n\t\t}\n\t\n\t\telse if ( isObject( value ) || typeof value === 'function' ) {\n\t\t\tchildren = Object.keys( value ).map( function ( key ) { return this$1.joinKey( key ); } );\n\t\t}\n\t\n\t\telse if ( value != null ) {\n\t\t\treturn [];\n\t\t}\n\t\n\t\treturn children;\n\t};\n\t\n\tModelBase.prototype.getVirtual = function getVirtual ( shouldCapture ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar value = this.get( shouldCapture, { virtual: false } );\n\t\tif ( isObject( value ) ) {\n\t\t\tvar result = isArray( value ) ? [] : {};\n\t\n\t\t\tvar keys = Object.keys( value );\n\t\t\tvar i = keys.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar child = this$1.childByKey[ keys[i] ];\n\t\t\t\tif ( !child ) result[ keys[i] ] = value[ keys[i] ];\n\t\t\t\telse if ( child._link ) result[ keys[i] ] = child._link.getVirtual();\n\t\t\t\telse result[ keys[i] ] = child.getVirtual();\n\t\t\t}\n\t\n\t\t\ti = this.children.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar child$1 = this$1.children[i];\n\t\t\t\tif ( !( child$1.key in result ) && child$1._link ) {\n\t\t\t\t\tresult[ child$1.key ] = child$1._link.getVirtual();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t} else return value;\n\t};\n\t\n\tModelBase.prototype.has = function has ( key ) {\n\t\tif ( this._link ) return this._link.has( key );\n\t\n\t\tvar value = this.get();\n\t\tif ( !value ) return false;\n\t\n\t\tkey = unescapeKey( key );\n\t\tif ( hasProp.call( value, key ) ) return true;\n\t\n\t\t// We climb up the constructor chain to find if one of them contains the key\n\t\tvar constructor = value.constructor;\n\t\twhile ( constructor !== Function && constructor !== Array && constructor !== Object ) {\n\t\t\tif ( hasProp.call( constructor.prototype, key ) ) return true;\n\t\t\tconstructor = constructor.constructor;\n\t\t}\n\t\n\t\treturn false;\n\t};\n\t\n\tModelBase.prototype.joinAll = function joinAll ( keys, opts ) {\n\t\tvar model = this;\n\t\tfor ( var i = 0; i < keys.length; i += 1 ) {\n\t\t\tif ( opts && opts.lastLink === false && i + 1 === keys.length && model.childByKey[keys[i]] && model.childByKey[keys[i]]._link ) return model.childByKey[keys[i]];\n\t\t\tmodel = model.joinKey( keys[i], opts );\n\t\t}\n\t\n\t\treturn model;\n\t};\n\t\n\tModelBase.prototype.notifyUpstream = function notifyUpstream () {\n\t\tvar parent = this.parent, prev = this;\n\t\twhile ( parent ) {\n\t\t\tif ( parent.patternObservers.length ) parent.patternObservers.forEach( function ( o ) { return o.notify( prev.key ); } );\n\t\t\tparent.links.forEach( notifiedUpstream );\n\t\t\tparent.deps.forEach( handleChange$1$1 );\n\t\t\tprev = parent;\n\t\t\tparent = parent.parent;\n\t\t}\n\t};\n\t\n\tModelBase.prototype.rebinding = function rebinding ( next, previous, safe ) {\n\t\t// tell the deps to move to the new target\n\t\tvar this$1 = this;\n\t\n\t\t\tvar i = this.deps.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( this$1.deps[i].rebinding ) this$1.deps[i].rebinding( next, previous, safe );\n\t\t}\n\t\n\t\ti = this.links.length;\n\t\twhile ( i-- ) {\n\t\t\tvar link = this$1.links[i];\n\t\t\t// only relink the root of the link tree\n\t\t\tif ( link.owner._link ) link.relinking( next, true, safe );\n\t\t}\n\t\n\t\ti = this.children.length;\n\t\twhile ( i-- ) {\n\t\t\tvar child = this$1.children[i];\n\t\t\tchild.rebinding( next ? next.joinKey( child.key ) : undefined, child, safe );\n\t\t}\n\t\n\t\ti = this.unresolved.length;\n\t\twhile ( i-- ) {\n\t\t\tvar unresolved = this$1.unresolvedByKey[ this$1.unresolved[i] ];\n\t\t\tvar c = unresolved.length;\n\t\t\twhile ( c-- ) {\n\t\t\t\tunresolved[c].rebinding( next, previous );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( this.keypathModel ) this.keypathModel.rebinding( next, previous, false );\n\t\n\t\ti = this.bindings.length;\n\t\twhile ( i-- ) {\n\t\t\tthis$1.bindings[i].rebinding( next, previous, safe );\n\t\t}\n\t};\n\t\n\tModelBase.prototype.register = function register ( dep ) {\n\t\tthis.deps.push( dep );\n\t};\n\t\n\tModelBase.prototype.registerChange = function registerChange ( key, value ) {\n\t\tif ( !this.isRoot ) {\n\t\t\tthis.root.registerChange( key, value );\n\t\t} else {\n\t\t\tthis.changes[ key ] = value;\n\t\t\trunloop.addInstance( this.root.ractive );\n\t\t}\n\t};\n\t\n\tModelBase.prototype.registerLink = function registerLink ( link ) {\n\t\taddToArray( this.links, link );\n\t};\n\t\n\tModelBase.prototype.registerPatternObserver = function registerPatternObserver ( observer ) {\n\t\tthis.patternObservers.push( observer );\n\t\tthis.register( observer );\n\t};\n\t\n\tModelBase.prototype.registerTwowayBinding = function registerTwowayBinding ( binding ) {\n\t\tthis.bindings.push( binding );\n\t};\n\t\n\tModelBase.prototype.removeUnresolved = function removeUnresolved ( key, resolver ) {\n\t\tvar resolvers = this.unresolvedByKey[ key ];\n\t\n\t\tif ( resolvers ) {\n\t\t\tremoveFromArray( resolvers, resolver );\n\t\t}\n\t};\n\t\n\tModelBase.prototype.shuffled = function shuffled () {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar i = this.children.length;\n\t\twhile ( i-- ) {\n\t\t\tthis$1.children[i].shuffled();\n\t\t}\n\t\tif ( this.wrapper ) {\n\t\t\tthis.wrapper.teardown();\n\t\t\tthis.wrapper = null;\n\t\t\tthis.rewrap = true;\n\t\t}\n\t};\n\t\n\tModelBase.prototype.unregister = function unregister ( dependant ) {\n\t\tremoveFromArray( this.deps, dependant );\n\t};\n\t\n\tModelBase.prototype.unregisterLink = function unregisterLink ( link ) {\n\t\tremoveFromArray( this.links, link );\n\t};\n\t\n\tModelBase.prototype.unregisterPatternObserver = function unregisterPatternObserver ( observer ) {\n\t\tremoveFromArray( this.patternObservers, observer );\n\t\tthis.unregister( observer );\n\t};\n\t\n\tModelBase.prototype.unregisterTwowayBinding = function unregisterTwowayBinding ( binding ) {\n\t\tremoveFromArray( this.bindings, binding );\n\t};\n\t\n\tModelBase.prototype.updateFromBindings = function updateFromBindings$1 ( cascade ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar i = this.bindings.length;\n\t\twhile ( i-- ) {\n\t\t\tvar value = this$1.bindings[i].getValue();\n\t\t\tif ( value !== this$1.value ) this$1.set( value );\n\t\t}\n\t\n\t\t// check for one-way bindings if there are no two-ways\n\t\tif ( !this.bindings.length ) {\n\t\t\tvar oneway = findBoundValue( this.deps );\n\t\t\tif ( oneway && oneway.value !== this.value ) this.set( oneway.value );\n\t\t}\n\t\n\t\tif ( cascade ) {\n\t\t\tthis.children.forEach( updateFromBindings );\n\t\t\tthis.links.forEach( updateFromBindings );\n\t\t\tif ( this._link ) this._link.updateFromBindings( cascade );\n\t\t}\n\t};\n\t\n\tfunction updateFromBindings ( model ) {\n\t\tmodel.updateFromBindings( true );\n\t}\n\t\n\tfunction findBoundValue( list ) {\n\t\tvar i = list.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( list[i].bound ) {\n\t\t\t\tvar owner = list[i].owner;\n\t\t\t\tif ( owner ) {\n\t\t\t\t\tvar value = owner.name === 'checked' ?\n\t\t\t\t\t\towner.node.checked :\n\t\t\t\t\t\towner.node.value;\n\t\t\t\t\treturn { value: value };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction fireShuffleTasks ( stage ) {\n\t\tif ( !stage ) {\n\t\t\tfireShuffleTasks( 'early' );\n\t\t\tfireShuffleTasks( 'mark' );\n\t\t} else {\n\t\t\tvar tasks = shuffleTasks[stage];\n\t\t\tshuffleTasks[stage] = [];\n\t\t\tvar i = tasks.length;\n\t\t\twhile ( i-- ) tasks[i]();\n\t\n\t\t\tvar register = registerQueue[stage];\n\t\t\tregisterQueue[stage] = [];\n\t\t\ti = register.length;\n\t\t\twhile ( i-- ) register[i].model.register( register[i].item );\n\t\t}\n\t}\n\t\n\tKeyModel.prototype.addShuffleTask = ModelBase.prototype.addShuffleTask;\n\tKeyModel.prototype.addShuffleRegister = ModelBase.prototype.addShuffleRegister;\n\tKeypathModel.prototype.addShuffleTask = ModelBase.prototype.addShuffleTask;\n\tKeypathModel.prototype.addShuffleRegister = ModelBase.prototype.addShuffleRegister;\n\t\n\t// this is the dry method of checking to see if a rebind applies to\n\t// a particular keypath because in some cases, a dep may be bound\n\t// directly to a particular keypath e.g. foo.bars.0.baz and need\n\t// to avoid getting kicked to foo.bars.1.baz if foo.bars is unshifted\n\tfunction rebindMatch ( template, next, previous ) {\n\t\tvar keypath = template.r || template;\n\t\n\t\t// no valid keypath, go with next\n\t\tif ( !keypath || typeof keypath !== 'string' ) return next;\n\t\n\t\t// completely contextual ref, go with next\n\t\tif ( keypath === '.' || keypath[0] === '@' || (next || previous).isKey || (next || previous).isKeypath ) return next;\n\t\n\t\tvar parts = keypath.split( '/' );\n\t\tvar keys = splitKeypath( parts[ parts.length - 1 ] );\n\t\n\t\t// check the keypath against the model keypath to see if it matches\n\t\tvar model = next || previous;\n\t\tvar i = keys.length;\n\t\tvar match = true, shuffling = false;\n\t\n\t\twhile ( model && i-- ) {\n\t\t\tif ( model.shuffling ) shuffling = true;\n\t\t\t// non-strict comparison to account for indices in keypaths\n\t\t\tif ( keys[i] != model.key ) match = false;\n\t\t\tmodel = model.parent;\n\t\t}\n\t\n\t\t// next is undefined, but keypath is shuffling and previous matches\n\t\tif ( !next && match && shuffling ) return previous;\n\t\t// next is defined, but doesn't match the keypath\n\t\telse if ( next && !match && shuffling ) return previous;\n\t\telse return next;\n\t}\n\t\n\tvar LinkModel = (function (ModelBase$$1) {\n\t\tfunction LinkModel ( parent, owner, target, key ) {\n\t\t\tModelBase$$1.call( this, parent );\n\t\n\t\t\tthis.owner = owner;\n\t\t\tthis.target = target;\n\t\t\tthis.key = key === undefined ? owner.key : key;\n\t\t\tif ( owner.isLink ) this.sourcePath = \"\" + (owner.sourcePath) + \".\" + (this.key);\n\t\n\t\t\ttarget.registerLink( this );\n\t\n\t\t\tthis.isReadonly = parent.isReadonly;\n\t\n\t\t\tthis.isLink = true;\n\t\t}\n\t\n\t\tLinkModel.prototype = Object.create( ModelBase$$1 && ModelBase$$1.prototype );\n\t\tLinkModel.prototype.constructor = LinkModel;\n\t\n\t\tLinkModel.prototype.animate = function animate ( from, to, options, interpolator ) {\n\t\t\tthis.target.animate( from, to, options, interpolator );\n\t\t};\n\t\n\t\tLinkModel.prototype.applyValue = function applyValue ( value ) {\n\t\t\tthis.target.applyValue( value );\n\t\t};\n\t\n\t\tLinkModel.prototype.get = function get ( shouldCapture, opts ) {\n\t\t\tif ( shouldCapture ) {\n\t\t\t\tcapture( this );\n\t\n\t\t\t\t// may need to tell the target to unwrap\n\t\t\t\topts = opts || {};\n\t\t\t\topts.unwrap = true;\n\t\t\t}\n\t\n\t\t\treturn this.target.get( false, opts );\n\t\t};\n\t\n\t\tLinkModel.prototype.getKeypath = function getKeypath ( ractive ) {\n\t\t\tif ( ractive && ractive !== this.root.ractive ) return this.target.getKeypath( ractive );\n\t\n\t\t\treturn ModelBase$$1.prototype.getKeypath.call( this, ractive );\n\t\t};\n\t\n\t\tLinkModel.prototype.getKeypathModel = function getKeypathModel ( ractive ) {\n\t\t\tif ( !this.keypathModel ) this.keypathModel = new KeypathModel( this );\n\t\t\tif ( ractive && ractive !== this.root.ractive ) return this.keypathModel.getChild( ractive );\n\t\t\treturn this.keypathModel;\n\t\t};\n\t\n\t\tLinkModel.prototype.handleChange = function handleChange$1 () {\n\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t\tthis.links.forEach( handleChange$1$1 );\n\t\t\tthis.notifyUpstream();\n\t\t};\n\t\n\t\tLinkModel.prototype.joinKey = function joinKey ( key ) {\n\t\t\t// TODO: handle nested links\n\t\t\tif ( key === undefined || key === '' ) return this;\n\t\n\t\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\t\tvar child = new LinkModel( this, this, this.target.joinKey( key ), key );\n\t\t\t\tthis.children.push( child );\n\t\t\t\tthis.childByKey[ key ] = child;\n\t\t\t}\n\t\n\t\t\treturn this.childByKey[ key ];\n\t\t};\n\t\n\t\tLinkModel.prototype.mark = function mark () {\n\t\t\tthis.target.mark();\n\t\t};\n\t\n\t\tLinkModel.prototype.marked = function marked$1 () {\n\t\t\tthis.links.forEach( marked );\n\t\n\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t\tthis.clearUnresolveds();\n\t\t};\n\t\n\t\tLinkModel.prototype.notifiedUpstream = function notifiedUpstream$1 () {\n\t\t\tthis.links.forEach( notifiedUpstream );\n\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t};\n\t\n\t\tLinkModel.prototype.relinked = function relinked () {\n\t\t\tthis.target.registerLink( this );\n\t\t\tthis.children.forEach( function ( c ) { return c.relinked(); } );\n\t\t};\n\t\n\t\tLinkModel.prototype.relinking = function relinking ( target, root, safe ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tif ( root && this.sourcePath ) target = rebindMatch( this.sourcePath, target, this.target );\n\t\t\tif ( !target || this.target === target ) return;\n\t\n\t\t\tthis.target.unregisterLink( this );\n\t\t\tif ( this.keypathModel ) this.keypathModel.rebindChildren( target );\n\t\n\t\t\tthis.target = target;\n\t\t\tthis.children.forEach( function ( c ) {\n\t\t\t\tc.relinking( target.joinKey( c.key ), false, safe );\n\t\t\t});\n\t\n\t\t\tif ( root ) this.addShuffleTask( function () {\n\t\t\t\tthis$1.relinked();\n\t\t\t\tif ( !safe ) this$1.notifyUpstream();\n\t\t\t});\n\t\t};\n\t\n\t\tLinkModel.prototype.set = function set ( value ) {\n\t\t\tthis.target.set( value );\n\t\t};\n\t\n\t\tLinkModel.prototype.shuffle = function shuffle ( newIndices ) {\n\t\t\t// let the real model handle firing off shuffles\n\t\t\tvar this$1 = this;\n\t\n\t\t\tif ( !this.target.shuffling ) {\n\t\t\t\tthis.target.shuffle( newIndices );\n\t\t\t} else {\n\t\t\t\tvar i = newIndices.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tvar idx = newIndices[ i ];\n\t\t\t\t\t// nothing is actually changing, so move in the index and roll on\n\t\t\t\t\tif ( i === idx ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// rebind the children on i to idx\n\t\t\t\t\tif ( i in this$1.childByKey ) this$1.childByKey[ i ].rebinding( !~idx ? undefined : this$1.joinKey( idx ), this$1.childByKey[ i ], true );\n\t\n\t\t\t\t\tif ( !~idx && this$1.keyModels[ i ] ) {\n\t\t\t\t\t\tthis$1.keyModels[i].rebinding( undefined, this$1.keyModels[i], false );\n\t\t\t\t\t} else if ( ~idx && this$1.keyModels[ i ] ) {\n\t\t\t\t\t\tif ( !this$1.keyModels[ idx ] ) this$1.childByKey[ idx ].getKeyModel( idx );\n\t\t\t\t\t\tthis$1.keyModels[i].rebinding( this$1.keyModels[ idx ], this$1.keyModels[i], false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tvar upstream = this.source().length !== this.source().value.length;\n\t\n\t\t\t\tthis.links.forEach( function ( l ) { return l.shuffle( newIndices ); } );\n\t\n\t\t\t\ti = this.deps.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( this$1.deps[i].shuffle ) this$1.deps[i].shuffle( newIndices );\n\t\t\t\t}\n\t\n\t\t\t\tthis.marked();\n\t\n\t\t\t\tif ( upstream ) this.notifyUpstream();\n\t\t\t}\n\t\t};\n\t\n\t\tLinkModel.prototype.source = function source () {\n\t\t\tif ( this.target.source ) return this.target.source();\n\t\t\telse return this.target;\n\t\t};\n\t\n\t\tLinkModel.prototype.teardown = function teardown$1 () {\n\t\t\tif ( this._link ) this._link.teardown();\n\t\t\tthis.children.forEach( teardown$1$1 );\n\t\t};\n\t\n\t\treturn LinkModel;\n\t}(ModelBase));\n\t\n\tModelBase.prototype.link = function link ( model, keypath ) {\n\t\tvar lnk = this._link || new LinkModel( this.parent, this, model, this.key );\n\t\tlnk.sourcePath = keypath;\n\t\tif ( this._link ) this._link.relinking( model, true, false );\n\t\tthis.rebinding( lnk, this, false );\n\t\tfireShuffleTasks();\n\t\n\t\tvar unresolved = !this._link;\n\t\tthis._link = lnk;\n\t\tif ( unresolved ) this.parent.clearUnresolveds();\n\t\tlnk.marked();\n\t\treturn lnk;\n\t};\n\t\n\tModelBase.prototype.unlink = function unlink () {\n\t\tif ( this._link ) {\n\t\t\tvar ln = this._link;\n\t\t\tthis._link = undefined;\n\t\t\tln.rebinding( this, this._link );\n\t\t\tfireShuffleTasks();\n\t\t\tln.teardown();\n\t\t}\n\t};\n\t\n\tvar requestAnimationFrame;\n\t\n\t// If window doesn't exist, we don't need requestAnimationFrame\n\tif ( !win ) {\n\t\trequestAnimationFrame = null;\n\t} else {\n\t\t// https://gist.github.com/paulirish/1579671\n\t\t(function(vendors$$1, lastTime, win$$1) {\n\t\n\t\t\tvar x, setTimeout;\n\t\n\t\t\tif ( win$$1.requestAnimationFrame ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tfor ( x = 0; x < vendors$$1.length && !win$$1.requestAnimationFrame; ++x ) {\n\t\t\t\twin$$1.requestAnimationFrame = win$$1[vendors$$1[x]+'RequestAnimationFrame'];\n\t\t\t}\n\t\n\t\t\tif ( !win$$1.requestAnimationFrame ) {\n\t\t\t\tsetTimeout = win$$1.setTimeout;\n\t\n\t\t\t\twin$$1.requestAnimationFrame = function(callback) {\n\t\t\t\t\tvar currTime, timeToCall, id;\n\t\n\t\t\t\t\tcurrTime = Date.now();\n\t\t\t\t\ttimeToCall = Math.max( 0, 16 - (currTime - lastTime ) );\n\t\t\t\t\tid = setTimeout( function() { callback(currTime + timeToCall); }, timeToCall );\n\t\n\t\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\t\treturn id;\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t}( vendors, 0, win ));\n\t\n\t\trequestAnimationFrame = win.requestAnimationFrame;\n\t}\n\t\n\tvar rAF = requestAnimationFrame;\n\t\n\tvar getTime = ( win && win.performance && typeof win.performance.now === 'function' ) ?\n\t\tfunction () { return win.performance.now(); } :\n\t\tfunction () { return Date.now(); };\n\t\n\t// TODO what happens if a transition is aborted?\n\t\n\tvar tickers = [];\n\tvar running = false;\n\t\n\tfunction tick () {\n\t\trunloop.start();\n\t\n\t\tvar now = getTime();\n\t\n\t\tvar i;\n\t\tvar ticker;\n\t\n\t\tfor ( i = 0; i < tickers.length; i += 1 ) {\n\t\t\tticker = tickers[i];\n\t\n\t\t\tif ( !ticker.tick( now ) ) {\n\t\t\t\t// ticker is complete, remove it from the stack, and decrement i so we don't miss one\n\t\t\t\ttickers.splice( i--, 1 );\n\t\t\t}\n\t\t}\n\t\n\t\trunloop.end();\n\t\n\t\tif ( tickers.length ) {\n\t\t\trAF( tick );\n\t\t} else {\n\t\t\trunning = false;\n\t\t}\n\t}\n\t\n\tvar Ticker = function Ticker ( options ) {\n\t\tthis.duration = options.duration;\n\t\tthis.step = options.step;\n\t\tthis.complete = options.complete;\n\t\tthis.easing = options.easing;\n\t\n\t\tthis.start = getTime();\n\t\tthis.end = this.start + this.duration;\n\t\n\t\tthis.running = true;\n\t\n\t\ttickers.push( this );\n\t\tif ( !running ) rAF( tick );\n\t};\n\t\n\tTicker.prototype.tick = function tick$1 ( now ) {\n\t\tif ( !this.running ) return false;\n\t\n\t\tif ( now > this.end ) {\n\t\t\tif ( this.step ) this.step( 1 );\n\t\t\tif ( this.complete ) this.complete( 1 );\n\t\n\t\t\treturn false;\n\t\t}\n\t\n\t\tvar elapsed = now - this.start;\n\t\tvar eased = this.easing( elapsed / this.duration );\n\t\n\t\tif ( this.step ) this.step( eased );\n\t\n\t\treturn true;\n\t};\n\t\n\tTicker.prototype.stop = function stop () {\n\t\tif ( this.abort ) this.abort();\n\t\tthis.running = false;\n\t};\n\t\n\tvar prefixers = {};\n\t\n\t// TODO this is legacy. sooner we can replace the old adaptor API the better\n\tfunction prefixKeypath ( obj, prefix ) {\n\t\tvar prefixed = {}, key;\n\t\n\t\tif ( !prefix ) {\n\t\t\treturn obj;\n\t\t}\n\t\n\t\tprefix += '.';\n\t\n\t\tfor ( key in obj ) {\n\t\t\tif ( obj.hasOwnProperty( key ) ) {\n\t\t\t\tprefixed[ prefix + key ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t\n\t\treturn prefixed;\n\t}\n\t\n\tfunction getPrefixer ( rootKeypath ) {\n\t\tvar rootDot;\n\t\n\t\tif ( !prefixers[ rootKeypath ] ) {\n\t\t\trootDot = rootKeypath ? rootKeypath + '.' : '';\n\t\n\t\t\tprefixers[ rootKeypath ] = function ( relativeKeypath, value ) {\n\t\t\t\tvar obj;\n\t\n\t\t\t\tif ( typeof relativeKeypath === 'string' ) {\n\t\t\t\t\tobj = {};\n\t\t\t\t\tobj[ rootDot + relativeKeypath ] = value;\n\t\t\t\t\treturn obj;\n\t\t\t\t}\n\t\n\t\t\t\tif ( typeof relativeKeypath === 'object' ) {\n\t\t\t\t\t// 'relativeKeypath' is in fact a hash, not a keypath\n\t\t\t\t\treturn rootDot ? prefixKeypath( relativeKeypath, rootKeypath ) : relativeKeypath;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\treturn prefixers[ rootKeypath ];\n\t}\n\t\n\tvar Model = (function (ModelBase$$1) {\n\t\tfunction Model ( parent, key ) {\n\t\t\tModelBase$$1.call( this, parent );\n\t\n\t\t\tthis.value = undefined;\n\t\n\t\t\tthis.ticker = null;\n\t\n\t\t\tif ( parent ) {\n\t\t\t\tthis.key = unescapeKey( key );\n\t\t\t\tthis.isReadonly = parent.isReadonly;\n\t\n\t\t\t\tif ( parent.value ) {\n\t\t\t\t\tthis.value = parent.value[ this.key ];\n\t\t\t\t\tif ( isArray( this.value ) ) this.length = this.value.length;\n\t\t\t\t\tthis.adapt();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tModel.prototype = Object.create( ModelBase$$1 && ModelBase$$1.prototype );\n\t\tModel.prototype.constructor = Model;\n\t\n\t\tModel.prototype.adapt = function adapt () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar adaptors = this.root.adaptors;\n\t\t\tvar len = adaptors.length;\n\t\n\t\t\tthis.rewrap = false;\n\t\n\t\t\t// Exit early if no adaptors\n\t\t\tif ( len === 0 ) return;\n\t\n\t\t\tvar value = this.value;\n\t\n\t\t\t// TODO remove this legacy nonsense\n\t\t\tvar ractive = this.root.ractive;\n\t\t\tvar keypath = this.getKeypath();\n\t\n\t\t\t// tear previous adaptor down if present\n\t\t\tif ( this.wrapper ) {\n\t\t\t\tvar shouldTeardown = !this.wrapper.reset || this.wrapper.reset( value ) === false;\n\t\n\t\t\t\tif ( shouldTeardown ) {\n\t\t\t\t\tthis.wrapper.teardown();\n\t\t\t\t\tthis.wrapper = null;\n\t\n\t\t\t\t\t// don't branch for undefined values\n\t\t\t\t\tif ( this.value !== undefined ) {\n\t\t\t\t\t\tvar parentValue = this.parent.value || this.parent.createBranch( this.key );\n\t\t\t\t\t\tif ( parentValue[ this.key ] !== this.value ) parentValue[ this.key ] = value;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.value = this.wrapper.get();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar i;\n\t\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\t\tvar adaptor = adaptors[i];\n\t\t\t\tif ( adaptor.filter( value, keypath, ractive ) ) {\n\t\t\t\t\tthis$1.wrapper = adaptor.wrap( ractive, value, keypath, getPrefixer( keypath ) );\n\t\t\t\t\tthis$1.wrapper.value = this$1.value;\n\t\t\t\t\tthis$1.wrapper.__model = this$1; // massive temporary hack to enable array adaptor\n\t\n\t\t\t\t\tthis$1.value = this$1.wrapper.get();\n\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tModel.prototype.animate = function animate ( from, to, options, interpolator ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tif ( this.ticker ) this.ticker.stop();\n\t\n\t\t\tvar fulfilPromise;\n\t\t\tvar promise = new Promise$1( function ( fulfil ) { return fulfilPromise = fulfil; } );\n\t\n\t\t\tthis.ticker = new Ticker({\n\t\t\t\tduration: options.duration,\n\t\t\t\teasing: options.easing,\n\t\t\t\tstep: function ( t ) {\n\t\t\t\t\tvar value = interpolator( t );\n\t\t\t\t\tthis$1.applyValue( value );\n\t\t\t\t\tif ( options.step ) options.step( t, value );\n\t\t\t\t},\n\t\t\t\tcomplete: function () {\n\t\t\t\t\tthis$1.applyValue( to );\n\t\t\t\t\tif ( options.complete ) options.complete( to );\n\t\n\t\t\t\t\tthis$1.ticker = null;\n\t\t\t\t\tfulfilPromise();\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tpromise.stop = this.ticker.stop;\n\t\t\treturn promise;\n\t\t};\n\t\n\t\tModel.prototype.applyValue = function applyValue ( value ) {\n\t\t\tif ( isEqual( value, this.value ) ) return;\n\t\n\t\t\t// TODO deprecate this nonsense\n\t\t\tthis.registerChange( this.getKeypath(), value );\n\t\n\t\t\tif ( this.parent.wrapper && this.parent.wrapper.set ) {\n\t\t\t\tthis.parent.wrapper.set( this.key, value );\n\t\t\t\tthis.parent.value = this.parent.wrapper.get();\n\t\n\t\t\t\tthis.value = this.parent.value[ this.key ];\n\t\t\t\tthis.adapt();\n\t\t\t} else if ( this.wrapper ) {\n\t\t\t\tthis.value = value;\n\t\t\t\tthis.adapt();\n\t\t\t} else {\n\t\t\t\tvar parentValue = this.parent.value || this.parent.createBranch( this.key );\n\t\t\t\tparentValue[ this.key ] = value;\n\t\n\t\t\t\tthis.value = value;\n\t\t\t\tthis.adapt();\n\t\t\t}\n\t\n\t\t\tthis.parent.clearUnresolveds();\n\t\t\tthis.clearUnresolveds();\n\t\n\t\t\t// keep track of array length\n\t\t\tif ( isArray( value ) ) this.length = value.length;\n\t\n\t\t\t// notify dependants\n\t\t\tthis.links.forEach( handleChange$1$1 );\n\t\t\tthis.children.forEach( mark$1$1 );\n\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\n\t\t\tthis.notifyUpstream();\n\t\n\t\t\tif ( this.key === 'length' && isArray( this.parent.value ) ) this.parent.length = this.parent.value.length;\n\t\t};\n\t\n\t\tModel.prototype.createBranch = function createBranch ( key ) {\n\t\t\tvar branch = isNumeric( key ) ? [] : {};\n\t\t\tthis.set( branch );\n\t\n\t\t\treturn branch;\n\t\t};\n\t\n\t\tModel.prototype.get = function get ( shouldCapture, opts ) {\n\t\t\tif ( this._link ) return this._link.get( shouldCapture, opts );\n\t\t\tif ( shouldCapture ) capture( this );\n\t\t\t// if capturing, this value needs to be unwrapped because it's for external use\n\t\t\tif ( opts && opts.virtual ) return this.getVirtual( false );\n\t\t\treturn ( shouldCapture || ( opts && opts.unwrap ) ) && this.wrapper ? this.wrapper.value : this.value;\n\t\t};\n\t\n\t\tModel.prototype.getKeypathModel = function getKeypathModel ( ractive ) {\n\t\t\tif ( !this.keypathModel ) this.keypathModel = new KeypathModel( this );\n\t\t\treturn this.keypathModel;\n\t\t};\n\t\n\t\tModel.prototype.joinKey = function joinKey ( key, opts ) {\n\t\t\tif ( this._link ) {\n\t\t\t\tif ( opts && !opts.lastLink === false && ( key === undefined || key === '' ) ) return this;\n\t\t\t\treturn this._link.joinKey( key );\n\t\t\t}\n\t\n\t\t\tif ( key === undefined || key === '' ) return this;\n\t\n\t\n\t\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\t\tvar child = new Model( this, key );\n\t\t\t\tthis.children.push( child );\n\t\t\t\tthis.childByKey[ key ] = child;\n\t\t\t}\n\t\n\t\t\tif ( this.childByKey[ key ]._link ) return this.childByKey[ key ]._link;\n\t\t\treturn this.childByKey[ key ];\n\t\t};\n\t\n\t\tModel.prototype.mark = function mark$1 () {\n\t\t\tif ( this._link ) return this._link.mark();\n\t\n\t\t\tvar value = this.retrieve();\n\t\n\t\t\tif ( !isEqual( value, this.value ) ) {\n\t\t\t\tvar old = this.value;\n\t\t\t\tthis.value = value;\n\t\n\t\t\t\t// make sure the wrapper stays in sync\n\t\t\t\tif ( old !== value || this.rewrap ) this.adapt();\n\t\n\t\t\t\t// keep track of array lengths\n\t\t\t\tif ( isArray( value ) ) this.length = value.length;\n\t\n\t\t\t\tthis.children.forEach( mark$1$1 );\n\t\t\t\tthis.links.forEach( marked );\n\t\n\t\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t\t\tthis.clearUnresolveds();\n\t\t\t}\n\t\t};\n\t\n\t\tModel.prototype.merge = function merge ( array, comparator ) {\n\t\t\tvar oldArray = this.value, newArray = array;\n\t\t\tif ( oldArray === newArray ) oldArray = recreateArray( this );\n\t\t\tif ( comparator ) {\n\t\t\t\toldArray = oldArray.map( comparator );\n\t\t\t\tnewArray = newArray.map( comparator );\n\t\t\t}\n\t\n\t\t\tvar oldLength = oldArray.length;\n\t\n\t\t\tvar usedIndices = {};\n\t\t\tvar firstUnusedIndex = 0;\n\t\n\t\t\tvar newIndices = oldArray.map( function ( item ) {\n\t\t\t\tvar index;\n\t\t\t\tvar start = firstUnusedIndex;\n\t\n\t\t\t\tdo {\n\t\t\t\t\tindex = newArray.indexOf( item, start );\n\t\n\t\t\t\t\tif ( index === -1 ) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstart = index + 1;\n\t\t\t\t} while ( ( usedIndices[ index ] === true ) && start < oldLength );\n\t\n\t\t\t\t// keep track of the first unused index, so we don't search\n\t\t\t\t// the whole of newArray for each item in oldArray unnecessarily\n\t\t\t\tif ( index === firstUnusedIndex ) {\n\t\t\t\t\tfirstUnusedIndex += 1;\n\t\t\t\t}\n\t\t\t\t// allow next instance of next \"equal\" to be found item\n\t\t\t\tusedIndices[ index ] = true;\n\t\t\t\treturn index;\n\t\t\t});\n\t\n\t\t\tthis.parent.value[ this.key ] = array;\n\t\t\tthis.shuffle( newIndices );\n\t\t};\n\t\n\t\tModel.prototype.retrieve = function retrieve () {\n\t\t\treturn this.parent.value ? this.parent.value[ this.key ] : undefined;\n\t\t};\n\t\n\t\tModel.prototype.set = function set ( value ) {\n\t\t\tif ( this.ticker ) this.ticker.stop();\n\t\t\tthis.applyValue( value );\n\t\t};\n\t\n\t\tModel.prototype.shuffle = function shuffle ( newIndices ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tthis.shuffling = true;\n\t\t\tvar i = newIndices.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar idx = newIndices[ i ];\n\t\t\t\t// nothing is actually changing, so move in the index and roll on\n\t\t\t\tif ( i === idx ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\t// rebind the children on i to idx\n\t\t\t\tif ( i in this$1.childByKey ) this$1.childByKey[ i ].rebinding( !~idx ? undefined : this$1.joinKey( idx ), this$1.childByKey[ i ], true );\n\t\n\t\t\t\tif ( !~idx && this$1.keyModels[ i ] ) {\n\t\t\t\t\tthis$1.keyModels[i].rebinding( undefined, this$1.keyModels[i], false );\n\t\t\t\t} else if ( ~idx && this$1.keyModels[ i ] ) {\n\t\t\t\t\tif ( !this$1.keyModels[ idx ] ) this$1.childByKey[ idx ].getKeyModel( idx );\n\t\t\t\t\tthis$1.keyModels[i].rebinding( this$1.keyModels[ idx ], this$1.keyModels[i], false );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar upstream = this.length !== this.value.length;\n\t\n\t\t\tthis.links.forEach( function ( l ) { return l.shuffle( newIndices ); } );\n\t\t\tfireShuffleTasks( 'early' );\n\t\n\t\t\ti = this.deps.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( this$1.deps[i].shuffle ) this$1.deps[i].shuffle( newIndices );\n\t\t\t}\n\t\n\t\t\tthis.mark();\n\t\t\tfireShuffleTasks( 'mark' );\n\t\n\t\t\tif ( upstream ) this.notifyUpstream();\n\t\t\tthis.shuffling = false;\n\t\t};\n\t\n\t\tModel.prototype.teardown = function teardown$1 () {\n\t\t\tif ( this._link ) this._link.teardown();\n\t\t\tthis.children.forEach( teardown$1$1 );\n\t\t\tif ( this.wrapper ) this.wrapper.teardown();\n\t\t\tif ( this.keypathModel ) this.keypathModel.teardown();\n\t\t};\n\t\n\t\treturn Model;\n\t}(ModelBase));\n\t\n\tfunction recreateArray( model ) {\n\t\tvar array = [];\n\t\n\t\tfor ( var i = 0; i < model.length; i++ ) {\n\t\t\tarray[ i ] = (model.childByKey[i] || {}).value;\n\t\t}\n\t\n\t\treturn array;\n\t}\n\t\n\t/* global global */\n\tvar GlobalModel = (function (Model$$1) {\n\t\tfunction GlobalModel ( ) {\n\t\t\tModel$$1.call( this, null, '@global' );\n\t\t\tthis.value = typeof global !== 'undefined' ? global : window;\n\t\t\tthis.isRoot = true;\n\t\t\tthis.root = this;\n\t\t\tthis.adaptors = [];\n\t\t}\n\t\n\t\tGlobalModel.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\t\tGlobalModel.prototype.constructor = GlobalModel;\n\t\n\t\tGlobalModel.prototype.getKeypath = function getKeypath() {\n\t\t\treturn '@global';\n\t\t};\n\t\n\t\t// global model doesn't contribute changes events because it has no instance\n\t\tGlobalModel.prototype.registerChange = function registerChange () {};\n\t\n\t\treturn GlobalModel;\n\t}(Model));\n\t\n\tvar GlobalModel$1 = new GlobalModel();\n\t\n\tvar keypathExpr = /^@[^\\(]+\\(([^\\)]+)\\)/;\n\t\n\tfunction resolveReference ( fragment, ref ) {\n\t\tvar context = fragment.findContext();\n\t\n\t\t// special references\n\t\t// TODO does `this` become `.` at parse time?\n\t\tif ( ref === '.' || ref === 'this' ) return context;\n\t\tif ( ref.indexOf( '@keypath' ) === 0 ) {\n\t\t\tvar match = keypathExpr.exec( ref );\n\t\t\tif ( match && match[1] ) {\n\t\t\t\tvar model = resolveReference( fragment, match[1] );\n\t\t\t\tif ( model ) return model.getKeypathModel();\n\t\t\t}\n\t\t\treturn context.getKeypathModel();\n\t\t}\n\t\tif ( ref.indexOf( '@rootpath' ) === 0 ) {\n\t\t\t// check to see if this is an empty component root\n\t\t\twhile ( context.isRoot && context.ractive.component ) {\n\t\t\t\tcontext = context.ractive.component.parentFragment.findContext();\n\t\t\t}\n\t\n\t\t\tvar match$1 = keypathExpr.exec( ref );\n\t\t\tif ( match$1 && match$1[1] ) {\n\t\t\t\tvar model$1 = resolveReference( fragment, match$1[1] );\n\t\t\t\tif ( model$1 ) return model$1.getKeypathModel( fragment.ractive.root );\n\t\t\t}\n\t\t\treturn context.getKeypathModel( fragment.ractive.root );\n\t\t}\n\t\tif ( ref === '@index' || ref === '@key' ) {\n\t\t\tvar repeater = fragment.findRepeatingFragment();\n\t\t\t// make sure the found fragment is actually an iteration\n\t\t\tif ( !repeater.isIteration ) return;\n\t\t\treturn repeater.context.getKeyModel( repeater[ ref[1] === 'i' ? 'index' : 'key' ] );\n\t\t}\n\t\tif ( ref === '@this' ) {\n\t\t\treturn fragment.ractive.viewmodel.getRactiveModel();\n\t\t}\n\t\tif ( ref === '@global' ) {\n\t\t\treturn GlobalModel$1;\n\t\t}\n\t\n\t\t// ancestor references\n\t\tif ( ref[0] === '~' ) return fragment.ractive.viewmodel.joinAll( splitKeypath( ref.slice( 2 ) ) );\n\t\tif ( ref[0] === '.' ) {\n\t\t\tvar parts = ref.split( '/' );\n\t\n\t\t\twhile ( parts[0] === '.' || parts[0] === '..' ) {\n\t\t\t\tvar part = parts.shift();\n\t\n\t\t\t\tif ( part === '..' ) {\n\t\t\t\t\tcontext = context.parent;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tref = parts.join( '/' );\n\t\n\t\t\t// special case - `{{.foo}}` means the same as `{{./foo}}`\n\t\t\tif ( ref[0] === '.' ) ref = ref.slice( 1 );\n\t\t\treturn context.joinAll( splitKeypath( ref ) );\n\t\t}\n\t\n\t\treturn resolveAmbiguousReference( fragment, ref );\n\t}\n\t\n\tfunction Ractive$get ( keypath, opts ) {\n\t\tif ( typeof keypath !== 'string' ) return this.viewmodel.get( true, keypath );\n\t\n\t\tvar keys = splitKeypath( keypath );\n\t\tvar key = keys[0];\n\t\n\t\tvar model;\n\t\n\t\tif ( !this.viewmodel.has( key ) ) {\n\t\t\t// if this is an inline component, we may need to create\n\t\t\t// an implicit mapping\n\t\t\tif ( this.component && !this.isolated ) {\n\t\t\t\tmodel = resolveReference( this.component.parentFragment, key );\n\t\n\t\t\t\tif ( model ) {\n\t\t\t\t\tthis.viewmodel.map( key, model );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tmodel = this.viewmodel.joinAll( keys );\n\t\treturn model.get( true, opts );\n\t}\n\t\n\tfunction gatherRefs( fragment ) {\n\t\tvar key = {}, index = {};\n\t\n\t\t// walk up the template gather refs as we go\n\t\twhile ( fragment ) {\n\t\t\tif ( fragment.parent && ( fragment.parent.indexRef || fragment.parent.keyRef ) ) {\n\t\t\t\tvar ref = fragment.parent.indexRef;\n\t\t\t\tif ( ref && !( ref in index ) ) index[ref] = fragment.index;\n\t\t\t\tref = fragment.parent.keyRef;\n\t\t\t\tif ( ref && !( ref in key ) ) key[ref] = fragment.key;\n\t\t\t}\n\t\n\t\t\tif ( fragment.componentParent && !fragment.ractive.isolated ) {\n\t\t\t\tfragment = fragment.componentParent;\n\t\t\t} else {\n\t\t\t\tfragment = fragment.parent;\n\t\t\t}\n\t\t}\n\t\n\t\treturn { key: key, index: index };\n\t}\n\t\n\t// This function takes an array, the name of a mutator method, and the\n\t// arguments to call that mutator method with, and returns an array that\n\t// maps the old indices to their new indices.\n\t\n\t// So if you had something like this...\n\t//\n\t//     array = [ 'a', 'b', 'c', 'd' ];\n\t//     array.push( 'e' );\n\t//\n\t// ...you'd get `[ 0, 1, 2, 3 ]` - in other words, none of the old indices\n\t// have changed. If you then did this...\n\t//\n\t//     array.unshift( 'z' );\n\t//\n\t// ...the indices would be `[ 1, 2, 3, 4, 5 ]` - every item has been moved\n\t// one higher to make room for the 'z'. If you removed an item, the new index\n\t// would be -1...\n\t//\n\t//     array.splice( 2, 2 );\n\t//\n\t// ...this would result in [ 0, 1, -1, -1, 2, 3 ].\n\t//\n\t// This information is used to enable fast, non-destructive shuffling of list\n\t// sections when you do e.g. `ractive.splice( 'items', 2, 2 );\n\t\n\tfunction getNewIndices ( length, methodName, args ) {\n\t\tvar spliceArguments, newIndices = [], removeStart, removeEnd, balance, i;\n\t\n\t\tspliceArguments = getSpliceEquivalent( length, methodName, args );\n\t\n\t\tif ( !spliceArguments ) {\n\t\t\treturn null; // TODO support reverse and sort?\n\t\t}\n\t\n\t\tbalance = ( spliceArguments.length - 2 ) - spliceArguments[1];\n\t\n\t\tremoveStart = Math.min( length, spliceArguments[0] );\n\t\tremoveEnd = removeStart + spliceArguments[1];\n\t\tnewIndices.startIndex = removeStart;\n\t\n\t\tfor ( i = 0; i < removeStart; i += 1 ) {\n\t\t\tnewIndices.push( i );\n\t\t}\n\t\n\t\tfor ( ; i < removeEnd; i += 1 ) {\n\t\t\tnewIndices.push( -1 );\n\t\t}\n\t\n\t\tfor ( ; i < length; i += 1 ) {\n\t\t\tnewIndices.push( i + balance );\n\t\t}\n\t\n\t\t// there is a net shift for the rest of the array starting with index + balance\n\t\tif ( balance !== 0 ) {\n\t\t\tnewIndices.touchedFrom = spliceArguments[0];\n\t\t} else {\n\t\t\tnewIndices.touchedFrom = length;\n\t\t}\n\t\n\t\treturn newIndices;\n\t}\n\t\n\t\n\t// The pop, push, shift an unshift methods can all be represented\n\t// as an equivalent splice\n\tfunction getSpliceEquivalent ( length, methodName, args ) {\n\t\tswitch ( methodName ) {\n\t\t\tcase 'splice':\n\t\t\t\tif ( args[0] !== undefined && args[0] < 0 ) {\n\t\t\t\t\targs[0] = length + Math.max( args[0], -length );\n\t\t\t\t}\n\t\n\t\t\t\tif ( args[0] === undefined ) args[0] = 0;\n\t\n\t\t\t\twhile ( args.length < 2 ) {\n\t\t\t\t\targs.push( length - args[0] );\n\t\t\t\t}\n\t\n\t\t\t\tif ( typeof args[1] !== 'number' ) {\n\t\t\t\t\targs[1] = length - args[0];\n\t\t\t\t}\n\t\n\t\t\t\t// ensure we only remove elements that exist\n\t\t\t\targs[1] = Math.min( args[1], length - args[0] );\n\t\n\t\t\t\treturn args;\n\t\n\t\t\tcase 'sort':\n\t\t\tcase 'reverse':\n\t\t\t\treturn null;\n\t\n\t\t\tcase 'pop':\n\t\t\t\tif ( length ) {\n\t\t\t\t\treturn [ length - 1, 1 ];\n\t\t\t\t}\n\t\t\t\treturn [ 0, 0 ];\n\t\n\t\t\tcase 'push':\n\t\t\t\treturn [ length, 0 ].concat( args );\n\t\n\t\t\tcase 'shift':\n\t\t\t\treturn [ 0, length ? 1 : 0 ];\n\t\n\t\t\tcase 'unshift':\n\t\t\t\treturn [ 0, 0 ].concat( args );\n\t\t}\n\t}\n\t\n\tvar arrayProto = Array.prototype;\n\t\n\tvar makeArrayMethod = function ( methodName ) {\n\t\tfunction path ( keypath ) {\n\t\t\tvar args = [], len = arguments.length - 1;\n\t\t\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\t\n\t\t\treturn model( this.viewmodel.joinAll( splitKeypath( keypath ) ), args );\n\t\t}\n\t\n\t\tfunction model ( mdl, args ) {\n\t\t\tvar array = mdl.get();\n\t\n\t\t\tif ( !isArray( array ) ) {\n\t\t\t\tif ( array === undefined ) {\n\t\t\t\t\tarray = [];\n\t\t\t\t\tvar result$1 = arrayProto[ methodName ].apply( array, args );\n\t\t\t\t\tvar promise$1 = runloop.start( this, true ).then( function () { return result$1; } );\n\t\t\t\t\tmdl.set( array );\n\t\t\t\t\trunloop.end();\n\t\t\t\t\treturn promise$1;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error( (\"shuffle array method \" + methodName + \" called on non-array at \" + (mdl.getKeypath())) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar newIndices = getNewIndices( array.length, methodName, args );\n\t\t\tvar result = arrayProto[ methodName ].apply( array, args );\n\t\n\t\t\tvar promise = runloop.start( this, true ).then( function () { return result; } );\n\t\t\tpromise.result = result;\n\t\n\t\t\tif ( newIndices ) {\n\t\t\t\tmdl.shuffle( newIndices );\n\t\t\t} else {\n\t\t\t\tmdl.set( result );\n\t\t\t}\n\t\n\t\t\trunloop.end();\n\t\n\t\t\treturn promise;\n\t\t}\n\t\n\t\treturn { path: path, model: model };\n\t};\n\t\n\tvar comparators = {};\n\t\n\tfunction getComparator ( option ) {\n\t\tif ( !option ) return null; // use existing arrays\n\t\tif ( option === true ) return JSON.stringify;\n\t\tif ( typeof option === 'function' ) return option;\n\t\n\t\tif ( typeof option === 'string' ) {\n\t\t\treturn comparators[ option ] || ( comparators[ option ] = function ( thing ) { return thing[ option ]; } );\n\t\t}\n\t\n\t\tthrow new Error( 'If supplied, options.compare must be a string, function, or `true`' ); // TODO link to docs\n\t}\n\t\n\tfunction merge$2 ( ractive, model, array, options ) {\n\t\tvar promise = runloop.start( ractive, true );\n\t\tvar value = model.get();\n\t\n\t\tif ( !isArray( value ) || !isArray( array ) ) {\n\t\t\tthrow new Error( 'You cannot merge an array with a non-array' );\n\t\t}\n\t\n\t\tvar comparator = getComparator( options && options.compare );\n\t\tmodel.merge( array, comparator );\n\t\n\t\trunloop.end();\n\t\treturn promise;\n\t}\n\t\n\tfunction thisRactive$merge ( keypath, array, options ) {\n\t\treturn merge$2( this, this.viewmodel.joinAll( splitKeypath( keypath ) ), array, options );\n\t}\n\t\n\tvar updateHook = new Hook( 'update' );\n\t\n\tfunction update$3 ( ractive, model ) {\n\t\tif ( model.parent && model.parent.wrapper ) return update$3( ractive, model.parent );\n\t\n\t\tvar promise = runloop.start( ractive, true );\n\t\n\t\tmodel.mark();\n\t\tmodel.registerChange( model.getKeypath(), model.get() );\n\t\n\t\tif ( !model.isRoot ) {\n\t\t\t// there may be unresolved refs that are now resolvable up the context tree\n\t\t\tvar parent = model.parent, key = model.key;\n\t\t\twhile ( parent && !parent.isRoot ) {\n\t\t\t\tif ( parent.clearUnresolveds ) parent.clearUnresolveds( key );\n\t\t\t\tkey = parent.key;\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\t\n\t\t// notify upstream of changes\n\t\tmodel.notifyUpstream();\n\t\n\t\trunloop.end();\n\t\n\t\tupdateHook.fire( ractive, model );\n\t\n\t\treturn promise;\n\t}\n\t\n\tfunction Ractive$update ( keypath ) {\n\t\tif ( keypath ) keypath = splitKeypath( keypath );\n\t\n\t\treturn update$3( this, keypath ? this.viewmodel.joinAll( keypath ) : this.viewmodel );\n\t}\n\t\n\tvar modelPush = makeArrayMethod( 'push' ).model;\n\tvar modelPop = makeArrayMethod( 'pop' ).model;\n\tvar modelShift = makeArrayMethod( 'shift' ).model;\n\tvar modelUnshift = makeArrayMethod( 'unshift' ).model;\n\tvar modelSort = makeArrayMethod( 'sort' ).model;\n\tvar modelSplice = makeArrayMethod( 'splice' ).model;\n\tvar modelReverse = makeArrayMethod( 'reverse' ).model;\n\t\n\t// TODO: at some point perhaps this could support relative * keypaths?\n\tfunction build$1 ( el, keypath, value ) {\n\t\tvar sets = [];\n\t\n\t\t// set multiple keypaths in one go\n\t\tif ( isObject( keypath ) ) {\n\t\t\tfor ( var k in keypath ) {\n\t\t\t\tif ( keypath.hasOwnProperty( k ) ) {\n\t\t\t\t\tsets.push( [ findModel( el, k ).model, keypath[k] ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t}\n\t\t// set a single keypath\n\t\telse {\n\t\t\tsets.push( [ findModel( el, keypath ).model, value ] );\n\t\t}\n\t\n\t\treturn sets;\n\t}\n\t\n\t// get relative keypaths and values\n\tfunction get$1 ( keypath ) {\n\t\tif ( !keypath ) return this._element.parentFragment.findContext().get( true );\n\t\n\t\tvar model = resolveReference( this._element.parentFragment, keypath );\n\t\n\t\treturn model ? model.get( true ) : undefined;\n\t}\n\t\n\tfunction resolve$2 ( path, ractive ) {\n\t\tvar ref = findModel( this, path ), model = ref.model, instance = ref.instance;\n\t\treturn model ? model.getKeypath( ractive || instance ) : path;\n\t}\n\t\n\tfunction findModel ( el, path ) {\n\t\tvar frag = el._element.parentFragment;\n\t\n\t\tif ( typeof path !== 'string' ) {\n\t\t\treturn { model: frag.findContext(), instance: path };\n\t\t}\n\t\n\t\treturn { model: resolveReference( frag, path ), instance: frag.ractive };\n\t}\n\t\n\t// the usual mutation suspects\n\tfunction add$2 ( keypath, value ) {\n\t\tif ( value === undefined ) value = 1;\n\t\tif ( !isNumeric( value ) ) throw new Error( 'Bad arguments' );\n\t\treturn set$1( this.ractive, build$1( this, keypath, value ).map( function ( pair ) {\n\t\t\tvar model = pair[0], val = pair[1], value = model.get();\n\t\t\tif ( !isNumeric( val ) || !isNumeric( value ) ) throw new Error( 'Cannot add non-numeric value' );\n\t\t\treturn [ model, value + val ];\n\t\t}) );\n\t}\n\t\n\tfunction animate$2 ( keypath, value, options ) {\n\t\tvar model = findModel( this, keypath ).model;\n\t\treturn animate$1( this.ractive, model, value, options );\n\t}\n\t\n\tfunction link$1 ( source, dest ) {\n\t\tvar there = findModel( this, source ).model, here = findModel( this, dest ).model;\n\t\tvar promise = runloop.start( this.ractive, true );\n\t\there.link( there, source );\n\t\trunloop.end();\n\t\treturn promise;\n\t}\n\t\n\tfunction merge$1 ( keypath, array, options ) {\n\t\treturn merge$2( this.ractive, findModel( this, keypath ).model, array, options );\n\t}\n\t\n\tfunction pop ( keypath ) {\n\t\treturn modelPop( findModel( this, keypath ).model, [] );\n\t}\n\t\n\tfunction push ( keypath ) {\n\t\tvar values = [], len = arguments.length - 1;\n\t\twhile ( len-- > 0 ) values[ len ] = arguments[ len + 1 ];\n\t\n\t\treturn modelPush( findModel( this, keypath ).model, values );\n\t}\n\t\n\tfunction reverse ( keypath ) {\n\t\treturn modelReverse( findModel( this, keypath ).model, [] );\n\t}\n\t\n\tfunction set$2 ( keypath, value ) {\n\t\treturn set$1( this.ractive, build$1( this, keypath, value ) );\n\t}\n\t\n\tfunction shift ( keypath ) {\n\t\treturn modelShift( findModel( this, keypath ).model, [] );\n\t}\n\t\n\tfunction splice ( keypath, index, drop ) {\n\t\tvar add = [], len = arguments.length - 3;\n\t\twhile ( len-- > 0 ) add[ len ] = arguments[ len + 3 ];\n\t\n\t\tadd.unshift( index, drop );\n\t\treturn modelSplice( findModel( this, keypath ).model, add );\n\t}\n\t\n\tfunction sort ( keypath ) {\n\t\treturn modelSort( findModel( this, keypath ).model, [] );\n\t}\n\t\n\tfunction subtract ( keypath, value ) {\n\t\tif ( value === undefined ) value = 1;\n\t\tif ( !isNumeric( value ) ) throw new Error( 'Bad arguments' );\n\t\treturn set$1( this.ractive, build$1( this, keypath, value ).map( function ( pair ) {\n\t\t\tvar model = pair[0], val = pair[1], value = model.get();\n\t\t\tif ( !isNumeric( val ) || !isNumeric( value ) ) throw new Error( 'Cannot add non-numeric value' );\n\t\t\treturn [ model, value - val ];\n\t\t}) );\n\t}\n\t\n\tfunction toggle ( keypath ) {\n\t\tvar ref = findModel( this, keypath ), model = ref.model;\n\t\treturn set$1( this.ractive, [ [ model, !model.get() ] ] );\n\t}\n\t\n\tfunction unlink$1 ( dest ) {\n\t\tvar here = findModel( this, dest ).model;\n\t\tvar promise = runloop.start( this.ractive, true );\n\t\tif ( here.owner && here.owner._link ) here.owner.unlink();\n\t\trunloop.end();\n\t\treturn promise;\n\t}\n\t\n\tfunction unshift ( keypath ) {\n\t\tvar add = [], len = arguments.length - 1;\n\t\twhile ( len-- > 0 ) add[ len ] = arguments[ len + 1 ];\n\t\n\t\treturn modelUnshift( findModel( this, keypath ).model, add );\n\t}\n\t\n\tfunction update$2 ( keypath ) {\n\t\treturn update$3( this.ractive, findModel( this, keypath ).model );\n\t}\n\t\n\tfunction updateModel$1 ( keypath, cascade ) {\n\t\tvar ref = findModel( this, keypath ), model = ref.model;\n\t\tvar promise = runloop.start( this.ractive, true );\n\t\tmodel.updateFromBindings( cascade );\n\t\trunloop.end();\n\t\treturn promise;\n\t}\n\t\n\t// two-way binding related helpers\n\tfunction isBound () {\n\t\tvar ref = getBindingModel( this ), model = ref.model;\n\t\treturn !!model;\n\t}\n\t\n\tfunction getBindingPath ( ractive ) {\n\t\tvar ref = getBindingModel( this ), model = ref.model, instance = ref.instance;\n\t\tif ( model ) return model.getKeypath( ractive || instance );\n\t}\n\t\n\tfunction getBinding () {\n\t\tvar ref = getBindingModel( this ), model = ref.model;\n\t\tif ( model ) return model.get( true );\n\t}\n\t\n\tfunction getBindingModel ( ctx ) {\n\t\tvar el = ctx._element;\n\t\treturn { model: el.binding && el.binding.model, instance: el.parentFragment.ractive };\n\t}\n\t\n\tfunction setBinding ( value ) {\n\t\tvar ref = getBindingModel( this ), model = ref.model;\n\t\treturn set$1( this.ractive, [ [ model, value ] ] );\n\t}\n\t\n\t// deprecated getters\n\tfunction keypath () {\n\t\twarnOnceIfDebug( (\"Object property keypath is deprecated, please use resolve() instead.\") );\n\t\treturn this.resolve();\n\t}\n\t\n\tfunction rootpath () {\n\t\twarnOnceIfDebug( (\"Object property rootpath is deprecated, please use resolve( ractive.root ) instead.\") );\n\t\treturn this.resolve( this.ractive.root );\n\t}\n\t\n\tfunction context () {\n\t\twarnOnceIfDebug( (\"Object property context is deprecated, please use get() instead.\") );\n\t\treturn this.get();\n\t}\n\t\n\tfunction index () {\n\t\twarnOnceIfDebug( (\"Object property index is deprecated, you can use get( \\\"indexName\\\" ) instead.\") );\n\t\treturn gatherRefs( this._element.parentFragment ).index;\n\t}\n\t\n\tfunction key () {\n\t\twarnOnceIfDebug( (\"Object property key is deprecated, you can use get( \\\"keyName\\\" ) instead.\") );\n\t\treturn gatherRefs( this._element.parentFragment ).key;\n\t}\n\t\n\tfunction addHelpers ( obj, element ) {\n\t\tdefineProperties( obj, {\n\t\t\t_element: { value: element },\n\t\t\tractive: { value: element.parentFragment.ractive },\n\t\t\tresolve: { value: resolve$2 },\n\t\t\tget: { value: get$1 },\n\t\n\t\t\tadd: { value: add$2 },\n\t\t\tanimate: { value: animate$2 },\n\t\t\tlink: { value: link$1 },\n\t\t\tmerge: { value: merge$1 },\n\t\t\tpop: { value: pop },\n\t\t\tpush: { value: push },\n\t\t\treverse: { value: reverse },\n\t\t\tset: { value: set$2 },\n\t\t\tshift: { value: shift },\n\t\t\tsort: { value: sort },\n\t\t\tsplice: { value: splice },\n\t\t\tsubtract: { value: subtract },\n\t\t\ttoggle: { value: toggle },\n\t\t\tunlink: { value: unlink$1 },\n\t\t\tunshift: { value: unshift },\n\t\t\tupdate: { value: update$2 },\n\t\t\tupdateModel: { value: updateModel$1 },\n\t\n\t\t\tisBound: { value: isBound },\n\t\t\tgetBindingPath: { value: getBindingPath },\n\t\t\tgetBinding: { value: getBinding },\n\t\t\tsetBinding: { value: setBinding },\n\t\n\t\t\tkeypath: { get: keypath },\n\t\t\trootpath: { get: rootpath },\n\t\t\tcontext: { get: context },\n\t\t\tindex: { get: index },\n\t\t\tkey: { get: key }\n\t\t});\n\t\n\t\treturn obj;\n\t}\n\t\n\tvar query = doc && doc.querySelector;\n\t\n\tvar staticInfo = function( node ) {\n\t\tif ( typeof node === 'string' && query ) {\n\t\t\tnode = query.call( document, node );\n\t\t}\n\t\n\t\tif ( !node || !node._ractive ) return {};\n\t\n\t\tvar storage = node._ractive;\n\t\n\t\treturn addHelpers( {}, storage.proxy );\n\t};\n\t\n\tfunction getNodeInfo( node ) {\n\t\tif ( typeof node === 'string' ) {\n\t\t\tnode = this.find( node );\n\t\t}\n\t\n\t\treturn staticInfo( node );\n\t}\n\t\n\tvar insertHook = new Hook( 'insert' );\n\t\n\tfunction Ractive$insert ( target, anchor ) {\n\t\tif ( !this.fragment.rendered ) {\n\t\t\t// TODO create, and link to, documentation explaining this\n\t\t\tthrow new Error( 'The API has changed - you must call `ractive.render(target[, anchor])` to render your Ractive instance. Once rendered you can use `ractive.insert()`.' );\n\t\t}\n\t\n\t\ttarget = getElement( target );\n\t\tanchor = getElement( anchor ) || null;\n\t\n\t\tif ( !target ) {\n\t\t\tthrow new Error( 'You must specify a valid target to insert into' );\n\t\t}\n\t\n\t\ttarget.insertBefore( this.detach(), anchor );\n\t\tthis.el = target;\n\t\n\t\t( target.__ractive_instances__ || ( target.__ractive_instances__ = [] ) ).push( this );\n\t\tthis.isDetached = false;\n\t\n\t\tfireInsertHook( this );\n\t}\n\t\n\tfunction fireInsertHook( ractive ) {\n\t\tinsertHook.fire( ractive );\n\t\n\t\tractive.findAllComponents('*').forEach( function ( child ) {\n\t\t\tfireInsertHook( child.instance );\n\t\t});\n\t}\n\t\n\tfunction link$2( there, here ) {\n\t\tif ( here === there || (there + '.').indexOf( here + '.' ) === 0 || (here + '.').indexOf( there + '.' ) === 0 ) {\n\t\t\tthrow new Error( 'A keypath cannot be linked to itself.' );\n\t\t}\n\t\n\t\tvar promise = runloop.start();\n\t\tvar model;\n\t\n\t\t// may need to allow a mapping to resolve implicitly\n\t\tvar sourcePath = splitKeypath( there );\n\t\tif ( !this.viewmodel.has( sourcePath[0] ) && this.component ) {\n\t\t\tmodel = resolveReference( this.component.parentFragment, sourcePath[0] );\n\t\t\tmodel = model.joinAll( sourcePath.slice( 1 ) );\n\t\t}\n\t\n\t\tthis.viewmodel.joinAll( splitKeypath( here ) ).link( model || this.viewmodel.joinAll( sourcePath ), there );\n\t\n\t\trunloop.end();\n\t\n\t\treturn promise;\n\t}\n\t\n\tvar ReferenceResolver = function ReferenceResolver ( fragment, reference, callback ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tthis.fragment = fragment;\n\t\tthis.reference = normalise( reference );\n\t\tthis.callback = callback;\n\t\n\t\tthis.keys = splitKeypath( reference );\n\t\tthis.resolved = false;\n\t\n\t\tthis.contexts = [];\n\t\n\t\t// TODO the consumer should take care of addUnresolved\n\t\t// we attach to all the contexts between here and the root\n\t\t// - whenever their values change, they can quickly\n\t\t// check to see if we can resolve\n\t\twhile ( fragment ) {\n\t\t\tif ( fragment.context ) {\n\t\t\t\tfragment.context.addUnresolved( this$1.keys[0], this$1 );\n\t\t\t\tthis$1.contexts.push( fragment.context );\n\t\t\t}\n\t\n\t\t\tfragment = fragment.componentParent || fragment.parent;\n\t\t}\n\t};\n\t\n\tReferenceResolver.prototype.attemptResolution = function attemptResolution () {\n\t\tif ( this.resolved ) return;\n\t\n\t\tvar model = resolveAmbiguousReference( this.fragment, this.reference );\n\t\n\t\tif ( model ) {\n\t\t\tthis.resolved = true;\n\t\t\tthis.callback( model );\n\t\t}\n\t};\n\t\n\tReferenceResolver.prototype.forceResolution = function forceResolution () {\n\t\tif ( this.resolved ) return;\n\t\n\t\tvar model = this.fragment.findContext().joinAll( this.keys );\n\t\tthis.callback( model );\n\t\tthis.resolved = true;\n\t};\n\t\n\tReferenceResolver.prototype.rebinding = function rebinding ( next, previous ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( previous ) previous.removeUnresolved( this.keys[0], this );\n\t\tif ( next ) runloop.scheduleTask( function () { return next.addUnresolved( this$1.keys[0], this$1 ); } );\n\t};\n\t\n\tReferenceResolver.prototype.unbind = function unbind () {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( this.fragment ) removeFromArray( this.fragment.unresolved, this );\n\t\n\t\tif ( this.resolved ) return;\n\t\n\t\tthis.contexts.forEach( function ( c ) { return c.removeUnresolved( this$1.keys[0], this$1 ); } );\n\t};\n\t\n\tfunction observe ( keypath, callback, options ) {\n\t\tvar this$1 = this;\n\t\n\t\tvar observers = [];\n\t\tvar map;\n\t\n\t\tif ( isObject( keypath ) ) {\n\t\t\tmap = keypath;\n\t\t\toptions = callback || {};\n\t\n\t\t\tObject.keys( map ).forEach( function ( keypath ) {\n\t\t\t\tvar callback = map[ keypath ];\n\t\n\t\t\t\tkeypath.split( ' ' ).forEach( function ( keypath ) {\n\t\t\t\t\tobservers.push( createObserver( this$1, keypath, callback, options ) );\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\n\t\telse {\n\t\t\tvar keypaths;\n\t\n\t\t\tif ( typeof keypath === 'function' ) {\n\t\t\t\toptions = callback;\n\t\t\t\tcallback = keypath;\n\t\t\t\tkeypaths = [ '' ];\n\t\t\t} else {\n\t\t\t\tkeypaths = keypath.split( ' ' );\n\t\t\t}\n\t\n\t\t\tkeypaths.forEach( function ( keypath ) {\n\t\t\t\tobservers.push( createObserver( this$1, keypath, callback, options || {} ) );\n\t\t\t});\n\t\t}\n\t\n\t\t// add observers to the Ractive instance, so they can be\n\t\t// cancelled on ractive.teardown()\n\t\tthis._observers.push.apply( this._observers, observers );\n\t\n\t\treturn {\n\t\t\tcancel: function () {\n\t\t\t\tobservers.forEach( function ( observer ) {\n\t\t\t\t\tremoveFromArray ( this$1._observers, observer );\n\t\t\t\t\tobserver.cancel();\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction createObserver ( ractive, keypath, callback, options ) {\n\t\tvar viewmodel = ractive.viewmodel;\n\t\n\t\tvar keys = splitKeypath( keypath );\n\t\tvar wildcardIndex = keys.indexOf( '*' );\n\t\toptions.keypath = keypath;\n\t\n\t\t// normal keypath - no wildcards\n\t\tif ( !~wildcardIndex ) {\n\t\t\tvar key = keys[0];\n\t\t\tvar model;\n\t\n\t\t\t// if not the root model itself, check if viewmodel has key.\n\t\t\tif ( key !== '' && !viewmodel.has( key ) ) {\n\t\t\t\t// if this is an inline component, we may need to create an implicit mapping\n\t\t\t\tif ( ractive.component && !ractive.isolated ) {\n\t\t\t\t\tmodel = resolveReference( ractive.component.parentFragment, key );\n\t\t\t\t\tif ( model ) {\n\t\t\t\t\t\tviewmodel.map( key, model );\n\t\t\t\t\t\tmodel = viewmodel.joinAll( keys );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmodel = viewmodel.joinAll( keys );\n\t\t\t}\n\t\n\t\t\treturn new Observer( ractive, model, callback, options );\n\t\t}\n\t\n\t\t// pattern observers - more complex case\n\t\tvar baseModel = wildcardIndex === 0 ?\n\t\t\tviewmodel :\n\t\t\tviewmodel.joinAll( keys.slice( 0, wildcardIndex ) );\n\t\n\t\treturn new PatternObserver( ractive, baseModel, keys.splice( wildcardIndex ), callback, options );\n\t}\n\t\n\tvar Observer = function Observer ( ractive, model, callback, options ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tthis.context = options.context || ractive;\n\t\tthis.callback = callback;\n\t\tthis.ractive = ractive;\n\t\n\t\tif ( model ) this.resolved( model );\n\t\telse {\n\t\t\tthis.keypath = options.keypath;\n\t\t\tthis.resolver = new ReferenceResolver( ractive.fragment, options.keypath, function ( model ) {\n\t\t\t\tthis$1.resolved( model );\n\t\t\t});\n\t\t}\n\t\n\t\tif ( options.init !== false ) {\n\t\t\tthis.dirty = true;\n\t\t\tthis.dispatch();\n\t\t} else {\n\t\t\tthis.oldValue = this.newValue;\n\t\t}\n\t\n\t\tthis.defer = options.defer;\n\t\tthis.once = options.once;\n\t\tthis.strict = options.strict;\n\t\n\t\tthis.dirty = false;\n\t};\n\t\n\tObserver.prototype.cancel = function cancel () {\n\t\tthis.cancelled = true;\n\t\tif ( this.model ) {\n\t\t\tthis.model.unregister( this );\n\t\t} else {\n\t\t\tthis.resolver.unbind();\n\t\t}\n\t};\n\t\n\tObserver.prototype.dispatch = function dispatch () {\n\t\tif ( !this.cancelled ) {\n\t\t\tthis.callback.call( this.context, this.newValue, this.oldValue, this.keypath );\n\t\t\tthis.oldValue = this.model ? this.model.get() : this.newValue;\n\t\t\tthis.dirty = false;\n\t\t}\n\t};\n\t\n\tObserver.prototype.handleChange = function handleChange () {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( !this.dirty ) {\n\t\t\tvar newValue = this.model.get();\n\t\t\tif ( isEqual( newValue, this.oldValue ) ) return;\n\t\n\t\t\tthis.newValue = newValue;\n\t\n\t\t\tif ( this.strict && this.newValue === this.oldValue ) return;\n\t\n\t\t\trunloop.addObserver( this, this.defer );\n\t\t\tthis.dirty = true;\n\t\n\t\t\tif ( this.once ) runloop.scheduleTask( function () { return this$1.cancel(); } );\n\t\t}\n\t};\n\t\n\tObserver.prototype.rebinding = function rebinding ( next, previous ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tnext = rebindMatch( this.keypath, next, previous );\n\t\t// TODO: set up a resolver if next is undefined?\n\t\tif ( next === this.model ) return false;\n\t\n\t\tif ( this.model ) this.model.unregister( this );\n\t\tif ( next ) next.addShuffleTask( function () { return this$1.resolved( next ); } );\n\t};\n\t\n\tObserver.prototype.resolved = function resolved ( model ) {\n\t\tthis.model = model;\n\t\tthis.keypath = model.getKeypath( this.ractive );\n\t\n\t\tthis.oldValue = undefined;\n\t\tthis.newValue = model.get();\n\t\n\t\tmodel.register( this );\n\t};\n\t\n\tvar PatternObserver = function PatternObserver ( ractive, baseModel, keys, callback, options ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tthis.context = options.context || ractive;\n\t\tthis.ractive = ractive;\n\t\tthis.baseModel = baseModel;\n\t\tthis.keys = keys;\n\t\tthis.callback = callback;\n\t\n\t\tvar pattern = keys.join( '\\\\.' ).replace( /\\*/g, '(.+)' );\n\t\tvar baseKeypath = baseModel.getKeypath( ractive );\n\t\tthis.pattern = new RegExp( (\"^\" + (baseKeypath ? baseKeypath + '\\\\.' : '') + \"\" + pattern + \"$\") );\n\t\n\t\tthis.oldValues = {};\n\t\tthis.newValues = {};\n\t\n\t\tthis.defer = options.defer;\n\t\tthis.once = options.once;\n\t\tthis.strict = options.strict;\n\t\n\t\tthis.dirty = false;\n\t\tthis.changed = [];\n\t\tthis.partial = false;\n\t\n\t\tvar models = baseModel.findMatches( this.keys );\n\t\n\t\tmodels.forEach( function ( model ) {\n\t\t\tthis$1.newValues[ model.getKeypath( this$1.ractive ) ] = model.get();\n\t\t});\n\t\n\t\tif ( options.init !== false ) {\n\t\t\tthis.dispatch();\n\t\t} else {\n\t\t\tthis.oldValues = this.newValues;\n\t\t}\n\t\n\t\tbaseModel.registerPatternObserver( this );\n\t};\n\t\n\tPatternObserver.prototype.cancel = function cancel () {\n\t\tthis.baseModel.unregisterPatternObserver( this );\n\t};\n\t\n\tPatternObserver.prototype.dispatch = function dispatch () {\n\t\tvar this$1 = this;\n\t\n\t\t\tObject.keys( this.newValues ).forEach( function ( keypath ) {\n\t\t\tif ( this$1.newKeys && !this$1.newKeys[ keypath ] ) return;\n\t\n\t\t\tvar newValue = this$1.newValues[ keypath ];\n\t\t\tvar oldValue = this$1.oldValues[ keypath ];\n\t\n\t\t\tif ( this$1.strict && newValue === oldValue ) return;\n\t\t\tif ( isEqual( newValue, oldValue ) ) return;\n\t\n\t\t\tvar args = [ newValue, oldValue, keypath ];\n\t\t\tif ( keypath ) {\n\t\t\t\tvar wildcards = this$1.pattern.exec( keypath );\n\t\t\t\tif ( wildcards ) {\n\t\t\t\t\targs = args.concat( wildcards.slice( 1 ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthis$1.callback.apply( this$1.context, args );\n\t\t});\n\t\n\t\tif ( this.partial ) {\n\t\t\tfor ( var k in this.newValues ) {\n\t\t\t\tthis.oldValues[k] = this.newValues[k];\n\t\t\t}\n\t\t} else {\n\t\t\tthis.oldValues = this.newValues;\n\t\t}\n\t\n\t\tthis.newKeys = null;\n\t\tthis.dirty = false;\n\t};\n\t\n\tPatternObserver.prototype.notify = function notify ( key ) {\n\t\tthis.changed.push( key );\n\t};\n\t\n\tPatternObserver.prototype.shuffle = function shuffle ( newIndices ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( !isArray( this.baseModel.value ) ) return;\n\t\n\t\tvar base = this.baseModel.getKeypath( this.ractive );\n\t\tvar max = this.baseModel.value.length;\n\t\tvar suffix = this.keys.length > 1 ? '.' + this.keys.slice( 1 ).join( '.' ) : '';\n\t\n\t\tthis.newKeys = {};\n\t\tfor ( var i = 0; i < newIndices.length; i++ ) {\n\t\t\tif ( newIndices[ i ] === -1 || newIndices[ i ] === i ) continue;\n\t\t\tthis$1.newKeys[ (\"\" + base + \".\" + i + \"\" + suffix) ] = true;\n\t\t}\n\t\n\t\tfor ( var i$1 = newIndices.touchedFrom; i$1 < max; i$1++ ) {\n\t\t\tthis$1.newKeys[ (\"\" + base + \".\" + i$1 + \"\" + suffix) ] = true;\n\t\t}\n\t};\n\t\n\tPatternObserver.prototype.handleChange = function handleChange () {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( !this.dirty || this.changed.length ) {\n\t\t\tif ( !this.dirty ) this.newValues = {};\n\t\n\t\t\t// handle case where previously extant keypath no longer exists -\n\t\t\t// observer should still fire, with undefined as new value\n\t\t\t// TODO huh. according to the test suite that's not the case...\n\t\t\t// Object.keys( this.oldValues ).forEach( keypath => {\n\t\t\t// this.newValues[ keypath ] = undefined;\n\t\t\t// });\n\t\n\t\t\tif ( !this.changed.length ) {\n\t\t\t\tthis.baseModel.findMatches( this.keys ).forEach( function ( model ) {\n\t\t\t\t\tvar keypath = model.getKeypath( this$1.ractive );\n\t\t\t\t\tthis$1.newValues[ keypath ] = model.get();\n\t\t\t\t});\n\t\t\t\tthis.partial = false;\n\t\t\t} else {\n\t\t\t\tvar ok = this.baseModel.isRoot ?\n\t\t\t\t\tthis.changed :\n\t\t\t\t\tthis.changed.map( function ( key ) { return this$1.baseModel.getKeypath( this$1.ractive ) + '.' + escapeKey( key ); } );\n\t\n\t\t\t\tthis.baseModel.findMatches( this.keys ).forEach( function ( model ) {\n\t\t\t\t\tvar keypath = model.getKeypath( this$1.ractive );\n\t\t\t\t\t// is this model on a changed keypath?\n\t\t\t\t\tif ( ok.filter( function ( k ) { return keypath.indexOf( k ) === 0 && ( keypath.length === k.length || keypath[k.length] === '.' ); } ).length ) {\n\t\t\t\t\t\tthis$1.newValues[ keypath ] = model.get();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.partial = true;\n\t\t\t}\n\t\n\t\t\trunloop.addObserver( this, this.defer );\n\t\t\tthis.dirty = true;\n\t\t\tthis.changed.length = 0;\n\t\n\t\t\tif ( this.once ) this.cancel();\n\t\t}\n\t};\n\t\n\tfunction observeList ( keypath, callback, options ) {\n\t\tif ( typeof keypath !== 'string' ) {\n\t\t\tthrow new Error( 'ractive.observeList() must be passed a string as its first argument' );\n\t\t}\n\t\n\t\tvar model = this.viewmodel.joinAll( splitKeypath( keypath ) );\n\t\tvar observer = new ListObserver( this, model, callback, options || {} );\n\t\n\t\t// add observer to the Ractive instance, so it can be\n\t\t// cancelled on ractive.teardown()\n\t\tthis._observers.push( observer );\n\t\n\t\treturn {\n\t\t\tcancel: function () {\n\t\t\t\tobserver.cancel();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction negativeOne () {\n\t\treturn -1;\n\t}\n\t\n\tvar ListObserver = function ListObserver ( context, model, callback, options ) {\n\t\tthis.context = context;\n\t\tthis.model = model;\n\t\tthis.keypath = model.getKeypath();\n\t\tthis.callback = callback;\n\t\n\t\tthis.pending = null;\n\t\n\t\tmodel.register( this );\n\t\n\t\tif ( options.init !== false ) {\n\t\t\tthis.sliced = [];\n\t\t\tthis.shuffle([]);\n\t\t\tthis.handleChange();\n\t\t} else {\n\t\t\tthis.sliced = this.slice();\n\t\t}\n\t};\n\t\n\tListObserver.prototype.handleChange = function handleChange () {\n\t\tif ( this.pending ) {\n\t\t\t// post-shuffle\n\t\t\tthis.callback( this.pending );\n\t\t\tthis.pending = null;\n\t\t}\n\t\n\t\telse {\n\t\t\t// entire array changed\n\t\t\tthis.shuffle( this.sliced.map( negativeOne ) );\n\t\t\tthis.handleChange();\n\t\t}\n\t};\n\t\n\tListObserver.prototype.shuffle = function shuffle ( newIndices ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar newValue = this.slice();\n\t\n\t\tvar inserted = [];\n\t\tvar deleted = [];\n\t\tvar start;\n\t\n\t\tvar hadIndex = {};\n\t\n\t\tnewIndices.forEach( function ( newIndex, oldIndex ) {\n\t\t\thadIndex[ newIndex ] = true;\n\t\n\t\t\tif ( newIndex !== oldIndex && start === undefined ) {\n\t\t\t\tstart = oldIndex;\n\t\t\t}\n\t\n\t\t\tif ( newIndex === -1 ) {\n\t\t\t\tdeleted.push( this$1.sliced[ oldIndex ] );\n\t\t\t}\n\t\t});\n\t\n\t\tif ( start === undefined ) start = newIndices.length;\n\t\n\t\tvar len = newValue.length;\n\t\tfor ( var i = 0; i < len; i += 1 ) {\n\t\t\tif ( !hadIndex[i] ) inserted.push( newValue[i] );\n\t\t}\n\t\n\t\tthis.pending = { inserted: inserted, deleted: deleted, start: start };\n\t\tthis.sliced = newValue;\n\t};\n\t\n\tListObserver.prototype.slice = function slice () {\n\t\tvar value = this.model.get();\n\t\treturn isArray( value ) ? value.slice() : [];\n\t};\n\t\n\tvar onceOptions = { init: false, once: true };\n\t\n\tfunction observeOnce ( keypath, callback, options ) {\n\t\tif ( isObject( keypath ) || typeof keypath === 'function' ) {\n\t\t\toptions = extend$1( callback || {}, onceOptions );\n\t\t\treturn this.observe( keypath, options );\n\t\t}\n\t\n\t\toptions = extend$1( options || {}, onceOptions );\n\t\treturn this.observe( keypath, callback, options );\n\t}\n\t\n\tvar trim = function ( str ) { return str.trim(); };\n\t\n\tvar notEmptyString = function ( str ) { return str !== ''; };\n\t\n\tfunction Ractive$off ( eventName, callback ) {\n\t\t// if no arguments specified, remove all callbacks\n\t\tvar this$1 = this;\n\t\n\t\tif ( !eventName ) {\n\t\t\t// TODO use this code instead, once the following issue has been resolved\n\t\t\t// in PhantomJS (tests are unpassable otherwise!)\n\t\t\t// https://github.com/ariya/phantomjs/issues/11856\n\t\t\t// defineProperty( this, '_subs', { value: create( null ), configurable: true });\n\t\t\tfor ( eventName in this._subs ) {\n\t\t\t\tdelete this._subs[ eventName ];\n\t\t\t}\n\t\t}\n\t\n\t\telse {\n\t\t\t// Handle multiple space-separated event names\n\t\t\tvar eventNames = eventName.split( ' ' ).map( trim ).filter( notEmptyString );\n\t\n\t\t\teventNames.forEach( function ( eventName ) {\n\t\t\t\tvar subscribers = this$1._subs[ eventName ];\n\t\n\t\t\t\t// If we have subscribers for this event...\n\t\t\t\tif ( subscribers ) {\n\t\t\t\t\t// ...if a callback was specified, only remove that\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tvar index = subscribers.indexOf( callback );\n\t\t\t\t\t\tif ( index !== -1 ) {\n\t\t\t\t\t\t\tsubscribers.splice( index, 1 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// ...otherwise remove all callbacks\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis$1._subs[ eventName ] = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\n\t\treturn this;\n\t}\n\t\n\tfunction Ractive$on ( eventName, callback ) {\n\t\t// allow multiple listeners to be bound in one go\n\t\tvar this$1 = this;\n\t\n\t\tif ( typeof eventName === 'object' ) {\n\t\t\tvar listeners = [];\n\t\t\tvar n;\n\t\n\t\t\tfor ( n in eventName ) {\n\t\t\t\tif ( eventName.hasOwnProperty( n ) ) {\n\t\t\t\t\tlisteners.push( this.on( n, eventName[ n ] ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tcancel: function () {\n\t\t\t\t\tvar listener;\n\t\t\t\t\twhile ( listener = listeners.pop() ) listener.cancel();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\t// Handle multiple space-separated event names\n\t\tvar eventNames = eventName.split( ' ' ).map( trim ).filter( notEmptyString );\n\t\n\t\teventNames.forEach( function ( eventName ) {\n\t\t\t( this$1._subs[ eventName ] || ( this$1._subs[ eventName ] = [] ) ).push( callback );\n\t\t});\n\t\n\t\treturn {\n\t\t\tcancel: function () { return this$1.off( eventName, callback ); }\n\t\t};\n\t}\n\t\n\tfunction Ractive$once ( eventName, handler ) {\n\t\tvar listener = this.on( eventName, function () {\n\t\t\thandler.apply( this, arguments );\n\t\t\tlistener.cancel();\n\t\t});\n\t\n\t\t// so we can still do listener.cancel() manually\n\t\treturn listener;\n\t}\n\t\n\tvar pop$1 = makeArrayMethod( 'pop' ).path;\n\t\n\tvar push$1 = makeArrayMethod( 'push' ).path;\n\t\n\tvar PREFIX = '/* Ractive.js component styles */';\n\t\n\t// Holds current definitions of styles.\n\tvar styleDefinitions = [];\n\t\n\t// Flag to tell if we need to update the CSS\n\tvar isDirty = false;\n\t\n\t// These only make sense on the browser. See additional setup below.\n\tvar styleElement = null;\n\tvar useCssText = null;\n\t\n\tfunction addCSS( styleDefinition ) {\n\t\tstyleDefinitions.push( styleDefinition );\n\t\tisDirty = true;\n\t}\n\t\n\tfunction applyCSS() {\n\t\n\t\t// Apply only seems to make sense when we're in the DOM. Server-side renders\n\t\t// can call toCSS to get the updated CSS.\n\t\tif ( !doc || !isDirty ) return;\n\t\n\t\tif ( useCssText ) {\n\t\t\tstyleElement.styleSheet.cssText = getCSS( null );\n\t\t} else {\n\t\t\tstyleElement.innerHTML = getCSS( null );\n\t\t}\n\t\n\t\tisDirty = false;\n\t}\n\t\n\tfunction getCSS( cssIds ) {\n\t\n\t\tvar filteredStyleDefinitions = cssIds ? styleDefinitions.filter( function ( style ) { return ~cssIds.indexOf( style.id ); } ) : styleDefinitions;\n\t\n\t\treturn filteredStyleDefinitions.reduce( function ( styles, style ) { return (\"\" + styles + \"\\n\\n/* {\" + (style.id) + \"} */\\n\" + (style.styles)); }, PREFIX );\n\t\n\t}\n\t\n\t// If we're on the browser, additional setup needed.\n\tif ( doc && ( !styleElement || !styleElement.parentNode ) ) {\n\t\n\t\tstyleElement = doc.createElement( 'style' );\n\t\tstyleElement.type = 'text/css';\n\t\n\t\tdoc.getElementsByTagName( 'head' )[ 0 ].appendChild( styleElement );\n\t\n\t\tuseCssText = !!styleElement.styleSheet;\n\t}\n\t\n\tvar renderHook = new Hook( 'render' );\n\tvar completeHook = new Hook( 'complete' );\n\t\n\tfunction render$2 ( ractive, target, anchor, occupants ) {\n\t\t// if `noIntro` is `true`, temporarily disable transitions\n\t\tvar transitionsEnabled = ractive.transitionsEnabled;\n\t\tif ( ractive.noIntro ) ractive.transitionsEnabled = false;\n\t\n\t\tvar promise = runloop.start( ractive, true );\n\t\trunloop.scheduleTask( function () { return renderHook.fire( ractive ); }, true );\n\t\n\t\tif ( ractive.fragment.rendered ) {\n\t\t\tthrow new Error( 'You cannot call ractive.render() on an already rendered instance! Call ractive.unrender() first' );\n\t\t}\n\t\n\t\tanchor = getElement( anchor ) || ractive.anchor;\n\t\n\t\tractive.el = target;\n\t\tractive.anchor = anchor;\n\t\n\t\t// ensure encapsulated CSS is up-to-date\n\t\tif ( ractive.cssId ) applyCSS();\n\t\n\t\tif ( target ) {\n\t\t\t( target.__ractive_instances__ || ( target.__ractive_instances__ = [] ) ).push( ractive );\n\t\n\t\t\tif ( anchor ) {\n\t\t\t\tvar docFrag = doc.createDocumentFragment();\n\t\t\t\tractive.fragment.render( docFrag );\n\t\t\t\ttarget.insertBefore( docFrag, anchor );\n\t\t\t} else {\n\t\t\t\tractive.fragment.render( target, occupants );\n\t\t\t}\n\t\t}\n\t\n\t\trunloop.end();\n\t\tractive.transitionsEnabled = transitionsEnabled;\n\t\n\t\treturn promise.then( function () { return completeHook.fire( ractive ); } );\n\t}\n\t\n\tfunction Ractive$render ( target, anchor ) {\n\t\tif ( this.torndown ) {\n\t\t\twarnIfDebug( 'ractive.render() was called on a Ractive instance that was already torn down' );\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\n\t\ttarget = getElement( target ) || this.el;\n\t\n\t\tif ( !this.append && target ) {\n\t\t\t// Teardown any existing instances *before* trying to set up the new one -\n\t\t\t// avoids certain weird bugs\n\t\t\tvar others = target.__ractive_instances__;\n\t\t\tif ( others ) others.forEach( teardown$1$1 );\n\t\n\t\t\t// make sure we are the only occupants\n\t\t\tif ( !this.enhance ) {\n\t\t\t\ttarget.innerHTML = ''; // TODO is this quicker than removeChild? Initial research inconclusive\n\t\t\t}\n\t\t}\n\t\n\t\tvar occupants = this.enhance ? toArray( target.childNodes ) : null;\n\t\tvar promise = render$2( this, target, anchor, occupants );\n\t\n\t\tif ( occupants ) {\n\t\t\twhile ( occupants.length ) target.removeChild( occupants.pop() );\n\t\t}\n\t\n\t\treturn promise;\n\t}\n\t\n\tvar adaptConfigurator = {\n\t\textend: function ( Parent, proto, options ) {\n\t\t\tproto.adapt = combine( proto.adapt, ensureArray( options.adapt ) );\n\t\t},\n\t\n\t\tinit: function () {}\n\t};\n\t\n\tfunction combine ( a, b ) {\n\t\tvar c = a.slice();\n\t\tvar i = b.length;\n\t\n\t\twhile ( i-- ) {\n\t\t\tif ( !~c.indexOf( b[i] ) ) {\n\t\t\t\tc.push( b[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn c;\n\t}\n\t\n\tvar selectorsPattern = /(?:^|\\})?\\s*([^\\{\\}]+)\\s*\\{/g;\n\tvar commentsPattern = /\\/\\*.*?\\*\\//g;\n\tvar selectorUnitPattern = /((?:(?:\\[[^\\]+]\\])|(?:[^\\s\\+\\>~:]))+)((?:::?[^\\s\\+\\>\\~\\(:]+(?:\\([^\\)]+\\))?)*\\s*[\\s\\+\\>\\~]?)\\s*/g;\n\tvar excludePattern = /^(?:@|\\d+%)/;\n\tvar dataRvcGuidPattern = /\\[data-ractive-css~=\"\\{[a-z0-9-]+\\}\"]/g;\n\t\n\tfunction trim$1 ( str ) {\n\t\treturn str.trim();\n\t}\n\t\n\tfunction extractString ( unit ) {\n\t\treturn unit.str;\n\t}\n\t\n\tfunction transformSelector ( selector, parent ) {\n\t\tvar selectorUnits = [];\n\t\tvar match;\n\t\n\t\twhile ( match = selectorUnitPattern.exec( selector ) ) {\n\t\t\tselectorUnits.push({\n\t\t\t\tstr: match[0],\n\t\t\t\tbase: match[1],\n\t\t\t\tmodifiers: match[2]\n\t\t\t});\n\t\t}\n\t\n\t\t// For each simple selector within the selector, we need to create a version\n\t\t// that a) combines with the id, and b) is inside the id\n\t\tvar base = selectorUnits.map( extractString );\n\t\n\t\tvar transformed = [];\n\t\tvar i = selectorUnits.length;\n\t\n\t\twhile ( i-- ) {\n\t\t\tvar appended = base.slice();\n\t\n\t\t\t// Pseudo-selectors should go after the attribute selector\n\t\t\tvar unit = selectorUnits[i];\n\t\t\tappended[i] = unit.base + parent + unit.modifiers || '';\n\t\n\t\t\tvar prepended = base.slice();\n\t\t\tprepended[i] = parent + ' ' + prepended[i];\n\t\n\t\t\ttransformed.push( appended.join( ' ' ), prepended.join( ' ' ) );\n\t\t}\n\t\n\t\treturn transformed.join( ', ' );\n\t}\n\t\n\tfunction transformCss ( css, id ) {\n\t\tvar dataAttr = \"[data-ractive-css~=\\\"{\" + id + \"}\\\"]\";\n\t\n\t\tvar transformed;\n\t\n\t\tif ( dataRvcGuidPattern.test( css ) ) {\n\t\t\ttransformed = css.replace( dataRvcGuidPattern, dataAttr );\n\t\t} else {\n\t\t\ttransformed = css\n\t\t\t.replace( commentsPattern, '' )\n\t\t\t.replace( selectorsPattern, function ( match, $1 ) {\n\t\t\t\t// don't transform at-rules and keyframe declarations\n\t\t\t\tif ( excludePattern.test( $1 ) ) return match;\n\t\n\t\t\t\tvar selectors = $1.split( ',' ).map( trim$1 );\n\t\t\t\tvar transformed = selectors\n\t\t\t\t\t.map( function ( selector ) { return transformSelector( selector, dataAttr ); } )\n\t\t\t\t\t.join( ', ' ) + ' ';\n\t\n\t\t\t\treturn match.replace( $1, transformed );\n\t\t\t});\n\t\t}\n\t\n\t\treturn transformed;\n\t}\n\t\n\tfunction s4() {\n\t\treturn Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\t}\n\t\n\tfunction uuid() {\n\t\treturn s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n\t}\n\t\n\tvar cssConfigurator = {\n\t\tname: 'css',\n\t\n\t\t// Called when creating a new component definition\n\t\textend: function ( Parent, proto, options ) {\n\t\t\tif ( !options.css ) return;\n\t\n\t\t\tvar id = uuid();\n\t\t\tvar styles = options.noCssTransform ? options.css : transformCss( options.css, id );\n\t\n\t\t\tproto.cssId = id;\n\t\n\t\t\taddCSS( { id: id, styles: styles } );\n\t\n\t\t},\n\t\n\t\t// Called when creating a new component instance\n\t\tinit: function ( Parent, target, options ) {\n\t\t\tif ( !options.css ) return;\n\t\n\t\t\twarnIfDebug( (\"\\nThe css option is currently not supported on a per-instance basis and will be discarded. Instead, we recommend instantiating from a component definition with a css option.\\n\\nconst Component = Ractive.extend({\\n\\t...\\n\\tcss: '/* your css */',\\n\\t...\\n});\\n\\nconst componentInstance = new Component({ ... })\\n\\t\\t\") );\n\t\t}\n\t\n\t};\n\t\n\tfunction validate ( data ) {\n\t\t// Warn if userOptions.data is a non-POJO\n\t\tif ( data && data.constructor !== Object ) {\n\t\t\tif ( typeof data === 'function' ) {\n\t\t\t\t// TODO do we need to support this in the new Ractive() case?\n\t\t\t} else if ( typeof data !== 'object' ) {\n\t\t\t\tfatal( (\"data option must be an object or a function, `\" + data + \"` is not valid\") );\n\t\t\t} else {\n\t\t\t\twarnIfDebug( 'If supplied, options.data should be a plain JavaScript object - using a non-POJO as the root object may work, but is discouraged' );\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar dataConfigurator = {\n\t\tname: 'data',\n\t\n\t\textend: function ( Parent, proto, options ) {\n\t\t\tvar key;\n\t\t\tvar value;\n\t\n\t\t\t// check for non-primitives, which could cause mutation-related bugs\n\t\t\tif ( options.data && isObject( options.data ) ) {\n\t\t\t\tfor ( key in options.data ) {\n\t\t\t\t\tvalue = options.data[ key ];\n\t\n\t\t\t\t\tif ( value && typeof value === 'object' ) {\n\t\t\t\t\t\tif ( isObject( value ) || isArray( value ) ) {\n\t\t\t\t\t\t\twarnIfDebug( (\"Passing a `data` option with object and array properties to Ractive.extend() is discouraged, as mutating them is likely to cause bugs. Consider using a data function instead:\\n\\n  // this...\\n  data: function () {\\n    return {\\n      myObject: {}\\n    };\\n  })\\n\\n  // instead of this:\\n  data: {\\n    myObject: {}\\n  }\") );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tproto.data = combine$1( proto.data, options.data );\n\t\t},\n\t\n\t\tinit: function ( Parent, ractive, options ) {\n\t\t\tvar result = combine$1( Parent.prototype.data, options.data );\n\t\n\t\t\tif ( typeof result === 'function' ) result = result.call( ractive );\n\t\n\t\t\t// bind functions to the ractive instance at the top level,\n\t\t\t// unless it's a non-POJO (in which case alarm bells should ring)\n\t\t\tif ( result && result.constructor === Object ) {\n\t\t\t\tfor ( var prop in result ) {\n\t\t\t\t\tif ( typeof result[ prop ] === 'function' ) result[ prop ] = bind$1$1( result[ prop ], ractive );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result || {};\n\t\t},\n\t\n\t\treset: function ( ractive ) {\n\t\t\tvar result = this.init( ractive.constructor, ractive, ractive.viewmodel );\n\t\t\tractive.viewmodel.root.set( result );\n\t\t\treturn true;\n\t\t}\n\t};\n\t\n\tfunction combine$1 ( parentValue, childValue ) {\n\t\tvalidate( childValue );\n\t\n\t\tvar parentIsFn = typeof parentValue === 'function';\n\t\tvar childIsFn = typeof childValue === 'function';\n\t\n\t\t// Very important, otherwise child instance can become\n\t\t// the default data object on Ractive or a component.\n\t\t// then ractive.set() ends up setting on the prototype!\n\t\tif ( !childValue && !parentIsFn ) {\n\t\t\tchildValue = {};\n\t\t}\n\t\n\t\t// Fast path, where we just need to copy properties from\n\t\t// parent to child\n\t\tif ( !parentIsFn && !childIsFn ) {\n\t\t\treturn fromProperties( childValue, parentValue );\n\t\t}\n\t\n\t\treturn function () {\n\t\t\tvar child = childIsFn ? callDataFunction( childValue, this ) : childValue;\n\t\t\tvar parent = parentIsFn ? callDataFunction( parentValue, this ) : parentValue;\n\t\n\t\t\treturn fromProperties( child, parent );\n\t\t};\n\t}\n\t\n\tfunction callDataFunction ( fn, context ) {\n\t\tvar data = fn.call( context );\n\t\n\t\tif ( !data ) return;\n\t\n\t\tif ( typeof data !== 'object' ) {\n\t\t\tfatal( 'Data function must return an object' );\n\t\t}\n\t\n\t\tif ( data.constructor !== Object ) {\n\t\t\twarnOnceIfDebug( 'Data function returned something other than a plain JavaScript object. This might work, but is strongly discouraged' );\n\t\t}\n\t\n\t\treturn data;\n\t}\n\t\n\tfunction fromProperties ( primary, secondary ) {\n\t\tif ( primary && secondary ) {\n\t\t\tfor ( var key in secondary ) {\n\t\t\t\tif ( !( key in primary ) ) {\n\t\t\t\t\tprimary[ key ] = secondary[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn primary;\n\t\t}\n\t\n\t\treturn primary || secondary;\n\t}\n\t\n\tvar TEMPLATE_VERSION = 4;\n\t\n\tvar pattern = /\\$\\{([^\\}]+)\\}/g;\n\t\n\tfunction fromExpression ( body, length ) {\n\t\tif ( length === void 0 ) length = 0;\n\t\n\t\tvar args = new Array( length );\n\t\n\t\twhile ( length-- ) {\n\t\t\targs[length] = \"_\" + length;\n\t\t}\n\t\n\t\t// Functions created directly with new Function() look like this:\n\t\t//     function anonymous (_0 /**/) { return _0*2 }\n\t\t//\n\t\t// With this workaround, we get a little more compact:\n\t\t//     function (_0){return _0*2}\n\t\treturn new Function( [], (\"return function (\" + (args.join(',')) + \"){return(\" + body + \");};\") )();\n\t}\n\t\n\tfunction fromComputationString ( str, bindTo ) {\n\t\tvar hasThis;\n\t\n\t\tvar functionBody = 'return (' + str.replace( pattern, function ( match, keypath ) {\n\t\t\thasThis = true;\n\t\t\treturn (\"__ractive.get(\\\"\" + keypath + \"\\\")\");\n\t\t}) + ');';\n\t\n\t\tif ( hasThis ) functionBody = \"var __ractive = this; \" + functionBody;\n\t\tvar fn = new Function( functionBody );\n\t\treturn hasThis ? fn.bind( bindTo ) : fn;\n\t}\n\t\n\tvar functions = create( null );\n\t\n\tfunction getFunction ( str, i ) {\n\t\tif ( functions[ str ] ) return functions[ str ];\n\t\treturn functions[ str ] = createFunction( str, i );\n\t}\n\t\n\tfunction addFunctions( template ) {\n\t\tif ( !template ) return;\n\t\n\t\tvar exp = template.e;\n\t\n\t\tif ( !exp ) return;\n\t\n\t\tObject.keys( exp ).forEach( function ( str ) {\n\t\t\tif ( functions[ str ] ) return;\n\t\t\tfunctions[ str ] = exp[ str ];\n\t\t});\n\t}\n\t\n\tvar Parser;\n\tvar ParseError;\n\tvar leadingWhitespace = /^\\s+/;\n\t\n\tParseError = function ( message ) {\n\t\tthis.name = 'ParseError';\n\t\tthis.message = message;\n\t\ttry {\n\t\t\tthrow new Error(message);\n\t\t} catch (e) {\n\t\t\tthis.stack = e.stack;\n\t\t}\n\t};\n\t\n\tParseError.prototype = Error.prototype;\n\t\n\tParser = function ( str, options ) {\n\t\tvar this$1 = this;\n\t\n\t\tvar items, item, lineStart = 0;\n\t\n\t\tthis.str = str;\n\t\tthis.options = options || {};\n\t\tthis.pos = 0;\n\t\n\t\tthis.lines = this.str.split( '\\n' );\n\t\tthis.lineEnds = this.lines.map( function ( line ) {\n\t\t\tvar lineEnd = lineStart + line.length + 1; // +1 for the newline\n\t\n\t\t\tlineStart = lineEnd;\n\t\t\treturn lineEnd;\n\t\t}, 0 );\n\t\n\t\t// Custom init logic\n\t\tif ( this.init ) this.init( str, options );\n\t\n\t\titems = [];\n\t\n\t\twhile ( ( this$1.pos < this$1.str.length ) && ( item = this$1.read() ) ) {\n\t\t\titems.push( item );\n\t\t}\n\t\n\t\tthis.leftover = this.remaining();\n\t\tthis.result = this.postProcess ? this.postProcess( items, options ) : items;\n\t};\n\t\n\tParser.prototype = {\n\t\tread: function ( converters ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar pos, i, len, item;\n\t\n\t\t\tif ( !converters ) converters = this.converters;\n\t\n\t\t\tpos = this.pos;\n\t\n\t\t\tlen = converters.length;\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\t\tthis$1.pos = pos; // reset for each attempt\n\t\n\t\t\t\tif ( item = converters[i]( this$1 ) ) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn null;\n\t\t},\n\t\n\t\tgetLinePos: function ( char ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar lineNum = 0, lineStart = 0, columnNum;\n\t\n\t\t\twhile ( char >= this$1.lineEnds[ lineNum ] ) {\n\t\t\t\tlineStart = this$1.lineEnds[ lineNum ];\n\t\t\t\tlineNum += 1;\n\t\t\t}\n\t\n\t\t\tcolumnNum = char - lineStart;\n\t\t\treturn [ lineNum + 1, columnNum + 1, char ]; // line/col should be one-based, not zero-based!\n\t\t},\n\t\n\t\terror: function ( message ) {\n\t\t\tvar pos = this.getLinePos( this.pos );\n\t\t\tvar lineNum = pos[0];\n\t\t\tvar columnNum = pos[1];\n\t\n\t\t\tvar line = this.lines[ pos[0] - 1 ];\n\t\t\tvar numTabs = 0;\n\t\t\tvar annotation = line.replace( /\\t/g, function ( match, char ) {\n\t\t\t\tif ( char < pos[1] ) {\n\t\t\t\t\tnumTabs += 1;\n\t\t\t\t}\n\t\n\t\t\t\treturn '  ';\n\t\t\t}) + '\\n' + new Array( pos[1] + numTabs ).join( ' ' ) + '^----';\n\t\n\t\t\tvar error = new ParseError( (\"\" + message + \" at line \" + lineNum + \" character \" + columnNum + \":\\n\" + annotation) );\n\t\n\t\t\terror.line = pos[0];\n\t\t\terror.character = pos[1];\n\t\t\terror.shortMessage = message;\n\t\n\t\t\tthrow error;\n\t\t},\n\t\n\t\tmatchString: function ( string ) {\n\t\t\tif ( this.str.substr( this.pos, string.length ) === string ) {\n\t\t\t\tthis.pos += string.length;\n\t\t\t\treturn string;\n\t\t\t}\n\t\t},\n\t\n\t\tmatchPattern: function ( pattern ) {\n\t\t\tvar match;\n\t\n\t\t\tif ( match = pattern.exec( this.remaining() ) ) {\n\t\t\t\tthis.pos += match[0].length;\n\t\t\t\treturn match[1] || match[0];\n\t\t\t}\n\t\t},\n\t\n\t\tallowWhitespace: function () {\n\t\t\tthis.matchPattern( leadingWhitespace );\n\t\t},\n\t\n\t\tremaining: function () {\n\t\t\treturn this.str.substring( this.pos );\n\t\t},\n\t\n\t\tnextChar: function () {\n\t\t\treturn this.str.charAt( this.pos );\n\t\t}\n\t};\n\t\n\tParser.extend = function ( proto ) {\n\t\tvar Parent = this, Child, key;\n\t\n\t\tChild = function ( str, options ) {\n\t\t\tParser.call( this, str, options );\n\t\t};\n\t\n\t\tChild.prototype = create( Parent.prototype );\n\t\n\t\tfor ( key in proto ) {\n\t\t\tif ( hasOwn.call( proto, key ) ) {\n\t\t\t\tChild.prototype[ key ] = proto[ key ];\n\t\t\t}\n\t\t}\n\t\n\t\tChild.extend = Parser.extend;\n\t\treturn Child;\n\t};\n\t\n\tvar Parser$1 = Parser;\n\t\n\tvar TEXT              = 1;\n\tvar INTERPOLATOR      = 2;\n\tvar TRIPLE            = 3;\n\tvar SECTION           = 4;\n\tvar INVERTED          = 5;\n\tvar CLOSING           = 6;\n\tvar ELEMENT           = 7;\n\tvar PARTIAL           = 8;\n\tvar COMMENT           = 9;\n\tvar DELIMCHANGE       = 10;\n\tvar ATTRIBUTE         = 13;\n\tvar CLOSING_TAG       = 14;\n\tvar COMPONENT         = 15;\n\tvar YIELDER           = 16;\n\tvar INLINE_PARTIAL    = 17;\n\tvar DOCTYPE           = 18;\n\tvar ALIAS             = 19;\n\t\n\tvar NUMBER_LITERAL    = 20;\n\tvar STRING_LITERAL    = 21;\n\tvar ARRAY_LITERAL     = 22;\n\tvar OBJECT_LITERAL    = 23;\n\tvar BOOLEAN_LITERAL   = 24;\n\tvar REGEXP_LITERAL    = 25;\n\t\n\tvar GLOBAL            = 26;\n\tvar KEY_VALUE_PAIR    = 27;\n\t\n\t\n\tvar REFERENCE         = 30;\n\tvar REFINEMENT        = 31;\n\tvar MEMBER            = 32;\n\tvar PREFIX_OPERATOR   = 33;\n\tvar BRACKETED         = 34;\n\tvar CONDITIONAL       = 35;\n\tvar INFIX_OPERATOR    = 36;\n\t\n\tvar INVOCATION        = 40;\n\t\n\tvar SECTION_IF        = 50;\n\tvar SECTION_UNLESS    = 51;\n\tvar SECTION_EACH      = 52;\n\tvar SECTION_WITH      = 53;\n\tvar SECTION_IF_WITH   = 54;\n\t\n\tvar ELSE              = 60;\n\tvar ELSEIF            = 61;\n\t\n\tvar EVENT             = 70;\n\tvar DECORATOR         = 71;\n\tvar TRANSITION        = 72;\n\tvar BINDING_FLAG      = 73;\n\t\n\tvar delimiterChangePattern = /^[^\\s=]+/;\n\tvar whitespacePattern = /^\\s+/;\n\t\n\tfunction readDelimiterChange ( parser ) {\n\t\tvar start, opening, closing;\n\t\n\t\tif ( !parser.matchString( '=' ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tstart = parser.pos;\n\t\n\t\t// allow whitespace before new opening delimiter\n\t\tparser.allowWhitespace();\n\t\n\t\topening = parser.matchPattern( delimiterChangePattern );\n\t\tif ( !opening ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// allow whitespace (in fact, it's necessary...)\n\t\tif ( !parser.matchPattern( whitespacePattern ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tclosing = parser.matchPattern( delimiterChangePattern );\n\t\tif ( !closing ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// allow whitespace before closing '='\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( '=' ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\treturn [ opening, closing ];\n\t}\n\t\n\tvar regexpPattern = /^(\\/(?:[^\\n\\r\\u2028\\u2029/\\\\[]|\\\\.|\\[(?:[^\\n\\r\\u2028\\u2029\\]\\\\]|\\\\.)*])+\\/(?:([gimuy])(?![a-z]*\\2))*(?![a-zA-Z_$0-9]))/;\n\t\n\tfunction readNumberLiteral ( parser ) {\n\t\tvar result;\n\t\n\t\tif ( result = parser.matchPattern( regexpPattern ) ) {\n\t\t\treturn {\n\t\t\t\tt: REGEXP_LITERAL,\n\t\t\t\tv: result\n\t\t\t};\n\t\t}\n\t\n\t\treturn null;\n\t}\n\t\n\tvar pattern$1 = /[-/\\\\^$*+?.()|[\\]{}]/g;\n\t\n\tfunction escapeRegExp ( str ) {\n\t\treturn str.replace( pattern$1, '\\\\$&' );\n\t}\n\t\n\tvar regExpCache = {};\n\t\n\tvar getLowestIndex = function ( haystack, needles ) {\n\t\treturn haystack.search( regExpCache[needles.join()] || ( regExpCache[needles.join()] = new RegExp( needles.map( escapeRegExp ).join( '|' ) ) ) );\n\t};\n\t\n\t// https://github.com/kangax/html-minifier/issues/63#issuecomment-37763316\n\tvar booleanAttributes = /^(allowFullscreen|async|autofocus|autoplay|checked|compact|controls|declare|default|defaultChecked|defaultMuted|defaultSelected|defer|disabled|enabled|formNoValidate|hidden|indeterminate|inert|isMap|itemScope|loop|multiple|muted|noHref|noResize|noShade|noValidate|noWrap|open|pauseOnExit|readOnly|required|reversed|scoped|seamless|selected|sortable|translate|trueSpeed|typeMustMatch|visible)$/i;\n\tvar voidElementNames = /^(?:area|base|br|col|command|doctype|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;\n\t\n\tvar htmlEntities = { quot: 34, amp: 38, apos: 39, lt: 60, gt: 62, nbsp: 160, iexcl: 161, cent: 162, pound: 163, curren: 164, yen: 165, brvbar: 166, sect: 167, uml: 168, copy: 169, ordf: 170, laquo: 171, not: 172, shy: 173, reg: 174, macr: 175, deg: 176, plusmn: 177, sup2: 178, sup3: 179, acute: 180, micro: 181, para: 182, middot: 183, cedil: 184, sup1: 185, ordm: 186, raquo: 187, frac14: 188, frac12: 189, frac34: 190, iquest: 191, Agrave: 192, Aacute: 193, Acirc: 194, Atilde: 195, Auml: 196, Aring: 197, AElig: 198, Ccedil: 199, Egrave: 200, Eacute: 201, Ecirc: 202, Euml: 203, Igrave: 204, Iacute: 205, Icirc: 206, Iuml: 207, ETH: 208, Ntilde: 209, Ograve: 210, Oacute: 211, Ocirc: 212, Otilde: 213, Ouml: 214, times: 215, Oslash: 216, Ugrave: 217, Uacute: 218, Ucirc: 219, Uuml: 220, Yacute: 221, THORN: 222, szlig: 223, agrave: 224, aacute: 225, acirc: 226, atilde: 227, auml: 228, aring: 229, aelig: 230, ccedil: 231, egrave: 232, eacute: 233, ecirc: 234, euml: 235, igrave: 236, iacute: 237, icirc: 238, iuml: 239, eth: 240, ntilde: 241, ograve: 242, oacute: 243, ocirc: 244, otilde: 245, ouml: 246, divide: 247, oslash: 248, ugrave: 249, uacute: 250, ucirc: 251, uuml: 252, yacute: 253, thorn: 254, yuml: 255, OElig: 338, oelig: 339, Scaron: 352, scaron: 353, Yuml: 376, fnof: 402, circ: 710, tilde: 732, Alpha: 913, Beta: 914, Gamma: 915, Delta: 916, Epsilon: 917, Zeta: 918, Eta: 919, Theta: 920, Iota: 921, Kappa: 922, Lambda: 923, Mu: 924, Nu: 925, Xi: 926, Omicron: 927, Pi: 928, Rho: 929, Sigma: 931, Tau: 932, Upsilon: 933, Phi: 934, Chi: 935, Psi: 936, Omega: 937, alpha: 945, beta: 946, gamma: 947, delta: 948, epsilon: 949, zeta: 950, eta: 951, theta: 952, iota: 953, kappa: 954, lambda: 955, mu: 956, nu: 957, xi: 958, omicron: 959, pi: 960, rho: 961, sigmaf: 962, sigma: 963, tau: 964, upsilon: 965, phi: 966, chi: 967, psi: 968, omega: 969, thetasym: 977, upsih: 978, piv: 982, ensp: 8194, emsp: 8195, thinsp: 8201, zwnj: 8204, zwj: 8205, lrm: 8206, rlm: 8207, ndash: 8211, mdash: 8212, lsquo: 8216, rsquo: 8217, sbquo: 8218, ldquo: 8220, rdquo: 8221, bdquo: 8222, dagger: 8224, Dagger: 8225, bull: 8226, hellip: 8230, permil: 8240, prime: 8242, Prime: 8243, lsaquo: 8249, rsaquo: 8250, oline: 8254, frasl: 8260, euro: 8364, image: 8465, weierp: 8472, real: 8476, trade: 8482, alefsym: 8501, larr: 8592, uarr: 8593, rarr: 8594, darr: 8595, harr: 8596, crarr: 8629, lArr: 8656, uArr: 8657, rArr: 8658, dArr: 8659, hArr: 8660, forall: 8704, part: 8706, exist: 8707, empty: 8709, nabla: 8711, isin: 8712, notin: 8713, ni: 8715, prod: 8719, sum: 8721, minus: 8722, lowast: 8727, radic: 8730, prop: 8733, infin: 8734, ang: 8736, and: 8743, or: 8744, cap: 8745, cup: 8746, 'int': 8747, there4: 8756, sim: 8764, cong: 8773, asymp: 8776, ne: 8800, equiv: 8801, le: 8804, ge: 8805, sub: 8834, sup: 8835, nsub: 8836, sube: 8838, supe: 8839, oplus: 8853, otimes: 8855, perp: 8869, sdot: 8901, lceil: 8968, rceil: 8969, lfloor: 8970, rfloor: 8971, lang: 9001, rang: 9002, loz: 9674, spades: 9824, clubs: 9827, hearts: 9829, diams: 9830\t};\n\tvar controlCharacters = [ 8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 382, 376 ];\n\tvar entityPattern = new RegExp( '&(#?(?:x[\\\\w\\\\d]+|\\\\d+|' + Object.keys( htmlEntities ).join( '|' ) + '));?', 'g' );\n\tvar codePointSupport = typeof String.fromCodePoint === 'function';\n\tvar codeToChar = codePointSupport ? String.fromCodePoint : String.fromCharCode;\n\t\n\tfunction decodeCharacterReferences ( html ) {\n\t\treturn html.replace( entityPattern, function ( match, entity ) {\n\t\t\tvar code;\n\t\n\t\t\t// Handle named entities\n\t\t\tif ( entity[0] !== '#' ) {\n\t\t\t\tcode = htmlEntities[ entity ];\n\t\t\t} else if ( entity[1] === 'x' ) {\n\t\t\t\tcode = parseInt( entity.substring( 2 ), 16 );\n\t\t\t} else {\n\t\t\t\tcode = parseInt( entity.substring( 1 ), 10 );\n\t\t\t}\n\t\n\t\t\tif ( !code ) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\n\t\t\treturn codeToChar( validateCode( code ) );\n\t\t});\n\t}\n\t\n\tvar lessThan = /</g;\n\tvar greaterThan = />/g;\n\tvar amp = /&/g;\n\tvar invalid = 65533;\n\t\n\tfunction escapeHtml ( str ) {\n\t\treturn str\n\t\t\t.replace( amp, '&amp;' )\n\t\t\t.replace( lessThan, '&lt;' )\n\t\t\t.replace( greaterThan, '&gt;' );\n\t}\n\t\n\t// some code points are verboten. If we were inserting HTML, the browser would replace the illegal\n\t// code points with alternatives in some cases - since we're bypassing that mechanism, we need\n\t// to replace them ourselves\n\t//\n\t// Source: http://en.wikipedia.org/wiki/Character_encodings_in_HTML#Illegal_characters\n\tfunction validateCode ( code ) {\n\t\tif ( !code ) {\n\t\t\treturn invalid;\n\t\t}\n\t\n\t\t// line feed becomes generic whitespace\n\t\tif ( code === 10 ) {\n\t\t\treturn 32;\n\t\t}\n\t\n\t\t// ASCII range. (Why someone would use HTML entities for ASCII characters I don't know, but...)\n\t\tif ( code < 128 ) {\n\t\t\treturn code;\n\t\t}\n\t\n\t\t// code points 128-159 are dealt with leniently by browsers, but they're incorrect. We need\n\t\t// to correct the mistake or we'll end up with missing € signs and so on\n\t\tif ( code <= 159 ) {\n\t\t\treturn controlCharacters[ code - 128 ];\n\t\t}\n\t\n\t\t// basic multilingual plane\n\t\tif ( code < 55296 ) {\n\t\t\treturn code;\n\t\t}\n\t\n\t\t// UTF-16 surrogate halves\n\t\tif ( code <= 57343 ) {\n\t\t\treturn invalid;\n\t\t}\n\t\n\t\t// rest of the basic multilingual plane\n\t\tif ( code <= 65535 ) {\n\t\t\treturn code;\n\t\t} else if ( !codePointSupport ) {\n\t\t\treturn invalid;\n\t\t}\n\t\n\t\t// supplementary multilingual plane 0x10000 - 0x1ffff\n\t\tif ( code >= 65536 && code <= 131071 ) {\n\t\t\treturn code;\n\t\t}\n\t\n\t\t// supplementary ideographic plane 0x20000 - 0x2ffff\n\t\tif ( code >= 131072 && code <= 196607 ) {\n\t\t\treturn code;\n\t\t}\n\t\n\t\treturn invalid;\n\t}\n\t\n\tvar expectedExpression = 'Expected a JavaScript expression';\n\tvar expectedParen = 'Expected closing paren';\n\t\n\t// bulletproof number regex from https://gist.github.com/Rich-Harris/7544330\n\tvar numberPattern = /^(?:[+-]?)0*(?:(?:(?:[1-9]\\d*)?\\.\\d+)|(?:(?:0|[1-9]\\d*)\\.)|(?:0|[1-9]\\d*))(?:[eE][+-]?\\d+)?/;\n\t\n\tfunction readNumberLiteral$1 ( parser ) {\n\t\tvar result;\n\t\n\t\tif ( result = parser.matchPattern( numberPattern ) ) {\n\t\t\treturn {\n\t\t\t\tt: NUMBER_LITERAL,\n\t\t\t\tv: result\n\t\t\t};\n\t\t}\n\t\n\t\treturn null;\n\t}\n\t\n\tfunction readBooleanLiteral ( parser ) {\n\t\tvar remaining = parser.remaining();\n\t\n\t\tif ( remaining.substr( 0, 4 ) === 'true' ) {\n\t\t\tparser.pos += 4;\n\t\t\treturn {\n\t\t\t\tt: BOOLEAN_LITERAL,\n\t\t\t\tv: 'true'\n\t\t\t};\n\t\t}\n\t\n\t\tif ( remaining.substr( 0, 5 ) === 'false' ) {\n\t\t\tparser.pos += 5;\n\t\t\treturn {\n\t\t\t\tt: BOOLEAN_LITERAL,\n\t\t\t\tv: 'false'\n\t\t\t};\n\t\t}\n\t\n\t\treturn null;\n\t}\n\t\n\tvar stringMiddlePattern;\n\tvar escapeSequencePattern;\n\tvar lineContinuationPattern;\n\t\n\t// Match one or more characters until: \", ', \\, or EOL/EOF.\n\t// EOL/EOF is written as (?!.) (meaning there's no non-newline char next).\n\tstringMiddlePattern = /^(?=.)[^\"'\\\\]+?(?:(?!.)|(?=[\"'\\\\]))/;\n\t\n\t// Match one escape sequence, including the backslash.\n\tescapeSequencePattern = /^\\\\(?:['\"\\\\bfnrt]|0(?![0-9])|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|(?=.)[^ux0-9])/;\n\t\n\t// Match one ES5 line continuation (backslash + line terminator).\n\tlineContinuationPattern = /^\\\\(?:\\r\\n|[\\u000A\\u000D\\u2028\\u2029])/;\n\t\n\t// Helper for defining getDoubleQuotedString and getSingleQuotedString.\n\tvar makeQuotedStringMatcher = function ( okQuote ) {\n\t\treturn function ( parser ) {\n\t\t\tvar literal = '\"';\n\t\t\tvar done = false;\n\t\t\tvar next;\n\t\n\t\t\twhile ( !done ) {\n\t\t\t\tnext = ( parser.matchPattern( stringMiddlePattern ) || parser.matchPattern( escapeSequencePattern ) ||\n\t\t\t\t\tparser.matchString( okQuote ) );\n\t\t\t\tif ( next ) {\n\t\t\t\t\tif ( next === (\"\\\"\") ) {\n\t\t\t\t\t\tliteral += \"\\\\\\\"\";\n\t\t\t\t\t} else if ( next === (\"\\\\'\") ) {\n\t\t\t\t\t\tliteral += \"'\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tliteral += next;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnext = parser.matchPattern( lineContinuationPattern );\n\t\t\t\t\tif ( next ) {\n\t\t\t\t\t\t// convert \\(newline-like) into a \\u escape, which is allowed in JSON\n\t\t\t\t\t\tliteral += '\\\\u' + ( '000' + next.charCodeAt(1).toString(16) ).slice( -4 );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdone = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tliteral += '\"';\n\t\n\t\t\t// use JSON.parse to interpret escapes\n\t\t\treturn JSON.parse( literal );\n\t\t};\n\t};\n\t\n\tvar getSingleQuotedString = makeQuotedStringMatcher( (\"\\\"\") );\n\tvar getDoubleQuotedString = makeQuotedStringMatcher( (\"'\") );\n\t\n\tvar readStringLiteral = function ( parser ) {\n\t\tvar start, string;\n\t\n\t\tstart = parser.pos;\n\t\n\t\tif ( parser.matchString( '\"' ) ) {\n\t\t\tstring = getDoubleQuotedString( parser );\n\t\n\t\t\tif ( !parser.matchString( '\"' ) ) {\n\t\t\t\tparser.pos = start;\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tt: STRING_LITERAL,\n\t\t\t\tv: string\n\t\t\t};\n\t\t}\n\t\n\t\tif ( parser.matchString( (\"'\") ) ) {\n\t\t\tstring = getSingleQuotedString( parser );\n\t\n\t\t\tif ( !parser.matchString( (\"'\") ) ) {\n\t\t\t\tparser.pos = start;\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tt: STRING_LITERAL,\n\t\t\t\tv: string\n\t\t\t};\n\t\t}\n\t\n\t\treturn null;\n\t};\n\t\n\tvar name = /^[a-zA-Z_$][a-zA-Z_$0-9]*/;\n\t\n\tvar identifier = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;\n\t\n\t// http://mathiasbynens.be/notes/javascript-properties\n\t// can be any name, string literal, or number literal\n\tfunction readKey ( parser ) {\n\t\tvar token;\n\t\n\t\tif ( token = readStringLiteral( parser ) ) {\n\t\t\treturn identifier.test( token.v ) ? token.v : '\"' + token.v.replace( /\"/g, '\\\\\"' ) + '\"';\n\t\t}\n\t\n\t\tif ( token = readNumberLiteral$1( parser ) ) {\n\t\t\treturn token.v;\n\t\t}\n\t\n\t\tif ( token = parser.matchPattern( name ) ) {\n\t\t\treturn token;\n\t\t}\n\t\n\t\treturn null;\n\t}\n\t\n\tfunction readKeyValuePair ( parser ) {\n\t\tvar start, key, value;\n\t\n\t\tstart = parser.pos;\n\t\n\t\t// allow whitespace between '{' and key\n\t\tparser.allowWhitespace();\n\t\n\t\tvar refKey = parser.nextChar() !== '\\'' && parser.nextChar() !== '\"';\n\t\n\t\tkey = readKey( parser );\n\t\tif ( key === null ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// allow whitespace between key and ':'\n\t\tparser.allowWhitespace();\n\t\n\t\t// es2015 shorthand property\n\t\tif ( refKey && ( parser.nextChar() === ',' || parser.nextChar() === '}' ) ) {\n\t\t\tif ( !name.test( key ) ) {\n\t\t\t\tparser.error( (\"Expected a valid reference, but found '\" + key + \"' instead.\") );\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tt: KEY_VALUE_PAIR,\n\t\t\t\tk: key,\n\t\t\t\tv: {\n\t\t\t\t\tt: REFERENCE,\n\t\t\t\t\tn: key\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\t// next character must be ':'\n\t\tif ( !parser.matchString( ':' ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// allow whitespace between ':' and value\n\t\tparser.allowWhitespace();\n\t\n\t\t// next expression must be a, well... expression\n\t\tvalue = readExpression( parser );\n\t\tif ( value === null ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\treturn {\n\t\t\tt: KEY_VALUE_PAIR,\n\t\t\tk: key,\n\t\t\tv: value\n\t\t};\n\t}\n\t\n\tfunction readKeyValuePairs ( parser ) {\n\t\tvar start, pairs, pair, keyValuePairs;\n\t\n\t\tstart = parser.pos;\n\t\n\t\tpair = readKeyValuePair( parser );\n\t\tif ( pair === null ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tpairs = [ pair ];\n\t\n\t\tif ( parser.matchString( ',' ) ) {\n\t\t\tkeyValuePairs = readKeyValuePairs( parser );\n\t\n\t\t\tif ( !keyValuePairs ) {\n\t\t\t\tparser.pos = start;\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\treturn pairs.concat( keyValuePairs );\n\t\t}\n\t\n\t\treturn pairs;\n\t}\n\t\n\tvar readObjectLiteral = function ( parser ) {\n\t\tvar start, keyValuePairs;\n\t\n\t\tstart = parser.pos;\n\t\n\t\t// allow whitespace\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( '{' ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\tkeyValuePairs = readKeyValuePairs( parser );\n\t\n\t\t// allow whitespace between final value and '}'\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( '}' ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\treturn {\n\t\t\tt: OBJECT_LITERAL,\n\t\t\tm: keyValuePairs\n\t\t};\n\t};\n\t\n\tfunction readExpressionList ( parser ) {\n\t\tparser.allowWhitespace();\n\t\n\t\tvar expr = readExpression( parser );\n\t\n\t\tif ( expr === null ) return null;\n\t\n\t\tvar expressions = [ expr ];\n\t\n\t\t// allow whitespace between expression and ','\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( parser.matchString( ',' ) ) {\n\t\t\tvar next = readExpressionList( parser );\n\t\t\tif ( next === null ) parser.error( expectedExpression );\n\t\n\t\t\texpressions.push.apply( expressions, next );\n\t\t}\n\t\n\t\treturn expressions;\n\t}\n\t\n\tvar readArrayLiteral = function ( parser ) {\n\t\tvar start, expressionList;\n\t\n\t\tstart = parser.pos;\n\t\n\t\t// allow whitespace before '['\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( '[' ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\texpressionList = readExpressionList( parser );\n\t\n\t\tif ( !parser.matchString( ']' ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\treturn {\n\t\t\tt: ARRAY_LITERAL,\n\t\t\tm: expressionList\n\t\t};\n\t};\n\t\n\tfunction readLiteral ( parser ) {\n\t\treturn readNumberLiteral$1( parser )  ||\n\t\t       readBooleanLiteral( parser ) ||\n\t\t       readStringLiteral( parser )  ||\n\t\t       readObjectLiteral( parser )  ||\n\t\t       readArrayLiteral( parser )   ||\n\t\t       readNumberLiteral( parser );\n\t}\n\t\n\tvar prefixPattern = /^(?:~\\/|(?:\\.\\.\\/)+|\\.\\/(?:\\.\\.\\/)*|\\.)/;\n\tvar globals;\n\tvar keywords;\n\t\n\t// if a reference is a browser global, we don't deference it later, so it needs special treatment\n\tglobals = /^(?:Array|console|Date|RegExp|decodeURIComponent|decodeURI|encodeURIComponent|encodeURI|isFinite|isNaN|parseFloat|parseInt|JSON|Math|NaN|undefined|null|Object|Number|String|Boolean)\\b/;\n\t\n\t// keywords are not valid references, with the exception of `this`\n\tkeywords = /^(?:break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|throw|try|typeof|var|void|while|with)$/;\n\t\n\tvar legalReference = /^(?:[a-zA-Z$_0-9]|\\\\\\.)+(?:(?:\\.(?:[a-zA-Z$_0-9]|\\\\\\.)+)|(?:\\[[0-9]+\\]))*/;\n\tvar relaxedName = /^[a-zA-Z_$][-\\/a-zA-Z_$0-9]*/;\n\tvar specials = /^@(?:keypath|rootpath|index|key|this|global)/;\n\tvar specialCall = /^\\s*\\(/;\n\tvar spreadPattern = /^\\s*\\.{3}/;\n\t\n\tfunction readReference ( parser ) {\n\t\tvar startPos, prefix, name, global, reference, fullLength, lastDotIndex, spread;\n\t\n\t\tstartPos = parser.pos;\n\t\n\t\tname = parser.matchPattern( specials );\n\t\n\t\tif ( name === '@keypath' || name === '@rootpath' ) {\n\t\t\tif ( parser.matchPattern( specialCall ) ) {\n\t\t\t\tvar ref = readReference( parser );\n\t\t\t\tif ( !ref ) parser.error( (\"Expected a valid reference for a keypath expression\") );\n\t\n\t\t\t\tparser.allowWhitespace();\n\t\n\t\t\t\tif ( !parser.matchString( ')' ) ) parser.error( (\"Unclosed keypath expression\") );\n\t\t\t\tname += \"(\" + (ref.n) + \")\";\n\t\t\t}\n\t\t}\n\t\n\t\tspread = !name && parser.spreadArgs && parser.matchPattern( spreadPattern );\n\t\n\t\tif ( !name ) {\n\t\t\tprefix = parser.matchPattern( prefixPattern ) || '';\n\t\t\tname = ( !prefix && parser.relaxedNames && parser.matchPattern( relaxedName ) ) ||\n\t\t\t       parser.matchPattern( legalReference );\n\t\n\t\t\tif ( !name && prefix === '.' ) {\n\t\t\t\tprefix = '';\n\t\t\t\tname = '.';\n\t\t\t} else if ( !name && prefix ) {\n\t\t\t\tname = prefix;\n\t\t\t\tprefix = '';\n\t\t\t}\n\t\t}\n\t\n\t\tif ( !name ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// bug out if it's a keyword (exception for ancestor/restricted refs - see https://github.com/ractivejs/ractive/issues/1497)\n\t\tif ( !prefix && !parser.relaxedNames && keywords.test( name ) ) {\n\t\t\tparser.pos = startPos;\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// if this is a browser global, stop here\n\t\tif ( !prefix && globals.test( name ) ) {\n\t\t\tglobal = globals.exec( name )[0];\n\t\t\tparser.pos = startPos + global.length;\n\t\n\t\t\treturn {\n\t\t\t\tt: GLOBAL,\n\t\t\t\tv: ( spread ? '...' : '' ) + global\n\t\t\t};\n\t\t}\n\t\n\t\tfullLength = ( spread ? 3 : 0 ) + ( prefix || '' ).length + name.length;\n\t\treference = ( prefix || '' ) + normalise( name );\n\t\n\t\tif ( parser.matchString( '(' ) ) {\n\t\t\t// if this is a method invocation (as opposed to a function) we need\n\t\t\t// to strip the method name from the reference combo, else the context\n\t\t\t// will be wrong\n\t\t\t// but only if the reference was actually a member and not a refinement\n\t\t\tlastDotIndex = reference.lastIndexOf( '.' );\n\t\t\tif ( lastDotIndex !== -1 && name[ name.length - 1 ] !== ']' ) {\n\t\t\t\tvar refLength = reference.length;\n\t\t\t\treference = reference.substr( 0, lastDotIndex );\n\t\t\t\tparser.pos = startPos + (fullLength - ( refLength - lastDotIndex ) );\n\t\t\t} else {\n\t\t\t\tparser.pos -= 1;\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tt: REFERENCE,\n\t\t\tn: ( spread ? '...' : '' ) + reference.replace( /^this\\./, './' ).replace( /^this$/, '.' )\n\t\t};\n\t}\n\t\n\tfunction readBracketedExpression ( parser ) {\n\t\tif ( !parser.matchString( '(' ) ) return null;\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tvar expr = readExpression( parser );\n\t\n\t\tif ( !expr ) parser.error( expectedExpression );\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( ')' ) ) parser.error( expectedParen );\n\t\n\t\treturn {\n\t\t\tt: BRACKETED,\n\t\t\tx: expr\n\t\t};\n\t}\n\t\n\tvar readPrimary = function ( parser ) {\n\t\treturn readLiteral( parser )\n\t\t\t|| readReference( parser )\n\t\t\t|| readBracketedExpression( parser );\n\t};\n\t\n\tfunction readRefinement ( parser ) {\n\t\t// some things call for strict refinement (partial names), meaning no space between reference and refinement\n\t\tif ( !parser.strictRefinement ) {\n\t\t\tparser.allowWhitespace();\n\t\t}\n\t\n\t\t// \".\" name\n\t\tif ( parser.matchString( '.' ) ) {\n\t\t\tparser.allowWhitespace();\n\t\n\t\t\tvar name$$1 = parser.matchPattern( name );\n\t\t\tif ( name$$1 ) {\n\t\t\t\treturn {\n\t\t\t\t\tt: REFINEMENT,\n\t\t\t\t\tn: name$$1\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tparser.error( 'Expected a property name' );\n\t\t}\n\t\n\t\t// \"[\" expression \"]\"\n\t\tif ( parser.matchString( '[' ) ) {\n\t\t\tparser.allowWhitespace();\n\t\n\t\t\tvar expr = readExpression( parser );\n\t\t\tif ( !expr ) parser.error( expectedExpression );\n\t\n\t\t\tparser.allowWhitespace();\n\t\n\t\t\tif ( !parser.matchString( ']' ) ) parser.error( (\"Expected ']'\") );\n\t\n\t\t\treturn {\n\t\t\t\tt: REFINEMENT,\n\t\t\t\tx: expr\n\t\t\t};\n\t\t}\n\t\n\t\treturn null;\n\t}\n\t\n\tvar readMemberOrInvocation = function ( parser ) {\n\t\tvar expression = readPrimary( parser );\n\t\n\t\tif ( !expression ) return null;\n\t\n\t\twhile ( expression ) {\n\t\t\tvar refinement = readRefinement( parser );\n\t\t\tif ( refinement ) {\n\t\t\t\texpression = {\n\t\t\t\t\tt: MEMBER,\n\t\t\t\t\tx: expression,\n\t\t\t\t\tr: refinement\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\telse if ( parser.matchString( '(' ) ) {\n\t\t\t\tparser.allowWhitespace();\n\t\t\t\tvar start = parser.spreadArgs;\n\t\t\t\tparser.spreadArgs = true;\n\t\t\t\tvar expressionList = readExpressionList( parser );\n\t\t\t\tparser.spreadArgs = start;\n\t\n\t\t\t\tparser.allowWhitespace();\n\t\n\t\t\t\tif ( !parser.matchString( ')' ) ) {\n\t\t\t\t\tparser.error( expectedParen );\n\t\t\t\t}\n\t\n\t\t\t\texpression = {\n\t\t\t\t\tt: INVOCATION,\n\t\t\t\t\tx: expression\n\t\t\t\t};\n\t\n\t\t\t\tif ( expressionList ) expression.o = expressionList;\n\t\t\t}\n\t\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\n\t\treturn expression;\n\t};\n\t\n\tvar readTypeOf;\n\tvar makePrefixSequenceMatcher;\n\t\n\tmakePrefixSequenceMatcher = function ( symbol, fallthrough ) {\n\t\treturn function ( parser ) {\n\t\t\tvar expression;\n\t\n\t\t\tif ( expression = fallthrough( parser ) ) {\n\t\t\t\treturn expression;\n\t\t\t}\n\t\n\t\t\tif ( !parser.matchString( symbol ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tparser.allowWhitespace();\n\t\n\t\t\texpression = readExpression( parser );\n\t\t\tif ( !expression ) {\n\t\t\t\tparser.error( expectedExpression );\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\ts: symbol,\n\t\t\t\to: expression,\n\t\t\t\tt: PREFIX_OPERATOR\n\t\t\t};\n\t\t};\n\t};\n\t\n\t// create all prefix sequence matchers, return readTypeOf\n\t(function() {\n\t\tvar i, len, matcher, prefixOperators, fallthrough;\n\t\n\t\tprefixOperators = '! ~ + - typeof'.split( ' ' );\n\t\n\t\tfallthrough = readMemberOrInvocation;\n\t\tfor ( i = 0, len = prefixOperators.length; i < len; i += 1 ) {\n\t\t\tmatcher = makePrefixSequenceMatcher( prefixOperators[i], fallthrough );\n\t\t\tfallthrough = matcher;\n\t\t}\n\t\n\t\t// typeof operator is higher precedence than multiplication, so provides the\n\t\t// fallthrough for the multiplication sequence matcher we're about to create\n\t\t// (we're skipping void and delete)\n\t\treadTypeOf = fallthrough;\n\t}());\n\t\n\tvar readTypeof = readTypeOf;\n\t\n\tvar readLogicalOr;\n\tvar makeInfixSequenceMatcher;\n\t\n\tmakeInfixSequenceMatcher = function ( symbol, fallthrough ) {\n\t\treturn function ( parser ) {\n\t\t\tvar start, left, right;\n\t\n\t\t\tleft = fallthrough( parser );\n\t\t\tif ( !left ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\t// Loop to handle left-recursion in a case like `a * b * c` and produce\n\t\t\t// left association, i.e. `(a * b) * c`.  The matcher can't call itself\n\t\t\t// to parse `left` because that would be infinite regress.\n\t\t\twhile ( true ) {\n\t\t\t\tstart = parser.pos;\n\t\n\t\t\t\tparser.allowWhitespace();\n\t\n\t\t\t\tif ( !parser.matchString( symbol ) ) {\n\t\t\t\t\tparser.pos = start;\n\t\t\t\t\treturn left;\n\t\t\t\t}\n\t\n\t\t\t\t// special case - in operator must not be followed by [a-zA-Z_$0-9]\n\t\t\t\tif ( symbol === 'in' && /[a-zA-Z_$0-9]/.test( parser.remaining().charAt( 0 ) ) ) {\n\t\t\t\t\tparser.pos = start;\n\t\t\t\t\treturn left;\n\t\t\t\t}\n\t\n\t\t\t\tparser.allowWhitespace();\n\t\n\t\t\t\t// right operand must also consist of only higher-precedence operators\n\t\t\t\tright = fallthrough( parser );\n\t\t\t\tif ( !right ) {\n\t\t\t\t\tparser.pos = start;\n\t\t\t\t\treturn left;\n\t\t\t\t}\n\t\n\t\t\t\tleft = {\n\t\t\t\t\tt: INFIX_OPERATOR,\n\t\t\t\t\ts: symbol,\n\t\t\t\t\to: [ left, right ]\n\t\t\t\t};\n\t\n\t\t\t\t// Loop back around.  If we don't see another occurrence of the symbol,\n\t\t\t\t// we'll return left.\n\t\t\t}\n\t\t};\n\t};\n\t\n\t// create all infix sequence matchers, and return readLogicalOr\n\t(function() {\n\t\tvar i, len, matcher, infixOperators, fallthrough;\n\t\n\t\t// All the infix operators on order of precedence (source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Operator_Precedence)\n\t\t// Each sequence matcher will initially fall through to its higher precedence\n\t\t// neighbour, and only attempt to match if one of the higher precedence operators\n\t\t// (or, ultimately, a literal, reference, or bracketed expression) already matched\n\t\tinfixOperators = '* / % + - << >> >>> < <= > >= in instanceof == != === !== & ^ | && ||'.split( ' ' );\n\t\n\t\t// A typeof operator is higher precedence than multiplication\n\t\tfallthrough = readTypeof;\n\t\tfor ( i = 0, len = infixOperators.length; i < len; i += 1 ) {\n\t\t\tmatcher = makeInfixSequenceMatcher( infixOperators[i], fallthrough );\n\t\t\tfallthrough = matcher;\n\t\t}\n\t\n\t\t// Logical OR is the fallthrough for the conditional matcher\n\t\treadLogicalOr = fallthrough;\n\t}());\n\t\n\tvar readLogicalOr$1 = readLogicalOr;\n\t\n\t// The conditional operator is the lowest precedence operator, so we start here\n\tfunction getConditional ( parser ) {\n\t\tvar start, expression, ifTrue, ifFalse;\n\t\n\t\texpression = readLogicalOr$1( parser );\n\t\tif ( !expression ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tstart = parser.pos;\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( '?' ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn expression;\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tifTrue = readExpression( parser );\n\t\tif ( !ifTrue ) {\n\t\t\tparser.error( expectedExpression );\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( ':' ) ) {\n\t\t\tparser.error( 'Expected \":\"' );\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tifFalse = readExpression( parser );\n\t\tif ( !ifFalse ) {\n\t\t\tparser.error( expectedExpression );\n\t\t}\n\t\n\t\treturn {\n\t\t\tt: CONDITIONAL,\n\t\t\to: [ expression, ifTrue, ifFalse ]\n\t\t};\n\t}\n\t\n\tfunction readExpression ( parser ) {\n\t\t// The conditional operator is the lowest precedence operator (except yield,\n\t\t// assignment operators, and commas, none of which are supported), so we\n\t\t// start there. If it doesn't match, it 'falls through' to progressively\n\t\t// higher precedence operators, until it eventually matches (or fails to\n\t\t// match) a 'primary' - a literal or a reference. This way, the abstract syntax\n\t\t// tree has everything in its proper place, i.e. 2 + 3 * 4 === 14, not 20.\n\t\treturn getConditional( parser );\n\t}\n\t\n\tfunction flattenExpression ( expression ) {\n\t\tvar refs, count = 0, stringified;\n\t\n\t\textractRefs( expression, refs = [] );\n\t\tstringified = stringify( expression );\n\t\n\t\trefs = refs.map( function ( r ) { return r.indexOf( '...' ) === 0 ? r.substr( 3 ) : r; } );\n\t\n\t\treturn {\n\t\t\tr: refs,\n\t\t\ts: getVars(stringified)\n\t\t};\n\t\n\t\tfunction getVars(expr) {\n\t\t\tvar vars = [];\n\t\t\tfor ( var i = count - 1; i >= 0; i-- ) {\n\t\t\t\tvars.push( (\"spread$\" + i) );\n\t\t\t}\n\t\t\treturn vars.length ? (\"(function(){var \" + (vars.join(',')) + \";return(\" + expr + \");})()\") : expr;\n\t\t}\n\t\n\t\tfunction stringify ( node ) {\n\t\t\tswitch ( node.t ) {\n\t\t\t\tcase BOOLEAN_LITERAL:\n\t\t\t\tcase GLOBAL:\n\t\t\t\tcase NUMBER_LITERAL:\n\t\t\t\tcase REGEXP_LITERAL:\n\t\t\t\t\treturn node.v;\n\t\n\t\t\t\tcase STRING_LITERAL:\n\t\t\t\t\treturn JSON.stringify( String( node.v ) );\n\t\n\t\t\t\tcase ARRAY_LITERAL:\n\t\t\t\t\treturn '[' + ( node.m ? node.m.map( stringify ).join( ',' ) : '' ) + ']';\n\t\n\t\t\t\tcase OBJECT_LITERAL:\n\t\t\t\t\treturn '{' + ( node.m ? node.m.map( stringify ).join( ',' ) : '' ) + '}';\n\t\n\t\t\t\tcase KEY_VALUE_PAIR:\n\t\t\t\t\treturn node.k + ':' + stringify( node.v );\n\t\n\t\t\t\tcase PREFIX_OPERATOR:\n\t\t\t\t\treturn ( node.s === 'typeof' ? 'typeof ' : node.s ) + stringify( node.o );\n\t\n\t\t\t\tcase INFIX_OPERATOR:\n\t\t\t\t\treturn stringify( node.o[0] ) + ( node.s.substr( 0, 2 ) === 'in' ? ' ' + node.s + ' ' : node.s ) + stringify( node.o[1] );\n\t\n\t\t\t\tcase INVOCATION:\n\t\t\t\t\tif ( node.spread ) {\n\t\t\t\t\t\tvar id = count++;\n\t\t\t\t\t\treturn (\"(spread$\" + id + \" = \" + (stringify(node.x)) + \").apply(spread$\" + id + \", [].concat(\" + (node.o ? node.o.map( function ( a ) { return a.n && a.n.indexOf( '...' ) === 0 ? stringify( a ) : '[' + stringify(a) + ']'; } ).join( ',' ) : '') + \") )\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn stringify( node.x ) + '(' + ( node.o ? node.o.map( stringify ).join( ',' ) : '' ) + ')';\n\t\t\t\t\t}\n\t\n\t\t\t\tcase BRACKETED:\n\t\t\t\t\treturn '(' + stringify( node.x ) + ')';\n\t\n\t\t\t\tcase MEMBER:\n\t\t\t\t\treturn stringify( node.x ) + stringify( node.r );\n\t\n\t\t\t\tcase REFINEMENT:\n\t\t\t\t\treturn ( node.n ? '.' + node.n : '[' + stringify( node.x ) + ']' );\n\t\n\t\t\t\tcase CONDITIONAL:\n\t\t\t\t\treturn stringify( node.o[0] ) + '?' + stringify( node.o[1] ) + ':' + stringify( node.o[2] );\n\t\n\t\t\t\tcase REFERENCE:\n\t\t\t\t\treturn '_' + refs.indexOf( node.n );\n\t\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Expected legal JavaScript' );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// TODO maybe refactor this?\n\tfunction extractRefs ( node, refs ) {\n\t\tvar i, list;\n\t\n\t\tif ( node.t === REFERENCE ) {\n\t\t\tif ( refs.indexOf( node.n ) === -1 ) {\n\t\t\t\trefs.unshift( node.n );\n\t\t\t}\n\t\t}\n\t\n\t\tlist = node.o || node.m;\n\t\tif ( list ) {\n\t\t\tif ( isObject( list ) ) {\n\t\t\t\textractRefs( list, refs );\n\t\t\t} else {\n\t\t\t\ti = list.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( list[i].n && list[i].n.indexOf('...') === 0 ) {\n\t\t\t\t\t\tnode.spread = true;\n\t\t\t\t\t}\n\t\t\t\t\textractRefs( list[i], refs );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif ( node.x ) {\n\t\t\textractRefs( node.x, refs );\n\t\t}\n\t\n\t\tif ( node.r ) {\n\t\t\textractRefs( node.r, refs );\n\t\t}\n\t\n\t\tif ( node.v ) {\n\t\t\textractRefs( node.v, refs );\n\t\t}\n\t}\n\t\n\t// simple JSON parser, without the restrictions of JSON parse\n\t// (i.e. having to double-quote keys).\n\t//\n\t// If passed a hash of values as the second argument, ${placeholders}\n\t// will be replaced with those values\n\t\n\tvar specials$1 = {\n\t\t'true': true,\n\t\t'false': false,\n\t\t'null': null,\n\t\tundefined: undefined\n\t};\n\t\n\tvar specialsPattern = new RegExp( '^(?:' + Object.keys( specials$1 ).join( '|' ) + ')' );\n\tvar numberPattern$1 = /^(?:[+-]?)(?:(?:(?:0|[1-9]\\d*)?\\.\\d+)|(?:(?:0|[1-9]\\d*)\\.)|(?:0|[1-9]\\d*))(?:[eE][+-]?\\d+)?/;\n\tvar placeholderPattern = /\\$\\{([^\\}]+)\\}/g;\n\tvar placeholderAtStartPattern = /^\\$\\{([^\\}]+)\\}/;\n\tvar onlyWhitespace = /^\\s*$/;\n\t\n\tvar JsonParser = Parser$1.extend({\n\t\tinit: function ( str, options ) {\n\t\t\tthis.values = options.values;\n\t\t\tthis.allowWhitespace();\n\t\t},\n\t\n\t\tpostProcess: function ( result ) {\n\t\t\tif ( result.length !== 1 || !onlyWhitespace.test( this.leftover ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\treturn { value: result[0].v };\n\t\t},\n\t\n\t\tconverters: [\n\t\t\tfunction getPlaceholder ( parser ) {\n\t\t\t\tif ( !parser.values ) return null;\n\t\n\t\t\t\tvar placeholder = parser.matchPattern( placeholderAtStartPattern );\n\t\n\t\t\t\tif ( placeholder && ( parser.values.hasOwnProperty( placeholder ) ) ) {\n\t\t\t\t\treturn { v: parser.values[ placeholder ] };\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tfunction getSpecial ( parser ) {\n\t\t\t\tvar special = parser.matchPattern( specialsPattern );\n\t\t\t\tif ( special ) return { v: specials$1[ special ] };\n\t\t\t},\n\t\n\t\t\tfunction getNumber ( parser ) {\n\t\t\t\tvar number = parser.matchPattern( numberPattern$1 );\n\t\t\t\tif ( number ) return { v: +number };\n\t\t\t},\n\t\n\t\t\tfunction getString ( parser ) {\n\t\t\t\tvar stringLiteral = readStringLiteral( parser );\n\t\t\t\tvar values = parser.values;\n\t\n\t\t\t\tif ( stringLiteral && values ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tv: stringLiteral.v.replace( placeholderPattern, function ( match, $1 ) { return ( $1 in values ? values[ $1 ] : $1 ); } )\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\treturn stringLiteral;\n\t\t\t},\n\t\n\t\t\tfunction getObject ( parser ) {\n\t\t\t\tif ( !parser.matchString( '{' ) ) return null;\n\t\n\t\t\t\tvar result = {};\n\t\n\t\t\t\tparser.allowWhitespace();\n\t\n\t\t\t\tif ( parser.matchString( '}' ) ) {\n\t\t\t\t\treturn { v: result };\n\t\t\t\t}\n\t\n\t\t\t\tvar pair;\n\t\t\t\twhile ( pair = getKeyValuePair( parser ) ) {\n\t\t\t\t\tresult[ pair.key ] = pair.value;\n\t\n\t\t\t\t\tparser.allowWhitespace();\n\t\n\t\t\t\t\tif ( parser.matchString( '}' ) ) {\n\t\t\t\t\t\treturn { v: result };\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( !parser.matchString( ',' ) ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\t\t},\n\t\n\t\t\tfunction getArray ( parser ) {\n\t\t\t\tif ( !parser.matchString( '[' ) ) return null;\n\t\n\t\t\t\tvar result = [];\n\t\n\t\t\t\tparser.allowWhitespace();\n\t\n\t\t\t\tif ( parser.matchString( ']' ) ) {\n\t\t\t\t\treturn { v: result };\n\t\t\t\t}\n\t\n\t\t\t\tvar valueToken;\n\t\t\t\twhile ( valueToken = parser.read() ) {\n\t\t\t\t\tresult.push( valueToken.v );\n\t\n\t\t\t\t\tparser.allowWhitespace();\n\t\n\t\t\t\t\tif ( parser.matchString( ']' ) ) {\n\t\t\t\t\t\treturn { v: result };\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( !parser.matchString( ',' ) ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tparser.allowWhitespace();\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\t\t}\n\t\t]\n\t});\n\t\n\tfunction getKeyValuePair ( parser ) {\n\t\tparser.allowWhitespace();\n\t\n\t\tvar key = readKey( parser );\n\t\n\t\tif ( !key ) return null;\n\t\n\t\tvar pair = { key: key };\n\t\n\t\tparser.allowWhitespace();\n\t\tif ( !parser.matchString( ':' ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tparser.allowWhitespace();\n\t\n\t\tvar valueToken = parser.read();\n\t\n\t\tif ( !valueToken ) return null;\n\t\n\t\tpair.value = valueToken.v;\n\t\treturn pair;\n\t}\n\t\n\tvar parseJSON = function ( str, values ) {\n\t\tvar parser = new JsonParser( str, { values: values });\n\t\treturn parser.result;\n\t};\n\t\n\tvar methodCallPattern = /^([a-zA-Z_$][a-zA-Z_$0-9]*)\\(.*\\)\\s*$/;\n\tvar ExpressionParser;\n\t\n\tExpressionParser = Parser$1.extend({\n\t\tconverters: [ readExpression ],\n\t\tspreadArgs: true\n\t});\n\t\n\t// TODO clean this up, it's shocking\n\tfunction processDirective ( tokens, parentParser, type ) {\n\t\tvar result,\n\t\t\tmatch,\n\t\t\ttoken,\n\t\t\tcolonIndex,\n\t\t\tdirectiveName,\n\t\t\tdirectiveArgs,\n\t\t\tparsed;\n\t\n\t\tif ( typeof tokens === 'string' ) {\n\t\t\tif ( type === DECORATOR || type === TRANSITION ) {\n\t\t\t\tvar parser = new ExpressionParser( (\"[\" + tokens + \"]\") );\n\t\t\t\treturn { a: flattenExpression( parser.result[0] ) };\n\t\t\t}\n\t\n\t\t\tif ( type === EVENT && ( match = methodCallPattern.exec( tokens ) ) ) {\n\t\t\t\twarnOnceIfDebug( (\"Unqualified method events are deprecated. Prefix methods with '@this.' to call methods on the current Ractive instance.\") );\n\t\t\t\ttokens = \"@this.\" + (match[1]) + \"\" + (tokens.substr(match[1].length));\n\t\t\t}\n\t\n\t\t\tif ( type === EVENT && ~tokens.indexOf( '(' ) ) {\n\t\t\t\tvar parser$1 = new ExpressionParser( '[' + tokens + ']' );\n\t\t\t\tif ( parser$1.result && parser$1.result[0] ) {\n\t\t\t\t\tif ( parser$1.remaining().length ) {\n\t\t\t\t\t\tparentParser.error( (\"Invalid input after event expression '\" + (parser$1.remaining()) + \"'\") );\n\t\t\t\t\t}\n\t\t\t\t\treturn { x: flattenExpression( parser$1.result[0] ) };\n\t\t\t\t}\n\t\n\t\t\t\tif ( tokens.indexOf( ':' ) > tokens.indexOf( '(' ) || !~tokens.indexOf( ':' ) ) {\n\t\t\t\t\tparentParser.error( (\"Invalid input in event expression '\" + tokens + \"'\") );\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tif ( tokens.indexOf( ':' ) === -1 ) {\n\t\t\t\treturn tokens.trim();\n\t\t\t}\n\t\n\t\t\ttokens = [ tokens ];\n\t\t}\n\t\n\t\tresult = {};\n\t\n\t\tdirectiveName = [];\n\t\tdirectiveArgs = [];\n\t\n\t\tif ( tokens ) {\n\t\t\twhile ( tokens.length ) {\n\t\t\t\ttoken = tokens.shift();\n\t\n\t\t\t\tif ( typeof token === 'string' ) {\n\t\t\t\t\tcolonIndex = token.indexOf( ':' );\n\t\n\t\t\t\t\tif ( colonIndex === -1 ) {\n\t\t\t\t\t\tdirectiveName.push( token );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// is the colon the first character?\n\t\t\t\t\t\tif ( colonIndex ) {\n\t\t\t\t\t\t\t// no\n\t\t\t\t\t\t\tdirectiveName.push( token.substr( 0, colonIndex ) );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// if there is anything after the colon in this token, treat\n\t\t\t\t\t\t// it as the first token of the directiveArgs fragment\n\t\t\t\t\t\tif ( token.length > colonIndex + 1 ) {\n\t\t\t\t\t\t\tdirectiveArgs[0] = token.substring( colonIndex + 1 );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\telse {\n\t\t\t\t\tdirectiveName.push( token );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tdirectiveArgs = directiveArgs.concat( tokens );\n\t\t}\n\t\n\t\tif ( !directiveName.length ) {\n\t\t\tresult = '';\n\t\t} else if ( directiveArgs.length || typeof directiveName !== 'string' ) {\n\t\t\tresult = {\n\t\t\t\t// TODO is this really necessary? just use the array\n\t\t\t\tn: ( directiveName.length === 1 && typeof directiveName[0] === 'string' ? directiveName[0] : directiveName )\n\t\t\t};\n\t\n\t\t\tif ( directiveArgs.length === 1 && typeof directiveArgs[0] === 'string' ) {\n\t\t\t\tparsed = parseJSON( '[' + directiveArgs[0] + ']' );\n\t\t\t\tresult.a = parsed ? parsed.value : [ directiveArgs[0].trim() ];\n\t\t\t}\n\t\n\t\t\telse {\n\t\t\t\tresult.d = directiveArgs;\n\t\t\t}\n\t\t} else {\n\t\t\tresult = directiveName;\n\t\t}\n\t\n\t\tif ( directiveArgs.length ) {\n\t\t\twarnOnceIfDebug( (\"Proxy events with arguments are deprecated. You can fire events with arguments using \\\"@this.fire('eventName', arg1, arg2, ...)\\\".\") );\n\t\t}\n\t\n\t\treturn result;\n\t}\n\t\n\tvar attributeNamePattern = /^[^\\s\"'>\\/=]+/;\n\tvar onPattern = /^on/;\n\tvar proxyEventPattern = /^on-([a-zA-Z\\\\*\\\\.$_][a-zA-Z\\\\*\\\\.$_0-9\\-]+)$/;\n\tvar reservedEventNames = /^(?:change|reset|teardown|update|construct|config|init|render|unrender|detach|insert)$/;\n\tvar decoratorPattern = /^as-([a-z-A-Z][-a-zA-Z_0-9]*)$/;\n\tvar transitionPattern = /^([a-zA-Z](?:(?!-in-out)[-a-zA-Z_0-9])*)-(in|out|in-out)$/;\n\tvar directives = {\n\t\t\t\t\t   'intro-outro': { t: TRANSITION, v: 't0' },\n\t\t\t\t\t   intro: { t: TRANSITION, v: 't1' },\n\t\t\t\t\t   outro: { t: TRANSITION, v: 't2' },\n\t\t\t\t\t   lazy: { t: BINDING_FLAG, v: 'l' },\n\t\t\t\t\t   twoway: { t: BINDING_FLAG, v: 't' },\n\t\t\t\t\t   decorator: { t: DECORATOR }\n\t\t\t\t\t };\n\tvar unquotedAttributeValueTextPattern = /^[^\\s\"'=<>`]+/;\n\t\n\tfunction readAttribute ( parser ) {\n\t\tvar attr, name, value, i, nearest, idx;\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tname = parser.matchPattern( attributeNamePattern );\n\t\tif ( !name ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// check for accidental delimiter consumption e.g. <tag bool{{>attrs}} />\n\t\tnearest = name.length;\n\t\tfor ( i = 0; i < parser.tags.length; i++ ) {\n\t\t\tif ( ~( idx = name.indexOf( parser.tags[ i ].open ) ) ) {\n\t\t\t\tif ( idx < nearest ) nearest = idx;\n\t\t\t}\n\t\t}\n\t\tif ( nearest < name.length ) {\n\t\t\tparser.pos -= name.length - nearest;\n\t\t\tname = name.substr( 0, nearest );\n\t\t\treturn { n: name };\n\t\t}\n\t\n\t\tattr = { n: name };\n\t\n\t\tvalue = readAttributeValue( parser );\n\t\tif ( value != null ) { // not null/undefined\n\t\t\tattr.f = value;\n\t\t}\n\t\n\t\treturn attr;\n\t}\n\t\n\tfunction readAttributeValue ( parser ) {\n\t\tvar start, valueStart, startDepth, value;\n\t\n\t\tstart = parser.pos;\n\t\n\t\t// next character must be `=`, `/`, `>` or whitespace\n\t\tif ( !/[=\\/>\\s]/.test( parser.nextChar() ) ) {\n\t\t\tparser.error( 'Expected `=`, `/`, `>` or whitespace' );\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( '=' ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tvalueStart = parser.pos;\n\t\tstartDepth = parser.sectionDepth;\n\t\n\t\tvalue = readQuotedAttributeValue( parser, (\"'\") ) ||\n\t\t\t\treadQuotedAttributeValue( parser, (\"\\\"\") ) ||\n\t\t\t\treadUnquotedAttributeValue( parser );\n\t\n\t\tif ( value === null ) {\n\t\t\tparser.error( 'Expected valid attribute value' );\n\t\t}\n\t\n\t\tif ( parser.sectionDepth !== startDepth ) {\n\t\t\tparser.pos = valueStart;\n\t\t\tparser.error( 'An attribute value must contain as many opening section tags as closing section tags' );\n\t\t}\n\t\n\t\tif ( !value.length ) {\n\t\t\treturn '';\n\t\t}\n\t\n\t\tif ( value.length === 1 && typeof value[0] === 'string' ) {\n\t\t\treturn decodeCharacterReferences( value[0] );\n\t\t}\n\t\n\t\treturn value;\n\t}\n\t\n\tfunction readUnquotedAttributeValueToken ( parser ) {\n\t\tvar start, text, haystack, needles, index;\n\t\n\t\tstart = parser.pos;\n\t\n\t\ttext = parser.matchPattern( unquotedAttributeValueTextPattern );\n\t\n\t\tif ( !text ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\thaystack = text;\n\t\tneedles = parser.tags.map( function ( t ) { return t.open; } ); // TODO refactor... we do this in readText.js as well\n\t\n\t\tif ( ( index = getLowestIndex( haystack, needles ) ) !== -1 ) {\n\t\t\ttext = text.substr( 0, index );\n\t\t\tparser.pos = start + text.length;\n\t\t}\n\t\n\t\treturn text;\n\t}\n\t\n\tfunction readUnquotedAttributeValue ( parser ) {\n\t\tvar tokens, token;\n\t\n\t\tparser.inAttribute = true;\n\t\n\t\ttokens = [];\n\t\n\t\ttoken = readMustache( parser ) || readUnquotedAttributeValueToken( parser );\n\t\twhile ( token ) {\n\t\t\ttokens.push( token );\n\t\t\ttoken = readMustache( parser ) || readUnquotedAttributeValueToken( parser );\n\t\t}\n\t\n\t\tif ( !tokens.length ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tparser.inAttribute = false;\n\t\treturn tokens;\n\t}\n\t\n\tfunction readQuotedAttributeValue ( parser, quoteMark ) {\n\t\tvar start, tokens, token;\n\t\n\t\tstart = parser.pos;\n\t\n\t\tif ( !parser.matchString( quoteMark ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tparser.inAttribute = quoteMark;\n\t\n\t\ttokens = [];\n\t\n\t\ttoken = readMustache( parser ) || readQuotedStringToken( parser, quoteMark );\n\t\twhile ( token !== null ) {\n\t\t\ttokens.push( token );\n\t\t\ttoken = readMustache( parser ) || readQuotedStringToken( parser, quoteMark );\n\t\t}\n\t\n\t\tif ( !parser.matchString( quoteMark ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\tparser.inAttribute = false;\n\t\n\t\treturn tokens;\n\t}\n\t\n\tfunction readQuotedStringToken ( parser, quoteMark ) {\n\t\tvar haystack = parser.remaining();\n\t\n\t\tvar needles = parser.tags.map( function ( t ) { return t.open; } ); // TODO refactor... we do this in readText.js as well\n\t\tneedles.push( quoteMark );\n\t\n\t\tvar index = getLowestIndex( haystack, needles );\n\t\n\t\tif ( index === -1 ) {\n\t\t\tparser.error( 'Quoted attribute value must have a closing quote' );\n\t\t}\n\t\n\t\tif ( !index ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tparser.pos += index;\n\t\treturn haystack.substr( 0, index );\n\t}\n\t\n\tfunction readAttributeOrDirective ( parser ) {\n\t\t\tvar match,\n\t\t\t\tattribute,\n\t\t\t    directive;\n\t\n\t\t\tattribute = readAttribute( parser );\n\t\n\t\t\tif ( !attribute ) return null;\n\t\n\t\t\t// intro, outro, decorator\n\t\t\tif ( directive = directives[ attribute.n ] ) {\n\t\t\t\tattribute.t = directive.t;\n\t\t\t\tif ( directive.v ) attribute.v = directive.v;\n\t\t\t\tdelete attribute.n; // no name necessary\n\t\n\t\t\t\tif ( directive.t === TRANSITION || directive.t === DECORATOR ) attribute.f = processDirective( attribute.f, parser );\n\t\n\t\t\t\tif ( directive.t === TRANSITION ) {\n\t\t\t\t\twarnOnceIfDebug( (\"\" + (directive.v === 't0' ? 'intro-outro' : directive.v === 't1' ? 'intro' : 'outro') + \" is deprecated. To specify tranisitions, use the transition name suffixed with '-in', '-out', or '-in-out' as an attribute. Arguments can be specified in the attribute value as a simple list of expressions without mustaches.\") );\n\t\t\t\t} else if ( directive.t === DECORATOR ) {\n\t\t\t\t\twarnOnceIfDebug( (\"decorator is deprecated. To specify decorators, use the decorator name prefixed with 'as-' as an attribute. Arguments can be specified in the attribute value as a simple list of expressions without mustaches.\") );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// decorators\n\t\t\telse if ( match = decoratorPattern.exec( attribute.n ) ) {\n\t\t\t\tdelete attribute.n;\n\t\t\t\tattribute.t = DECORATOR;\n\t\t\t\tattribute.f = processDirective( attribute.f, parser, DECORATOR );\n\t\t\t\tif ( typeof attribute.f === 'object' ) attribute.f.n = match[1];\n\t\t\t\telse attribute.f = match[1];\n\t\t\t}\n\t\n\t\t\t// transitions\n\t\t\telse if ( match = transitionPattern.exec( attribute.n ) ) {\n\t\t\t\tdelete attribute.n;\n\t\t\t\tattribute.t = TRANSITION;\n\t\t\t\tattribute.f = processDirective( attribute.f, parser, TRANSITION );\n\t\t\t\tif ( typeof attribute.f === 'object' ) attribute.f.n = match[1];\n\t\t\t\telse attribute.f = match[1];\n\t\t\t\tattribute.v = match[2] === 'in-out' ? 't0' : match[2] === 'in' ? 't1' : 't2';\n\t\t\t}\n\t\n\t\t\t// on-click etc\n\t\t\telse if ( match = proxyEventPattern.exec( attribute.n ) ) {\n\t\t\t\tattribute.n = match[1];\n\t\t\t\tattribute.t = EVENT;\n\t\t\t\tattribute.f = processDirective( attribute.f, parser, EVENT );\n\t\n\t\t\t\tif ( reservedEventNames.test( attribute.f.n || attribute.f ) ) {\n\t\t\t\t\tparser.pos -= ( attribute.f.n || attribute.f ).length;\n\t\t\t\t\tparser.error( 'Cannot use reserved event names (change, reset, teardown, update, construct, config, init, render, unrender, detach, insert)' );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\telse {\n\t\t\t\tif ( parser.sanitizeEventAttributes && onPattern.test( attribute.n ) ) {\n\t\t\t\t\treturn { exclude: true };\n\t\t\t\t} else {\n\t\t\t\t\tattribute.f = attribute.f || ( attribute.f === '' ? '' : 0 );\n\t\t\t\t\tattribute.t = ATTRIBUTE;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn attribute;\n\t}\n\t\n\tvar delimiterChangeToken = { t: DELIMCHANGE, exclude: true };\n\t\n\tfunction readMustache ( parser ) {\n\t\tvar mustache, i;\n\t\n\t\t// If we're inside a <script> or <style> tag, and we're not\n\t\t// interpolating, bug out\n\t\tif ( parser.interpolate[ parser.inside ] === false ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tfor ( i = 0; i < parser.tags.length; i += 1 ) {\n\t\t\tif ( mustache = readMustacheOfType( parser, parser.tags[i] ) ) {\n\t\t\t\treturn mustache;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( parser.inTag && !parser.inAttribute ) {\n\t\t\tmustache = readAttributeOrDirective( parser );\n\t\t\tif ( mustache ) {\n\t\t\t\tparser.allowWhitespace();\n\t\t\t\treturn mustache;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction readMustacheOfType ( parser, tag ) {\n\t\tvar start, mustache, reader, i;\n\t\n\t\tstart = parser.pos;\n\t\n\t\tif ( parser.matchString( '\\\\' + tag.open ) ) {\n\t\t\tif ( start === 0 || parser.str[ start - 1 ] !== '\\\\' ) {\n\t\t\t\treturn tag.open;\n\t\t\t}\n\t\t} else if ( !parser.matchString( tag.open ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// delimiter change?\n\t\tif ( mustache = readDelimiterChange( parser ) ) {\n\t\t\t// find closing delimiter or abort...\n\t\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\t// ...then make the switch\n\t\t\ttag.open = mustache[0];\n\t\t\ttag.close = mustache[1];\n\t\t\tparser.sortMustacheTags();\n\t\n\t\t\treturn delimiterChangeToken;\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\t// illegal section closer\n\t\tif ( parser.matchString( '/' ) ) {\n\t\t\tparser.pos -= 1;\n\t\t\tvar rewind = parser.pos;\n\t\t\tif ( !readNumberLiteral( parser ) ) {\n\t\t\t\tparser.pos = rewind - ( tag.close.length );\n\t\t\t\tif ( parser.inAttribute ) {\n\t\t\t\t\tparser.pos = start;\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tparser.error( 'Attempted to close a section that wasn\\'t open' );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparser.pos = rewind;\n\t\t\t}\n\t\t}\n\t\n\t\tfor ( i = 0; i < tag.readers.length; i += 1 ) {\n\t\t\treader = tag.readers[i];\n\t\n\t\t\tif ( mustache = reader( parser, tag ) ) {\n\t\t\t\tif ( tag.isStatic ) {\n\t\t\t\t\tmustache.s = true; // TODO make this `1` instead - more compact\n\t\t\t\t}\n\t\n\t\t\t\tif ( parser.includeLinePositions ) {\n\t\t\t\t\tmustache.p = parser.getLinePos( start );\n\t\t\t\t}\n\t\n\t\t\t\treturn mustache;\n\t\t\t}\n\t\t}\n\t\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\t\n\tfunction refineExpression ( expression, mustache ) {\n\t\tvar referenceExpression;\n\t\n\t\tif ( expression ) {\n\t\t\twhile ( expression.t === BRACKETED && expression.x ) {\n\t\t\t\texpression = expression.x;\n\t\t\t}\n\t\n\t\t\tif ( expression.t === REFERENCE ) {\n\t\t\t\tmustache.r = expression.n;\n\t\t\t} else {\n\t\t\t\tif ( referenceExpression = getReferenceExpression( expression ) ) {\n\t\t\t\t\tmustache.rx = referenceExpression;\n\t\t\t\t} else {\n\t\t\t\t\tmustache.x = flattenExpression( expression );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn mustache;\n\t\t}\n\t}\n\t\n\t// TODO refactor this! it's bewildering\n\tfunction getReferenceExpression ( expression ) {\n\t\tvar members = [], refinement;\n\t\n\t\twhile ( expression.t === MEMBER && expression.r.t === REFINEMENT ) {\n\t\t\trefinement = expression.r;\n\t\n\t\t\tif ( refinement.x ) {\n\t\t\t\tif ( refinement.x.t === REFERENCE ) {\n\t\t\t\t\tmembers.unshift( refinement.x );\n\t\t\t\t} else {\n\t\t\t\t\tmembers.unshift( flattenExpression( refinement.x ) );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmembers.unshift( refinement.n );\n\t\t\t}\n\t\n\t\t\texpression = expression.x;\n\t\t}\n\t\n\t\tif ( expression.t !== REFERENCE ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\treturn {\n\t\t\tr: expression.n,\n\t\t\tm: members\n\t\t};\n\t}\n\t\n\tfunction readTriple ( parser, tag ) {\n\t\tvar expression = readExpression( parser ), triple;\n\t\n\t\tif ( !expression ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t\t}\n\t\n\t\ttriple = { t: TRIPLE };\n\t\trefineExpression( expression, triple ); // TODO handle this differently - it's mysterious\n\t\n\t\treturn triple;\n\t}\n\t\n\tfunction readUnescaped ( parser, tag ) {\n\t\tvar expression, triple;\n\t\n\t\tif ( !parser.matchString( '&' ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\texpression = readExpression( parser );\n\t\n\t\tif ( !expression ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t\t}\n\t\n\t\ttriple = { t: TRIPLE };\n\t\trefineExpression( expression, triple ); // TODO handle this differently - it's mysterious\n\t\n\t\treturn triple;\n\t}\n\t\n\tvar legalAlias = /^(?:[a-zA-Z$_0-9]|\\\\\\.)+(?:(?:(?:[a-zA-Z$_0-9]|\\\\\\.)+)|(?:\\[[0-9]+\\]))*/;\n\tvar asRE = /^as/i;\n\t\n\tfunction readAliases( parser ) {\n\t\tvar aliases = [], alias, start = parser.pos;\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\talias = readAlias( parser );\n\t\n\t\tif ( alias ) {\n\t\t\talias.x = refineExpression( alias.x, {} );\n\t\t\taliases.push( alias );\n\t\n\t\t\tparser.allowWhitespace();\n\t\n\t\t\twhile ( parser.matchString(',') ) {\n\t\t\t\talias = readAlias( parser );\n\t\n\t\t\t\tif ( !alias ) {\n\t\t\t\t\tparser.error( 'Expected another alias.' );\n\t\t\t\t}\n\t\n\t\t\t\talias.x = refineExpression( alias.x, {} );\n\t\t\t\taliases.push( alias );\n\t\n\t\t\t\tparser.allowWhitespace();\n\t\t\t}\n\t\n\t\t\treturn aliases;\n\t\t}\n\t\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\t\n\tfunction readAlias( parser ) {\n\t\tvar expr, alias, start = parser.pos;\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\texpr = readExpression( parser, [] );\n\t\n\t\tif ( !expr ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchPattern( asRE ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\talias = parser.matchPattern( legalAlias );\n\t\n\t\tif ( !alias ) {\n\t\t\tparser.error( 'Expected a legal alias name.' );\n\t\t}\n\t\n\t\treturn { n: alias, x: expr };\n\t}\n\t\n\tfunction readPartial ( parser, tag ) {\n\t\tif ( !parser.matchString( '>' ) ) return null;\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\t// Partial names can include hyphens, so we can't use readExpression\n\t\t// blindly. Instead, we use the `relaxedNames` flag to indicate that\n\t\t// `foo-bar` should be read as a single name, rather than 'subtract\n\t\t// bar from foo'\n\t\tparser.relaxedNames = parser.strictRefinement = true;\n\t\tvar expression = readExpression( parser );\n\t\tparser.relaxedNames = parser.strictRefinement = false;\n\t\n\t\tif ( !expression ) return null;\n\t\n\t\tvar partial = { t: PARTIAL };\n\t\trefineExpression( expression, partial ); // TODO...\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\t// check for alias context e.g. `{{>foo bar as bat, bip as bop}}` then\n\t\t// turn it into `{{#with bar as bat, bip as bop}}{{>foo}}{{/with}}`\n\t\tvar aliases = readAliases( parser );\n\t\tif ( aliases ) {\n\t\t\tpartial = {\n\t\t\t\tt: ALIAS,\n\t\t\t\tz: aliases,\n\t\t\t\tf: [ partial ]\n\t\t\t};\n\t\t}\n\t\n\t\t// otherwise check for literal context e.g. `{{>foo bar}}` then\n\t\t// turn it into `{{#with bar}}{{>foo}}{{/with}}`\n\t\telse {\n\t\t\tvar context = readExpression( parser );\n\t\t\tif ( context) {\n\t\t\t\tpartial = {\n\t\t\t\t\tt: SECTION,\n\t\t\t\t\tn: SECTION_WITH,\n\t\t\t\t\tf: [ partial ]\n\t\t\t\t};\n\t\n\t\t\t\trefineExpression( context, partial );\n\t\t\t}\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t\t}\n\t\n\t\treturn partial;\n\t}\n\t\n\tfunction readComment ( parser, tag ) {\n\t\tvar index;\n\t\n\t\tif ( !parser.matchString( '!' ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tindex = parser.remaining().indexOf( tag.close );\n\t\n\t\tif ( index !== -1 ) {\n\t\t\tparser.pos += index + tag.close.length;\n\t\t\treturn { t: COMMENT };\n\t\t}\n\t}\n\t\n\tfunction readExpressionOrReference ( parser, expectedFollowers ) {\n\t\tvar start, expression, i;\n\t\n\t\tstart = parser.pos;\n\t\texpression = readExpression( parser );\n\t\n\t\tif ( !expression ) {\n\t\t\t// valid reference but invalid expression e.g. `{{new}}`?\n\t\t\tvar ref = parser.matchPattern( /^(\\w+)/ );\n\t\t\tif ( ref ) {\n\t\t\t\treturn {\n\t\t\t\t\tt: REFERENCE,\n\t\t\t\t\tn: ref\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\treturn null;\n\t\t}\n\t\n\t\tfor ( i = 0; i < expectedFollowers.length; i += 1 ) {\n\t\t\tif ( parser.remaining().substr( 0, expectedFollowers[i].length ) === expectedFollowers[i] ) {\n\t\t\t\treturn expression;\n\t\t\t}\n\t\t}\n\t\n\t\tparser.pos = start;\n\t\treturn readReference( parser );\n\t}\n\t\n\tfunction readInterpolator ( parser, tag ) {\n\t\tvar start, expression, interpolator, err;\n\t\n\t\tstart = parser.pos;\n\t\n\t\t// TODO would be good for perf if we could do away with the try-catch\n\t\ttry {\n\t\t\texpression = readExpressionOrReference( parser, [ tag.close ]);\n\t\t} catch ( e ) {\n\t\t\terr = e;\n\t\t}\n\t\n\t\tif ( !expression ) {\n\t\t\tif ( parser.str.charAt( start ) === '!' ) {\n\t\t\t\t// special case - comment\n\t\t\t\tparser.pos = start;\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"' after reference\") );\n\t\n\t\t\tif ( !expression ) {\n\t\t\t\t// special case - comment\n\t\t\t\tif ( parser.nextChar() === '!' ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\n\t\t\t\tparser.error( (\"Expected expression or legal reference\") );\n\t\t\t}\n\t\t}\n\t\n\t\tinterpolator = { t: INTERPOLATOR };\n\t\trefineExpression( expression, interpolator ); // TODO handle this differently - it's mysterious\n\t\n\t\treturn interpolator;\n\t}\n\t\n\tvar yieldPattern = /^yield\\s*/;\n\t\n\tfunction readYielder ( parser, tag ) {\n\t\tif ( !parser.matchPattern( yieldPattern ) ) return null;\n\t\n\t\tvar name = parser.matchPattern( /^[a-zA-Z_$][a-zA-Z_$0-9\\-]*/ );\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\tparser.error( (\"expected legal partial name\") );\n\t\t}\n\t\n\t\tvar yielder = { t: YIELDER };\n\t\tif ( name ) yielder.n = name;\n\t\n\t\treturn yielder;\n\t}\n\t\n\tfunction readClosing ( parser, tag ) {\n\t\tvar start, remaining, index, closing;\n\t\n\t\tstart = parser.pos;\n\t\n\t\tif ( !parser.matchString( tag.open ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( '/' ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tremaining = parser.remaining();\n\t\tindex = remaining.indexOf( tag.close );\n\t\n\t\tif ( index !== -1 ) {\n\t\t\tclosing = {\n\t\t\t\tt: CLOSING,\n\t\t\t\tr: remaining.substr( 0, index ).split( ' ' )[0]\n\t\t\t};\n\t\n\t\t\tparser.pos += index;\n\t\n\t\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t\t\t}\n\t\n\t\t\treturn closing;\n\t\t}\n\t\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\t\n\tvar elsePattern = /^\\s*else\\s*/;\n\t\n\tfunction readElse ( parser, tag ) {\n\t\tvar start = parser.pos;\n\t\n\t\tif ( !parser.matchString( tag.open ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tif ( !parser.matchPattern( elsePattern ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t\t}\n\t\n\t\treturn {\n\t\t\tt: ELSE\n\t\t};\n\t}\n\t\n\tvar elsePattern$1 = /^\\s*elseif\\s+/;\n\t\n\tfunction readElseIf ( parser, tag ) {\n\t\tvar start = parser.pos;\n\t\n\t\tif ( !parser.matchString( tag.open ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tif ( !parser.matchPattern( elsePattern$1 ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar expression = readExpression( parser );\n\t\n\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t\t}\n\t\n\t\treturn {\n\t\t\tt: ELSEIF,\n\t\t\tx: expression\n\t\t};\n\t}\n\t\n\tvar handlebarsBlockCodes = {\n\t\t'each':    SECTION_EACH,\n\t\t'if':      SECTION_IF,\n\t\t'with':    SECTION_IF_WITH,\n\t\t'unless':  SECTION_UNLESS\n\t};\n\t\n\tvar indexRefPattern = /^\\s*:\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)/;\n\tvar keyIndexRefPattern = /^\\s*,\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)/;\n\tvar handlebarsBlockPattern = new RegExp( '^(' + Object.keys( handlebarsBlockCodes ).join( '|' ) + ')\\\\b' );\n\t\n\tfunction readSection ( parser, tag ) {\n\t\tvar start, expression, section, child, children, hasElse, block, unlessBlock, conditions, closed, i, expectedClose, aliasOnly = false;\n\t\n\t\tstart = parser.pos;\n\t\n\t\tif ( parser.matchString( '^' ) ) {\n\t\t\tsection = { t: SECTION, f: [], n: SECTION_UNLESS };\n\t\t} else if ( parser.matchString( '#' ) ) {\n\t\t\tsection = { t: SECTION, f: [] };\n\t\n\t\t\tif ( parser.matchString( 'partial' ) ) {\n\t\t\t\tparser.pos = start - parser.standardDelimiters[0].length;\n\t\t\t\tparser.error( 'Partial definitions can only be at the top level of the template, or immediately inside components' );\n\t\t\t}\n\t\n\t\t\tif ( block = parser.matchPattern( handlebarsBlockPattern ) ) {\n\t\t\t\texpectedClose = block;\n\t\t\t\tsection.n = handlebarsBlockCodes[ block ];\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( block === 'with' ) {\n\t\t\tvar aliases = readAliases( parser );\n\t\t\tif ( aliases ) {\n\t\t\t\taliasOnly = true;\n\t\t\t\tsection.z = aliases;\n\t\t\t\tsection.t = ALIAS;\n\t\t\t}\n\t\t} else if ( block === 'each' ) {\n\t\t\tvar alias = readAlias( parser );\n\t\t\tif ( alias ) {\n\t\t\t\tsection.z = [ { n: alias.n, x: { r: '.' } } ];\n\t\t\t\texpression = alias.x;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( !aliasOnly ) {\n\t\t\tif ( !expression ) expression = readExpression( parser );\n\t\n\t\t\tif ( !expression ) {\n\t\t\t\tparser.error( 'Expected expression' );\n\t\t\t}\n\t\n\t\t\t// optional index and key references\n\t\t\tif ( i = parser.matchPattern( indexRefPattern ) ) {\n\t\t\t\tvar extra;\n\t\n\t\t\t\tif ( extra = parser.matchPattern( keyIndexRefPattern ) ) {\n\t\t\t\t\tsection.i = i + ',' + extra;\n\t\t\t\t} else {\n\t\t\t\t\tsection.i = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t\t}\n\t\n\t\tparser.sectionDepth += 1;\n\t\tchildren = section.f;\n\t\n\t\tconditions = [];\n\t\n\t\tdo {\n\t\t\tif ( child = readClosing( parser, tag ) ) {\n\t\t\t\tif ( expectedClose && child.r !== expectedClose ) {\n\t\t\t\t\tparser.error( (\"Expected \" + (tag.open) + \"/\" + expectedClose + \"\" + (tag.close)) );\n\t\t\t\t}\n\t\n\t\t\t\tparser.sectionDepth -= 1;\n\t\t\t\tclosed = true;\n\t\t\t}\n\t\n\t\t\telse if ( !aliasOnly && ( child = readElseIf( parser, tag ) ) ) {\n\t\t\t\tif ( section.n === SECTION_UNLESS ) {\n\t\t\t\t\tparser.error( '{{else}} not allowed in {{#unless}}' );\n\t\t\t\t}\n\t\n\t\t\t\tif ( hasElse ) {\n\t\t\t\t\tparser.error( 'illegal {{elseif...}} after {{else}}' );\n\t\t\t\t}\n\t\n\t\t\t\tif ( !unlessBlock ) {\n\t\t\t\t\tunlessBlock = [];\n\t\t\t\t}\n\t\n\t\t\t\tvar mustache = {\n\t\t\t\t\tt: SECTION,\n\t\t\t\t\tn: SECTION_IF,\n\t\t\t\t\tf: children = []\n\t\t\t\t};\n\t\t\t\trefineExpression( child.x, mustache );\n\t\n\t\t\t\tunlessBlock.push( mustache );\n\t\t\t}\n\t\n\t\t\telse if ( !aliasOnly && ( child = readElse( parser, tag ) ) ) {\n\t\t\t\tif ( section.n === SECTION_UNLESS ) {\n\t\t\t\t\tparser.error( '{{else}} not allowed in {{#unless}}' );\n\t\t\t\t}\n\t\n\t\t\t\tif ( hasElse ) {\n\t\t\t\t\tparser.error( 'there can only be one {{else}} block, at the end of a section' );\n\t\t\t\t}\n\t\n\t\t\t\thasElse = true;\n\t\n\t\t\t\t// use an unless block if there's no elseif\n\t\t\t\tif ( !unlessBlock ) {\n\t\t\t\t\tunlessBlock = [];\n\t\t\t\t}\n\t\n\t\t\t\tunlessBlock.push({\n\t\t\t\t\tt: SECTION,\n\t\t\t\t\tn: SECTION_UNLESS,\n\t\t\t\t\tf: children = []\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\telse {\n\t\t\t\tchild = parser.read( READERS );\n\t\n\t\t\t\tif ( !child ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\n\t\t\t\tchildren.push( child );\n\t\t\t}\n\t\t} while ( !closed );\n\t\n\t\tif ( unlessBlock ) {\n\t\t\tsection.l = unlessBlock;\n\t\t}\n\t\n\t\tif ( !aliasOnly ) {\n\t\t\trefineExpression( expression, section );\n\t\t}\n\t\n\t\t// TODO if a section is empty it should be discarded. Don't do\n\t\t// that here though - we need to clean everything up first, as\n\t\t// it may contain removeable whitespace. As a temporary measure,\n\t\t// to pass the existing tests, remove empty `f` arrays\n\t\tif ( !section.f.length ) {\n\t\t\tdelete section.f;\n\t\t}\n\t\n\t\treturn section;\n\t}\n\t\n\tvar OPEN_COMMENT = '<!--';\n\tvar CLOSE_COMMENT = '-->';\n\t\n\tfunction readHtmlComment ( parser ) {\n\t\tvar start, content, remaining, endIndex, comment;\n\t\n\t\tstart = parser.pos;\n\t\n\t\tif ( !parser.matchString( OPEN_COMMENT ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tremaining = parser.remaining();\n\t\tendIndex = remaining.indexOf( CLOSE_COMMENT );\n\t\n\t\tif ( endIndex === -1 ) {\n\t\t\tparser.error( 'Illegal HTML - expected closing comment sequence (\\'-->\\')' );\n\t\t}\n\t\n\t\tcontent = remaining.substr( 0, endIndex );\n\t\tparser.pos += endIndex + 3;\n\t\n\t\tcomment = {\n\t\t\tt: COMMENT,\n\t\t\tc: content\n\t\t};\n\t\n\t\tif ( parser.includeLinePositions ) {\n\t\t\tcomment.p = parser.getLinePos( start );\n\t\t}\n\t\n\t\treturn comment;\n\t}\n\t\n\tvar leadingLinebreak = /^[ \\t\\f\\r\\n]*\\r?\\n/;\n\tvar trailingLinebreak = /\\r?\\n[ \\t\\f\\r\\n]*$/;\n\t\n\tvar stripStandalones = function ( items ) {\n\t\tvar i, current, backOne, backTwo, lastSectionItem;\n\t\n\t\tfor ( i=1; i<items.length; i+=1 ) {\n\t\t\tcurrent = items[i];\n\t\t\tbackOne = items[i-1];\n\t\t\tbackTwo = items[i-2];\n\t\n\t\t\t// if we're at the end of a [text][comment][text] sequence...\n\t\t\tif ( isString( current ) && isComment( backOne ) && isString( backTwo ) ) {\n\t\n\t\t\t\t// ... and the comment is a standalone (i.e. line breaks either side)...\n\t\t\t\tif ( trailingLinebreak.test( backTwo ) && leadingLinebreak.test( current ) ) {\n\t\n\t\t\t\t\t// ... then we want to remove the whitespace after the first line break\n\t\t\t\t\titems[i-2] = backTwo.replace( trailingLinebreak, '\\n' );\n\t\n\t\t\t\t\t// and the leading line break of the second text token\n\t\t\t\t\titems[i] = current.replace( leadingLinebreak, '' );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// if the current item is a section, and it is preceded by a linebreak, and\n\t\t\t// its first item is a linebreak...\n\t\t\tif ( isSection( current ) && isString( backOne ) ) {\n\t\t\t\tif ( trailingLinebreak.test( backOne ) && isString( current.f[0] ) && leadingLinebreak.test( current.f[0] ) ) {\n\t\t\t\t\titems[i-1] = backOne.replace( trailingLinebreak, '\\n' );\n\t\t\t\t\tcurrent.f[0] = current.f[0].replace( leadingLinebreak, '' );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// if the last item was a section, and it is followed by a linebreak, and\n\t\t\t// its last item is a linebreak...\n\t\t\tif ( isString( current ) && isSection( backOne ) ) {\n\t\t\t\tlastSectionItem = lastItem( backOne.f );\n\t\n\t\t\t\tif ( isString( lastSectionItem ) && trailingLinebreak.test( lastSectionItem ) && leadingLinebreak.test( current ) ) {\n\t\t\t\t\tbackOne.f[ backOne.f.length - 1 ] = lastSectionItem.replace( trailingLinebreak, '\\n' );\n\t\t\t\t\titems[i] = current.replace( leadingLinebreak, '' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn items;\n\t};\n\t\n\tfunction isString ( item ) {\n\t\treturn typeof item === 'string';\n\t}\n\t\n\tfunction isComment ( item ) {\n\t\treturn item.t === COMMENT || item.t === DELIMCHANGE;\n\t}\n\t\n\tfunction isSection ( item ) {\n\t\treturn ( item.t === SECTION || item.t === INVERTED ) && item.f;\n\t}\n\t\n\tvar trimWhitespace = function ( items, leadingPattern, trailingPattern ) {\n\t\tvar item;\n\t\n\t\tif ( leadingPattern ) {\n\t\t\titem = items[0];\n\t\t\tif ( typeof item === 'string' ) {\n\t\t\t\titem = item.replace( leadingPattern, '' );\n\t\n\t\t\t\tif ( !item ) {\n\t\t\t\t\titems.shift();\n\t\t\t\t} else {\n\t\t\t\t\titems[0] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif ( trailingPattern ) {\n\t\t\titem = lastItem( items );\n\t\t\tif ( typeof item === 'string' ) {\n\t\t\t\titem = item.replace( trailingPattern, '' );\n\t\n\t\t\t\tif ( !item ) {\n\t\t\t\t\titems.pop();\n\t\t\t\t} else {\n\t\t\t\t\titems[ items.length - 1 ] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\tvar contiguousWhitespace = /[ \\t\\f\\r\\n]+/g;\n\tvar preserveWhitespaceElements = /^(?:pre|script|style|textarea)$/i;\n\tvar leadingWhitespace$1 = /^[ \\t\\f\\r\\n]+/;\n\tvar trailingWhitespace = /[ \\t\\f\\r\\n]+$/;\n\tvar leadingNewLine = /^(?:\\r\\n|\\r|\\n)/;\n\tvar trailingNewLine = /(?:\\r\\n|\\r|\\n)$/;\n\t\n\tfunction cleanup ( items, stripComments, preserveWhitespace, removeLeadingWhitespace, removeTrailingWhitespace ) {\n\t\tif ( typeof items === 'string' ) return;\n\t\n\t\tvar i,\n\t\t\titem,\n\t\t\tpreviousItem,\n\t\t\tnextItem,\n\t\t\tpreserveWhitespaceInsideFragment,\n\t\t\tremoveLeadingWhitespaceInsideFragment,\n\t\t\tremoveTrailingWhitespaceInsideFragment,\n\t\t\tkey;\n\t\n\t\t// First pass - remove standalones and comments etc\n\t\tstripStandalones( items );\n\t\n\t\ti = items.length;\n\t\twhile ( i-- ) {\n\t\t\titem = items[i];\n\t\n\t\t\t// Remove delimiter changes, unsafe elements etc\n\t\t\tif ( item.exclude ) {\n\t\t\t\titems.splice( i, 1 );\n\t\t\t}\n\t\n\t\t\t// Remove comments, unless we want to keep them\n\t\t\telse if ( stripComments && item.t === COMMENT ) {\n\t\t\t\titems.splice( i, 1 );\n\t\t\t}\n\t\t}\n\t\n\t\t// If necessary, remove leading and trailing whitespace\n\t\ttrimWhitespace( items, removeLeadingWhitespace ? leadingWhitespace$1 : null, removeTrailingWhitespace ? trailingWhitespace : null );\n\t\n\t\ti = items.length;\n\t\twhile ( i-- ) {\n\t\t\titem = items[i];\n\t\n\t\t\t// Recurse\n\t\t\tif ( item.f ) {\n\t\t\t\tvar isPreserveWhitespaceElement = item.t === ELEMENT && preserveWhitespaceElements.test( item.e );\n\t\t\t\tpreserveWhitespaceInsideFragment = preserveWhitespace || isPreserveWhitespaceElement;\n\t\n\t\t\t\tif ( !preserveWhitespace && isPreserveWhitespaceElement ) {\n\t\t\t\t\ttrimWhitespace( item.f, leadingNewLine, trailingNewLine );\n\t\t\t\t}\n\t\n\t\t\t\tif ( !preserveWhitespaceInsideFragment ) {\n\t\t\t\t\tpreviousItem = items[ i - 1 ];\n\t\t\t\t\tnextItem = items[ i + 1 ];\n\t\n\t\t\t\t\t// if the previous item was a text item with trailing whitespace,\n\t\t\t\t\t// remove leading whitespace inside the fragment\n\t\t\t\t\tif ( !previousItem || ( typeof previousItem === 'string' && trailingWhitespace.test( previousItem ) ) ) {\n\t\t\t\t\t\tremoveLeadingWhitespaceInsideFragment = true;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// and vice versa\n\t\t\t\t\tif ( !nextItem || ( typeof nextItem === 'string' && leadingWhitespace$1.test( nextItem ) ) ) {\n\t\t\t\t\t\tremoveTrailingWhitespaceInsideFragment = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tcleanup( item.f, stripComments, preserveWhitespaceInsideFragment, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespaceInsideFragment );\n\t\n\t\t\t\t// clean up name templates (events, decorators, etc)\n\t\t\t\tif ( isArray( item.f.n ) ) {\n\t\t\t\t\tcleanup( item.f.n, stripComments, preserveWhitespace, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespace );\n\t\t\t\t}\n\t\n\t\t\t\t// clean up arg templates (events, decorators, etc)\n\t\t\t\tif ( isArray( item.f.d ) ) {\n\t\t\t\t\tcleanup( item.f.d, stripComments, preserveWhitespace, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespace );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Split if-else blocks into two (an if, and an unless)\n\t\t\tif ( item.l ) {\n\t\t\t\tcleanup( item.l, stripComments, preserveWhitespace, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespaceInsideFragment );\n\t\n\t\t\t\titem.l.forEach( function ( s ) { return s.l = 1; } );\n\t\t\t\titem.l.unshift( i + 1, 0 );\n\t\t\t\titems.splice.apply( items, item.l );\n\t\t\t\tdelete item.l; // TODO would be nice if there was a way around this\n\t\t\t}\n\t\n\t\t\t// Clean up element attributes\n\t\t\tif ( item.a ) {\n\t\t\t\tfor ( key in item.a ) {\n\t\t\t\t\tif ( item.a.hasOwnProperty( key ) && typeof item.a[ key ] !== 'string' ) {\n\t\t\t\t\t\tcleanup( item.a[ key ], stripComments, preserveWhitespace, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespaceInsideFragment );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Clean up conditional attributes\n\t\t\tif ( item.m ) {\n\t\t\t\tcleanup( item.m, stripComments, preserveWhitespace, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespaceInsideFragment );\n\t\t\t\tif ( item.m.length < 1 ) delete item.m;\n\t\t\t}\n\t\t}\n\t\n\t\t// final pass - fuse text nodes together\n\t\ti = items.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( typeof items[i] === 'string' ) {\n\t\t\t\tif ( typeof items[i+1] === 'string' ) {\n\t\t\t\t\titems[i] = items[i] + items[i+1];\n\t\t\t\t\titems.splice( i + 1, 1 );\n\t\t\t\t}\n\t\n\t\t\t\tif ( !preserveWhitespace ) {\n\t\t\t\t\titems[i] = items[i].replace( contiguousWhitespace, ' ' );\n\t\t\t\t}\n\t\n\t\t\t\tif ( items[i] === '' ) {\n\t\t\t\t\titems.splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar closingTagPattern = /^([a-zA-Z]{1,}:?[a-zA-Z0-9\\-]*)\\s*\\>/;\n\t\n\tfunction readClosingTag ( parser ) {\n\t\tvar start, tag;\n\t\n\t\tstart = parser.pos;\n\t\n\t\t// are we looking at a closing tag?\n\t\tif ( !parser.matchString( '</' ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tif ( tag = parser.matchPattern( closingTagPattern ) ) {\n\t\t\tif ( parser.inside && tag !== parser.inside ) {\n\t\t\t\tparser.pos = start;\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tt: CLOSING_TAG,\n\t\t\t\te: tag\n\t\t\t};\n\t\t}\n\t\n\t\t// We have an illegal closing tag, report it\n\t\tparser.pos -= 2;\n\t\tparser.error( 'Illegal closing tag' );\n\t}\n\t\n\tvar tagNamePattern = /^[a-zA-Z]{1,}:?[a-zA-Z0-9\\-]*/;\n\tvar validTagNameFollower = /^[\\s\\n\\/>]/;\n\tvar exclude = { exclude: true };\n\tvar disallowedContents;\n\t\n\t// based on http://developers.whatwg.org/syntax.html#syntax-tag-omission\n\tdisallowedContents = {\n\t\tli: [ 'li' ],\n\t\tdt: [ 'dt', 'dd' ],\n\t\tdd: [ 'dt', 'dd' ],\n\t\tp: 'address article aside blockquote div dl fieldset footer form h1 h2 h3 h4 h5 h6 header hgroup hr main menu nav ol p pre section table ul'.split( ' ' ),\n\t\trt: [ 'rt', 'rp' ],\n\t\trp: [ 'rt', 'rp' ],\n\t\toptgroup: [ 'optgroup' ],\n\t\toption: [ 'option', 'optgroup' ],\n\t\tthead: [ 'tbody', 'tfoot' ],\n\t\ttbody: [ 'tbody', 'tfoot' ],\n\t\ttfoot: [ 'tbody' ],\n\t\ttr: [ 'tr', 'tbody' ],\n\t\ttd: [ 'td', 'th', 'tr' ],\n\t\tth: [ 'td', 'th', 'tr' ]\n\t};\n\t\n\tfunction readElement$1 ( parser ) {\n\t\tvar start,\n\t\t\telement,\n\t\t\tattribute,\n\t\t\tselfClosing,\n\t\t\tchildren,\n\t\t\tpartials,\n\t\t\thasPartials,\n\t\t\tchild,\n\t\t\tclosed,\n\t\t\tpos,\n\t\t\tremaining,\n\t\t\tclosingTag;\n\t\n\t\tstart = parser.pos;\n\t\n\t\tif ( parser.inside || parser.inAttribute ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tif ( !parser.matchString( '<' ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// if this is a closing tag, abort straight away\n\t\tif ( parser.nextChar() === '/' ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\telement = {};\n\t\tif ( parser.includeLinePositions ) {\n\t\t\telement.p = parser.getLinePos( start );\n\t\t}\n\t\n\t\tif ( parser.matchString( '!' ) ) {\n\t\t\telement.t = DOCTYPE;\n\t\t\tif ( !parser.matchPattern( /^doctype/i ) ) {\n\t\t\t\tparser.error( 'Expected DOCTYPE declaration' );\n\t\t\t}\n\t\n\t\t\telement.a = parser.matchPattern( /^(.+?)>/ );\n\t\t\treturn element;\n\t\t}\n\t\n\t\telement.t = ELEMENT;\n\t\n\t\t// element name\n\t\telement.e = parser.matchPattern( tagNamePattern );\n\t\tif ( !element.e ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// next character must be whitespace, closing solidus or '>'\n\t\tif ( !validTagNameFollower.test( parser.nextChar() ) ) {\n\t\t\tparser.error( 'Illegal tag name' );\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\n\t\tparser.inTag = true;\n\t\n\t\t// directives and attributes\n\t\twhile ( attribute = readMustache( parser ) ) {\n\t\t\tif ( attribute !== false ) {\n\t\t\t\tif ( !element.m ) element.m = [];\n\t\t\t\telement.m.push( attribute );\n\t\t\t}\n\t\n\t\t\tparser.allowWhitespace();\n\t\t}\n\t\n\t\tparser.inTag = false;\n\t\n\t\t// allow whitespace before closing solidus\n\t\tparser.allowWhitespace();\n\t\n\t\t// self-closing solidus?\n\t\tif ( parser.matchString( '/' ) ) {\n\t\t\tselfClosing = true;\n\t\t}\n\t\n\t\t// closing angle bracket\n\t\tif ( !parser.matchString( '>' ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar lowerCaseName = element.e.toLowerCase();\n\t\tvar preserveWhitespace = parser.preserveWhitespace;\n\t\n\t\tif ( !selfClosing && !voidElementNames.test( element.e ) ) {\n\t\t\tparser.elementStack.push( lowerCaseName );\n\t\n\t\t\t// Special case - if we open a script element, further tags should\n\t\t\t// be ignored unless they're a closing script element\n\t\t\tif ( lowerCaseName === 'script' || lowerCaseName === 'style' || lowerCaseName === 'textarea' ) {\n\t\t\t\tparser.inside = lowerCaseName;\n\t\t\t}\n\t\n\t\t\tchildren = [];\n\t\t\tpartials = create( null );\n\t\n\t\t\tdo {\n\t\t\t\tpos = parser.pos;\n\t\t\t\tremaining = parser.remaining();\n\t\n\t\t\t\tif ( !remaining ) {\n\t\t\t\t\tparser.error( (\"Missing end \" + (parser.elementStack.length > 1 ? 'tags' : 'tag') + \" (\" + (parser.elementStack.reverse().map( function ( x ) { return (\"</\" + x + \">\"); } ).join( '' )) + \")\") );\n\t\t\t\t}\n\t\n\t\t\t\t// if for example we're in an <li> element, and we see another\n\t\t\t\t// <li> tag, close the first so they become siblings\n\t\t\t\tif ( !canContain( lowerCaseName, remaining ) ) {\n\t\t\t\t\tclosed = true;\n\t\t\t\t}\n\t\n\t\t\t\t// closing tag\n\t\t\t\telse if ( closingTag = readClosingTag( parser ) ) {\n\t\t\t\t\tclosed = true;\n\t\n\t\t\t\t\tvar closingTagName = closingTag.e.toLowerCase();\n\t\n\t\t\t\t\t// if this *isn't* the closing tag for the current element...\n\t\t\t\t\tif ( closingTagName !== lowerCaseName ) {\n\t\t\t\t\t\t// rewind parser\n\t\t\t\t\t\tparser.pos = pos;\n\t\n\t\t\t\t\t\t// if it doesn't close a parent tag, error\n\t\t\t\t\t\tif ( !~parser.elementStack.indexOf( closingTagName ) ) {\n\t\t\t\t\t\t\tvar errorMessage = 'Unexpected closing tag';\n\t\n\t\t\t\t\t\t\t// add additional help for void elements, since component names\n\t\t\t\t\t\t\t// might clash with them\n\t\t\t\t\t\t\tif ( voidElementNames.test( closingTagName ) ) {\n\t\t\t\t\t\t\t\terrorMessage += \" (<\" + closingTagName + \"> is a void element - it cannot contain children)\";\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tparser.error( errorMessage );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// implicit close by closing section tag. TODO clean this up\n\t\t\t\telse if ( child = readClosing( parser, { open: parser.standardDelimiters[0], close: parser.standardDelimiters[1] } ) ) {\n\t\t\t\t\tclosed = true;\n\t\t\t\t\tparser.pos = pos;\n\t\t\t\t}\n\t\n\t\t\t\telse {\n\t\t\t\t\tif ( child = parser.read( PARTIAL_READERS ) ) {\n\t\t\t\t\t\tif ( partials[ child.n ] ) {\n\t\t\t\t\t\t\tparser.pos = pos;\n\t\t\t\t\t\t\tparser.error( 'Duplicate partial definition' );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tcleanup( child.f, parser.stripComments, preserveWhitespace, !preserveWhitespace, !preserveWhitespace );\n\t\n\t\t\t\t\t\tpartials[ child.n ] = child.f;\n\t\t\t\t\t\thasPartials = true;\n\t\t\t\t\t}\n\t\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ( child = parser.read( READERS ) ) {\n\t\t\t\t\t\t\tchildren.push( child );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclosed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while ( !closed );\n\t\n\t\t\tif ( children.length ) {\n\t\t\t\telement.f = children;\n\t\t\t}\n\t\n\t\t\tif ( hasPartials ) {\n\t\t\t\telement.p = partials;\n\t\t\t}\n\t\n\t\t\tparser.elementStack.pop();\n\t\t}\n\t\n\t\tparser.inside = null;\n\t\n\t\tif ( parser.sanitizeElements && parser.sanitizeElements.indexOf( lowerCaseName ) !== -1 ) {\n\t\t\treturn exclude;\n\t\t}\n\t\n\t\treturn element;\n\t}\n\t\n\tfunction canContain ( name, remaining ) {\n\t\tvar match, disallowed;\n\t\n\t\tmatch = /^<([a-zA-Z][a-zA-Z0-9]*)/.exec( remaining );\n\t\tdisallowed = disallowedContents[ name ];\n\t\n\t\tif ( !match || !disallowed ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn !~disallowed.indexOf( match[1].toLowerCase() );\n\t}\n\t\n\tfunction readText ( parser ) {\n\t\tvar index, remaining, disallowed, barrier;\n\t\n\t\tremaining = parser.remaining();\n\t\n\t\tif ( parser.textOnlyMode ) {\n\t\t\tdisallowed = parser.tags.map( function ( t ) { return t.open; } );\n\t\t\tdisallowed = disallowed.concat( parser.tags.map( function ( t ) { return '\\\\' + t.open; } ) );\n\t\n\t\t\tindex = getLowestIndex( remaining, disallowed );\n\t\t} else {\n\t\t\tbarrier = parser.inside ? '</' + parser.inside : '<';\n\t\n\t\t\tif ( parser.inside && !parser.interpolate[ parser.inside ] ) {\n\t\t\t\tindex = remaining.indexOf( barrier );\n\t\t\t} else {\n\t\t\t\tdisallowed = parser.tags.map( function ( t ) { return t.open; } );\n\t\t\t\tdisallowed = disallowed.concat( parser.tags.map( function ( t ) { return '\\\\' + t.open; } ) );\n\t\n\t\t\t\t// http://developers.whatwg.org/syntax.html#syntax-attributes\n\t\t\t\tif ( parser.inAttribute === true ) {\n\t\t\t\t\t// we're inside an unquoted attribute value\n\t\t\t\t\tdisallowed.push( (\"\\\"\"), (\"'\"), (\"=\"), (\"<\"), (\">\"), '`' );\n\t\t\t\t} else if ( parser.inAttribute ) {\n\t\t\t\t\t// quoted attribute value\n\t\t\t\t\tdisallowed.push( parser.inAttribute );\n\t\t\t\t} else {\n\t\t\t\t\tdisallowed.push( barrier );\n\t\t\t\t}\n\t\n\t\t\t\tindex = getLowestIndex( remaining, disallowed );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( !index ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tif ( index === -1 ) {\n\t\t\tindex = remaining.length;\n\t\t}\n\t\n\t\tparser.pos += index;\n\t\n\t\tif ( ( parser.inside && parser.inside !== 'textarea' ) || parser.textOnlyMode ) {\n\t\t\treturn remaining.substr( 0, index );\n\t\t} else {\n\t\t\treturn decodeCharacterReferences( remaining.substr( 0, index ) );\n\t\t}\n\t}\n\t\n\tvar startPattern = /^<!--\\s*/;\n\tvar namePattern = /s*>\\s*([a-zA-Z_$][-a-zA-Z_$0-9]*)\\s*/;\n\tvar finishPattern = /\\s*-->/;\n\t\n\tfunction readPartialDefinitionComment$1 ( parser ) {\n\t\tvar start = parser.pos;\n\t\tvar open = parser.standardDelimiters[0];\n\t\tvar close = parser.standardDelimiters[1];\n\t\n\t\tif ( !parser.matchPattern( startPattern ) || !parser.matchString( open ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar name = parser.matchPattern( namePattern );\n\t\n\t\twarnOnceIfDebug( (\"Inline partial comments are deprecated.\\nUse this...\\n  {{#partial \" + name + \"}} ... {{/partial}}\\n\\n...instead of this:\\n  <!-- {{>\" + name + \"}} --> ... <!-- {{/\" + name + \"}} -->'\") );\n\t\n\t\t// make sure the rest of the comment is in the correct place\n\t\tif ( !parser.matchString( close ) || !parser.matchPattern( finishPattern ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar content = [];\n\t\tvar closed;\n\t\n\t\tvar endPattern = new RegExp('^<!--\\\\s*' + escapeRegExp( open ) + '\\\\s*\\\\/\\\\s*' + name + '\\\\s*' + escapeRegExp( close ) + '\\\\s*-->');\n\t\n\t\tdo {\n\t\t\tif ( parser.matchPattern( endPattern ) ) {\n\t\t\t\tclosed = true;\n\t\t\t}\n\t\n\t\t\telse {\n\t\t\t\tvar child = parser.read( READERS );\n\t\t\t\tif ( !child ) {\n\t\t\t\t\tparser.error( (\"expected closing comment ('<!-- \" + open + \"/\" + name + \"\" + close + \" -->')\") );\n\t\t\t\t}\n\t\n\t\t\t\tcontent.push( child );\n\t\t\t}\n\t\t} while ( !closed );\n\t\n\t\treturn {\n\t\t\tt: INLINE_PARTIAL,\n\t\t\tf: content,\n\t\t\tn: name\n\t\t};\n\t}\n\t\n\tvar partialDefinitionSectionPattern = /^\\s*#\\s*partial\\s+/;\n\t\n\tfunction readPartialDefinitionSection ( parser ) {\n\t\tvar start, name, content, child, closed;\n\t\n\t\tstart = parser.pos;\n\t\n\t\tvar delimiters = parser.standardDelimiters;\n\t\n\t\tif ( !parser.matchString( delimiters[0] ) ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tif ( !parser.matchPattern( partialDefinitionSectionPattern ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\t\n\t\tname = parser.matchPattern( /^[a-zA-Z_$][a-zA-Z_$0-9\\-\\/]*/ );\n\t\n\t\tif ( !name ) {\n\t\t\tparser.error( 'expected legal partial name' );\n\t\t}\n\t\n\t\tparser.allowWhitespace();\n\t\tif ( !parser.matchString( delimiters[1] ) ) {\n\t\t\tparser.error( (\"Expected closing delimiter '\" + (delimiters[1]) + \"'\") );\n\t\t}\n\t\n\t\tcontent = [];\n\t\n\t\tdo {\n\t\t\t// TODO clean this up\n\t\t\tif ( child = readClosing( parser, { open: parser.standardDelimiters[0], close: parser.standardDelimiters[1] }) ) {\n\t\t\t\tif ( !child.r === 'partial' ) {\n\t\t\t\t\tparser.error( (\"Expected \" + (delimiters[0]) + \"/partial\" + (delimiters[1])) );\n\t\t\t\t}\n\t\n\t\t\t\tclosed = true;\n\t\t\t}\n\t\n\t\t\telse {\n\t\t\t\tchild = parser.read( READERS );\n\t\n\t\t\t\tif ( !child ) {\n\t\t\t\t\tparser.error( (\"Expected \" + (delimiters[0]) + \"/partial\" + (delimiters[1])) );\n\t\t\t\t}\n\t\n\t\t\t\tcontent.push( child );\n\t\t\t}\n\t\t} while ( !closed );\n\t\n\t\treturn {\n\t\t\tt: INLINE_PARTIAL,\n\t\t\tn: name,\n\t\t\tf: content\n\t\t};\n\t}\n\t\n\tfunction readTemplate ( parser ) {\n\t\tvar fragment = [];\n\t\tvar partials = create( null );\n\t\tvar hasPartials = false;\n\t\n\t\tvar preserveWhitespace = parser.preserveWhitespace;\n\t\n\t\twhile ( parser.pos < parser.str.length ) {\n\t\t\tvar pos = parser.pos, item, partial;\n\t\n\t\t\tif ( partial = parser.read( PARTIAL_READERS ) ) {\n\t\t\t\tif ( partials[ partial.n ] ) {\n\t\t\t\t\tparser.pos = pos;\n\t\t\t\t\tparser.error( 'Duplicated partial definition' );\n\t\t\t\t}\n\t\n\t\t\t\tcleanup( partial.f, parser.stripComments, preserveWhitespace, !preserveWhitespace, !preserveWhitespace );\n\t\n\t\t\t\tpartials[ partial.n ] = partial.f;\n\t\t\t\thasPartials = true;\n\t\t\t} else if ( item = parser.read( READERS ) ) {\n\t\t\t\tfragment.push( item );\n\t\t\t} else  {\n\t\t\t\tparser.error( 'Unexpected template content' );\n\t\t\t}\n\t\t}\n\t\n\t\tvar result = {\n\t\t\tv: TEMPLATE_VERSION,\n\t\t\tt: fragment\n\t\t};\n\t\n\t\tif ( hasPartials ) {\n\t\t\tresult.p = partials;\n\t\t}\n\t\n\t\treturn result;\n\t}\n\t\n\tfunction insertExpressions ( obj, expr ) {\n\t\n\t\tObject.keys( obj ).forEach( function ( key ) {\n\t\t\tif  ( isExpression( key, obj ) ) return addTo( obj, expr );\n\t\n\t\t\tvar ref = obj[ key ];\n\t\t\tif ( hasChildren( ref ) ) insertExpressions( ref, expr );\n\t \t});\n\t}\n\t\n\tfunction isExpression( key, obj ) {\n\t\treturn key === 's' && isArray( obj.r );\n\t}\n\t\n\tfunction addTo( obj, expr ) {\n\t\tvar s = obj.s, r = obj.r;\n\t\tif ( !expr[ s ] ) expr[ s ] = fromExpression( s, r.length );\n\t}\n\t\n\tfunction hasChildren( ref ) {\n\t\treturn isArray( ref ) || isObject( ref );\n\t}\n\t\n\t// See https://github.com/ractivejs/template-spec for information\n\t// about the Ractive template specification\n\t\n\tvar STANDARD_READERS = [ readPartial, readUnescaped, readSection, readYielder, readInterpolator, readComment ];\n\tvar TRIPLE_READERS = [ readTriple ];\n\tvar STATIC_READERS = [ readUnescaped, readSection, readInterpolator ]; // TODO does it make sense to have a static section?\n\t\n\tvar StandardParser;\n\t\n\tfunction parse ( template, options ) {\n\t\treturn new StandardParser( template, options || {} ).result;\n\t}\n\t\n\tparse.computedStrings = function( computed ) {\n\t\tif ( !computed ) return [];\n\t\n\t\tObject.keys( computed ).forEach( function ( key ) {\n\t\t\tvar value = computed[ key ];\n\t\t\tif ( typeof value === 'string' ) {\n\t\t\t\tcomputed[ key ] = fromComputationString( value );\n\t\t\t}\n\t\t});\n\t};\n\t\n\t\n\tvar READERS = [ readMustache, readHtmlComment, readElement$1, readText ];\n\tvar PARTIAL_READERS = [ readPartialDefinitionComment$1, readPartialDefinitionSection ];\n\t\n\tStandardParser = Parser$1.extend({\n\t\tinit: function ( str, options ) {\n\t\t\tvar tripleDelimiters = options.tripleDelimiters || [ '{{{', '}}}' ],\n\t\t\t\tstaticDelimiters = options.staticDelimiters || [ '[[', ']]' ],\n\t\t\t\tstaticTripleDelimiters = options.staticTripleDelimiters || [ '[[[', ']]]' ];\n\t\n\t\t\tthis.standardDelimiters = options.delimiters || [ '{{', '}}' ];\n\t\n\t\t\tthis.tags = [\n\t\t\t\t{ isStatic: false, isTriple: false, open: this.standardDelimiters[0], close: this.standardDelimiters[1], readers: STANDARD_READERS },\n\t\t\t\t{ isStatic: false, isTriple: true,  open: tripleDelimiters[0],        close: tripleDelimiters[1],        readers: TRIPLE_READERS },\n\t\t\t\t{ isStatic: true,  isTriple: false, open: staticDelimiters[0],        close: staticDelimiters[1],        readers: STATIC_READERS },\n\t\t\t\t{ isStatic: true,  isTriple: true,  open: staticTripleDelimiters[0],  close: staticTripleDelimiters[1],  readers: TRIPLE_READERS }\n\t\t\t];\n\t\n\t\t\tthis.sortMustacheTags();\n\t\n\t\t\tthis.sectionDepth = 0;\n\t\t\tthis.elementStack = [];\n\t\n\t\t\tthis.interpolate = {\n\t\t\t\tscript: !options.interpolate || options.interpolate.script !== false,\n\t\t\t\tstyle: !options.interpolate || options.interpolate.style !== false,\n\t\t\t\ttextarea: true\n\t\t\t};\n\t\n\t\t\tif ( options.sanitize === true ) {\n\t\t\t\toptions.sanitize = {\n\t\t\t\t\t// blacklist from https://code.google.com/p/google-caja/source/browse/trunk/src/com/google/caja/lang/html/html4-elements-whitelist.json\n\t\t\t\t\telements: 'applet base basefont body frame frameset head html isindex link meta noframes noscript object param script style title'.split( ' ' ),\n\t\t\t\t\teventAttributes: true\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tthis.stripComments = options.stripComments !== false;\n\t\t\tthis.preserveWhitespace = options.preserveWhitespace;\n\t\t\tthis.sanitizeElements = options.sanitize && options.sanitize.elements;\n\t\t\tthis.sanitizeEventAttributes = options.sanitize && options.sanitize.eventAttributes;\n\t\t\tthis.includeLinePositions = options.includeLinePositions;\n\t\t\tthis.textOnlyMode = options.textOnlyMode;\n\t\t\tthis.csp = options.csp;\n\t\t},\n\t\n\t\tpostProcess: function ( result ) {\n\t\t\t// special case - empty string\n\t\t\tif ( !result.length ) {\n\t\t\t\treturn { t: [], v: TEMPLATE_VERSION };\n\t\t\t}\n\t\n\t\t\tif ( this.sectionDepth > 0 ) {\n\t\t\t\tthis.error( 'A section was left open' );\n\t\t\t}\n\t\n\t\t\tcleanup( result[0].t, this.stripComments, this.preserveWhitespace, !this.preserveWhitespace, !this.preserveWhitespace );\n\t\n\t\t\tif ( this.csp !== false ) {\n\t\t\t\tvar expr = {};\n\t\t\t\tinsertExpressions( result[0].t, expr );\n\t\t\t\tif ( Object.keys( expr ).length ) result[0].e = expr;\n\t\t\t}\n\t\n\t\t\treturn result[0];\n\t\t},\n\t\n\t\tconverters: [\n\t\t\treadTemplate\n\t\t],\n\t\n\t\tsortMustacheTags: function () {\n\t\t\t// Sort in order of descending opening delimiter length (longer first),\n\t\t\t// to protect against opening delimiters being substrings of each other\n\t\t\tthis.tags.sort( function ( a, b ) {\n\t\t\t\treturn b.open.length - a.open.length;\n\t\t\t});\n\t\t}\n\t});\n\t\n\tvar parseOptions = [\n\t\t'delimiters',\n\t\t'tripleDelimiters',\n\t\t'staticDelimiters',\n\t\t'staticTripleDelimiters',\n\t\t'csp',\n\t\t'interpolate',\n\t\t'preserveWhitespace',\n\t\t'sanitize',\n\t\t'stripComments'\n\t];\n\t\n\tvar TEMPLATE_INSTRUCTIONS = \"Either preparse or use a ractive runtime source that includes the parser. \";\n\t\n\tvar COMPUTATION_INSTRUCTIONS = \"Either use:\\n\\n\\tRactive.parse.computedStrings( component.computed )\\n\\nat build time to pre-convert the strings to functions, or use functions instead of strings in computed properties.\";\n\t\n\t\n\tfunction throwNoParse ( method, error, instructions ) {\n\t\tif ( !method ) {\n\t\t\tfatal( (\"Missing Ractive.parse - cannot parse \" + error + \". \" + instructions) );\n\t\t}\n\t}\n\t\n\tfunction createFunction ( body, length ) {\n\t\tthrowNoParse( fromExpression, 'new expression function', TEMPLATE_INSTRUCTIONS );\n\t\treturn fromExpression( body, length );\n\t}\n\t\n\tfunction createFunctionFromString ( str, bindTo ) {\n\t\tthrowNoParse( fromComputationString, 'compution string \"${str}\"', COMPUTATION_INSTRUCTIONS );\n\t\treturn fromComputationString( str, bindTo );\n\t}\n\t\n\tvar parser = {\n\t\n\t\tfromId: function ( id, options ) {\n\t\t\tif ( !doc ) {\n\t\t\t\tif ( options && options.noThrow ) { return; }\n\t\t\t\tthrow new Error( (\"Cannot retrieve template #\" + id + \" as Ractive is not running in a browser.\") );\n\t\t\t}\n\t\n\t\t\tif ( id ) id = id.replace( /^#/, '' );\n\t\n\t\t\tvar template;\n\t\n\t\t\tif ( !( template = doc.getElementById( id ) )) {\n\t\t\t\tif ( options && options.noThrow ) { return; }\n\t\t\t\tthrow new Error( (\"Could not find template element with id #\" + id) );\n\t\t\t}\n\t\n\t\t\tif ( template.tagName.toUpperCase() !== 'SCRIPT' ) {\n\t\t\t\tif ( options && options.noThrow ) { return; }\n\t\t\t\tthrow new Error( (\"Template element with id #\" + id + \", must be a <script> element\") );\n\t\t\t}\n\t\n\t\t\treturn ( 'textContent' in template ? template.textContent : template.innerHTML );\n\t\n\t\t},\n\t\n\t\tisParsed: function ( template) {\n\t\t\treturn !( typeof template === 'string' );\n\t\t},\n\t\n\t\tgetParseOptions: function ( ractive ) {\n\t\t\t// Could be Ractive or a Component\n\t\t\tif ( ractive.defaults ) { ractive = ractive.defaults; }\n\t\n\t\t\treturn parseOptions.reduce( function ( val, key ) {\n\t\t\t\tval[ key ] = ractive[ key ];\n\t\t\t\treturn val;\n\t\t\t}, {});\n\t\t},\n\t\n\t\tparse: function ( template, options ) {\n\t\t\tthrowNoParse( parse, 'template', TEMPLATE_INSTRUCTIONS );\n\t\t\tvar parsed = parse( template, options );\n\t\t\taddFunctions( parsed );\n\t\t\treturn parsed;\n\t\t},\n\t\n\t\tparseFor: function( template, ractive ) {\n\t\t\treturn this.parse( template, this.getParseOptions( ractive ) );\n\t\t}\n\t};\n\t\n\tvar templateConfigurator = {\n\t\tname: 'template',\n\t\n\t\textend: function ( Parent, proto, options ) {\n\t\t\t// only assign if exists\n\t\t\tif ( 'template' in options ) {\n\t\t\t\tvar template = options.template;\n\t\n\t\t\t\tif ( typeof template === 'function' ) {\n\t\t\t\t\tproto.template = template;\n\t\t\t\t} else {\n\t\t\t\t\tproto.template = parseTemplate( template, proto );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tinit: function ( Parent, ractive, options ) {\n\t\t\t// TODO because of prototypal inheritance, we might just be able to use\n\t\t\t// ractive.template, and not bother passing through the Parent object.\n\t\t\t// At present that breaks the test mocks' expectations\n\t\t\tvar template = 'template' in options ? options.template : Parent.prototype.template;\n\t\t\ttemplate = template || { v: TEMPLATE_VERSION, t: [] };\n\t\n\t\t\tif ( typeof template === 'function' ) {\n\t\t\t\tvar fn = template;\n\t\t\t\ttemplate = getDynamicTemplate( ractive, fn );\n\t\n\t\t\t\tractive._config.template = {\n\t\t\t\t\tfn: fn,\n\t\t\t\t\tresult: template\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\ttemplate = parseTemplate( template, ractive );\n\t\n\t\t\t// TODO the naming of this is confusing - ractive.template refers to [...],\n\t\t\t// but Component.prototype.template refers to {v:1,t:[],p:[]}...\n\t\t\t// it's unnecessary, because the developer never needs to access\n\t\t\t// ractive.template\n\t\t\tractive.template = template.t;\n\t\n\t\t\tif ( template.p ) {\n\t\t\t\textendPartials( ractive.partials, template.p );\n\t\t\t}\n\t\t},\n\t\n\t\treset: function ( ractive ) {\n\t\t\tvar result = resetValue( ractive );\n\t\n\t\t\tif ( result ) {\n\t\t\t\tvar parsed = parseTemplate( result, ractive );\n\t\n\t\t\t\tractive.template = parsed.t;\n\t\t\t\textendPartials( ractive.partials, parsed.p, true );\n\t\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tfunction resetValue ( ractive ) {\n\t\tvar initial = ractive._config.template;\n\t\n\t\t// If this isn't a dynamic template, there's nothing to do\n\t\tif ( !initial || !initial.fn ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar result = getDynamicTemplate( ractive, initial.fn );\n\t\n\t\t// TODO deep equality check to prevent unnecessary re-rendering\n\t\t// in the case of already-parsed templates\n\t\tif ( result !== initial.result ) {\n\t\t\tinitial.result = result;\n\t\t\treturn result;\n\t\t}\n\t}\n\t\n\tfunction getDynamicTemplate ( ractive, fn ) {\n\t\treturn fn.call( ractive, {\n\t\t\tfromId: parser.fromId,\n\t\t\tisParsed: parser.isParsed,\n\t\t\tparse: function ( template, options ) {\n\t\t\t\tif ( options === void 0 ) options = parser.getParseOptions( ractive );\n\t\n\t\t\t\treturn parser.parse( template, options );\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction parseTemplate ( template, ractive ) {\n\t\tif ( typeof template === 'string' ) {\n\t\t\t// parse will validate and add expression functions\n\t\t\ttemplate = parseAsString( template, ractive );\n\t\t}\n\t\telse {\n\t\t\t// need to validate and add exp for already parsed template\n\t\t\tvalidate$1( template );\n\t\t\taddFunctions( template );\n\t\t}\n\t\n\t\treturn template;\n\t}\n\t\n\tfunction parseAsString ( template, ractive ) {\n\t\t// ID of an element containing the template?\n\t\tif ( template[0] === '#' ) {\n\t\t\ttemplate = parser.fromId( template );\n\t\t}\n\t\n\t\treturn parser.parseFor( template, ractive );\n\t}\n\t\n\tfunction validate$1( template ) {\n\t\n\t\t// Check that the template even exists\n\t\tif ( template == undefined ) {\n\t\t\tthrow new Error( (\"The template cannot be \" + template + \".\") );\n\t\t}\n\t\n\t\t// Check the parsed template has a version at all\n\t\telse if ( typeof template.v !== 'number' ) {\n\t\t\tthrow new Error( 'The template parser was passed a non-string template, but the template doesn\\'t have a version.  Make sure you\\'re passing in the template you think you are.' );\n\t\t}\n\t\n\t\t// Check we're using the correct version\n\t\telse if ( template.v !== TEMPLATE_VERSION ) {\n\t\t\tthrow new Error( (\"Mismatched template version (expected \" + TEMPLATE_VERSION + \", got \" + (template.v) + \") Please ensure you are using the latest version of Ractive.js in your build process as well as in your app\") );\n\t\t}\n\t}\n\t\n\tfunction extendPartials ( existingPartials, newPartials, overwrite ) {\n\t\tif ( !newPartials ) return;\n\t\n\t\t// TODO there's an ambiguity here - we need to overwrite in the `reset()`\n\t\t// case, but not initially...\n\t\n\t\tfor ( var key in newPartials ) {\n\t\t\tif ( overwrite || !existingPartials.hasOwnProperty( key ) ) {\n\t\t\t\texistingPartials[ key ] = newPartials[ key ];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar registryNames = [\n\t\t'adaptors',\n\t\t'components',\n\t\t'computed',\n\t\t'decorators',\n\t\t'easing',\n\t\t'events',\n\t\t'interpolators',\n\t\t'partials',\n\t\t'transitions'\n\t];\n\t\n\tvar Registry = function Registry ( name, useDefaults ) {\n\t\tthis.name = name;\n\t\tthis.useDefaults = useDefaults;\n\t};\n\t\n\tRegistry.prototype.extend = function extend ( Parent, proto, options ) {\n\t\tthis.configure(\n\t\t\tthis.useDefaults ? Parent.defaults : Parent,\n\t\t\tthis.useDefaults ? proto : proto.constructor,\n\t\t\toptions );\n\t};\n\t\n\tRegistry.prototype.init = function init () {\n\t\t// noop\n\t};\n\t\n\tRegistry.prototype.configure = function configure ( Parent, target, options ) {\n\t\tvar name = this.name;\n\t\tvar option = options[ name ];\n\t\n\t\tvar registry = create( Parent[name] );\n\t\n\t\tfor ( var key in option ) {\n\t\t\tregistry[ key ] = option[ key ];\n\t\t}\n\t\n\t\ttarget[ name ] = registry;\n\t};\n\t\n\tRegistry.prototype.reset = function reset ( ractive ) {\n\t\tvar registry = ractive[ this.name ];\n\t\tvar changed = false;\n\t\n\t\tObject.keys( registry ).forEach( function ( key ) {\n\t\t\tvar item = registry[ key ];\n\t\t\t\t\n\t\t\tif ( item._fn ) {\n\t\t\t\tif ( item._fn.isOwner ) {\n\t\t\t\t\tregistry[key] = item._fn;\n\t\t\t\t} else {\n\t\t\t\t\tdelete registry[key];\n\t\t\t\t}\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t});\n\t\n\t\treturn changed;\n\t};\n\t\n\tvar registries = registryNames.map( function ( name ) { return new Registry( name, name === 'computed' ); } );\n\t\n\tfunction wrap ( parent, name, method ) {\n\t\tif ( !/_super/.test( method ) ) return method;\n\t\n\t\tfunction wrapper () {\n\t\t\tvar superMethod = getSuperMethod( wrapper._parent, name );\n\t\t\tvar hasSuper = '_super' in this;\n\t\t\tvar oldSuper = this._super;\n\t\n\t\t\tthis._super = superMethod;\n\t\n\t\t\tvar result = method.apply( this, arguments );\n\t\n\t\t\tif ( hasSuper ) {\n\t\t\t\tthis._super = oldSuper;\n\t\t\t} else {\n\t\t\t\tdelete this._super;\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t}\n\t\n\t\twrapper._parent = parent;\n\t\twrapper._method = method;\n\t\n\t\treturn wrapper;\n\t}\n\t\n\tfunction getSuperMethod ( parent, name ) {\n\t\tif ( name in parent ) {\n\t\t\tvar value = parent[ name ];\n\t\n\t\t\treturn typeof value === 'function' ?\n\t\t\t\tvalue :\n\t\t\t\tfunction () { return value; };\n\t\t}\n\t\n\t\treturn noop;\n\t}\n\t\n\tfunction getMessage( deprecated, correct, isError ) {\n\t\treturn \"options.\" + deprecated + \" has been deprecated in favour of options.\" + correct + \".\"\n\t\t\t+ ( isError ? (\" You cannot specify both options, please use options.\" + correct + \".\") : '' );\n\t}\n\t\n\tfunction deprecateOption ( options, deprecatedOption, correct ) {\n\t\tif ( deprecatedOption in options ) {\n\t\t\tif( !( correct in options ) ) {\n\t\t\t\twarnIfDebug( getMessage( deprecatedOption, correct ) );\n\t\t\t\toptions[ correct ] = options[ deprecatedOption ];\n\t\t\t} else {\n\t\t\t\tthrow new Error( getMessage( deprecatedOption, correct, true ) );\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction deprecate ( options ) {\n\t\tdeprecateOption( options, 'beforeInit', 'onconstruct' );\n\t\tdeprecateOption( options, 'init', 'onrender' );\n\t\tdeprecateOption( options, 'complete', 'oncomplete' );\n\t\tdeprecateOption( options, 'eventDefinitions', 'events' );\n\t\n\t\t// Using extend with Component instead of options,\n\t\t// like Human.extend( Spider ) means adaptors as a registry\n\t\t// gets copied to options. So we have to check if actually an array\n\t\tif ( isArray( options.adaptors ) ) {\n\t\t\tdeprecateOption( options, 'adaptors', 'adapt' );\n\t\t}\n\t}\n\t\n\tvar custom = {\n\t\tadapt: adaptConfigurator,\n\t\tcss: cssConfigurator,\n\t\tdata: dataConfigurator,\n\t\ttemplate: templateConfigurator\n\t};\n\t\n\tvar defaultKeys = Object.keys( defaults );\n\t\n\tvar isStandardKey = makeObj( defaultKeys.filter( function ( key ) { return !custom[ key ]; } ) );\n\t\n\t// blacklisted keys that we don't double extend\n\tvar isBlacklisted = makeObj( defaultKeys.concat( registries.map( function ( r ) { return r.name; } ) ) );\n\t\n\tvar order = [].concat(\n\t\tdefaultKeys.filter( function ( key ) { return !registries[ key ] && !custom[ key ]; } ),\n\t\tregistries,\n\t\t//custom.data,\n\t\tcustom.template,\n\t\tcustom.css\n\t);\n\t\n\tvar config = {\n\t\textend: function ( Parent, proto, options ) { return configure$1( 'extend', Parent, proto, options ); },\n\t\n\t\tinit: function ( Parent, ractive, options ) { return configure$1( 'init', Parent, ractive, options ); },\n\t\n\t\treset: function ( ractive ) {\n\t\t\treturn order.filter( function ( c ) {\n\t\t\t\treturn c.reset && c.reset( ractive );\n\t\t\t}).map( function ( c ) { return c.name; } );\n\t\t},\n\t\n\t\t// this defines the order. TODO this isn't used anywhere in the codebase,\n\t\t// only in the test suite - should get rid of it\n\t\torder: order\n\t};\n\t\n\tfunction configure$1 ( method, Parent, target, options ) {\n\t\tdeprecate( options );\n\t\n\t\tfor ( var key in options ) {\n\t\t\tif ( isStandardKey.hasOwnProperty( key ) ) {\n\t\t\t\tvar value = options[ key ];\n\t\n\t\t\t\t// warn the developer if they passed a function and ignore its value\n\t\n\t\t\t\t// NOTE: we allow some functions on \"el\" because we duck type element lists\n\t\t\t\t// and some libraries or ef'ed-up virtual browsers (phantomJS) return a\n\t\t\t\t// function object as the result of querySelector methods\n\t\t\t\tif ( key !== 'el' && typeof value === 'function' ) {\n\t\t\t\t\twarnIfDebug( (\"\" + key + \" is a Ractive option that does not expect a function and will be ignored\"),\n\t\t\t\t\t\tmethod === 'init' ? target : null );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttarget[ key ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// disallow combination of `append` and `enhance`\n\t\tif ( options.append && options.enhance ) {\n\t\t\tthrow new Error( 'Cannot use append and enhance at the same time' );\n\t\t}\n\t\n\t\tregistries.forEach( function ( registry ) {\n\t\t\tregistry[ method ]( Parent, target, options );\n\t\t});\n\t\n\t\tadaptConfigurator[ method ]( Parent, target, options );\n\t\ttemplateConfigurator[ method ]( Parent, target, options );\n\t\tcssConfigurator[ method ]( Parent, target, options );\n\t\n\t\textendOtherMethods( Parent.prototype, target, options );\n\t}\n\t\n\tfunction extendOtherMethods ( parent, target, options ) {\n\t\tfor ( var key in options ) {\n\t\t\tif ( !isBlacklisted[ key ] && options.hasOwnProperty( key ) ) {\n\t\t\t\tvar member = options[ key ];\n\t\n\t\t\t\t// if this is a method that overwrites a method, wrap it:\n\t\t\t\tif ( typeof member === 'function' ) {\n\t\t\t\t\tmember = wrap( parent, key, member );\n\t\t\t\t}\n\t\n\t\t\t\ttarget[ key ] = member;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction makeObj ( array ) {\n\t\tvar obj = {};\n\t\tarray.forEach( function ( x ) { return obj[x] = true; } );\n\t\treturn obj;\n\t}\n\t\n\tvar shouldRerender = [ 'template', 'partials', 'components', 'decorators', 'events' ];\n\t\n\tvar completeHook$1 = new Hook( 'complete' );\n\tvar resetHook = new Hook( 'reset' );\n\tvar renderHook$1 = new Hook( 'render' );\n\tvar unrenderHook = new Hook( 'unrender' );\n\t\n\tfunction Ractive$reset ( data ) {\n\t\tdata = data || {};\n\t\n\t\tif ( typeof data !== 'object' ) {\n\t\t\tthrow new Error( 'The reset method takes either no arguments, or an object containing new data' );\n\t\t}\n\t\n\t\t// TEMP need to tidy this up\n\t\tdata = dataConfigurator.init( this.constructor, this, { data: data });\n\t\n\t\tvar promise = runloop.start( this, true );\n\t\n\t\t// If the root object is wrapped, try and use the wrapper's reset value\n\t\tvar wrapper = this.viewmodel.wrapper;\n\t\tif ( wrapper && wrapper.reset ) {\n\t\t\tif ( wrapper.reset( data ) === false ) {\n\t\t\t\t// reset was rejected, we need to replace the object\n\t\t\t\tthis.viewmodel.set( data );\n\t\t\t}\n\t\t} else {\n\t\t\tthis.viewmodel.set( data );\n\t\t}\n\t\n\t\t// reset config items and track if need to rerender\n\t\tvar changes = config.reset( this );\n\t\tvar rerender;\n\t\n\t\tvar i = changes.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( shouldRerender.indexOf( changes[i] ) > -1 ) {\n\t\t\t\trerender = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( rerender ) {\n\t\t\tunrenderHook.fire( this );\n\t\t\tthis.fragment.resetTemplate( this.template );\n\t\t\trenderHook$1.fire( this );\n\t\t\tcompleteHook$1.fire( this );\n\t\t}\n\t\n\t\trunloop.end();\n\t\n\t\tresetHook.fire( this, data );\n\t\n\t\treturn promise;\n\t}\n\t\n\tfunction collect( source, name, attr, dest ) {\n\t\tsource.forEach( function ( item ) {\n\t\t\t// queue to rerender if the item is a partial and the current name matches\n\t\t\tif ( item.type === PARTIAL && ( item.refName ===  name || item.name === name ) ) {\n\t\t\t\titem.inAttribute = attr;\n\t\t\t\tdest.push( item );\n\t\t\t\treturn; // go no further\n\t\t\t}\n\t\n\t\t\t// if it has a fragment, process its items\n\t\t\tif ( item.fragment ) {\n\t\t\t\tcollect( item.fragment.iterations || item.fragment.items, name, attr, dest );\n\t\t\t}\n\t\n\t\t\t// or if it is itself a fragment, process its items\n\t\t\telse if ( isArray( item.items ) ) {\n\t\t\t\tcollect( item.items, name, attr, dest );\n\t\t\t}\n\t\n\t\t\t// or if it is a component, step in and process its items\n\t\t\telse if ( item.type === COMPONENT && item.instance ) {\n\t\t\t\t// ...unless the partial is shadowed\n\t\t\t\tif ( item.instance.partials[ name ] ) return;\n\t\t\t\tcollect( item.instance.fragment.items, name, attr, dest );\n\t\t\t}\n\t\n\t\t\t// if the item is an element, process its attributes too\n\t\t\tif ( item.type === ELEMENT ) {\n\t\t\t\tif ( isArray( item.attributes ) ) {\n\t\t\t\t\tcollect( item.attributes, name, true, dest );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction forceResetTemplate$1 ( partial ) {\n\t\tpartial.forceResetTemplate();\n\t}\n\t\n\tvar resetPartial = function ( name, partial ) {\n\t\tvar collection = [];\n\t\tcollect( this.fragment.items, name, false, collection );\n\t\n\t\tvar promise = runloop.start( this, true );\n\t\n\t\tthis.partials[ name ] = partial;\n\t\tcollection.forEach( forceResetTemplate$1 );\n\t\n\t\trunloop.end();\n\t\n\t\treturn promise;\n\t};\n\t\n\tvar Item = function Item ( options ) {\n\t\tthis.parentFragment = options.parentFragment;\n\t\tthis.ractive = options.parentFragment.ractive;\n\t\n\t\tthis.template = options.template;\n\t\tthis.index = options.index;\n\t\tthis.type = options.template.t;\n\t\n\t\tthis.dirty = false;\n\t};\n\t\n\tItem.prototype.bubble = function bubble () {\n\t\tif ( !this.dirty ) {\n\t\t\tthis.dirty = true;\n\t\t\tthis.parentFragment.bubble();\n\t\t}\n\t};\n\t\n\tItem.prototype.destroyed = function destroyed () {};\n\t\n\tItem.prototype.find = function find () {\n\t\treturn null;\n\t};\n\t\n\tItem.prototype.findAll = function findAll () {\n\t\t// noop\n\t};\n\t\n\tItem.prototype.findComponent = function findComponent () {\n\t\treturn null;\n\t};\n\t\n\tItem.prototype.findAllComponents = function findAllComponents () {\n\t\t// noop;\n\t};\n\t\n\tItem.prototype.findNextNode = function findNextNode () {\n\t\treturn this.parentFragment.findNextNode( this );\n\t};\n\t\n\tItem.prototype.shuffled = function shuffled () {\n\t\tif ( this.fragment ) this.fragment.shuffled();\n\t};\n\t\n\tItem.prototype.valueOf = function valueOf () {\n\t\treturn this.toString();\n\t};\n\t\n\tvar ComputationChild = (function (Model$$1) {\n\t\tfunction ComputationChild () {\n\t\t\tModel$$1.apply(this, arguments);\n\t\t}\n\t\n\t\tComputationChild.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\t\tComputationChild.prototype.constructor = ComputationChild;\n\t\n\t\tComputationChild.prototype.get = function get ( shouldCapture ) {\n\t\t\tif ( shouldCapture ) capture( this );\n\t\n\t\t\tvar parentValue = this.parent.get();\n\t\t\treturn parentValue ? parentValue[ this.key ] : undefined;\n\t\t};\n\t\n\t\tComputationChild.prototype.handleChange = function handleChange$1 () {\n\t\t\tthis.dirty = true;\n\t\n\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t\tthis.children.forEach( handleChange$1$1 );\n\t\t\tthis.clearUnresolveds(); // TODO is this necessary?\n\t\t};\n\t\n\t\tComputationChild.prototype.joinKey = function joinKey ( key ) {\n\t\t\tif ( key === undefined || key === '' ) return this;\n\t\n\t\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\t\tvar child = new ComputationChild( this, key );\n\t\t\t\tthis.children.push( child );\n\t\t\t\tthis.childByKey[ key ] = child;\n\t\t\t}\n\t\n\t\t\treturn this.childByKey[ key ];\n\t\t};\n\t\n\t\treturn ComputationChild;\n\t}(Model));\n\t\n\tfunction createResolver ( proxy, ref, index ) {\n\t\tvar resolver = proxy.fragment.resolve( ref, function ( model ) {\n\t\t\tremoveFromArray( proxy.resolvers, resolver );\n\t\t\tproxy.models[ index ] = model;\n\t\t\tproxy.bubble();\n\t\t});\n\t\n\t\tproxy.resolvers.push( resolver );\n\t}\n\t\n\tvar ExpressionProxy = (function (Model$$1) {\n\t\tfunction ExpressionProxy ( fragment, template ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tModel$$1.call( this, fragment.ractive.viewmodel, null );\n\t\n\t\t\tthis.fragment = fragment;\n\t\t\tthis.template = template;\n\t\n\t\t\tthis.isReadonly = true;\n\t\t\tthis.dirty = true;\n\t\n\t\t\tthis.fn = getFunction( template.s, template.r.length );\n\t\n\t\t\tthis.resolvers = [];\n\t\t\tthis.models = this.template.r.map( function ( ref, index ) {\n\t\t\t\tvar model = resolveReference( this$1.fragment, ref );\n\t\n\t\t\t\tif ( !model ) {\n\t\t\t\t\tcreateResolver( this$1, ref, index );\n\t\t\t\t}\n\t\n\t\t\t\treturn model;\n\t\t\t});\n\t\n\t\t\tthis.shuffle = undefined;\n\t\n\t\t\tthis.bubble();\n\t\t}\n\t\n\t\tExpressionProxy.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\t\tExpressionProxy.prototype.constructor = ExpressionProxy;\n\t\n\t\tExpressionProxy.prototype.bubble = function bubble ( actuallyChanged ) {\n\t\t\t// refresh the keypath\n\t\t\tif ( actuallyChanged === void 0 ) actuallyChanged = true;\n\t\n\t\t\tif ( this.registered ) delete this.root.expressions[ this.keypath ];\n\t\t\tthis.keypath = undefined;\n\t\n\t\t\tif ( actuallyChanged ) {\n\t\t\t\tthis.dirty = true;\n\t\t\t\tthis.handleChange();\n\t\t\t}\n\t\t};\n\t\n\t\tExpressionProxy.prototype.get = function get ( shouldCapture ) {\n\t\t\tif ( shouldCapture ) capture( this );\n\t\n\t\t\tif ( this.dirty ) {\n\t\t\t\tthis.dirty = false;\n\t\t\t\tthis.value = this.getValue();\n\t\t\t\tthis.adapt();\n\t\t\t}\n\t\n\t\t\treturn shouldCapture && this.wrapper ? this.wrapper.value : this.value;\n\t\t};\n\t\n\t\tExpressionProxy.prototype.getKeypath = function getKeypath () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tif ( !this.template ) return '@undefined';\n\t\t\tif ( !this.keypath ) {\n\t\t\t\tthis.keypath = '@' + this.template.s.replace( /_(\\d+)/g, function ( match, i ) {\n\t\t\t\t\tif ( i >= this$1.models.length ) return match;\n\t\n\t\t\t\t\tvar model = this$1.models[i];\n\t\t\t\t\treturn model ? model.getKeypath() : '@undefined';\n\t\t\t\t});\n\t\n\t\t\t\tthis.root.expressions[ this.keypath ] = this;\n\t\t\t\tthis.registered = true;\n\t\t\t}\n\t\n\t\t\treturn this.keypath;\n\t\t};\n\t\n\t\tExpressionProxy.prototype.getValue = function getValue () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tstartCapturing();\n\t\t\tvar result;\n\t\n\t\t\ttry {\n\t\t\t\tvar params = this.models.map( function ( m ) { return m ? m.get( true ) : undefined; } );\n\t\t\t\tresult = this.fn.apply( this.fragment.ractive, params );\n\t\t\t} catch ( err ) {\n\t\t\t\twarnIfDebug( (\"Failed to compute \" + (this.getKeypath()) + \": \" + (err.message || err)) );\n\t\t\t}\n\t\n\t\t\tvar dependencies = stopCapturing();\n\t\t\tif ( this.dependencies ) this.dependencies.forEach( function ( d ) { return d.unregister( this$1 ); } );\n\t\t\tthis.dependencies = dependencies;\n\t\t\tthis.dependencies.forEach( function ( d ) { return d.register( this$1 ); } );\n\t\n\t\t\treturn result;\n\t\t};\n\t\n\t\tExpressionProxy.prototype.handleChange = function handleChange$1 () {\n\t\t\tthis.dirty = true;\n\t\n\t\t\tthis.links.forEach( marked );\n\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t\tthis.children.forEach( handleChange$1$1 );\n\t\n\t\t\tthis.clearUnresolveds();\n\t\t};\n\t\n\t\tExpressionProxy.prototype.joinKey = function joinKey ( key ) {\n\t\t\tif ( key === undefined || key === '' ) return this;\n\t\n\t\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\t\tvar child = new ComputationChild( this, key );\n\t\t\t\tthis.children.push( child );\n\t\t\t\tthis.childByKey[ key ] = child;\n\t\t\t}\n\t\n\t\t\treturn this.childByKey[ key ];\n\t\t};\n\t\n\t\tExpressionProxy.prototype.mark = function mark () {\n\t\t\tthis.handleChange();\n\t\t};\n\t\n\t\tExpressionProxy.prototype.rebinding = function rebinding ( next, previous, safe ) {\n\t\t\tvar idx = this.models.indexOf( previous );\n\t\n\t\t\tif ( ~idx ) {\n\t\t\t\tnext = rebindMatch( this.template.r[idx], next, previous );\n\t\t\t\tif ( next !== previous ) {\n\t\t\t\t\tprevious.unregister( this );\n\t\t\t\t\tthis.models.splice( idx, 1, next );\n\t\t\t\t\t// TODO: set up a resolver if there is no next?\n\t\t\t\t\tif ( next ) next.addShuffleRegister( this, 'mark' );\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.bubble( !safe );\n\t\t};\n\t\n\t\tExpressionProxy.prototype.retrieve = function retrieve () {\n\t\t\treturn this.get();\n\t\t};\n\t\n\t\tExpressionProxy.prototype.teardown = function teardown () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tthis.unbind();\n\t\t\tthis.fragment = undefined;\n\t\t\tif ( this.dependencies ) this.dependencies.forEach( function ( d ) { return d.unregister( this$1 ); } );\n\t\t\tModel$$1.prototype.teardown.call(this);\n\t\t};\n\t\n\t\tExpressionProxy.prototype.unregister = function unregister( dep ) {\n\t\t\tModel$$1.prototype.unregister.call( this, dep );\n\t\t\tif ( !this.deps.length ) this.teardown();\n\t\t};\n\t\n\t\tExpressionProxy.prototype.unbind = function unbind$1 () {\n\t\t\tthis.resolvers.forEach( unbind$1$1 );\n\t\t};\n\t\n\t\treturn ExpressionProxy;\n\t}(Model));\n\t\n\tvar ReferenceExpressionChild = (function (Model$$1) {\n\t\tfunction ReferenceExpressionChild ( parent, key ) {\n\t\t\tModel$$1.call ( this, parent, key );\n\t\t}\n\t\n\t\tReferenceExpressionChild.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\t\tReferenceExpressionChild.prototype.constructor = ReferenceExpressionChild;\n\t\n\t\tReferenceExpressionChild.prototype.applyValue = function applyValue ( value ) {\n\t\t\tif ( isEqual( value, this.value ) ) return;\n\t\n\t\t\tvar parent = this.parent, keys = [ this.key ];\n\t\t\twhile ( parent ) {\n\t\t\t\tif ( parent.base ) {\n\t\t\t\t\tvar target = parent.model.joinAll( keys );\n\t\t\t\t\ttarget.applyValue( value );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\n\t\t\t\tkeys.unshift( parent.key );\n\t\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t};\n\t\n\t\tReferenceExpressionChild.prototype.joinKey = function joinKey ( key ) {\n\t\t\tif ( key === undefined || key === '' ) return this;\n\t\n\t\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\t\tvar child = new ReferenceExpressionChild( this, key );\n\t\t\t\tthis.children.push( child );\n\t\t\t\tthis.childByKey[ key ] = child;\n\t\t\t}\n\t\n\t\t\treturn this.childByKey[ key ];\n\t\t};\n\t\n\t\tReferenceExpressionChild.prototype.retrieve = function retrieve () {\n\t\t\tvar parent = this.parent.get();\n\t\t\treturn parent && this.key in parent ? parent[ this.key ] : undefined;\n\t\t};\n\t\n\t\treturn ReferenceExpressionChild;\n\t}(Model));\n\t\n\tvar ReferenceExpressionProxy = (function (Model$$1) {\n\t\tfunction ReferenceExpressionProxy ( fragment, template ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tModel$$1.call( this, null, null );\n\t\t\tthis.dirty = true;\n\t\t\tthis.root = fragment.ractive.viewmodel;\n\t\t\tthis.template = template;\n\t\n\t\t\tthis.resolvers = [];\n\t\n\t\t\tthis.base = resolve$3( fragment, template );\n\t\t\tvar baseResolver;\n\t\n\t\t\tif ( !this.base ) {\n\t\t\t\tbaseResolver = fragment.resolve( template.r, function ( model ) {\n\t\t\t\t\tthis$1.base = model;\n\t\t\t\t\tthis$1.bubble();\n\t\n\t\t\t\t\tremoveFromArray( this$1.resolvers, baseResolver );\n\t\t\t\t});\n\t\n\t\t\t\tthis.resolvers.push( baseResolver );\n\t\t\t}\n\t\n\t\t\tvar intermediary = this.intermediary = {\n\t\t\t\thandleChange: function () { return this$1.handleChange(); },\n\t\t\t\trebinding: function ( next, previous ) {\n\t\t\t\t\tif ( previous === this$1.base ) {\n\t\t\t\t\t\tnext = rebindMatch( template, next, previous );\n\t\t\t\t\t\tif ( next !== this$1.base ) {\n\t\t\t\t\t\t\tthis$1.base.unregister( intermediary );\n\t\t\t\t\t\t\tthis$1.base = next;\n\t\t\t\t\t\t\t// TODO: if there is no next, set up a resolver?\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar idx = this$1.members.indexOf( previous );\n\t\t\t\t\t\tif ( ~idx ) {\n\t\t\t\t\t\t\t// only direct references will rebind... expressions handle themselves\n\t\t\t\t\t\t\tnext = rebindMatch( template.m[idx].n, next, previous );\n\t\t\t\t\t\t\tif ( next !== this$1.members[idx] ) {\n\t\t\t\t\t\t\t\tthis$1.members.splice( idx, 1, next );\n\t\t\t\t\t\t\t\t// TODO: if there is no next, set up a resolver?\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( next !== previous ) previous.unregister( intermediary );\n\t\t\t\t\tif ( next ) next.addShuffleTask( function () { return next.register( intermediary ); } );\n\t\n\t\t\t\t\tthis$1.bubble();\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tthis.members = template.m.map( function ( template, i ) {\n\t\t\t\tif ( typeof template === 'string' ) {\n\t\t\t\t\treturn { get: function () { return template; } };\n\t\t\t\t}\n\t\n\t\t\t\tvar model;\n\t\t\t\tvar resolver;\n\t\n\t\t\t\tif ( template.t === REFERENCE ) {\n\t\t\t\t\tmodel = resolveReference( fragment, template.n );\n\t\n\t\t\t\t\tif ( model ) {\n\t\t\t\t\t\tmodel.register( intermediary );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolver = fragment.resolve( template.n, function ( model ) {\n\t\t\t\t\t\t\tthis$1.members[i] = model;\n\t\n\t\t\t\t\t\t\tmodel.register( intermediary );\n\t\t\t\t\t\t\tthis$1.handleChange();\n\t\n\t\t\t\t\t\t\tremoveFromArray( this$1.resolvers, resolver );\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\tthis$1.resolvers.push( resolver );\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn model;\n\t\t\t\t}\n\t\n\t\t\t\tmodel = new ExpressionProxy( fragment, template );\n\t\t\t\tmodel.register( intermediary );\n\t\t\t\treturn model;\n\t\t\t});\n\t\n\t\t\tthis.isUnresolved = true;\n\t\t\tthis.bubble();\n\t\t}\n\t\n\t\tReferenceExpressionProxy.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\t\tReferenceExpressionProxy.prototype.constructor = ReferenceExpressionProxy;\n\t\n\t\tReferenceExpressionProxy.prototype.bubble = function bubble () {\n\t\t\tif ( !this.base ) return;\n\t\t\tif ( !this.dirty ) this.handleChange();\n\t\t};\n\t\n\t\tReferenceExpressionProxy.prototype.forceResolution = function forceResolution () {\n\t\t\tthis.resolvers.forEach( function ( resolver ) { return resolver.forceResolution(); } );\n\t\t\tthis.dirty = true;\n\t\t\tthis.bubble();\n\t\t};\n\t\n\t\tReferenceExpressionProxy.prototype.get = function get ( shouldCapture ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tif ( this.dirty ) {\n\t\t\t\tthis.bubble();\n\t\n\t\t\t\tvar i = this.members.length, resolved = true;\n\t\t\t\twhile ( resolved && i-- ) {\n\t\t\t\t\tif ( !this$1.members[i] ) resolved = false;\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.base && resolved ) {\n\t\t\t\t\tvar keys = this.members.map( function ( m ) { return escapeKey( String( m.get() ) ); } );\n\t\t\t\t\tvar model = this.base.joinAll( keys );\n\t\n\t\t\t\t\tif ( model !== this.model ) {\n\t\t\t\t\t\tif ( this.model ) {\n\t\t\t\t\t\t\tthis.model.unregister( this );\n\t\t\t\t\t\t\tthis.model.unregisterTwowayBinding( this );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tthis.model = model;\n\t\t\t\t\t\tthis.parent = model.parent;\n\t\t\t\t\t\tthis.model.register( this );\n\t\t\t\t\t\tthis.model.registerTwowayBinding( this );\n\t\n\t\t\t\t\t\tif ( this.keypathModel ) this.keypathModel.handleChange();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tthis.value = this.model ? this.model.get( shouldCapture ) : undefined;\n\t\t\t\tthis.dirty = false;\n\t\t\t\tthis.mark();\n\t\t\t\treturn this.value;\n\t\t\t} else {\n\t\t\t\treturn this.model ? this.model.get( shouldCapture ) : undefined;\n\t\t\t}\n\t\t};\n\t\n\t\t// indirect two-way bindings\n\t\tReferenceExpressionProxy.prototype.getValue = function getValue () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tthis.value = this.model ? this.model.get() : undefined;\n\t\n\t\t\tvar i = this.bindings.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar value = this$1.bindings[i].getValue();\n\t\t\t\tif ( value !== this$1.value ) return value;\n\t\t\t}\n\t\n\t\t\t// check one-way bindings\n\t\t\tvar oneway = findBoundValue( this.deps );\n\t\t\tif ( oneway ) return oneway.value;\n\t\n\t\t\treturn this.value;\n\t\t};\n\t\n\t\tReferenceExpressionProxy.prototype.getKeypath = function getKeypath () {\n\t\t\treturn this.model ? this.model.getKeypath() : '@undefined';\n\t\t};\n\t\n\t\tReferenceExpressionProxy.prototype.handleChange = function handleChange$1 () {\n\t\t\tthis.dirty = true;\n\t\t\tthis.mark();\n\t\t};\n\t\n\t\tReferenceExpressionProxy.prototype.joinKey = function joinKey ( key ) {\n\t\t\tif ( key === undefined || key === '' ) return this;\n\t\n\t\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\t\tvar child = new ReferenceExpressionChild( this, key );\n\t\t\t\tthis.children.push( child );\n\t\t\t\tthis.childByKey[ key ] = child;\n\t\t\t}\n\t\n\t\t\treturn this.childByKey[ key ];\n\t\t};\n\t\n\t\tReferenceExpressionProxy.prototype.mark = function mark$1 () {\n\t\t\tif ( this.dirty ) {\n\t\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t\t}\n\t\n\t\t\tthis.links.forEach( marked );\n\t\t\tthis.children.forEach( mark$1$1 );\n\t\t\tthis.clearUnresolveds();\n\t\t};\n\t\n\t\tReferenceExpressionProxy.prototype.retrieve = function retrieve () {\n\t\t\treturn this.value;\n\t\t};\n\t\n\t\tReferenceExpressionProxy.prototype.rebinding = function rebinding () { }; // NOOP\n\t\n\t\tReferenceExpressionProxy.prototype.set = function set ( value ) {\n\t\t\tif ( !this.model ) throw new Error( 'Unresolved reference expression. This should not happen!' );\n\t\t\tthis.model.set( value );\n\t\t};\n\t\n\t\tReferenceExpressionProxy.prototype.unbind = function unbind$1 () {\n\t\t\tthis.resolvers.forEach( unbind$1$1 );\n\t\t\tif ( this.model ) {\n\t\t\t\tthis.model.unregister( this );\n\t\t\t\tthis.model.unregisterTwowayBinding( this );\n\t\t\t}\n\t\t};\n\t\n\t\treturn ReferenceExpressionProxy;\n\t}(Model));\n\t\n\tfunction resolve$3 ( fragment, template ) {\n\t\tif ( template.r ) {\n\t\t\treturn resolveReference( fragment, template.r );\n\t\t}\n\t\n\t\telse if ( template.x ) {\n\t\t\treturn new ExpressionProxy( fragment, template.x );\n\t\t}\n\t\n\t\telse if ( template.rx ) {\n\t\t\treturn new ReferenceExpressionProxy( fragment, template.rx );\n\t\t}\n\t}\n\t\n\tfunction resolveAliases( section ) {\n\t\tif ( section.template.z ) {\n\t\t\tsection.aliases = {};\n\t\n\t\t\tvar refs = section.template.z;\n\t\t\tfor ( var i = 0; i < refs.length; i++ ) {\n\t\t\t\tsection.aliases[ refs[i].n ] = resolve$3( section.parentFragment, refs[i].x );\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar Alias = (function (Item$$1) {\n\t\tfunction Alias ( options ) {\n\t\t\tItem$$1.call( this, options );\n\t\n\t\t\tthis.fragment = null;\n\t\t}\n\t\n\t\tAlias.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\t\tAlias.prototype.constructor = Alias;\n\t\n\t\tAlias.prototype.bind = function bind () {\n\t\t\tresolveAliases( this );\n\t\n\t\t\tthis.fragment = new Fragment({\n\t\t\t\towner: this,\n\t\t\t\ttemplate: this.template.f\n\t\t\t}).bind();\n\t\t};\n\t\n\t\tAlias.prototype.detach = function detach () {\n\t\t\treturn this.fragment ? this.fragment.detach() : createDocumentFragment();\n\t\t};\n\t\n\t\tAlias.prototype.find = function find ( selector ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\treturn this.fragment.find( selector );\n\t\t\t}\n\t\t};\n\t\n\t\tAlias.prototype.findAll = function findAll ( selector, query ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\tthis.fragment.findAll( selector, query );\n\t\t\t}\n\t\t};\n\t\n\t\tAlias.prototype.findComponent = function findComponent ( name ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\treturn this.fragment.findComponent( name );\n\t\t\t}\n\t\t};\n\t\n\t\tAlias.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\tthis.fragment.findAllComponents( name, query );\n\t\t\t}\n\t\t};\n\t\n\t\tAlias.prototype.firstNode = function firstNode ( skipParent ) {\n\t\t\treturn this.fragment && this.fragment.firstNode( skipParent );\n\t\t};\n\t\n\t\tAlias.prototype.rebinding = function rebinding () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tif ( this.locked ) return;\n\t\t\tthis.locked = true;\n\t\t\trunloop.scheduleTask( function () {\n\t\t\t\tthis$1.locked = false;\n\t\t\t\tresolveAliases( this$1 );\n\t\t\t});\n\t\t};\n\t\n\t\tAlias.prototype.render = function render ( target ) {\n\t\t\tthis.rendered = true;\n\t\t\tif ( this.fragment ) this.fragment.render( target );\n\t\t};\n\t\n\t\tAlias.prototype.toString = function toString ( escape ) {\n\t\t\treturn this.fragment ? this.fragment.toString( escape ) : '';\n\t\t};\n\t\n\t\tAlias.prototype.unbind = function unbind () {\n\t\t\tthis.aliases = {};\n\t\t\tif ( this.fragment ) this.fragment.unbind();\n\t\t};\n\t\n\t\tAlias.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\t\tif ( this.rendered && this.fragment ) this.fragment.unrender( shouldDestroy );\n\t\t\tthis.rendered = false;\n\t\t};\n\t\n\t\tAlias.prototype.update = function update () {\n\t\t\tif ( this.dirty ) {\n\t\t\t\tthis.dirty = false;\n\t\t\t\tthis.fragment.update();\n\t\t\t}\n\t\t};\n\t\n\t\treturn Alias;\n\t}(Item));\n\t\n\tfunction findElement( start, orComponent ) {\n\t\tif ( orComponent === void 0 ) orComponent = true;\n\t\n\t\twhile ( start && start.type !== ELEMENT && ( !orComponent || start.type !== COMPONENT ) ) {\n\t\t\tif ( start.owner ) start = start.owner;\n\t\t\telse if ( start.component ) start = start.component.parentFragment;\n\t\t\telse if ( start.parent ) start = start.parent;\n\t\t\telse if ( start.parentFragment ) start = start.parentFragment;\n\t\t\telse start = undefined;\n\t\t}\n\t\n\t\treturn start;\n\t}\n\t\n\tvar camelCase = function ( hyphenatedStr ) {\n\t\treturn hyphenatedStr.replace( /-([a-zA-Z])/g, function ( match, $1 ) {\n\t\t\treturn $1.toUpperCase();\n\t\t});\n\t};\n\t\n\tvar space = /\\s+/;\n\tvar specials$2 = { 'float': 'cssFloat' };\n\tvar remove$1 = /\\/\\*(?:[\\s\\S]*?)\\*\\//g;\n\tvar escape = /url\\(\\s*(['\"])(?:\\\\[\\s\\S]|(?!\\1).)*\\1\\s*\\)|url\\((?:\\\\[\\s\\S]|[^)])*\\)|(['\"])(?:\\\\[\\s\\S]|(?!\\1).)*\\2/gi;\n\tvar value = /\\0(\\d+)/g;\n\t\n\tfunction readStyle ( css ) {\n\t    var values = [];\n\t\n\t    if ( typeof css !== 'string' ) return {};\n\t\n\t    return css.replace( escape, function ( match ) { return (\"\\u0000\" + (values.push( match ) - 1)); })\n\t        .replace( remove$1, '' )\n\t        .split( ';' )\n\t        .filter( function ( rule ) { return !!rule.trim(); } )\n\t        .map( function ( rule ) { return rule.replace( value, function ( match, n ) { return values[ n ]; } ); } )\n\t        .reduce(function ( rules, rule ) {\n\t            var i = rule.indexOf(':');\n\t            var name = camelCase( rule.substr( 0, i ).trim() );\n\t            rules[ specials$2[ name ] || name ] = rule.substr( i + 1 ).trim();\n\t            return rules;\n\t        }, {});\n\t}\n\t\n\tfunction readClass ( str ) {\n\t  var list = str.split( space );\n\t\n\t  // remove any empty entries\n\t  var i = list.length;\n\t  while ( i-- ) {\n\t    if ( !list[i] ) list.splice( i, 1 );\n\t  }\n\t\n\t  return list;\n\t}\n\t\n\tvar textTypes = [ undefined, 'text', 'search', 'url', 'email', 'hidden', 'password', 'search', 'reset', 'submit' ];\n\t\n\tfunction getUpdateDelegate ( attribute ) {\n\t\tvar element = attribute.element, name = attribute.name;\n\t\n\t\tif ( name === 'id' ) return updateId;\n\t\n\t\tif ( name === 'value' ) {\n\t\t\tif ( attribute.interpolator ) attribute.interpolator.bound = true;\n\t\n\t\t\t// special case - selects\n\t\t\tif ( element.name === 'select' && name === 'value' ) {\n\t\t\t\treturn element.getAttribute( 'multiple' ) ? updateMultipleSelectValue : updateSelectValue;\n\t\t\t}\n\t\n\t\t\tif ( element.name === 'textarea' ) return updateStringValue;\n\t\n\t\t\t// special case - contenteditable\n\t\t\tif ( element.getAttribute( 'contenteditable' ) != null ) return updateContentEditableValue;\n\t\n\t\t\t// special case - <input>\n\t\t\tif ( element.name === 'input' ) {\n\t\t\t\tvar type = element.getAttribute( 'type' );\n\t\n\t\t\t\t// type='file' value='{{fileList}}'>\n\t\t\t\tif ( type === 'file' ) return noop; // read-only\n\t\n\t\t\t\t// type='radio' name='{{twoway}}'\n\t\t\t\tif ( type === 'radio' && element.binding && element.binding.attribute.name === 'name' ) return updateRadioValue;\n\t\n\t\t\t\tif ( ~textTypes.indexOf( type ) ) return updateStringValue;\n\t\t\t}\n\t\n\t\t\treturn updateValue;\n\t\t}\n\t\n\t\tvar node = element.node;\n\t\n\t\t// special case - <input type='radio' name='{{twoway}}' value='foo'>\n\t\tif ( attribute.isTwoway && name === 'name' ) {\n\t\t\tif ( node.type === 'radio' ) return updateRadioName;\n\t\t\tif ( node.type === 'checkbox' ) return updateCheckboxName;\n\t\t}\n\t\n\t\tif ( name === 'style' ) return updateStyleAttribute;\n\t\n\t\tif ( name.indexOf( 'style-' ) === 0 ) return updateInlineStyle;\n\t\n\t\t// special case - class names. IE fucks things up, again\n\t\tif ( name === 'class' && ( !node.namespaceURI || node.namespaceURI === html ) ) return updateClassName;\n\t\n\t\tif ( name.indexOf( 'class-' ) === 0 ) return updateInlineClass;\n\t\n\t\tif ( attribute.isBoolean ) {\n\t\t\tvar type$1 = element.getAttribute( 'type' );\n\t\t\tif ( attribute.interpolator && name === 'checked' && ( type$1 === 'checkbox' || type$1 === 'radio' ) ) attribute.interpolator.bound = true;\n\t\t\treturn updateBoolean;\n\t\t}\n\t\n\t\tif ( attribute.namespace && attribute.namespace !== attribute.node.namespaceURI ) return updateNamespacedAttribute;\n\t\n\t\treturn updateAttribute;\n\t}\n\t\n\tfunction updateId ( reset ) {\n\t\tvar ref = this, node = ref.node;\n\t\tvar value = this.getValue();\n\t\n\t\t// remove the mapping to this node if it hasn't already been replaced\n\t\tif ( this.ractive.nodes[ node.id ] === node ) delete this.ractive.nodes[ node.id ];\n\t\tif ( reset ) return node.removeAttribute( 'id' );\n\t\n\t\tthis.ractive.nodes[ value ] = node;\n\t\n\t\tnode.id = value;\n\t}\n\t\n\tfunction updateMultipleSelectValue ( reset ) {\n\t\tvar value = this.getValue();\n\t\n\t\tif ( !isArray( value ) ) value = [ value ];\n\t\n\t\tvar options = this.node.options;\n\t\tvar i = options.length;\n\t\n\t\tif ( reset ) {\n\t\t\twhile ( i-- ) options[i].selected = false;\n\t\t} else {\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar option = options[i];\n\t\t\t\tvar optionValue = option._ractive ?\n\t\t\t\t\toption._ractive.value :\n\t\t\t\t\toption.value; // options inserted via a triple don't have _ractive\n\t\n\t\t\t\toption.selected = arrayContains( value, optionValue );\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction updateSelectValue ( reset ) {\n\t\tvar value = this.getValue();\n\t\n\t\tif ( !this.locked ) { // TODO is locked still a thing?\n\t\t\tthis.node._ractive.value = value;\n\t\n\t\t\tvar options = this.node.options;\n\t\t\tvar i = options.length;\n\t\t\tvar wasSelected = false;\n\t\n\t\t\tif ( reset ) {\n\t\t\t\twhile ( i-- ) options[i].selected = false;\n\t\t\t} else {\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tvar option = options[i];\n\t\t\t\t\tvar optionValue = option._ractive ?\n\t\t\t\t\t\toption._ractive.value :\n\t\t\t\t\t\toption.value; // options inserted via a triple don't have _ractive\n\t\t\t\t\tif ( option.disabled && option.selected ) wasSelected = true;\n\t\n\t\t\t\t\tif ( optionValue == value ) { // double equals as we may be comparing numbers with strings\n\t\t\t\t\t\toption.selected = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( !wasSelected ) this.node.selectedIndex = -1;\n\t\t}\n\t}\n\t\n\t\n\tfunction updateContentEditableValue ( reset ) {\n\t\tvar value = this.getValue();\n\t\n\t\tif ( !this.locked ) {\n\t\t\tif ( reset ) this.node.innerHTML = '';\n\t\t\telse this.node.innerHTML = value === undefined ? '' : value;\n\t\t}\n\t}\n\t\n\tfunction updateRadioValue ( reset ) {\n\t\tvar node = this.node;\n\t\tvar wasChecked = node.checked;\n\t\n\t\tvar value = this.getValue();\n\t\n\t\tif ( reset ) return node.checked = false;\n\t\n\t\t//node.value = this.element.getAttribute( 'value' );\n\t\tnode.value = this.node._ractive.value = value;\n\t\tnode.checked = value === this.element.getAttribute( 'name' );\n\t\n\t\t// This is a special case - if the input was checked, and the value\n\t\t// changed so that it's no longer checked, the twoway binding is\n\t\t// most likely out of date. To fix it we have to jump through some\n\t\t// hoops... this is a little kludgy but it works\n\t\tif ( wasChecked && !node.checked && this.element.binding && this.element.binding.rendered ) {\n\t\t\tthis.element.binding.group.model.set( this.element.binding.group.getValue() );\n\t\t}\n\t}\n\t\n\tfunction updateValue ( reset ) {\n\t\tif ( !this.locked ) {\n\t\t\tif ( reset ) {\n\t\t\t\tthis.node.removeAttribute( 'value' );\n\t\t\t\tthis.node.value = this.node._ractive.value = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar value = this.getValue();\n\t\n\t\t\tthis.node.value = this.node._ractive.value = value;\n\t\t\tthis.node.setAttribute( 'value', value );\n\t\t}\n\t}\n\t\n\tfunction updateStringValue ( reset ) {\n\t\tif ( !this.locked ) {\n\t\t\tif ( reset ) {\n\t\t\t\tthis.node._ractive.value = '';\n\t\t\t\tthis.node.removeAttribute( 'value' );\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar value = this.getValue();\n\t\n\t\t\tthis.node._ractive.value = value;\n\t\n\t\t\tthis.node.value = safeToStringValue( value );\n\t\t\tthis.node.setAttribute( 'value', safeToStringValue( value ) );\n\t\t}\n\t}\n\t\n\tfunction updateRadioName ( reset ) {\n\t\tif ( reset ) this.node.checked = false;\n\t\telse this.node.checked = ( this.getValue() == this.node._ractive.value );\n\t}\n\t\n\tfunction updateCheckboxName ( reset ) {\n\t\tvar ref = this, element = ref.element, node = ref.node;\n\t\tvar binding = element.binding;\n\t\n\t\tvar value = this.getValue();\n\t\tvar valueAttribute = element.getAttribute( 'value' );\n\t\n\t\tif ( reset ) {\n\t\t\t// TODO: WAT?\n\t\t}\n\t\n\t\tif ( !isArray( value ) ) {\n\t\t\tbinding.isChecked = node.checked = ( value == valueAttribute );\n\t\t} else {\n\t\t\tvar i = value.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( valueAttribute == value[i] ) {\n\t\t\t\t\tbinding.isChecked = node.checked = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbinding.isChecked = node.checked = false;\n\t\t}\n\t}\n\t\n\tfunction updateStyleAttribute ( reset ) {\n\t\tvar props = reset ? {} : readStyle( this.getValue() || '' );\n\t\tvar style = this.node.style;\n\t\tvar keys = Object.keys( props );\n\t\tvar prev = this.previous || [];\n\t\n\t\tvar i = 0;\n\t\twhile ( i < keys.length ) {\n\t\t\tif ( keys[i] in style ) style[ keys[i] ] = props[ keys[i] ];\n\t\t\ti++;\n\t\t}\n\t\n\t\t// remove now-missing attrs\n\t\ti = prev.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( !~keys.indexOf( prev[i] ) && prev[i] in style ) style[ prev[i] ] = '';\n\t\t}\n\t\n\t\tthis.previous = keys;\n\t}\n\t\n\tfunction updateInlineStyle ( reset ) {\n\t\tif ( !this.styleName ) {\n\t\t\tthis.styleName = camelize( this.name.substr( 6 ) );\n\t\t}\n\t\n\t\tthis.node.style[ this.styleName ] = reset ? '' : this.getValue();\n\t}\n\t\n\tfunction updateClassName ( reset ) {\n\t\tvar value = reset ? [] : readClass( safeToStringValue( this.getValue() ) );\n\t\tvar attr = readClass( this.node.className );\n\t\tvar prev = this.previous || attr.slice( 0 );\n\t\n\t\tvar i = 0;\n\t\twhile ( i < value.length ) {\n\t\t\tif ( !~attr.indexOf( value[i] ) ) attr.push( value[i] );\n\t\t\ti++;\n\t\t}\n\t\n\t\t// remove now-missing classes\n\t\ti = prev.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( !~value.indexOf( prev[i] ) ) {\n\t\t\t\tvar idx = attr.indexOf( prev[i] );\n\t\t\t\tif ( ~idx ) attr.splice( idx, 1 );\n\t\t\t}\n\t\t}\n\t\n\t\tvar className = attr.join( ' ' );\n\t\n\t\tif ( className !== this.node.className ) {\n\t\t\tthis.node.className = className;\n\t\t}\n\t\n\t\tthis.previous = value;\n\t}\n\t\n\tfunction updateInlineClass ( reset ) {\n\t\tvar name = this.name.substr( 6 );\n\t\tvar attr = readClass( this.node.className );\n\t\tvar value = reset ? false : this.getValue();\n\t\n\t\tif ( !this.inlineClass ) this.inlineClass = name;\n\t\n\t\tif ( value && !~attr.indexOf( name ) ) attr.push( name );\n\t\telse if ( !value && ~attr.indexOf( name ) ) attr.splice( attr.indexOf( name ), 1 );\n\t\n\t\tthis.node.className = attr.join( ' ' );\n\t}\n\t\n\tfunction updateBoolean ( reset ) {\n\t\t// with two-way binding, only update if the change wasn't initiated by the user\n\t\t// otherwise the cursor will often be sent to the wrong place\n\t\tif ( !this.locked ) {\n\t\t\tif ( reset ) {\n\t\t\t\tif ( this.useProperty ) this.node[ this.propertyName ] = false;\n\t\t\t\tthis.node.removeAttribute( this.propertyName );\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( this.useProperty ) {\n\t\t\t\tthis.node[ this.propertyName ] = this.getValue();\n\t\t\t} else {\n\t\t\t\tif ( this.getValue() ) {\n\t\t\t\t\tthis.node.setAttribute( this.propertyName, '' );\n\t\t\t\t} else {\n\t\t\t\t\tthis.node.removeAttribute( this.propertyName );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction updateAttribute ( reset ) {\n\t\tif ( reset ) this.node.removeAttribute( this.name );\n\t\telse this.node.setAttribute( this.name, safeToStringValue( this.getString() ) );\n\t}\n\t\n\tfunction updateNamespacedAttribute ( reset ) {\n\t\tif ( reset ) this.node.removeAttributeNS( this.namespace, this.name.slice( this.name.indexOf( ':' ) + 1 ) );\n\t\telse this.node.setAttributeNS( this.namespace, this.name.slice( this.name.indexOf( ':' ) + 1 ), safeToStringValue( this.getString() ) );\n\t}\n\t\n\tvar propertyNames = {\n\t\t'accept-charset': 'acceptCharset',\n\t\taccesskey: 'accessKey',\n\t\tbgcolor: 'bgColor',\n\t\t'class': 'className',\n\t\tcodebase: 'codeBase',\n\t\tcolspan: 'colSpan',\n\t\tcontenteditable: 'contentEditable',\n\t\tdatetime: 'dateTime',\n\t\tdirname: 'dirName',\n\t\t'for': 'htmlFor',\n\t\t'http-equiv': 'httpEquiv',\n\t\tismap: 'isMap',\n\t\tmaxlength: 'maxLength',\n\t\tnovalidate: 'noValidate',\n\t\tpubdate: 'pubDate',\n\t\treadonly: 'readOnly',\n\t\trowspan: 'rowSpan',\n\t\ttabindex: 'tabIndex',\n\t\tusemap: 'useMap'\n\t};\n\t\n\tfunction lookupNamespace ( node, prefix ) {\n\t\tvar qualified = \"xmlns:\" + prefix;\n\t\n\t\twhile ( node ) {\n\t\t\tif ( node.hasAttribute && node.hasAttribute( qualified ) ) return node.getAttribute( qualified );\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\n\t\treturn namespaces[ prefix ];\n\t}\n\t\n\tvar Attribute = (function (Item$$1) {\n\t\tfunction Attribute ( options ) {\n\t\t\tItem$$1.call( this, options );\n\t\n\t\t\tthis.name = options.template.n;\n\t\t\tthis.namespace = null;\n\t\n\t\t\tthis.owner = options.owner || options.parentFragment.owner || options.element || findElement( options.parentFragment );\n\t\t\tthis.element = options.element || (this.owner.attributeByName ? this.owner : findElement( options.parentFragment ) );\n\t\t\tthis.parentFragment = options.parentFragment; // shared\n\t\t\tthis.ractive = this.parentFragment.ractive;\n\t\n\t\t\tthis.rendered = false;\n\t\t\tthis.updateDelegate = null;\n\t\t\tthis.fragment = null;\n\t\n\t\t\tthis.element.attributeByName[ this.name ] = this;\n\t\n\t\t\tif ( !isArray( options.template.f ) ) {\n\t\t\t\tthis.value = options.template.f;\n\t\t\t\tif ( this.value === 0 ) {\n\t\t\t\t\tthis.value = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.fragment = new Fragment({\n\t\t\t\t\towner: this,\n\t\t\t\t\ttemplate: options.template.f\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tthis.interpolator = this.fragment &&\n\t\t\t\tthis.fragment.items.length === 1 &&\n\t\t\t\tthis.fragment.items[0].type === INTERPOLATOR &&\n\t\t\t\tthis.fragment.items[0];\n\t\n\t\t\tif ( this.interpolator ) this.interpolator.owner = this;\n\t\t}\n\t\n\t\tAttribute.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\t\tAttribute.prototype.constructor = Attribute;\n\t\n\t\tAttribute.prototype.bind = function bind () {\n\t\t\tif ( this.fragment ) {\n\t\t\t\tthis.fragment.bind();\n\t\t\t}\n\t\t};\n\t\n\t\tAttribute.prototype.bubble = function bubble () {\n\t\t\tif ( !this.dirty ) {\n\t\t\t\tthis.parentFragment.bubble();\n\t\t\t\tthis.element.bubble();\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t};\n\t\n\t\tAttribute.prototype.destroyed = function destroyed () {\n\t\t\tthis.updateDelegate( true );\n\t\t};\n\t\n\t\tAttribute.prototype.getString = function getString () {\n\t\t\treturn this.fragment ?\n\t\t\t\tthis.fragment.toString() :\n\t\t\t\tthis.value != null ? '' + this.value : '';\n\t\t};\n\t\n\t\t// TODO could getValue ever be called for a static attribute,\n\t\t// or can we assume that this.fragment exists?\n\t\tAttribute.prototype.getValue = function getValue () {\n\t\t\treturn this.fragment ? this.fragment.valueOf() : booleanAttributes.test( this.name ) ? true : this.value;\n\t\t};\n\t\n\t\tAttribute.prototype.render = function render () {\n\t\t\tvar node = this.element.node;\n\t\t\tthis.node = node;\n\t\n\t\t\t// should we use direct property access, or setAttribute?\n\t\t\tif ( !node.namespaceURI || node.namespaceURI === namespaces.html ) {\n\t\t\t\tthis.propertyName = propertyNames[ this.name ] || this.name;\n\t\n\t\t\t\tif ( node[ this.propertyName ] !== undefined ) {\n\t\t\t\t\tthis.useProperty = true;\n\t\t\t\t}\n\t\n\t\t\t\t// is attribute a boolean attribute or 'value'? If so we're better off doing e.g.\n\t\t\t\t// node.selected = true rather than node.setAttribute( 'selected', '' )\n\t\t\t\tif ( booleanAttributes.test( this.name ) || this.isTwoway ) {\n\t\t\t\t\tthis.isBoolean = true;\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.propertyName === 'value' ) {\n\t\t\t\t\tnode._ractive.value = this.value;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( node.namespaceURI ) {\n\t\t\t\tvar index = this.name.indexOf( ':' );\n\t\t\t\tif ( index !== -1 ) {\n\t\t\t\t\tthis.namespace = lookupNamespace( node, this.name.slice( 0, index ) );\n\t\t\t\t} else {\n\t\t\t\t\tthis.namespace = node.namespaceURI;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthis.rendered = true;\n\t\t\tthis.updateDelegate = getUpdateDelegate( this );\n\t\t\tthis.updateDelegate();\n\t\t};\n\t\n\t\tAttribute.prototype.toString = function toString () {\n\t\t\tvar value = this.getValue();\n\t\n\t\t\t// Special case - select and textarea values (should not be stringified)\n\t\t\tif ( this.name === 'value' && ( this.element.getAttribute( 'contenteditable' ) !== undefined || ( this.element.name === 'select' || this.element.name === 'textarea' ) ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Special case – bound radio `name` attributes\n\t\t\tif ( this.name === 'name' && this.element.name === 'input' && this.interpolator && this.element.getAttribute( 'type' ) === 'radio' ) {\n\t\t\t\treturn (\"name=\\\"{{\" + (this.interpolator.model.getKeypath()) + \"}}\\\"\");\n\t\t\t}\n\t\n\t\t\t// Special case - style and class attributes and directives\n\t\t\tif ( this.owner === this.element && ( this.name === 'style' || this.name === 'class' || this.styleName || this.inlineClass ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( booleanAttributes.test( this.name ) ) return value ? this.name : '';\n\t\t\tif ( value == null ) return '';\n\t\n\t\t\tvar str = safeAttributeString( this.getString() );\n\t\t\treturn str ?\n\t\t\t\t(\"\" + (this.name) + \"=\\\"\" + str + \"\\\"\") :\n\t\t\t\tthis.name;\n\t\t};\n\t\n\t\tAttribute.prototype.unbind = function unbind () {\n\t\t\tif ( this.fragment ) this.fragment.unbind();\n\t\t};\n\t\n\t\tAttribute.prototype.unrender = function unrender () {\n\t\t\tthis.updateDelegate( true );\n\t\n\t\t\tthis.rendered = false;\n\t\t};\n\t\n\t\tAttribute.prototype.update = function update () {\n\t\t\tif ( this.dirty ) {\n\t\t\t\tthis.dirty = false;\n\t\t\t\tif ( this.fragment ) this.fragment.update();\n\t\t\t\tif ( this.rendered ) this.updateDelegate();\n\t\t\t\tif ( this.isTwoway && !this.locked ) {\n\t\t\t\t\tthis.interpolator.twowayBinding.lastVal( true, this.interpolator.model.get() );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn Attribute;\n\t}(Item));\n\t\n\tvar BindingFlag = (function (Item$$1) {\n\t\tfunction BindingFlag ( options ) {\n\t\t\tItem$$1.call( this, options );\n\t\n\t\t\tthis.owner = options.owner || options.parentFragment.owner || findElement( options.parentFragment );\n\t\t\tthis.element = this.owner.attributeByName ? this.owner : findElement( options.parentFragment );\n\t\t\tthis.flag = options.template.v === 'l' ? 'lazy' : 'twoway';\n\t\n\t\t\tif ( this.element.type === ELEMENT ) {\n\t\t\t\tif ( isArray( options.template.f ) ) {\n\t\t\t\t\tthis.fragment = new Fragment({\n\t\t\t\t\t\towner: this,\n\t\t\t\t\t\ttemplate: options.template.f\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tthis.interpolator = this.fragment &&\n\t\t\t\t\t\t\t\t\tthis.fragment.items.length === 1 &&\n\t\t\t\t\t\t\t\t\tthis.fragment.items[0].type === INTERPOLATOR &&\n\t\t\t\t\t\t\t\t\tthis.fragment.items[0];\n\t\t\t}\n\t\t}\n\t\n\t\tBindingFlag.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\t\tBindingFlag.prototype.constructor = BindingFlag;\n\t\n\t\tBindingFlag.prototype.bind = function bind () {\n\t\t\tif ( this.fragment ) this.fragment.bind();\n\t\t\tset$3( this, this.getValue(), true );\n\t\t};\n\t\n\t\tBindingFlag.prototype.bubble = function bubble () {\n\t\t\tif ( !this.dirty ) {\n\t\t\t\tthis.element.bubble();\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t};\n\t\n\t\tBindingFlag.prototype.getValue = function getValue () {\n\t\t\tif ( this.fragment ) return this.fragment.valueOf();\n\t\t\telse if ( 'value' in this ) return this.value;\n\t\t\telse if ( 'f' in this.template ) return this.template.f;\n\t\t\telse return true;\n\t\t};\n\t\n\t\tBindingFlag.prototype.render = function render () {\n\t\t\tset$3( this, this.getValue(), true );\n\t\t};\n\t\n\t\tBindingFlag.prototype.toString = function toString () { return ''; };\n\t\n\t\tBindingFlag.prototype.unbind = function unbind () {\n\t\t\tif ( this.fragment ) this.fragment.unbind();\n\t\n\t\t\tdelete this.element[ this.flag ];\n\t\t};\n\t\n\t\tBindingFlag.prototype.unrender = function unrender () {\n\t\t\tif ( this.element.rendered ) this.element.recreateTwowayBinding();\n\t\t};\n\t\n\t\tBindingFlag.prototype.update = function update () {\n\t\t\tif ( this.dirty ) {\n\t\t\t\tif ( this.fragment ) this.fragment.update();\n\t\t\t\tset$3( this, this.getValue(), true );\n\t\t\t}\n\t\t};\n\t\n\t\treturn BindingFlag;\n\t}(Item));\n\t\n\tfunction set$3 ( flag, value, update ) {\n\t\tif ( value === 0 ) {\n\t\t\tflag.value = true;\n\t\t} else if ( value === 'true' ) {\n\t\t\tflag.value = true;\n\t\t} else if ( value === 'false' || value === '0' ) {\n\t\t\tflag.value = false;\n\t\t} else {\n\t\t\tflag.value = value;\n\t\t}\n\t\n\t\tvar current = flag.element[ flag.flag ];\n\t\tflag.element[ flag.flag ] = flag.value;\n\t\tif ( update && !flag.element.attributes.binding && current !== flag.value ) {\n\t\t\tflag.element.recreateTwowayBinding();\n\t\t}\n\t\n\t\treturn flag.value;\n\t}\n\t\n\tvar div$1 = doc ? createElement( 'div' ) : null;\n\t\n\tvar attributes = false;\n\tfunction inAttributes() { return attributes; }\n\tfunction doInAttributes( fn ) {\n\t\tattributes = true;\n\t\tfn();\n\t\tattributes = false;\n\t}\n\t\n\tvar ConditionalAttribute = (function (Item$$1) {\n\t\tfunction ConditionalAttribute ( options ) {\n\t\t\tItem$$1.call( this, options );\n\t\n\t\t\tthis.attributes = [];\n\t\n\t\t\tthis.owner = options.owner;\n\t\n\t\t\tthis.fragment = new Fragment({\n\t\t\t\tractive: this.ractive,\n\t\t\t\towner: this,\n\t\t\t\ttemplate: this.template\n\t\t\t});\n\t\t\t// this fragment can't participate in node-y things\n\t\t\tthis.fragment.findNextNode = noop;\n\t\n\t\t\tthis.dirty = false;\n\t\t}\n\t\n\t\tConditionalAttribute.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\t\tConditionalAttribute.prototype.constructor = ConditionalAttribute;\n\t\n\t\tConditionalAttribute.prototype.bind = function bind () {\n\t\t\tthis.fragment.bind();\n\t\t};\n\t\n\t\tConditionalAttribute.prototype.bubble = function bubble () {\n\t\t\tif ( !this.dirty ) {\n\t\t\t\tthis.dirty = true;\n\t\t\t\tthis.owner.bubble();\n\t\t\t}\n\t\t};\n\t\n\t\tConditionalAttribute.prototype.render = function render () {\n\t\t\tthis.node = this.owner.node;\n\t\t\tif ( this.node ) {\n\t\t\t\tthis.isSvg = this.node.namespaceURI === svg$1;\n\t\t\t}\n\t\n\t\t\tattributes = true;\n\t\t\tif ( !this.rendered ) this.fragment.render();\n\t\t\tattributes = false;\n\t\n\t\t\tthis.rendered = true;\n\t\t\tthis.dirty = true; // TODO this seems hacky, but necessary for tests to pass in browser AND node.js\n\t\t\tthis.update();\n\t\t};\n\t\n\t\tConditionalAttribute.prototype.toString = function toString () {\n\t\t\treturn this.fragment.toString();\n\t\t};\n\t\n\t\tConditionalAttribute.prototype.unbind = function unbind () {\n\t\t\tthis.fragment.unbind();\n\t\t};\n\t\n\t\tConditionalAttribute.prototype.unrender = function unrender () {\n\t\t\tthis.rendered = false;\n\t\t\tthis.fragment.unrender();\n\t\t};\n\t\n\t\tConditionalAttribute.prototype.update = function update () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar str;\n\t\t\tvar attrs;\n\t\n\t\t\tif ( this.dirty ) {\n\t\t\t\tthis.dirty = false;\n\t\n\t\t\t\tattributes = true;\n\t\t\t\tthis.fragment.update();\n\t\t\t\tattributes = false;\n\t\n\t\t\t\tif ( this.rendered && this.node ) {\n\t\t\t\t\tstr = this.fragment.toString();\n\t\t\t\t\tattrs = parseAttributes( str, this.isSvg );\n\t\n\t\t\t\t\t// any attributes that previously existed but no longer do\n\t\t\t\t\t// must be removed\n\t\t\t\t\tthis.attributes.filter( function ( a ) { return notIn( attrs, a ); } ).forEach( function ( a ) {\n\t\t\t\t\t\tthis$1.node.removeAttribute( a.name );\n\t\t\t\t\t});\n\t\n\t\t\t\t\tattrs.forEach( function ( a ) {\n\t\t\t\t\t\tthis$1.node.setAttribute( a.name, a.value );\n\t\t\t\t\t});\n\t\n\t\t\t\t\tthis.attributes = attrs;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn ConditionalAttribute;\n\t}(Item));\n\t\n\tfunction parseAttributes ( str, isSvg ) {\n\t\tvar tagName = isSvg ? 'svg' : 'div';\n\t\treturn str\n\t\t\t? (div$1.innerHTML = \"<\" + tagName + \" \" + str + \"></\" + tagName + \">\") &&\n\t\t\t\ttoArray(div$1.childNodes[0].attributes)\n\t\t\t: [];\n\t}\n\t\n\tfunction notIn ( haystack, needle ) {\n\t\tvar i = haystack.length;\n\t\n\t\twhile ( i-- ) {\n\t\t\tif ( haystack[i].name === needle.name ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\n\t\treturn true;\n\t}\n\t\n\tvar processWrapper = function ( wrapper, array, methodName, newIndices ) {\n\t\tvar __model = wrapper.__model;\n\t\n\t\tif ( newIndices ) {\n\t\t\t__model.shuffle( newIndices );\n\t\t} else {\n\t\t\t// If this is a sort or reverse, we just do root.set()...\n\t\t\t// TODO use merge logic?\n\t\t\t//root.viewmodel.mark( keypath );\n\t\t}\n\t};\n\t\n\tvar mutatorMethods = [ 'pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift' ];\n\tvar patchedArrayProto = [];\n\t\n\tmutatorMethods.forEach( function ( methodName ) {\n\t\tvar method = function () {\n\t\t\tvar this$1 = this;\n\t\t\tvar args = [], len = arguments.length;\n\t\t\twhile ( len-- ) args[ len ] = arguments[ len ];\n\t\n\t\t\tvar newIndices = getNewIndices( this.length, methodName, args );\n\t\n\t\t\t// lock any magic array wrappers, so that things don't get fudged\n\t\t\tthis._ractive.wrappers.forEach( function ( r ) { if ( r.magic ) r.magic.locked = true; } );\n\t\n\t\t\t// apply the underlying method\n\t\t\tvar result = Array.prototype[ methodName ].apply( this, arguments );\n\t\n\t\t\t// trigger changes\n\t\t\trunloop.start();\n\t\n\t\t\tthis._ractive.setting = true;\n\t\t\tvar i = this._ractive.wrappers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tprocessWrapper( this$1._ractive.wrappers[i], this$1, methodName, newIndices );\n\t\t\t}\n\t\n\t\t\trunloop.end();\n\t\n\t\t\tthis._ractive.setting = false;\n\t\n\t\t\t// unlock the magic arrays... magic... bah\n\t\t\tthis._ractive.wrappers.forEach( function ( r ) { if ( r.magic ) r.magic.locked = false; } );\n\t\n\t\t\treturn result;\n\t\t};\n\t\n\t\tdefineProperty( patchedArrayProto, methodName, {\n\t\t\tvalue: method\n\t\t});\n\t});\n\t\n\tvar patchArrayMethods;\n\tvar unpatchArrayMethods;\n\t\n\t// can we use prototype chain injection?\n\t// http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/#wrappers_prototype_chain_injection\n\tif ( ({}).__proto__ ) {\n\t\t// yes, we can\n\t\tpatchArrayMethods = function ( array ) { return array.__proto__ = patchedArrayProto; };\n\t\tunpatchArrayMethods = function ( array ) { return array.__proto__ = Array.prototype; };\n\t}\n\t\n\telse {\n\t\t// no, we can't\n\t\tpatchArrayMethods = function ( array ) {\n\t\t\tvar i = mutatorMethods.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar methodName = mutatorMethods[i];\n\t\t\t\tdefineProperty( array, methodName, {\n\t\t\t\t\tvalue: patchedArrayProto[ methodName ],\n\t\t\t\t\tconfigurable: true\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\n\t\tunpatchArrayMethods = function ( array ) {\n\t\t\tvar i = mutatorMethods.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete array[ mutatorMethods[i] ];\n\t\t\t}\n\t\t};\n\t}\n\t\n\tpatchArrayMethods.unpatch = unpatchArrayMethods; // TODO export separately?\n\tvar patch = patchArrayMethods;\n\t\n\tvar errorMessage$1 = 'Something went wrong in a rather interesting way';\n\t\n\tvar arrayAdaptor = {\n\t\tfilter: function ( object ) {\n\t\t\t// wrap the array if a) b) it's an array, and b) either it hasn't been wrapped already,\n\t\t\t// or the array didn't trigger the get() itself\n\t\t\treturn isArray( object ) && ( !object._ractive || !object._ractive.setting );\n\t\t},\n\t\twrap: function ( ractive, array, keypath ) {\n\t\t\treturn new ArrayWrapper( ractive, array, keypath );\n\t\t}\n\t};\n\t\n\tvar ArrayWrapper = function ArrayWrapper ( ractive, array ) {\n\t\tthis.root = ractive;\n\t\tthis.value = array;\n\t\tthis.__model = null; // filled in later\n\t\n\t\t// if this array hasn't already been ractified, ractify it\n\t\tif ( !array._ractive ) {\n\t\t\t// define a non-enumerable _ractive property to store the wrappers\n\t\t\tdefineProperty( array, '_ractive', {\n\t\t\t\tvalue: {\n\t\t\t\t\twrappers: [],\n\t\t\t\t\tinstances: [],\n\t\t\t\t\tsetting: false\n\t\t\t\t},\n\t\t\t\tconfigurable: true\n\t\t\t});\n\t\n\t\t\tpatch( array );\n\t\t}\n\t\n\t\t// store the ractive instance, so we can handle transitions later\n\t\tif ( !array._ractive.instances[ ractive._guid ] ) {\n\t\t\tarray._ractive.instances[ ractive._guid ] = 0;\n\t\t\tarray._ractive.instances.push( ractive );\n\t\t}\n\t\n\t\tarray._ractive.instances[ ractive._guid ] += 1;\n\t\tarray._ractive.wrappers.push( this );\n\t};\n\t\n\tArrayWrapper.prototype.get = function get () {\n\t\treturn this.value;\n\t};\n\t\n\tArrayWrapper.prototype.reset = function reset ( value ) {\n\t\treturn this.value === value;\n\t};\n\t\n\tArrayWrapper.prototype.teardown = function teardown () {\n\t\tvar array, storage, wrappers, instances, index;\n\t\n\t\tarray = this.value;\n\t\tstorage = array._ractive;\n\t\twrappers = storage.wrappers;\n\t\tinstances = storage.instances;\n\t\n\t\t// if teardown() was invoked because we're clearing the cache as a result of\n\t\t// a change that the array itself triggered, we can save ourselves the teardown\n\t\t// and immediate setup\n\t\tif ( storage.setting ) {\n\t\t\treturn false; // so that we don't remove it from cached wrappers\n\t\t}\n\t\n\t\tindex = wrappers.indexOf( this );\n\t\tif ( index === -1 ) {\n\t\t\tthrow new Error( errorMessage$1 );\n\t\t}\n\t\n\t\twrappers.splice( index, 1 );\n\t\n\t\t// if nothing else depends on this array, we can revert it to its\n\t\t// natural state\n\t\tif ( !wrappers.length ) {\n\t\t\tdelete array._ractive;\n\t\t\tpatch.unpatch( this.value );\n\t\t}\n\t\n\t\telse {\n\t\t\t// remove ractive instance if possible\n\t\t\tinstances[ this.root._guid ] -= 1;\n\t\t\tif ( !instances[ this.root._guid ] ) {\n\t\t\t\tindex = instances.indexOf( this.root );\n\t\n\t\t\t\tif ( index === -1 ) {\n\t\t\t\t\tthrow new Error( errorMessage$1 );\n\t\t\t\t}\n\t\n\t\t\t\tinstances.splice( index, 1 );\n\t\t\t}\n\t\t}\n\t};\n\t\n\tvar magicAdaptor;\n\t\n\ttry {\n\t\tObject.defineProperty({}, 'test', { get: function() {}, set: function() {} });\n\t\n\t\tmagicAdaptor = {\n\t\t\tfilter: function ( value ) {\n\t\t\t\treturn value && typeof value === 'object';\n\t\t\t},\n\t\t\twrap: function ( ractive, value, keypath ) {\n\t\t\t\treturn new MagicWrapper( ractive, value, keypath );\n\t\t\t}\n\t\t};\n\t} catch ( err ) {\n\t\tmagicAdaptor = false;\n\t}\n\t\n\tvar magicAdaptor$1 = magicAdaptor;\n\t\n\tfunction createOrWrapDescriptor ( originalDescriptor, ractive, keypath, wrapper ) {\n\t\tif ( originalDescriptor.set && originalDescriptor.set.__magic ) {\n\t\t\toriginalDescriptor.set.__magic.dependants.push({ ractive: ractive, keypath: keypath });\n\t\t\treturn originalDescriptor;\n\t\t}\n\t\n\t\tvar setting;\n\t\n\t\tvar dependants = [{ ractive: ractive, keypath: keypath }];\n\t\n\t\tvar descriptor = {\n\t\t\tget: function () {\n\t\t\t\treturn 'value' in originalDescriptor ? originalDescriptor.value : originalDescriptor.get.call( this );\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tif ( setting ) return;\n\t\n\t\t\t\tif ( 'value' in originalDescriptor ) {\n\t\t\t\t\toriginalDescriptor.value = value;\n\t\t\t\t} else {\n\t\t\t\t\toriginalDescriptor.set.call( this, value );\n\t\t\t\t}\n\t\n\t\t\t\tif ( wrapper.locked ) return;\n\t\t\t\tsetting = true;\n\t\t\t\tdependants.forEach( function (ref) {\n\t\t\t\t\tvar ractive = ref.ractive;\n\t\t\t\t\tvar keypath = ref.keypath;\n\t\n\t\t\t\t\tractive.set( keypath, value );\n\t\t\t\t});\n\t\t\t\tsetting = false;\n\t\t\t},\n\t\t\tenumerable: true\n\t\t};\n\t\n\t\tdescriptor.set.__magic = { dependants: dependants, originalDescriptor: originalDescriptor };\n\t\n\t\treturn descriptor;\n\t}\n\t\n\tfunction revert ( descriptor, ractive, keypath ) {\n\t\tif ( !descriptor.set || !descriptor.set.__magic ) return true;\n\t\n\t\tvar dependants = descriptor.set.__magic;\n\t\tvar i = dependants.length;\n\t\twhile ( i-- ) {\n\t\t\tvar dependant = dependants[i];\n\t\t\tif ( dependant.ractive === ractive && dependant.keypath === keypath ) {\n\t\t\t\tdependants.splice( i, 1 );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar MagicWrapper = function MagicWrapper ( ractive, value, keypath ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tthis.ractive = ractive;\n\t\tthis.value = value;\n\t\tthis.keypath = keypath;\n\t\n\t\tthis.originalDescriptors = {};\n\t\n\t\t// wrap all properties with getters\n\t\tObject.keys( value ).forEach( function ( key ) {\n\t\t\tvar originalDescriptor = Object.getOwnPropertyDescriptor( this$1.value, key );\n\t\t\tthis$1.originalDescriptors[ key ] = originalDescriptor;\n\t\n\t\t\tvar childKeypath = keypath ? (\"\" + keypath + \".\" + (escapeKey( key ))) : escapeKey( key );\n\t\n\t\t\tvar descriptor = createOrWrapDescriptor( originalDescriptor, ractive, childKeypath, this$1 );\n\t\n\t\n\t\n\t\t\tObject.defineProperty( this$1.value, key, descriptor );\n\t\t});\n\t};\n\t\n\tMagicWrapper.prototype.get = function get () {\n\t\treturn this.value;\n\t};\n\t\n\tMagicWrapper.prototype.reset = function reset ( value ) {\n\t\treturn this.value === value;\n\t};\n\t\n\tMagicWrapper.prototype.set = function set ( key, value ) {\n\t\tthis.value[ key ] = value;\n\t};\n\t\n\tMagicWrapper.prototype.teardown = function teardown () {\n\t\tvar this$1 = this;\n\t\n\t\t\tObject.keys( this.value ).forEach( function ( key ) {\n\t\t\tvar descriptor = Object.getOwnPropertyDescriptor( this$1.value, key );\n\t\t\tif ( !descriptor.set || !descriptor.set.__magic ) return;\n\t\n\t\t\trevert( descriptor );\n\t\n\t\t\tif ( descriptor.set.__magic.dependants.length === 1 ) {\n\t\t\t\tObject.defineProperty( this$1.value, key, descriptor.set.__magic.originalDescriptor );\n\t\t\t}\n\t\t});\n\t};\n\t\n\tvar MagicArrayWrapper = function MagicArrayWrapper ( ractive, array, keypath ) {\n\t\tthis.value = array;\n\t\n\t\tthis.magic = true;\n\t\n\t\tthis.magicWrapper = magicAdaptor$1.wrap( ractive, array, keypath );\n\t\tthis.arrayWrapper = arrayAdaptor.wrap( ractive, array, keypath );\n\t\tthis.arrayWrapper.magic = this.magicWrapper;\n\t\n\t\t// ugh, this really is a terrible hack\n\t\tObject.defineProperty( this, '__model', {\n\t\t\tget: function () {\n\t\t\t\treturn this.arrayWrapper.__model;\n\t\t\t},\n\t\t\tset: function ( model ) {\n\t\t\t\tthis.arrayWrapper.__model = model;\n\t\t\t}\n\t\t});\n\t};\n\t\n\tMagicArrayWrapper.prototype.get = function get () {\n\t\treturn this.value;\n\t};\n\t\n\tMagicArrayWrapper.prototype.teardown = function teardown () {\n\t\tthis.arrayWrapper.teardown();\n\t\tthis.magicWrapper.teardown();\n\t};\n\t\n\tMagicArrayWrapper.prototype.reset = function reset ( value ) {\n\t\treturn this.arrayWrapper.reset( value ) && this.magicWrapper.reset( value );\n\t};\n\t\n\tvar magicArrayAdaptor = {\n\t\tfilter: function ( object, keypath, ractive ) {\n\t\t\treturn magicAdaptor$1.filter( object, keypath, ractive ) && arrayAdaptor.filter( object );\n\t\t},\n\t\n\t\twrap: function ( ractive, array, keypath ) {\n\t\t\treturn new MagicArrayWrapper( ractive, array, keypath );\n\t\t}\n\t};\n\t\n\t/* global console */\n\t\n\t// TODO this is probably a bit anal, maybe we should leave it out\n\tfunction prettify ( fnBody ) {\n\t\tvar lines = fnBody\n\t\t\t.replace( /^\\t+/gm, function ( tabs ) { return tabs.split( '\\t' ).join( '  ' ); } )\n\t\t\t.split( '\\n' );\n\t\n\t\tvar minIndent = lines.length < 2 ? 0 :\n\t\t\tlines.slice( 1 ).reduce( function ( prev, line ) {\n\t\t\t\treturn Math.min( prev, /^\\s*/.exec( line )[0].length );\n\t\t\t}, Infinity );\n\t\n\t\treturn lines.map( function ( line, i ) {\n\t\t\treturn '    ' + ( i ? line.substring( minIndent ) : line );\n\t\t}).join( '\\n' );\n\t}\n\t\n\t// Ditto. This function truncates the stack to only include app code\n\tfunction truncateStack ( stack ) {\n\t\tif ( !stack ) return '';\n\t\n\t\tvar lines = stack.split( '\\n' );\n\t\tvar name = Computation.name + '.getValue';\n\t\n\t\tvar truncated = [];\n\t\n\t\tvar len = lines.length;\n\t\tfor ( var i = 1; i < len; i += 1 ) {\n\t\t\tvar line = lines[i];\n\t\n\t\t\tif ( ~line.indexOf( name ) ) {\n\t\t\t\treturn truncated.join( '\\n' );\n\t\t\t} else {\n\t\t\t\ttruncated.push( line );\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar Computation = (function (Model$$1) {\n\t\tfunction Computation ( viewmodel, signature, key ) {\n\t\t\tModel$$1.call( this, null, null );\n\t\n\t\t\tthis.root = this.parent = viewmodel;\n\t\t\tthis.signature = signature;\n\t\n\t\t\tthis.key = key; // not actually used, but helps with debugging\n\t\t\tthis.isExpression = key && key[0] === '@';\n\t\n\t\t\tthis.isReadonly = !this.signature.setter;\n\t\n\t\t\tthis.context = viewmodel.computationContext;\n\t\n\t\t\tthis.dependencies = [];\n\t\n\t\t\tthis.children = [];\n\t\t\tthis.childByKey = {};\n\t\n\t\t\tthis.deps = [];\n\t\n\t\t\tthis.dirty = true;\n\t\n\t\t\t// TODO: is there a less hackish way to do this?\n\t\t\tthis.shuffle = undefined;\n\t\t}\n\t\n\t\tComputation.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\t\tComputation.prototype.constructor = Computation;\n\t\n\t\tComputation.prototype.get = function get ( shouldCapture ) {\n\t\t\tif ( shouldCapture ) capture( this );\n\t\n\t\t\tif ( this.dirty ) {\n\t\t\t\tthis.dirty = false;\n\t\t\t\tthis.value = this.getValue();\n\t\t\t\tthis.adapt();\n\t\t\t}\n\t\n\t\t\t// if capturing, this value needs to be unwrapped because it's for external use\n\t\t\treturn shouldCapture && this.wrapper ? this.wrapper.value : this.value;\n\t\t};\n\t\n\t\tComputation.prototype.getValue = function getValue () {\n\t\t\tstartCapturing();\n\t\t\tvar result;\n\t\n\t\t\ttry {\n\t\t\t\tresult = this.signature.getter.call( this.context );\n\t\t\t} catch ( err ) {\n\t\t\t\twarnIfDebug( (\"Failed to compute \" + (this.getKeypath()) + \": \" + (err.message || err)) );\n\t\n\t\t\t\t// TODO this is all well and good in Chrome, but...\n\t\t\t\t// ...also, should encapsulate this stuff better, and only\n\t\t\t\t// show it if Ractive.DEBUG\n\t\t\t\tif ( hasConsole ) {\n\t\t\t\t\tif ( console.groupCollapsed ) console.groupCollapsed( '%cshow details', 'color: rgb(82, 140, 224); font-weight: normal; text-decoration: underline;' );\n\t\t\t\t\tvar functionBody = prettify( this.signature.getterString );\n\t\t\t\t\tvar stack = this.signature.getterUseStack ? '\\n\\n' + truncateStack( err.stack ) : '';\n\t\t\t\t\tconsole.error( (\"\" + (err.name) + \": \" + (err.message) + \"\\n\\n\" + functionBody + \"\" + stack) );\n\t\t\t\t\tif ( console.groupCollapsed ) console.groupEnd();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar dependencies = stopCapturing();\n\t\t\tthis.setDependencies( dependencies );\n\t\n\t\t\treturn result;\n\t\t};\n\t\n\t\tComputation.prototype.handleChange = function handleChange$1 () {\n\t\t\tthis.dirty = true;\n\t\n\t\t\tthis.links.forEach( marked );\n\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t\tthis.children.forEach( handleChange$1$1 );\n\t\t\tthis.clearUnresolveds(); // TODO same question as on Model - necessary for primitives?\n\t\t};\n\t\n\t\tComputation.prototype.joinKey = function joinKey ( key ) {\n\t\t\tif ( key === undefined || key === '' ) return this;\n\t\n\t\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\t\tvar child = new ComputationChild( this, key );\n\t\t\t\tthis.children.push( child );\n\t\t\t\tthis.childByKey[ key ] = child;\n\t\t\t}\n\t\n\t\t\treturn this.childByKey[ key ];\n\t\t};\n\t\n\t\tComputation.prototype.mark = function mark () {\n\t\t\tthis.handleChange();\n\t\t};\n\t\n\t\tComputation.prototype.rebinding = function rebinding ( next, previous ) {\n\t\t\t// computations will grab all of their deps again automagically\n\t\t\tif ( next !== previous ) this.handleChange();\n\t\t};\n\t\n\t\tComputation.prototype.set = function set ( value ) {\n\t\t\tif ( !this.signature.setter ) {\n\t\t\t\tthrow new Error( (\"Cannot set read-only computed value '\" + (this.key) + \"'\") );\n\t\t\t}\n\t\n\t\t\tthis.signature.setter( value );\n\t\t};\n\t\n\t\tComputation.prototype.setDependencies = function setDependencies ( dependencies ) {\n\t\t\t// unregister any soft dependencies we no longer have\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar i = this.dependencies.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar model = this$1.dependencies[i];\n\t\t\t\tif ( !~dependencies.indexOf( model ) ) model.unregister( this$1 );\n\t\t\t}\n\t\n\t\t\t// and add any new ones\n\t\t\ti = dependencies.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar model$1 = dependencies[i];\n\t\t\t\tif ( !~this$1.dependencies.indexOf( model$1 ) ) model$1.register( this$1 );\n\t\t\t}\n\t\n\t\t\tthis.dependencies = dependencies;\n\t\t};\n\t\n\t\tComputation.prototype.teardown = function teardown () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar i = this.dependencies.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( this$1.dependencies[i] ) this$1.dependencies[i].unregister( this$1 );\n\t\t\t}\n\t\t\tif ( this.root.computations[this.key] === this ) delete this.root.computations[this.key];\n\t\t\tModel$$1.prototype.teardown.call(this);\n\t\t};\n\t\n\t\tComputation.prototype.unregister = function unregister ( dependent ) {\n\t\t\tModel$$1.prototype.unregister.call( this, dependent );\n\t\t\t// tear down expressions with no deps, because they will be replaced when needed\n\t\t\tif ( this.isExpression && this.deps.length === 0 ) this.teardown();\n\t\t};\n\t\n\t\treturn Computation;\n\t}(Model));\n\t\n\tvar RactiveModel = (function (Model$$1) {\n\t\tfunction RactiveModel ( ractive ) {\n\t\t\tModel$$1.call( this, null, '' );\n\t\t\tthis.value = ractive;\n\t\t\tthis.isRoot = true;\n\t\t\tthis.root = this;\n\t\t\tthis.adaptors = [];\n\t\t\tthis.ractive = ractive;\n\t\t\tthis.changes = {};\n\t\t}\n\t\n\t\tRactiveModel.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\t\tRactiveModel.prototype.constructor = RactiveModel;\n\t\n\t\tRactiveModel.prototype.getKeypath = function getKeypath() {\n\t\t\treturn '@this';\n\t\t};\n\t\n\t\treturn RactiveModel;\n\t}(Model));\n\t\n\tvar hasProp$1 = Object.prototype.hasOwnProperty;\n\t\n\tvar RootModel = (function (Model$$1) {\n\t\tfunction RootModel ( options ) {\n\t\t\tModel$$1.call( this, null, null );\n\t\n\t\t\t// TODO deprecate this\n\t\t\tthis.changes = {};\n\t\n\t\t\tthis.isRoot = true;\n\t\t\tthis.root = this;\n\t\t\tthis.ractive = options.ractive; // TODO sever this link\n\t\n\t\t\tthis.value = options.data;\n\t\t\tthis.adaptors = options.adapt;\n\t\t\tthis.adapt();\n\t\n\t\t\tthis.computationContext = options.ractive;\n\t\t\tthis.computations = {};\n\t\n\t\t\t// TODO this is only for deprecation of using expression keypaths\n\t\t\tthis.expressions = {};\n\t\t}\n\t\n\t\tRootModel.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\t\tRootModel.prototype.constructor = RootModel;\n\t\n\t\tRootModel.prototype.applyChanges = function applyChanges () {\n\t\t\tthis._changeHash = {};\n\t\t\tthis.flush();\n\t\n\t\t\treturn this._changeHash;\n\t\t};\n\t\n\t\tRootModel.prototype.compute = function compute ( key, signature ) {\n\t\t\tvar computation = new Computation( this, signature, key );\n\t\t\tthis.computations[ key ] = computation;\n\t\n\t\t\treturn computation;\n\t\t};\n\t\n\t\tRootModel.prototype.createLink = function createLink ( keypath, target, targetPath ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar keys = splitKeypath( keypath );\n\t\n\t\t\tvar model = this;\n\t\t\twhile ( keys.length ) {\n\t\t\t\tvar key = keys.shift();\n\t\t\t\tmodel = this$1.childByKey[ key ] || this$1.joinKey( key );\n\t\t\t}\n\t\n\t\t\treturn model.link( target, targetPath );\n\t\t};\n\t\n\t\tRootModel.prototype.get = function get ( shouldCapture, options ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tif ( shouldCapture ) capture( this );\n\t\n\t\t\tif ( !options || options.virtual !== false ) {\n\t\t\t\tvar result = this.getVirtual();\n\t\t\t\tvar keys = Object.keys( this.computations );\n\t\t\t\tvar i = keys.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tvar computation = this$1.computations[ keys[i] ];\n\t\t\t\t\t// exclude template expressions\n\t\t\t\t\tif ( !computation.isExpression ) {\n\t\t\t\t\t\tresult[ keys[i] ] = computation.get();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this.value;\n\t\t\t}\n\t\t};\n\t\n\t\tRootModel.prototype.getKeypath = function getKeypath () {\n\t\t\treturn '';\n\t\t};\n\t\n\t\tRootModel.prototype.getRactiveModel = function getRactiveModel() {\n\t\t\treturn this.ractiveModel || ( this.ractiveModel = new RactiveModel( this.ractive ) );\n\t\t};\n\t\n\t\tRootModel.prototype.getValueChildren = function getValueChildren () {\n\t\t\tvar children = Model$$1.prototype.getValueChildren.call( this, this.value );\n\t\n\t\t\tthis.children.forEach( function ( child ) {\n\t\t\t\tif ( child._link ) {\n\t\t\t\t\tvar idx = children.indexOf( child );\n\t\t\t\t\tif ( ~idx ) children.splice( idx, 1, child._link );\n\t\t\t\t\telse children.push( child._link );\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tfor ( var k in this.computations ) {\n\t\t\t\tchildren.push( this.computations[k] );\n\t\t\t}\n\t\n\t\t\treturn children;\n\t\t};\n\t\n\t\tRootModel.prototype.handleChange = function handleChange$1 () {\n\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t};\n\t\n\t\tRootModel.prototype.has = function has ( key ) {\n\t\t\tvar value = this.value;\n\t\n\t\t\tkey = unescapeKey( key );\n\t\t\tif ( hasProp$1.call( value, key ) ) return true;\n\t\n\t\t\t// mappings/links and computations\n\t\t\tif ( key in this.computations || this.childByKey[key] && this.childByKey[key]._link ) return true;\n\t\t\t// TODO remove this after deprecation is done\n\t\t\tif ( key in this.expressions ) return true;\n\t\n\t\t\t// We climb up the constructor chain to find if one of them contains the key\n\t\t\tvar constructor = value.constructor;\n\t\t\twhile ( constructor !== Function && constructor !== Array && constructor !== Object ) {\n\t\t\t\tif ( hasProp$1.call( constructor.prototype, key ) ) return true;\n\t\t\t\tconstructor = constructor.constructor;\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t};\n\t\n\t\tRootModel.prototype.joinKey = function joinKey ( key, opts ) {\n\t\t\tif ( key === '@global' ) return GlobalModel$1;\n\t\t\tif ( key === '@this' ) return this.getRactiveModel();\n\t\n\t\t\tif ( this.expressions.hasOwnProperty( key ) ) {\n\t\t\t\twarnIfDebug( (\"Accessing expression keypaths (\" + (key.substr(1)) + \") from the instance is deprecated. You can used a getNodeInfo or event object to access keypaths with expression context.\") );\n\t\t\t\treturn this.expressions[ key ];\n\t\t\t}\n\t\n\t\t\treturn this.computations.hasOwnProperty( key ) ? this.computations[ key ] :\n\t\t\t       Model$$1.prototype.joinKey.call( this, key, opts );\n\t\t};\n\t\n\t\tRootModel.prototype.map = function map ( localKey, origin ) {\n\t\t\tvar local = this.joinKey( localKey );\n\t\t\tlocal.link( origin );\n\t\t};\n\t\n\t\tRootModel.prototype.rebinding = function rebinding () {\n\t\t};\n\t\n\t\tRootModel.prototype.set = function set ( value ) {\n\t\t\t// TODO wrapping root node is a baaaad idea. We should prevent this\n\t\t\tvar wrapper = this.wrapper;\n\t\t\tif ( wrapper ) {\n\t\t\t\tvar shouldTeardown = !wrapper.reset || wrapper.reset( value ) === false;\n\t\n\t\t\t\tif ( shouldTeardown ) {\n\t\t\t\t\twrapper.teardown();\n\t\t\t\t\tthis.wrapper = null;\n\t\t\t\t\tthis.value = value;\n\t\t\t\t\tthis.adapt();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.value = value;\n\t\t\t\tthis.adapt();\n\t\t\t}\n\t\n\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t\tthis.children.forEach( mark$1$1 );\n\t\t\tthis.clearUnresolveds(); // TODO do we need to do this with primitive values? if not, what about e.g. unresolved `length` property of null -> string?\n\t\t};\n\t\n\t\tRootModel.prototype.retrieve = function retrieve () {\n\t\t\treturn this.value;\n\t\t};\n\t\n\t\tRootModel.prototype.update = function update () {\n\t\t\t// noop\n\t\t};\n\t\n\t\treturn RootModel;\n\t}(Model));\n\t\n\tfunction getComputationSignature ( ractive, key, signature ) {\n\t\tvar getter;\n\t\tvar setter;\n\t\n\t\t// useful for debugging\n\t\tvar getterString;\n\t\tvar getterUseStack;\n\t\tvar setterString;\n\t\n\t\tif ( typeof signature === 'function' ) {\n\t\t\tgetter = bind$1$1( signature, ractive );\n\t\t\tgetterString = signature.toString();\n\t\t\tgetterUseStack = true;\n\t\t}\n\t\n\t\tif ( typeof signature === 'string' ) {\n\t\t\tgetter = createFunctionFromString( signature, ractive );\n\t\t\tgetterString = signature;\n\t\t}\n\t\n\t\tif ( typeof signature === 'object' ) {\n\t\t\tif ( typeof signature.get === 'string' ) {\n\t\t\t\tgetter = createFunctionFromString( signature.get, ractive );\n\t\t\t\tgetterString = signature.get;\n\t\t\t} else if ( typeof signature.get === 'function' ) {\n\t\t\t\tgetter = bind$1$1( signature.get, ractive );\n\t\t\t\tgetterString = signature.get.toString();\n\t\t\t\tgetterUseStack = true;\n\t\t\t} else {\n\t\t\t\tfatal( '`%s` computation must have a `get()` method', key );\n\t\t\t}\n\t\n\t\t\tif ( typeof signature.set === 'function' ) {\n\t\t\t\tsetter = bind$1$1( signature.set, ractive );\n\t\t\t\tsetterString = signature.set.toString();\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tgetter: getter,\n\t\t\tsetter: setter,\n\t\t\tgetterString: getterString,\n\t\t\tsetterString: setterString,\n\t\t\tgetterUseStack: getterUseStack\n\t\t};\n\t}\n\t\n\tvar constructHook = new Hook( 'construct' );\n\t\n\tvar registryNames$1 = [\n\t\t'adaptors',\n\t\t'components',\n\t\t'decorators',\n\t\t'easing',\n\t\t'events',\n\t\t'interpolators',\n\t\t'partials',\n\t\t'transitions'\n\t];\n\t\n\tvar uid = 0;\n\t\n\tfunction construct ( ractive, options ) {\n\t\tif ( Ractive.DEBUG ) welcome();\n\t\n\t\tinitialiseProperties( ractive );\n\t\n\t\t// TODO remove this, eventually\n\t\tdefineProperty( ractive, 'data', { get: deprecateRactiveData });\n\t\n\t\t// TODO don't allow `onconstruct` with `new Ractive()`, there's no need for it\n\t\tconstructHook.fire( ractive, options );\n\t\n\t\t// Add registries\n\t\tregistryNames$1.forEach( function ( name ) {\n\t\t\tractive[ name ] = extend$1( create( ractive.constructor[ name ] || null ), options[ name ] );\n\t\t});\n\t\n\t\t// Create a viewmodel\n\t\tvar viewmodel = new RootModel({\n\t\t\tadapt: getAdaptors( ractive, ractive.adapt, options ),\n\t\t\tdata: dataConfigurator.init( ractive.constructor, ractive, options ),\n\t\t\tractive: ractive\n\t\t});\n\t\n\t\tractive.viewmodel = viewmodel;\n\t\n\t\t// Add computed properties\n\t\tvar computed = extend$1( create( ractive.constructor.prototype.computed ), options.computed );\n\t\n\t\tfor ( var key in computed ) {\n\t\t\tvar signature = getComputationSignature( ractive, key, computed[ key ] );\n\t\t\tviewmodel.compute( key, signature );\n\t\t}\n\t}\n\t\n\tfunction combine$2 ( a, b ) {\n\t\tvar c = a.slice();\n\t\tvar i = b.length;\n\t\n\t\twhile ( i-- ) {\n\t\t\tif ( !~c.indexOf( b[i] ) ) {\n\t\t\t\tc.push( b[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn c;\n\t}\n\t\n\tfunction getAdaptors ( ractive, protoAdapt, options ) {\n\t\tprotoAdapt = protoAdapt.map( lookup );\n\t\tvar adapt = ensureArray( options.adapt ).map( lookup );\n\t\n\t\tadapt = combine$2( protoAdapt, adapt );\n\t\n\t\tvar magic$$1 = 'magic' in options ? options.magic : ractive.magic;\n\t\tvar modifyArrays = 'modifyArrays' in options ? options.modifyArrays : ractive.modifyArrays;\n\t\n\t\tif ( magic$$1 ) {\n\t\t\tif ( !magic ) {\n\t\t\t\tthrow new Error( 'Getters and setters (magic mode) are not supported in this browser' );\n\t\t\t}\n\t\n\t\t\tif ( modifyArrays ) {\n\t\t\t\tadapt.push( magicArrayAdaptor );\n\t\t\t}\n\t\n\t\t\tadapt.push( magicAdaptor$1 );\n\t\t}\n\t\n\t\tif ( modifyArrays ) {\n\t\t\tadapt.push( arrayAdaptor );\n\t\t}\n\t\n\t\treturn adapt;\n\t\n\t\n\t\tfunction lookup ( adaptor ) {\n\t\t\tif ( typeof adaptor === 'string' ) {\n\t\t\t\tadaptor = findInViewHierarchy( 'adaptors', ractive, adaptor );\n\t\n\t\t\t\tif ( !adaptor ) {\n\t\t\t\t\tfatal( missingPlugin( adaptor, 'adaptor' ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn adaptor;\n\t\t}\n\t}\n\t\n\tfunction initialiseProperties ( ractive ) {\n\t\t// Generate a unique identifier, for places where you'd use a weak map if it\n\t\t// existed\n\t\tractive._guid = 'r-' + uid++;\n\t\n\t\t// events\n\t\tractive._subs = create( null );\n\t\n\t\t// storage for item configuration from instantiation to reset,\n\t\t// like dynamic functions or original values\n\t\tractive._config = {};\n\t\n\t\t// nodes registry\n\t\tractive.nodes = {};\n\t\n\t\t// events\n\t\tractive.event = null;\n\t\tractive._eventQueue = [];\n\t\n\t\t// live queries\n\t\tractive._liveQueries = [];\n\t\tractive._liveComponentQueries = [];\n\t\n\t\t// observers\n\t\tractive._observers = [];\n\t\n\t\tif(!ractive.component){\n\t\t\tractive.root = ractive;\n\t\t\tractive.parent = ractive.container = null; // TODO container still applicable?\n\t\t}\n\t\n\t}\n\t\n\tfunction deprecateRactiveData () {\n\t\tthrow new Error( 'Using `ractive.data` is no longer supported - you must use the `ractive.get()` API instead' );\n\t}\n\t\n\tfunction getChildQueue ( queue, ractive ) {\n\t\treturn queue[ ractive._guid ] || ( queue[ ractive._guid ] = [] );\n\t}\n\t\n\tfunction fire$1 ( hookQueue, ractive ) {\n\t\tvar childQueue = getChildQueue( hookQueue.queue, ractive );\n\t\n\t\thookQueue.hook.fire( ractive );\n\t\n\t\t// queue is \"live\" because components can end up being\n\t\t// added while hooks fire on parents that modify data values.\n\t\twhile ( childQueue.length ) {\n\t\t\tfire$1( hookQueue, childQueue.shift() );\n\t\t}\n\t\n\t\tdelete hookQueue.queue[ ractive._guid ];\n\t}\n\t\n\tvar HookQueue = function HookQueue ( event ) {\n\t\tthis.hook = new Hook( event );\n\t\tthis.inProcess = {};\n\t\tthis.queue = {};\n\t};\n\t\n\tHookQueue.prototype.begin = function begin ( ractive ) {\n\t\tthis.inProcess[ ractive._guid ] = true;\n\t};\n\t\n\tHookQueue.prototype.end = function end ( ractive ) {\n\t\tvar parent = ractive.parent;\n\t\n\t\t// If this is *isn't* a child of a component that's in process,\n\t\t// it should call methods or fire at this point\n\t\tif ( !parent || !this.inProcess[ parent._guid ] ) {\n\t\t\tfire$1( this, ractive );\n\t\t}\n\t\t// elsewise, handoff to parent to fire when ready\n\t\telse {\n\t\t\tgetChildQueue( this.queue, parent ).push( ractive );\n\t\t}\n\t\n\t\tdelete this.inProcess[ ractive._guid ];\n\t};\n\t\n\tvar configHook = new Hook( 'config' );\n\tvar initHook = new HookQueue( 'init' );\n\t\n\tfunction initialise ( ractive, userOptions, options ) {\n\t\tObject.keys( ractive.viewmodel.computations ).forEach( function ( key ) {\n\t\t\tvar computation = ractive.viewmodel.computations[ key ];\n\t\n\t\t\tif ( ractive.viewmodel.value.hasOwnProperty( key ) ) {\n\t\t\t\tcomputation.set( ractive.viewmodel.value[ key ] );\n\t\t\t}\n\t\t});\n\t\n\t\t// init config from Parent and options\n\t\tconfig.init( ractive.constructor, ractive, userOptions );\n\t\n\t\tconfigHook.fire( ractive );\n\t\tinitHook.begin( ractive );\n\t\n\t\tvar fragment;\n\t\n\t\t// Render virtual DOM\n\t\tif ( ractive.template ) {\n\t\t\tvar cssIds;\n\t\n\t\t\tif ( options.cssIds || ractive.cssId ) {\n\t\t\t\tcssIds = options.cssIds ? options.cssIds.slice() : [];\n\t\n\t\t\t\tif ( ractive.cssId ) {\n\t\t\t\t\tcssIds.push( ractive.cssId );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tractive.fragment = fragment = new Fragment({\n\t\t\t\towner: ractive,\n\t\t\t\ttemplate: ractive.template,\n\t\t\t\tcssIds: cssIds\n\t\t\t}).bind( ractive.viewmodel );\n\t\t}\n\t\n\t\tinitHook.end( ractive );\n\t\n\t\tif ( fragment ) {\n\t\t\t// render automatically ( if `el` is specified )\n\t\t\tvar el = getElement( ractive.el );\n\t\t\tif ( el ) {\n\t\t\t\tvar promise = ractive.render( el, ractive.append );\n\t\n\t\t\t\tif ( Ractive.DEBUG_PROMISES ) {\n\t\t\t\t\tpromise['catch']( function ( err ) {\n\t\t\t\t\t\twarnOnceIfDebug( 'Promise debugging is enabled, to help solve errors that happen asynchronously. Some browsers will log unhandled promise rejections, in which case you can safely disable promise debugging:\\n  Ractive.DEBUG_PROMISES = false;' );\n\t\t\t\t\t\twarnIfDebug( 'An error happened during rendering', { ractive: ractive });\n\t\t\t\t\t\tlogIfDebug( err );\n\t\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar DOMEvent = function DOMEvent ( name, owner ) {\n\t\tif ( name.indexOf( '*' ) !== -1 ) {\n\t\t\tfatal( (\"Only component proxy-events may contain \\\"*\\\" wildcards, <\" + (owner.name) + \" on-\" + name + \"=\\\"...\\\"/> is not valid\") );\n\t\t}\n\t\n\t\tthis.name = name;\n\t\tthis.owner = owner;\n\t\tthis.node = null;\n\t\tthis.handler = null;\n\t};\n\t\n\tDOMEvent.prototype.listen = function listen ( directive ) {\n\t\tvar node = this.node = this.owner.node;\n\t\tvar name = this.name;\n\t\n\t\tif ( !( (\"on\" + name) in node ) ) {\n\t\t\twarnOnce( missingPlugin( name, 'events' ) );\n\t\t\t}\n\t\n\t\t\tnode.addEventListener( name, this.handler = function( event ) {\n\t\t\tdirective.fire({\n\t\t\t\t\tnode: node,\n\t\t\t\toriginal: event\n\t\t\t\t});\n\t\t\t}, false );\n\t};\n\t\n\tDOMEvent.prototype.unlisten = function unlisten () {\n\t\tthis.node.removeEventListener( this.name, this.handler, false );\n\t};\n\t\n\tvar CustomEvent = function CustomEvent ( eventPlugin, owner ) {\n\t\tthis.eventPlugin = eventPlugin;\n\t\tthis.owner = owner;\n\t\tthis.handler = null;\n\t};\n\t\n\tCustomEvent.prototype.listen = function listen ( directive ) {\n\t\tvar node = this.owner.node;\n\t\n\t\tthis.handler = this.eventPlugin( node, function ( event ) {\n\t\t\tif ( event === void 0 ) event = {};\n\t\n\t\t\t\tevent.node = event.node || node;\n\t\t\tdirective.fire( event );\n\t\t});\n\t};\n\t\n\tCustomEvent.prototype.unlisten = function unlisten () {\n\t\tthis.handler.teardown();\n\t};\n\t\n\tvar RactiveEvent = function RactiveEvent ( ractive, name ) {\n\t\tthis.ractive = ractive;\n\t\tthis.name = name;\n\t\tthis.handler = null;\n\t};\n\t\n\tRactiveEvent.prototype.listen = function listen ( directive ) {\n\t\tvar ractive = this.ractive;\n\t\n\t\tthis.handler = ractive.on( this.name, function () {\n\t\t\tvar event;\n\t\n\t\t\t// semi-weak test, but what else? tag the event obj ._isEvent ?\n\t\t\tif ( arguments.length && arguments[0] && arguments[0].node ) {\n\t\t\t\tevent = Array.prototype.shift.call( arguments );\n\t\t\t\tevent.component = ractive;\n\t\t\t}\n\t\n\t\t\tvar args = Array.prototype.slice.call( arguments );\n\t\t\tdirective.fire( event, args );\n\t\n\t\t\t// cancel bubbling\n\t\t\treturn false;\n\t\t});\n\t};\n\t\n\tRactiveEvent.prototype.unlisten = function unlisten () {\n\t\tthis.handler.cancel();\n\t};\n\t\n\tvar specialPattern = /^(event|arguments)(\\..+)?$/;\n\tvar dollarArgsPattern = /^\\$(\\d+)(\\..+)?$/;\n\t\n\tvar EventDirective = function EventDirective ( options ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tthis.owner = options.owner || options.parentFragment.owner || findElement( options.parentFragment );\n\t\tthis.element = this.owner.attributeByName ? this.owner : findElement( options.parentFragment );\n\t\tthis.template = options.template;\n\t\tthis.parentFragment = options.parentFragment;\n\t\tthis.ractive = options.parentFragment.ractive;\n\t\n\t\tthis.events = [];\n\t\n\t\tif ( this.element.type === COMPONENT ) {\n\t\t\tthis.template.n.split( '-' ).forEach( function ( n ) {\n\t\t\t\tthis$1.events.push( new RactiveEvent( this$1.element.instance, n ) );\n\t\t\t});\n\t\t} else {\n\t\t\tthis.template.n.split( '-' ).forEach( function ( n ) {\n\t\t\t\tvar fn = findInViewHierarchy( 'events', this$1.ractive, n );\n\t\t\t\t// we need to pass in \"this\" in order to get\n\t\t\t\t// access to node when it is created.\n\t\t\t\tthis$1.events.push(fn ? new CustomEvent( fn, this$1.element ) : new DOMEvent( n, this$1.element ));\n\t\t\t});\n\t\t}\n\t\n\t\tthis.context = null;\n\t\n\t\t// method calls\n\t\tthis.resolvers = null;\n\t\tthis.models = null;\n\t\n\t\t// handler directive\n\t\tthis.action = null;\n\t\tthis.args = null;\n\t};\n\t\n\tEventDirective.prototype.bind = function bind () {\n\t\tvar this$1 = this;\n\t\n\t\t\tthis.context = this.parentFragment.findContext();\n\t\n\t\tvar template = this.template.f;\n\t\n\t\tif ( template.x ) {\n\t\t\tthis.fn = getFunction( template.x.s, template.x.r.length );\n\t\t\tthis.resolvers = [];\n\t\t\tthis.models = template.x.r.map( function ( ref, i ) {\n\t\t\t\tvar specialMatch = specialPattern.exec( ref );\n\t\t\t\tif ( specialMatch ) {\n\t\t\t\t\t// on-click=\"foo(event.node)\"\n\t\t\t\t\treturn {\n\t\t\t\t\t\tspecial: specialMatch[1],\n\t\t\t\t\t\tkeys: specialMatch[2] ? splitKeypath( specialMatch[2].substr(1) ) : []\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\tvar dollarMatch = dollarArgsPattern.exec( ref );\n\t\t\t\tif ( dollarMatch ) {\n\t\t\t\t\t// on-click=\"foo($1)\"\n\t\t\t\t\treturn {\n\t\t\t\t\t\tspecial: 'arguments',\n\t\t\t\t\t\tkeys: [ dollarMatch[1] - 1 ].concat( dollarMatch[2] ? splitKeypath( dollarMatch[2].substr( 1 ) ) : [] )\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\tvar resolver;\n\t\n\t\t\t\tvar model = resolveReference( this$1.parentFragment, ref );\n\t\t\t\tif ( !model ) {\n\t\t\t\t\tresolver = this$1.parentFragment.resolve( ref, function ( model ) {\n\t\t\t\t\t\tthis$1.models[i] = model;\n\t\t\t\t\t\tremoveFromArray( this$1.resolvers, resolver );\n\t\t\t\t\t\tmodel.register( this$1 );\n\t\t\t\t\t});\n\t\n\t\t\t\t\tthis$1.resolvers.push( resolver );\n\t\t\t\t} else model.register( this$1 );\n\t\n\t\t\t\treturn model;\n\t\t\t});\n\t\t}\n\t\n\t\telse {\n\t\t\t// TODO deprecate this style of directive\n\t\t\tthis.action = typeof template === 'string' ? // on-click='foo'\n\t\t\t\ttemplate :\n\t\t\t\ttypeof template.n === 'string' ? // on-click='{{dynamic}}'\n\t\t\t\t\ttemplate.n :\n\t\t\t\t\tnew Fragment({\n\t\t\t\t\t\towner: this,\n\t\t\t\t\t\ttemplate: template.n\n\t\t\t\t\t});\n\t\n\t\t\tthis.args = template.a ? // static arguments\n\t\t\t\t( typeof template.a === 'string' ? [ template.a ] : template.a ) :\n\t\t\t\ttemplate.d ? // dynamic arguments\n\t\t\t\t\tnew Fragment({\n\t\t\t\t\t\towner: this,\n\t\t\t\t\t\ttemplate: template.d\n\t\t\t\t\t}) :\n\t\t\t\t\t[]; // no arguments\n\t\t}\n\t\n\t\tif ( this.action && typeof this.action !== 'string' ) this.action.bind();\n\t\tif ( this.args && template.d ) this.args.bind();\n\t};\n\t\n\tEventDirective.prototype.bubble = function bubble () {\n\t\tif ( !this.dirty ) {\n\t\t\tthis.dirty = true;\n\t\t\tthis.owner.bubble();\n\t\t}\n\t};\n\t\n\tEventDirective.prototype.destroyed = function destroyed () {\n\t\tthis.events.forEach( function ( e ) { return e.unlisten(); } );\n\t};\n\t\n\tEventDirective.prototype.fire = function fire ( event, passedArgs ) {\n\t\n\t\t// augment event object\n\t\tif ( passedArgs === void 0 ) passedArgs = [];\n\t\n\t\t\tif ( event && !event.hasOwnProperty( '_element' ) ) {\n\t\t\t   addHelpers( event, this.owner );\n\t\t}\n\t\n\t\tif ( this.fn ) {\n\t\t\tvar values = [];\n\t\n\t\t\tif ( event ) passedArgs.unshift( event );\n\t\n\t\t\tif ( this.models ) {\n\t\t\t\tthis.models.forEach( function ( model ) {\n\t\t\t\t\tif ( !model ) return values.push( undefined );\n\t\n\t\t\t\t\tif ( model.special ) {\n\t\t\t\t\t\tvar obj = model.special === 'event' ? event : passedArgs;\n\t\t\t\t\t\tvar keys = model.keys.slice();\n\t\n\t\t\t\t\t\twhile ( keys.length ) obj = obj[ keys.shift() ];\n\t\t\t\t\t\treturn values.push( obj );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( model.wrapper ) {\n\t\t\t\t\t\treturn values.push( model.wrapper.value );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvalues.push( model.get() );\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// make event available as `this.event`\n\t\t\tvar ractive = this.ractive;\n\t\t\tvar oldEvent = ractive.event;\n\t\n\t\t\tractive.event = event;\n\t\t\tvar result = this.fn.apply( ractive, values ).pop();\n\t\n\t\t\t// Auto prevent and stop if return is explicitly false\n\t\t\tvar original;\n\t\t\tif ( result === false && ( original = event.original ) ) {\n\t\t\t\toriginal.preventDefault && original.preventDefault();\n\t\t\t\toriginal.stopPropagation && original.stopPropagation();\n\t\t\t}\n\t\n\t\t\tractive.event = oldEvent;\n\t\t}\n\t\n\t\telse {\n\t\t\tvar action = this.action.toString();\n\t\t\tvar args = this.template.f.d ? this.args.getArgsList() : this.args;\n\t\n\t\t\tif ( passedArgs.length ) args = args.concat( passedArgs );\n\t\n\t\t\tif ( event ) event.name = action;\n\t\n\t\t\tfireEvent( this.ractive, action, {\n\t\t\t\tevent: event,\n\t\t\t\targs: args\n\t\t\t});\n\t\t}\n\t};\n\t\n\tEventDirective.prototype.handleChange = function handleChange () {};\n\t\n\tEventDirective.prototype.rebinding = function rebinding ( next, previous ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( !this.models ) return;\n\t\tvar idx = this.models.indexOf( previous );\n\t\n\t\tif ( ~idx ) {\n\t\t\tthis.models.splice( idx, 1, next );\n\t\t\tprevious.unregister( this );\n\t\t\tif ( next ) next.addShuffleTask( function () { return next.register( this$1 ); } );\n\t\t}\n\t};\n\t\n\tEventDirective.prototype.render = function render () {\n\t\t// render events after everything else, so they fire after bindings\n\t\tvar this$1 = this;\n\t\n\t\t\trunloop.scheduleTask( function () { return this$1.events.forEach( function ( e ) { return e.listen( this$1 ); }, true ); } );\n\t};\n\t\n\tEventDirective.prototype.toString = function toString() { return ''; };\n\t\n\tEventDirective.prototype.unbind = function unbind$1 () {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar template = this.template.f;\n\t\n\t\tif ( template.m ) {\n\t\t\tif ( this.resolvers ) this.resolvers.forEach( unbind$1$1 );\n\t\t\tthis.resolvers = [];\n\t\n\t\t\tif ( this.models ) this.models.forEach( function ( m ) {\n\t\t\t\tif ( m.unregister ) m.unregister( this$1 );\n\t\t\t});\n\t\t\tthis.models = null;\n\t\t}\n\t\n\t\telse {\n\t\t\t// TODO this is brittle and non-explicit, fix it\n\t\t\tif ( this.action && this.action.unbind ) this.action.unbind();\n\t\t\tif ( this.args && this.args.unbind ) this.args.unbind();\n\t\t}\n\t};\n\t\n\tEventDirective.prototype.unrender = function unrender () {\n\t\tthis.events.forEach( function ( e ) { return e.unlisten(); } );\n\t};\n\t\n\tEventDirective.prototype.update = function update () {\n\t\tif ( this.method || !this.dirty ) return; // nothing to do\n\t\n\t\tthis.dirty = false;\n\t\n\t\t// ugh legacy\n\t\tif ( this.action && this.action.update ) this.action.update();\n\t\tif ( this.args && this.args.update ) this.args.update();\n\t};\n\t\n\t// TODO it's unfortunate that this has to run every time a\n\t// component is rendered... is there a better way?\n\tfunction updateLiveQueries ( component ) {\n\t\t// Does this need to be added to any live queries?\n\t\tvar instance = component.ractive;\n\t\n\t\tdo {\n\t\t\tvar liveQueries = instance._liveComponentQueries;\n\t\n\t\t\tvar i = liveQueries.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar name = liveQueries[i];\n\t\t\t\tvar query = liveQueries[ (\"_\" + name) ];\n\t\n\t\t\t\tif ( query.test( component ) ) {\n\t\t\t\t\tquery.add( component.instance );\n\t\t\t\t\t// keep register of applicable selectors, for when we teardown\n\t\t\t\t\tcomponent.liveQueries.push( query );\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( instance = instance.parent );\n\t}\n\t\n\tfunction removeFromLiveComponentQueries ( component ) {\n\t\tvar instance = component.ractive;\n\t\n\t\twhile ( instance ) {\n\t\t\tvar query = instance._liveComponentQueries[ (\"_\" + (component.name)) ];\n\t\t\tif ( query ) query.remove( component );\n\t\n\t\t\tinstance = instance.parent;\n\t\t}\n\t}\n\t\n\tfunction makeDirty$1 ( query ) {\n\t\tquery.makeDirty();\n\t}\n\t\n\tvar teardownHook = new Hook( 'teardown' );\n\t\n\tvar Component = (function (Item$$1) {\n\t\tfunction Component ( options, ComponentConstructor ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tItem$$1.call( this, options );\n\t\t\tthis.type = COMPONENT; // override ELEMENT from super\n\t\n\t\t\tvar instance = create( ComponentConstructor.prototype );\n\t\n\t\t\tthis.instance = instance;\n\t\t\tthis.name = options.template.e;\n\t\t\tthis.parentFragment = options.parentFragment;\n\t\n\t\t\tthis.liveQueries = [];\n\t\n\t\t\tif ( instance.el ) {\n\t\t\t\twarnIfDebug( (\"The <\" + (this.name) + \"> component has a default 'el' property; it has been disregarded\") );\n\t\t\t}\n\t\n\t\t\tvar partials = options.template.p || {};\n\t\t\tif ( !( 'content' in partials ) ) partials.content = options.template.f || [];\n\t\t\tthis._partials = partials; // TEMP\n\t\n\t\t\tthis.yielders = {};\n\t\n\t\t\t// find container\n\t\t\tvar fragment = options.parentFragment;\n\t\t\tvar container;\n\t\t\twhile ( fragment ) {\n\t\t\t\tif ( fragment.owner.type === YIELDER ) {\n\t\t\t\t\tcontainer = fragment.owner.container;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\n\t\t\t\tfragment = fragment.parent;\n\t\t\t}\n\t\n\t\t\t// add component-instance-specific properties\n\t\t\tinstance.parent = this.parentFragment.ractive;\n\t\t\tinstance.container = container || null;\n\t\t\tinstance.root = instance.parent.root;\n\t\t\tinstance.component = this;\n\t\n\t\t\tconstruct( this.instance, { partials: partials });\n\t\n\t\t\t// for hackability, this could be an open option\n\t\t\t// for any ractive instance, but for now, just\n\t\t\t// for components and just for ractive...\n\t\t\tinstance._inlinePartials = partials;\n\t\n\t\t\tthis.attributeByName = {};\n\t\n\t\t\tthis.attributes = [];\n\t\t\tvar leftovers = [];\n\t\t\t( this.template.m || [] ).forEach( function ( template ) {\n\t\t\t\tswitch ( template.t ) {\n\t\t\t\t\tcase ATTRIBUTE:\n\t\t\t\t\tcase EVENT:\n\t\t\t\t\tcase TRANSITION:\n\t\t\t\t\t\tthis$1.attributes.push( createItem({\n\t\t\t\t\t\t\towner: this$1,\n\t\t\t\t\t\t\tparentFragment: this$1.parentFragment,\n\t\t\t\t\t\t\ttemplate: template\n\t\t\t\t\t\t}) );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase BINDING_FLAG:\n\t\t\t\t\tcase DECORATOR:\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tleftovers.push( template );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tthis.attributes.push( new ConditionalAttribute({\n\t\t\t\towner: this,\n\t\t\t\tparentFragment: this.parentFragment,\n\t\t\t\ttemplate: leftovers\n\t\t\t}) );\n\t\n\t\t\tthis.eventHandlers = [];\n\t\t\tif ( this.template.v ) this.setupEvents();\n\t\t}\n\t\n\t\tComponent.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\t\tComponent.prototype.constructor = Component;\n\t\n\t\tComponent.prototype.bind = function bind$1 () {\n\t\t\tthis.attributes.forEach( bind$2 );\n\t\n\t\t\tinitialise( this.instance, {\n\t\t\t\tpartials: this._partials\n\t\t\t}, {\n\t\t\t\tcssIds: this.parentFragment.cssIds\n\t\t\t});\n\t\n\t\t\tthis.eventHandlers.forEach( bind$2 );\n\t\n\t\t\tthis.bound = true;\n\t\t};\n\t\n\t\tComponent.prototype.bubble = function bubble () {\n\t\t\tif ( !this.dirty ) {\n\t\t\t\tthis.dirty = true;\n\t\t\t\tthis.parentFragment.bubble();\n\t\t\t}\n\t\t};\n\t\n\t\tComponent.prototype.checkYielders = function checkYielders () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tObject.keys( this.yielders ).forEach( function ( name ) {\n\t\t\t\tif ( this$1.yielders[ name ].length > 1 ) {\n\t\t\t\t\trunloop.end();\n\t\t\t\t\tthrow new Error( (\"A component template can only have one {{yield\" + (name ? ' ' + name : '') + \"}} declaration at a time\") );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\n\t\tComponent.prototype.destroyed = function destroyed () {\n\t\t\tif ( this.instance.fragment ) this.instance.fragment.destroyed();\n\t\t};\n\t\n\t\tComponent.prototype.detach = function detach () {\n\t\t\treturn this.instance.fragment.detach();\n\t\t};\n\t\n\t\tComponent.prototype.find = function find ( selector ) {\n\t\t\treturn this.instance.fragment.find( selector );\n\t\t};\n\t\n\t\tComponent.prototype.findAll = function findAll ( selector, query ) {\n\t\t\tthis.instance.fragment.findAll( selector, query );\n\t\t};\n\t\n\t\tComponent.prototype.findComponent = function findComponent ( name ) {\n\t\t\tif ( !name || this.name === name ) return this.instance;\n\t\n\t\t\tif ( this.instance.fragment ) {\n\t\t\t\treturn this.instance.fragment.findComponent( name );\n\t\t\t}\n\t\t};\n\t\n\t\tComponent.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\t\tif ( query.test( this ) ) {\n\t\t\t\tquery.add( this.instance );\n\t\n\t\t\t\tif ( query.live ) {\n\t\t\t\t\tthis.liveQueries.push( query );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthis.instance.fragment.findAllComponents( name, query );\n\t\t};\n\t\n\t\tComponent.prototype.firstNode = function firstNode ( skipParent ) {\n\t\t\treturn this.instance.fragment.firstNode( skipParent );\n\t\t};\n\t\n\t\tComponent.prototype.render = function render$1 ( target, occupants ) {\n\t\t\trender$2( this.instance, target, null, occupants );\n\t\n\t\t\tthis.checkYielders();\n\t\t\tthis.attributes.forEach( render$1$1 );\n\t\t\tthis.eventHandlers.forEach( render$1$1 );\n\t\t\tupdateLiveQueries( this );\n\t\n\t\t\tthis.rendered = true;\n\t\t};\n\t\n\t\tComponent.prototype.setupEvents = function setupEvents () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar handlers = this.eventHandlers;\n\t\n\t\t\tObject.keys( this.template.v ).forEach( function ( key ) {\n\t\t\t\tvar eventNames = key.split( '-' );\n\t\t\t\tvar template = this$1.template.v[ key ];\n\t\n\t\t\t\teventNames.forEach( function ( eventName ) {\n\t\t\t\t\tvar event = new RactiveEvent( this$1.instance, eventName );\n\t\t\t\t\thandlers.push( new EventDirective( this$1, event, template ) );\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\n\t\tComponent.prototype.shuffled = function shuffled () {\n\t\t\tthis.liveQueries.forEach( makeDirty$1 );\n\t\t\tItem$$1.prototype.shuffled.call(this);\n\t\t};\n\t\n\t\tComponent.prototype.toString = function toString () {\n\t\t\treturn this.instance.toHTML();\n\t\t};\n\t\n\t\tComponent.prototype.unbind = function unbind$1 () {\n\t\t\tthis.bound = false;\n\t\n\t\t\tthis.attributes.forEach( unbind$1$1 );\n\t\n\t\t\tvar instance = this.instance;\n\t\t\tinstance.viewmodel.teardown();\n\t\t\tinstance.fragment.unbind();\n\t\t\tinstance._observers.forEach( cancel$1 );\n\t\n\t\t\tremoveFromLiveComponentQueries( this );\n\t\n\t\t\tif ( instance.fragment.rendered && instance.el.__ractive_instances__ ) {\n\t\t\t\tremoveFromArray( instance.el.__ractive_instances__, instance );\n\t\t\t}\n\t\n\t\t\tteardownHook.fire( instance );\n\t\t};\n\t\n\t\tComponent.prototype.unrender = function unrender$1 ( shouldDestroy ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tthis.rendered = false;\n\t\n\t\t\tthis.shouldDestroy = shouldDestroy;\n\t\t\tthis.instance.unrender();\n\t\t\tthis.attributes.forEach( unrender$1$1 );\n\t\t\tthis.eventHandlers.forEach( unrender$1$1 );\n\t\t\tthis.liveQueries.forEach( function ( query ) { return query.remove( this$1.instance ); } );\n\t\t};\n\t\n\t\tComponent.prototype.update = function update$1 () {\n\t\t\tthis.dirty = false;\n\t\t\tthis.instance.fragment.update();\n\t\t\tthis.checkYielders();\n\t\t\tthis.attributes.forEach( update$1$1 );\n\t\t\tthis.eventHandlers.forEach( update$1$1 );\n\t\t};\n\t\n\t\treturn Component;\n\t}(Item));\n\t\n\tvar missingDecorator = {\n\t\tupdate: noop,\n\t\tteardown: noop\n\t};\n\t\n\tvar Decorator = function Decorator ( options ) {\n\t\tthis.owner = options.owner || options.parentFragment.owner || findElement( options.parentFragment );\n\t\tthis.element = this.owner.attributeByName ? this.owner : findElement( options.parentFragment );\n\t\tthis.parentFragment = this.owner.parentFragment;\n\t\tthis.ractive = this.owner.ractive;\n\t\tvar template = this.template = options.template;\n\t\n\t\tthis.dynamicName = typeof template.f.n === 'object';\n\t\tthis.dynamicArgs = !!template.f.d;\n\t\n\t\tif ( this.dynamicName ) {\n\t\t\tthis.nameFragment = new Fragment({\n\t\t\t\towner: this,\n\t\t\t\ttemplate: template.f.n\n\t\t\t});\n\t\t} else {\n\t\t\tthis.name = template.f.n || template.f;\n\t\t}\n\t\n\t\tif ( this.dynamicArgs ) {\n\t\t\tthis.argsFragment = new Fragment({\n\t\t\t\towner: this,\n\t\t\t\ttemplate: template.f.d\n\t\t\t});\n\t\t} else {\n\t\t\tif ( template.f.a && template.f.a.s ) {\n\t\t\t\tthis.args = [];\n\t\t\t} else {\n\t\t\t\tthis.args = template.f.a || [];\n\t\t\t}\n\t\t}\n\t\n\t\tthis.node = null;\n\t\tthis.intermediary = null;\n\t\n\t\tthis.element.decorators.push( this );\n\t};\n\t\n\tDecorator.prototype.bind = function bind () {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( this.dynamicName ) {\n\t\t\tthis.nameFragment.bind();\n\t\t\tthis.name = this.nameFragment.toString();\n\t\t}\n\t\n\t\tif ( this.dynamicArgs ) this.argsFragment.bind();\n\t\n\t\t// TODO: dry this up once deprecation is done\n\t\tif ( this.template.f.a && this.template.f.a.s ) {\n\t\t\tthis.resolvers = [];\n\t\t\tthis.models = this.template.f.a.r.map( function ( ref, i ) {\n\t\t\t\tvar resolver;\n\t\t\t\tvar model = resolveReference( this$1.parentFragment, ref );\n\t\t\t\tif ( !model ) {\n\t\t\t\t\tresolver = this$1.parentFragment.resolve( ref, function ( model ) {\n\t\t\t\t\t\tthis$1.models[i] = model;\n\t\t\t\t\t\tremoveFromArray( this$1.resolvers, resolver );\n\t\t\t\t\t\tmodel.register( this$1 );\n\t\t\t\t\t});\n\t\n\t\t\t\t\tthis$1.resolvers.push( resolver );\n\t\t\t\t} else model.register( this$1 );\n\t\n\t\t\t\treturn model;\n\t\t\t});\n\t\t\tthis.argsFn = getFunction( this.template.f.a.s, this.template.f.a.r.length );\n\t\t}\n\t};\n\t\n\tDecorator.prototype.bubble = function bubble () {\n\t\tif ( !this.dirty ) {\n\t\t\tthis.dirty = true;\n\t\t\tthis.owner.bubble();\n\t\t}\n\t};\n\t\n\tDecorator.prototype.destroyed = function destroyed () {\n\t\tif ( this.intermediary ) this.intermediary.teardown();\n\t};\n\t\n\tDecorator.prototype.handleChange = function handleChange () { this.bubble(); };\n\t\n\tDecorator.prototype.rebinding = function rebinding ( next, previous, safe ) {\n\t\tvar idx = this.models.indexOf( previous );\n\t\tif ( !~idx ) return;\n\t\n\t\tnext = rebindMatch( this.template.f.a.r[ idx ], next, previous );\n\t\tif ( next === previous ) return;\n\t\n\t\tprevious.unregister( this );\n\t\tthis.models.splice( idx, 1, next );\n\t\tif ( next ) next.addShuffleRegister( this, 'mark' );\n\t\n\t\tif ( !safe ) this.bubble();\n\t};\n\t\n\tDecorator.prototype.render = function render () {\n\t\tvar this$1 = this;\n\t\n\t\t\trunloop.scheduleTask( function () {\n\t\t\tvar fn = findInViewHierarchy( 'decorators', this$1.ractive, this$1.name );\n\t\n\t\t\tif ( !fn ) {\n\t\t\t\twarnOnce( missingPlugin( this$1.name, 'decorator' ) );\n\t\t\t\tthis$1.intermediary = missingDecorator;\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis$1.node = this$1.element.node;\n\t\n\t\t\tvar args;\n\t\t\tif ( this$1.argsFn ) {\n\t\t\t\targs = this$1.models.map( function ( model ) {\n\t\t\t\t\tif ( !model ) return undefined;\n\t\n\t\t\t\t\treturn model.get();\n\t\t\t\t});\n\t\t\t\targs = this$1.argsFn.apply( this$1.ractive, args );\n\t\t\t} else {\n\t\t\t\targs = this$1.dynamicArgs ? this$1.argsFragment.getArgsList() : this$1.args;\n\t\t\t}\n\t\n\t\t\tthis$1.intermediary = fn.apply( this$1.ractive, [ this$1.node ].concat( args ) );\n\t\n\t\t\tif ( !this$1.intermediary || !this$1.intermediary.teardown ) {\n\t\t\t\tthrow new Error( (\"The '\" + (this$1.name) + \"' decorator must return an object with a teardown method\") );\n\t\t\t}\n\t\t}, true );\n\t\tthis.rendered = true;\n\t};\n\t\n\tDecorator.prototype.toString = function toString () { return ''; };\n\t\n\tDecorator.prototype.unbind = function unbind$1 () {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( this.dynamicName ) this.nameFragment.unbind();\n\t\tif ( this.dynamicArgs ) this.argsFragment.unbind();\n\t\tif ( this.resolvers ) this.resolvers.forEach( unbind$1$1 );\n\t\tif ( this.models ) this.models.forEach( function ( m ) {\n\t\t\tif ( m ) m.unregister( this$1 );\n\t\t});\n\t};\n\t\n\tDecorator.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\tif ( ( !shouldDestroy || this.element.rendered ) && this.intermediary ) this.intermediary.teardown();\n\t\tthis.rendered = false;\n\t};\n\t\n\tDecorator.prototype.update = function update () {\n\t\tif ( !this.dirty ) return;\n\t\n\t\tthis.dirty = false;\n\t\n\t\tvar nameChanged = false;\n\t\n\t\tif ( this.dynamicName && this.nameFragment.dirty ) {\n\t\t\tvar name = this.nameFragment.toString();\n\t\t\tnameChanged = name !== this.name;\n\t\t\tthis.name = name;\n\t\t}\n\t\n\t\tif ( this.intermediary ) {\n\t\t\tif ( nameChanged || !this.intermediary.update ) {\n\t\t\t\tthis.unrender();\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( this.dynamicArgs ) {\n\t\t\t\t\tif ( this.argsFragment.dirty ) {\n\t\t\t\t\t\tvar args = this.argsFragment.getArgsList();\n\t\t\t\t\t\tthis.intermediary.update.apply( this.ractive, args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( this.argsFn ) {\n\t\t\t\t\tvar args$1 = this.models.map( function ( model ) {\n\t\t\t\t\t\tif ( !model ) return undefined;\n\t\n\t\t\t\t\t\treturn model.get();\n\t\t\t\t\t});\n\t\t\t\t\tthis.intermediary.update.apply( this.ractive, this.argsFn.apply( this.ractive, args$1 ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.intermediary.update.apply( this.ractive, this.args );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// need to run these for unrender/render cases\n\t\t// so can't just be in conditional if above\n\t\n\t\tif ( this.dynamicName && this.nameFragment.dirty ) {\n\t\t\tthis.nameFragment.update();\n\t\t}\n\t\n\t\tif ( this.dynamicArgs && this.argsFragment.dirty ) {\n\t\t\tthis.argsFragment.update();\n\t\t}\n\t};\n\t\n\tvar Doctype = (function (Item$$1) {\n\t\tfunction Doctype () {\n\t\t\tItem$$1.apply(this, arguments);\n\t\t}\n\t\n\t\tDoctype.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\t\tDoctype.prototype.constructor = Doctype;\n\t\n\t\tDoctype.prototype.bind = function bind () {\n\t\t\t// noop\n\t\t};\n\t\n\t\tDoctype.prototype.render = function render () {\n\t\t\t// noop\n\t\t};\n\t\n\t\tDoctype.prototype.teardown = function teardown () {\n\t\t\t// noop\n\t\t};\n\t\n\t\tDoctype.prototype.toString = function toString () {\n\t\t\treturn '<!DOCTYPE' + this.template.a + '>';\n\t\t};\n\t\n\t\tDoctype.prototype.unbind = function unbind () {\n\t\t\t// noop\n\t\t};\n\t\n\t\tDoctype.prototype.unrender = function unrender () {\n\t\t\t// noop\n\t\t};\n\t\n\t\treturn Doctype;\n\t}(Item));\n\t\n\tfunction updateLiveQueries$1 ( element ) {\n\t\t// Does this need to be added to any live queries?\n\t\tvar node = element.node;\n\t\tvar instance = element.ractive;\n\t\n\t\tdo {\n\t\t\tvar liveQueries = instance._liveQueries;\n\t\n\t\t\tvar i = liveQueries.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar selector = liveQueries[i];\n\t\t\t\tvar query = liveQueries[ (\"_\" + selector) ];\n\t\n\t\t\t\tif ( query.test( node ) ) {\n\t\t\t\t\tquery.add( node );\n\t\t\t\t\t// keep register of applicable selectors, for when we teardown\n\t\t\t\t\telement.liveQueries.push( query );\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( instance = instance.parent );\n\t}\n\t\n\t// TODO element.parent currently undefined\n\tfunction findParentForm ( element ) {\n\t\twhile ( element = element.parent ) {\n\t\t\tif ( element.name === 'form' ) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction warnAboutAmbiguity ( description, ractive ) {\n\t\twarnOnceIfDebug( (\"The \" + description + \" being used for two-way binding is ambiguous, and may cause unexpected results. Consider initialising your data to eliminate the ambiguity\"), { ractive: ractive });\n\t}\n\t\n\tvar Binding = function Binding ( element, name ) {\n\t\tif ( name === void 0 ) name = 'value';\n\t\n\t\t\tthis.element = element;\n\t\tthis.ractive = element.ractive;\n\t\tthis.attribute = element.attributeByName[ name ];\n\t\n\t\tvar interpolator = this.attribute.interpolator;\n\t\tinterpolator.twowayBinding = this;\n\t\n\t\tvar model = interpolator.model;\n\t\n\t\t// not bound?\n\t\tif ( !model ) {\n\t\t\t// try to force resolution\n\t\t\tinterpolator.resolver.forceResolution();\n\t\t\tmodel = interpolator.model;\n\t\n\t\t\twarnAboutAmbiguity( (\"'\" + (interpolator.template.r) + \"' reference\"), this.ractive );\n\t\t}\n\t\n\t\telse if ( model.isUnresolved ) {\n\t\t\t// reference expressions (e.g. foo[bar])\n\t\t\tmodel.forceResolution();\n\t\t\twarnAboutAmbiguity( 'expression', this.ractive );\n\t\t}\n\t\n\t\t// TODO include index/key/keypath refs as read-only\n\t\telse if ( model.isReadonly ) {\n\t\t\tvar keypath = model.getKeypath().replace( /^@/, '' );\n\t\t\t\twarnOnceIfDebug( (\"Cannot use two-way binding on <\" + (element.name) + \"> element: \" + keypath + \" is read-only. To suppress this warning use <\" + (element.name) + \" twoway='false'...>\"), { ractive: this.ractive });\n\t\t\treturn false;\n\t\t}\n\t\n\t\tthis.attribute.isTwoway = true;\n\t\tthis.model = model;\n\t\n\t\t// initialise value, if it's undefined\n\t\tvar value = model.get();\n\t\tthis.wasUndefined = value === undefined;\n\t\n\t\tif ( value === undefined && this.getInitialValue ) {\n\t\t\tvalue = this.getInitialValue();\n\t\t\tmodel.set( value );\n\t\t}\n\t\n\t\tvar parentForm = findParentForm( element );\n\t\tif ( parentForm ) {\n\t\t\tthis.resetValue = value;\n\t\t\tparentForm.formBindings.push( this );\n\t\t}\n\t};\n\t\n\tBinding.prototype.bind = function bind () {\n\t\tthis.model.registerTwowayBinding( this );\n\t};\n\t\n\tBinding.prototype.handleChange = function handleChange () {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar value = this.getValue();\n\t\tif ( this.lastVal() === value ) return;\n\t\n\t\trunloop.start( this.root );\n\t\tthis.attribute.locked = true;\n\t\tthis.model.set( value );\n\t\tthis.lastVal( true, value );\n\t\n\t\t// if the value changes before observers fire, unlock to be updatable cause something weird and potentially freezy is up\n\t\tif ( this.model.get() !== value ) this.attribute.locked = false;\n\t\telse runloop.scheduleTask( function () { return this$1.attribute.locked = false; } );\n\t\n\t\trunloop.end();\n\t};\n\t\n\tBinding.prototype.lastVal = function lastVal ( setting, value ) {\n\t\tif ( setting ) this.lastValue = value;\n\t\telse return this.lastValue;\n\t};\n\t\n\tBinding.prototype.rebinding = function rebinding ( next, previous ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( this.model && this.model === previous ) previous.unregisterTwowayBinding( this );\n\t\tif ( next ) {\n\t\t\tthis.model = next;\n\t\t\trunloop.scheduleTask( function () { return next.registerTwowayBinding( this$1 ); } );\n\t\t}\n\t   };\n\t\n\tBinding.prototype.render = function render () {\n\t\tthis.node = this.element.node;\n\t\tthis.node._ractive.binding = this;\n\t\tthis.rendered = true; // TODO is this used anywhere?\n\t};\n\t\n\tBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\tthis.model.set( node.value );\n\t};\n\t\n\tBinding.prototype.unbind = function unbind () {\n\t\tthis.model.unregisterTwowayBinding( this );\n\t};\n\t\n\tBinding.prototype.unrender = function unrender () {\n\t\t// noop?\n\t};\n\t\n\t// This is the handler for DOM events that would lead to a change in the model\n\t// (i.e. change, sometimes, input, and occasionally click and keyup)\n\tfunction handleDomEvent () {\n\t\tthis._ractive.binding.handleChange();\n\t}\n\t\n\tvar CheckboxBinding = (function (Binding$$1) {\n\t\tfunction CheckboxBinding ( element ) {\n\t\t\tBinding$$1.call( this, element, 'checked' );\n\t\t}\n\t\n\t\tCheckboxBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\t\tCheckboxBinding.prototype.constructor = CheckboxBinding;\n\t\n\t\tCheckboxBinding.prototype.render = function render () {\n\t\t\tBinding$$1.prototype.render.call(this);\n\t\n\t\t\tthis.node.addEventListener( 'change', handleDomEvent, false );\n\t\n\t\t\tif ( this.node.attachEvent ) {\n\t\t\t\tthis.node.addEventListener( 'click', handleDomEvent, false );\n\t\t\t}\n\t\t};\n\t\n\t\tCheckboxBinding.prototype.unrender = function unrender () {\n\t\t\tthis.node.removeEventListener( 'change', handleDomEvent, false );\n\t\t\tthis.node.removeEventListener( 'click', handleDomEvent, false );\n\t\t};\n\t\n\t\tCheckboxBinding.prototype.getInitialValue = function getInitialValue () {\n\t\t\treturn !!this.element.getAttribute( 'checked' );\n\t\t};\n\t\n\t\tCheckboxBinding.prototype.getValue = function getValue () {\n\t\t\treturn this.node.checked;\n\t\t};\n\t\n\t\tCheckboxBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\t\tthis.model.set( node.checked );\n\t\t};\n\t\n\t\treturn CheckboxBinding;\n\t}(Binding));\n\t\n\tfunction getBindingGroup ( group, model, getValue ) {\n\t\tvar hash = \"\" + group + \"-bindingGroup\";\n\t\treturn model[hash] || ( model[ hash ] = new BindingGroup( hash, model, getValue ) );\n\t}\n\t\n\tvar BindingGroup = function BindingGroup ( hash, model, getValue ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tthis.model = model;\n\t\tthis.hash = hash;\n\t\tthis.getValue = function () {\n\t\t\tthis$1.value = getValue.call(this$1);\n\t\t\treturn this$1.value;\n\t\t};\n\t\n\t\tthis.bindings = [];\n\t};\n\t\n\tBindingGroup.prototype.add = function add ( binding ) {\n\t\tthis.bindings.push( binding );\n\t};\n\t\n\tBindingGroup.prototype.bind = function bind () {\n\t\tthis.value = this.model.get();\n\t\tthis.model.registerTwowayBinding( this );\n\t\tthis.bound = true;\n\t};\n\t\n\tBindingGroup.prototype.remove = function remove ( binding ) {\n\t\tremoveFromArray( this.bindings, binding );\n\t\tif ( !this.bindings.length ) {\n\t\t\tthis.unbind();\n\t\t}\n\t};\n\t\n\tBindingGroup.prototype.unbind = function unbind () {\n\t\tthis.model.unregisterTwowayBinding( this );\n\t\tthis.bound = false;\n\t\tdelete this.model[this.hash];\n\t};\n\t\n\tvar push$2 = [].push;\n\t\n\tfunction getValue$1$1() {\n\t\tvar all = this.bindings.filter(function ( b ) { return b.node && b.node.checked; }).map(function ( b ) { return b.element.getAttribute( 'value' ); });\n\t\tvar res = [];\n\t\tall.forEach(function ( v ) { if ( !arrayContains( res, v ) ) res.push( v ); });\n\t\treturn res;\n\t}\n\t\n\tvar CheckboxNameBinding = (function (Binding$$1) {\n\t\tfunction CheckboxNameBinding ( element ) {\n\t\t\tBinding$$1.call( this, element, 'name' );\n\t\n\t\t\tthis.checkboxName = true; // so that ractive.updateModel() knows what to do with this\n\t\n\t\t\t// Each input has a reference to an array containing it and its\n\t\t\t// group, as two-way binding depends on being able to ascertain\n\t\t\t// the status of all inputs within the group\n\t\t\tthis.group = getBindingGroup( 'checkboxes', this.model, getValue$1$1 );\n\t\t\tthis.group.add( this );\n\t\n\t\t\tif ( this.noInitialValue ) {\n\t\t\t\tthis.group.noInitialValue = true;\n\t\t\t}\n\t\n\t\t\t// If no initial value was set, and this input is checked, we\n\t\t\t// update the model\n\t\t\tif ( this.group.noInitialValue && this.element.getAttribute( 'checked' ) ) {\n\t\t\t\tvar existingValue = this.model.get();\n\t\t\t\tvar bindingValue = this.element.getAttribute( 'value' );\n\t\n\t\t\t\tif ( !arrayContains( existingValue, bindingValue ) ) {\n\t\t\t\t\tpush$2.call( existingValue, bindingValue ); // to avoid triggering runloop with array adaptor\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tCheckboxNameBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\t\tCheckboxNameBinding.prototype.constructor = CheckboxNameBinding;\n\t\n\t\tCheckboxNameBinding.prototype.bind = function bind () {\n\t\t\tif ( !this.group.bound ) {\n\t\t\t\tthis.group.bind();\n\t\t\t}\n\t\t};\n\t\n\t\tCheckboxNameBinding.prototype.changed = function changed () {\n\t\t\tvar wasChecked = !!this.isChecked;\n\t\t\tthis.isChecked = this.node.checked;\n\t\t\treturn this.isChecked === wasChecked;\n\t\t};\n\t\n\t\tCheckboxNameBinding.prototype.getInitialValue = function getInitialValue () {\n\t\t\t// This only gets called once per group (of inputs that\n\t\t\t// share a name), because it only gets called if there\n\t\t\t// isn't an initial value. By the same token, we can make\n\t\t\t// a note of that fact that there was no initial value,\n\t\t\t// and populate it using any `checked` attributes that\n\t\t\t// exist (which users should avoid, but which we should\n\t\t\t// support anyway to avoid breaking expectations)\n\t\t\tthis.noInitialValue = true; // TODO are noInitialValue and wasUndefined the same thing?\n\t\t\treturn [];\n\t\t};\n\t\n\t\tCheckboxNameBinding.prototype.getValue = function getValue$1 () {\n\t\t\treturn this.group.value;\n\t\t};\n\t\n\t\tCheckboxNameBinding.prototype.handleChange = function handleChange () {\n\t\t\tthis.isChecked = this.element.node.checked;\n\t\t\tthis.group.value = this.model.get();\n\t\t\tvar value = this.element.getAttribute( 'value' );\n\t\t\tif ( this.isChecked && !arrayContains( this.group.value, value ) ) {\n\t\t\t\tthis.group.value.push( value );\n\t\t\t} else if ( !this.isChecked && arrayContains( this.group.value, value ) ) {\n\t\t\t\tremoveFromArray( this.group.value, value );\n\t\t\t}\n\t\t\t// make sure super knows there's a change\n\t\t\tthis.lastValue = null;\n\t\t\tBinding$$1.prototype.handleChange.call(this);\n\t\t};\n\t\n\t\tCheckboxNameBinding.prototype.render = function render () {\n\t\t\tBinding$$1.prototype.render.call(this);\n\t\n\t\t\tvar node = this.node;\n\t\n\t\t\tvar existingValue = this.model.get();\n\t\t\tvar bindingValue = this.element.getAttribute( 'value' );\n\t\n\t\t\tif ( isArray( existingValue ) ) {\n\t\t\t\tthis.isChecked = arrayContains( existingValue, bindingValue );\n\t\t\t} else {\n\t\t\t\tthis.isChecked = existingValue == bindingValue;\n\t\t\t}\n\t\n\t\t\tnode.name = '{{' + this.model.getKeypath() + '}}';\n\t\t\tnode.checked = this.isChecked;\n\t\n\t\t\tnode.addEventListener( 'change', handleDomEvent, false );\n\t\n\t\t\t// in case of IE emergency, bind to click event as well\n\t\t\tif ( node.attachEvent ) {\n\t\t\t\tnode.addEventListener( 'click', handleDomEvent, false );\n\t\t\t}\n\t\t};\n\t\n\t\tCheckboxNameBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\t\tthis.group.bindings.forEach( function ( binding ) { return binding.wasUndefined = true; } );\n\t\n\t\t\tif ( node.checked ) {\n\t\t\t\tvar valueSoFar = this.group.getValue();\n\t\t\t\tvalueSoFar.push( this.element.getAttribute( 'value' ) );\n\t\n\t\t\t\tthis.group.model.set( valueSoFar );\n\t\t\t}\n\t\t};\n\t\n\t\tCheckboxNameBinding.prototype.unbind = function unbind () {\n\t\t\tthis.group.remove( this );\n\t\t};\n\t\n\t\tCheckboxNameBinding.prototype.unrender = function unrender () {\n\t\t\tvar node = this.element.node;\n\t\n\t\t\tnode.removeEventListener( 'change', handleDomEvent, false );\n\t\t\tnode.removeEventListener( 'click', handleDomEvent, false );\n\t\t};\n\t\n\t\treturn CheckboxNameBinding;\n\t}(Binding));\n\t\n\tvar ContentEditableBinding = (function (Binding$$1) {\n\t\tfunction ContentEditableBinding () {\n\t\t\tBinding$$1.apply(this, arguments);\n\t\t}\n\t\n\t\tContentEditableBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\t\tContentEditableBinding.prototype.constructor = ContentEditableBinding;\n\t\n\t\tContentEditableBinding.prototype.getInitialValue = function getInitialValue () {\n\t\t\treturn this.element.fragment ? this.element.fragment.toString() : '';\n\t\t};\n\t\n\t\tContentEditableBinding.prototype.getValue = function getValue () {\n\t\t\treturn this.element.node.innerHTML;\n\t\t};\n\t\n\t\tContentEditableBinding.prototype.render = function render () {\n\t\t\tBinding$$1.prototype.render.call(this);\n\t\n\t\t\tvar node = this.node;\n\t\n\t\t\tnode.addEventListener( 'change', handleDomEvent, false );\n\t\t\tnode.addEventListener( 'blur', handleDomEvent, false );\n\t\n\t\t\tif ( !this.ractive.lazy ) {\n\t\t\t\tnode.addEventListener( 'input', handleDomEvent, false );\n\t\n\t\t\t\tif ( node.attachEvent ) {\n\t\t\t\t\tnode.addEventListener( 'keyup', handleDomEvent, false );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tContentEditableBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\t\tthis.model.set( node.innerHTML );\n\t\t};\n\t\n\t\tContentEditableBinding.prototype.unrender = function unrender () {\n\t\t\tvar node = this.node;\n\t\n\t\t\tnode.removeEventListener( 'blur', handleDomEvent, false );\n\t\t\tnode.removeEventListener( 'change', handleDomEvent, false );\n\t\t\tnode.removeEventListener( 'input', handleDomEvent, false );\n\t\t\tnode.removeEventListener( 'keyup', handleDomEvent, false );\n\t\t};\n\t\n\t\treturn ContentEditableBinding;\n\t}(Binding));\n\t\n\tfunction handleBlur () {\n\t\thandleDomEvent.call( this );\n\t\n\t\tvar value = this._ractive.binding.model.get();\n\t\tthis.value = value == undefined ? '' : value;\n\t}\n\t\n\tfunction handleDelay ( delay ) {\n\t\tvar timeout;\n\t\n\t\treturn function () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tif ( timeout ) clearTimeout( timeout );\n\t\n\t\t\ttimeout = setTimeout( function () {\n\t\t\t\tvar binding = this$1._ractive.binding;\n\t\t\t\tif ( binding.rendered ) handleDomEvent.call( this$1 );\n\t\t\t\ttimeout = null;\n\t\t\t}, delay );\n\t\t};\n\t}\n\t\n\tvar GenericBinding = (function (Binding$$1) {\n\t\tfunction GenericBinding () {\n\t\t\tBinding$$1.apply(this, arguments);\n\t\t}\n\t\n\t\tGenericBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\t\tGenericBinding.prototype.constructor = GenericBinding;\n\t\n\t\tGenericBinding.prototype.getInitialValue = function getInitialValue () {\n\t\t\treturn '';\n\t\t};\n\t\n\t\tGenericBinding.prototype.getValue = function getValue () {\n\t\t\treturn this.node.value;\n\t\t};\n\t\n\t\tGenericBinding.prototype.render = function render () {\n\t\t\tBinding$$1.prototype.render.call(this);\n\t\n\t\t\t// any lazy setting for this element overrides the root\n\t\t\t// if the value is a number, it's a timeout\n\t\t\tvar lazy = this.ractive.lazy;\n\t\t\tvar timeout = false;\n\t\n\t\t\tif ( 'lazy' in this.element ) {\n\t\t\t\tlazy = this.element.lazy;\n\t\t\t}\n\t\n\t\t\tif ( isNumeric( lazy ) ) {\n\t\t\t\ttimeout = +lazy;\n\t\t\t\tlazy = false;\n\t\t\t}\n\t\n\t\t\tthis.handler = timeout ? handleDelay( timeout ) : handleDomEvent;\n\t\n\t\t\tvar node = this.node;\n\t\n\t\t\tnode.addEventListener( 'change', handleDomEvent, false );\n\t\n\t\t\tif ( !lazy ) {\n\t\t\t\tnode.addEventListener( 'input', this.handler, false );\n\t\n\t\t\t\tif ( node.attachEvent ) {\n\t\t\t\t\tnode.addEventListener( 'keyup', this.handler, false );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tnode.addEventListener( 'blur', handleBlur, false );\n\t\t};\n\t\n\t\tGenericBinding.prototype.unrender = function unrender () {\n\t\t\tvar node = this.element.node;\n\t\t\tthis.rendered = false;\n\t\n\t\t\tnode.removeEventListener( 'change', handleDomEvent, false );\n\t\t\tnode.removeEventListener( 'input', this.handler, false );\n\t\t\tnode.removeEventListener( 'keyup', this.handler, false );\n\t\t\tnode.removeEventListener( 'blur', handleBlur, false );\n\t\t};\n\t\n\t\treturn GenericBinding;\n\t}(Binding));\n\t\n\tfunction getSelectedOptions ( select ) {\n\t    return select.selectedOptions\n\t\t\t? toArray( select.selectedOptions )\n\t\t\t: select.options\n\t\t\t\t? toArray( select.options ).filter( function ( option ) { return option.selected; } )\n\t\t\t\t: [];\n\t}\n\t\n\tvar MultipleSelectBinding = (function (Binding$$1) {\n\t\tfunction MultipleSelectBinding () {\n\t\t\tBinding$$1.apply(this, arguments);\n\t\t}\n\t\n\t\tMultipleSelectBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\t\tMultipleSelectBinding.prototype.constructor = MultipleSelectBinding;\n\t\n\t\tMultipleSelectBinding.prototype.forceUpdate = function forceUpdate () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar value = this.getValue();\n\t\n\t\t\tif ( value !== undefined ) {\n\t\t\t\tthis.attribute.locked = true;\n\t\t\t\trunloop.scheduleTask( function () { return this$1.attribute.locked = false; } );\n\t\t\t\tthis.model.set( value );\n\t\t\t}\n\t\t};\n\t\n\t\tMultipleSelectBinding.prototype.getInitialValue = function getInitialValue () {\n\t\t\treturn this.element.options\n\t\t\t\t.filter( function ( option ) { return option.getAttribute( 'selected' ); } )\n\t\t\t\t.map( function ( option ) { return option.getAttribute( 'value' ); } );\n\t\t};\n\t\n\t\tMultipleSelectBinding.prototype.getValue = function getValue () {\n\t\t\tvar options = this.element.node.options;\n\t\t\tvar len = options.length;\n\t\n\t\t\tvar selectedValues = [];\n\t\n\t\t\tfor ( var i = 0; i < len; i += 1 ) {\n\t\t\t\tvar option = options[i];\n\t\n\t\t\t\tif ( option.selected ) {\n\t\t\t\t\tvar optionValue = option._ractive ? option._ractive.value : option.value;\n\t\t\t\t\tselectedValues.push( optionValue );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn selectedValues;\n\t\t};\n\t\n\t\tMultipleSelectBinding.prototype.handleChange = function handleChange () {\n\t\t\tvar attribute = this.attribute;\n\t\t\tvar previousValue = attribute.getValue();\n\t\n\t\t\tvar value = this.getValue();\n\t\n\t\t\tif ( previousValue === undefined || !arrayContentsMatch( value, previousValue ) ) {\n\t\t\t\tBinding$$1.prototype.handleChange.call(this);\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t};\n\t\n\t\tMultipleSelectBinding.prototype.render = function render () {\n\t\t\tBinding$$1.prototype.render.call(this);\n\t\n\t\t\tthis.node.addEventListener( 'change', handleDomEvent, false );\n\t\n\t\t\tif ( this.model.get() === undefined ) {\n\t\t\t\t// get value from DOM, if possible\n\t\t\t\tthis.handleChange();\n\t\t\t}\n\t\t};\n\t\n\t\tMultipleSelectBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\t\tvar selectedOptions = getSelectedOptions( node );\n\t\t\tvar i = selectedOptions.length;\n\t\t\tvar result = new Array( i );\n\t\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar option = selectedOptions[i];\n\t\t\t\tresult[i] = option._ractive ? option._ractive.value : option.value;\n\t\t\t}\n\t\n\t\t\tthis.model.set( result );\n\t\t};\n\t\n\t\tMultipleSelectBinding.prototype.setValue = function setValue () {\n\t\t\tthrow new Error( 'TODO not implemented yet' );\n\t\t};\n\t\n\t\tMultipleSelectBinding.prototype.unrender = function unrender () {\n\t\t\tthis.node.removeEventListener( 'change', handleDomEvent, false );\n\t\t};\n\t\n\t\tMultipleSelectBinding.prototype.updateModel = function updateModel () {\n\t\t\tif ( this.attribute.value === undefined || !this.attribute.value.length ) {\n\t\t\t\tthis.keypath.set( this.initialValue );\n\t\t\t}\n\t\t};\n\t\n\t\treturn MultipleSelectBinding;\n\t}(Binding));\n\t\n\tvar NumericBinding = (function (GenericBinding$$1) {\n\t\tfunction NumericBinding () {\n\t\t\tGenericBinding$$1.apply(this, arguments);\n\t\t}\n\t\n\t\tNumericBinding.prototype = Object.create( GenericBinding$$1 && GenericBinding$$1.prototype );\n\t\tNumericBinding.prototype.constructor = NumericBinding;\n\t\n\t\tNumericBinding.prototype.getInitialValue = function getInitialValue () {\n\t\t\treturn undefined;\n\t\t};\n\t\n\t\tNumericBinding.prototype.getValue = function getValue () {\n\t\t\tvar value = parseFloat( this.node.value );\n\t\t\treturn isNaN( value ) ? undefined : value;\n\t\t};\n\t\n\t\tNumericBinding.prototype.setFromNode = function setFromNode( node ) {\n\t\t\tvar value = parseFloat( node.value );\n\t\t\tif ( !isNaN( value ) ) this.model.set( value );\n\t\t};\n\t\n\t\treturn NumericBinding;\n\t}(GenericBinding));\n\t\n\tvar siblings = {};\n\t\n\tfunction getSiblings ( hash ) {\n\t\treturn siblings[ hash ] || ( siblings[ hash ] = [] );\n\t}\n\t\n\tvar RadioBinding = (function (Binding$$1) {\n\t\tfunction RadioBinding ( element ) {\n\t\t\tBinding$$1.call( this, element, 'checked' );\n\t\n\t\t\tthis.siblings = getSiblings( this.ractive._guid + this.element.getAttribute( 'name' ) );\n\t\t\tthis.siblings.push( this );\n\t\t}\n\t\n\t\tRadioBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\t\tRadioBinding.prototype.constructor = RadioBinding;\n\t\n\t\tRadioBinding.prototype.getValue = function getValue () {\n\t\t\treturn this.node.checked;\n\t\t};\n\t\n\t\tRadioBinding.prototype.handleChange = function handleChange () {\n\t\t\trunloop.start( this.root );\n\t\n\t\t\tthis.siblings.forEach( function ( binding ) {\n\t\t\t\tbinding.model.set( binding.getValue() );\n\t\t\t});\n\t\n\t\t\trunloop.end();\n\t\t};\n\t\n\t\tRadioBinding.prototype.render = function render () {\n\t\t\tBinding$$1.prototype.render.call(this);\n\t\n\t\t\tthis.node.addEventListener( 'change', handleDomEvent, false );\n\t\n\t\t\tif ( this.node.attachEvent ) {\n\t\t\t\tthis.node.addEventListener( 'click', handleDomEvent, false );\n\t\t\t}\n\t\t};\n\t\n\t\tRadioBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\t\tthis.model.set( node.checked );\n\t\t};\n\t\n\t\tRadioBinding.prototype.unbind = function unbind () {\n\t\t\tremoveFromArray( this.siblings, this );\n\t\t};\n\t\n\t\tRadioBinding.prototype.unrender = function unrender () {\n\t\t\tthis.node.removeEventListener( 'change', handleDomEvent, false );\n\t\t\tthis.node.removeEventListener( 'click', handleDomEvent, false );\n\t\t};\n\t\n\t\treturn RadioBinding;\n\t}(Binding));\n\t\n\tfunction getValue$2() {\n\t\tvar checked = this.bindings.filter( function ( b ) { return b.node.checked; } );\n\t\tif ( checked.length > 0 ) {\n\t\t\treturn checked[0].element.getAttribute( 'value' );\n\t\t}\n\t}\n\t\n\tvar RadioNameBinding = (function (Binding$$1) {\n\t\tfunction RadioNameBinding ( element ) {\n\t\t\tBinding$$1.call( this, element, 'name' );\n\t\n\t\t\tthis.group = getBindingGroup( 'radioname', this.model, getValue$2 );\n\t\t\tthis.group.add( this );\n\t\n\t\t\tif ( element.checked ) {\n\t\t\t\tthis.group.value = this.getValue();\n\t\t\t}\n\t\t}\n\t\n\t\tRadioNameBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\t\tRadioNameBinding.prototype.constructor = RadioNameBinding;\n\t\n\t\tRadioNameBinding.prototype.bind = function bind () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tif ( !this.group.bound ) {\n\t\t\t\tthis.group.bind();\n\t\t\t}\n\t\n\t\t\t// update name keypath when necessary\n\t\t\tthis.nameAttributeBinding = {\n\t\t\t\thandleChange: function () { return this$1.node.name = \"{{\" + (this$1.model.getKeypath()) + \"}}\"; }\n\t\t\t};\n\t\n\t\t\tthis.model.getKeypathModel().register( this.nameAttributeBinding );\n\t\t};\n\t\n\t\tRadioNameBinding.prototype.getInitialValue = function getInitialValue () {\n\t\t\tif ( this.element.getAttribute( 'checked' ) ) {\n\t\t\t\treturn this.element.getAttribute( 'value' );\n\t\t\t}\n\t\t};\n\t\n\t\tRadioNameBinding.prototype.getValue = function getValue$1 () {\n\t\t\treturn this.element.getAttribute( 'value' );\n\t\t};\n\t\n\t\tRadioNameBinding.prototype.handleChange = function handleChange () {\n\t\t\t// If this <input> is the one that's checked, then the value of its\n\t\t\t// `name` model gets set to its value\n\t\t\tif ( this.node.checked ) {\n\t\t\t\tthis.group.value = this.getValue();\n\t\t\t\tBinding$$1.prototype.handleChange.call(this);\n\t\t\t}\n\t\t};\n\t\n\t\tRadioNameBinding.prototype.lastVal = function lastVal ( setting, value ) {\n\t\t\tif ( setting ) this.group.lastValue = value;\n\t\t\telse return this.group.lastValue;\n\t\t};\n\t\n\t\tRadioNameBinding.prototype.render = function render () {\n\t\t\tBinding$$1.prototype.render.call(this);\n\t\n\t\t\tvar node = this.node;\n\t\n\t\t\tnode.name = \"{{\" + (this.model.getKeypath()) + \"}}\";\n\t\t\tnode.checked = this.model.get() == this.element.getAttribute( 'value' );\n\t\n\t\t\tnode.addEventListener( 'change', handleDomEvent, false );\n\t\n\t\t\tif ( node.attachEvent ) {\n\t\t\t\tnode.addEventListener( 'click', handleDomEvent, false );\n\t\t\t}\n\t\t};\n\t\n\t\tRadioNameBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\t\tif ( node.checked ) {\n\t\t\t\tthis.group.model.set( this.element.getAttribute( 'value' ) );\n\t\t\t}\n\t\t};\n\t\n\t\tRadioNameBinding.prototype.unbind = function unbind () {\n\t\t\tthis.group.remove( this );\n\t\n\t\t\tthis.model.getKeypathModel().unregister( this.nameAttributeBinding );\n\t\t};\n\t\n\t\tRadioNameBinding.prototype.unrender = function unrender () {\n\t\t\tvar node = this.node;\n\t\n\t\t\tnode.removeEventListener( 'change', handleDomEvent, false );\n\t\t\tnode.removeEventListener( 'click', handleDomEvent, false );\n\t\t};\n\t\n\t\treturn RadioNameBinding;\n\t}(Binding));\n\t\n\tvar SingleSelectBinding = (function (Binding$$1) {\n\t\tfunction SingleSelectBinding () {\n\t\t\tBinding$$1.apply(this, arguments);\n\t\t}\n\t\n\t\tSingleSelectBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\t\tSingleSelectBinding.prototype.constructor = SingleSelectBinding;\n\t\n\t\tSingleSelectBinding.prototype.forceUpdate = function forceUpdate () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar value = this.getValue();\n\t\n\t\t\tif ( value !== undefined ) {\n\t\t\t\tthis.attribute.locked = true;\n\t\t\t\trunloop.scheduleTask( function () { return this$1.attribute.locked = false; } );\n\t\t\t\tthis.model.set( value );\n\t\t\t}\n\t\t};\n\t\n\t\tSingleSelectBinding.prototype.getInitialValue = function getInitialValue () {\n\t\t\tif ( this.element.getAttribute( 'value' ) !== undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar options = this.element.options;\n\t\t\tvar len = options.length;\n\t\n\t\t\tif ( !len ) return;\n\t\n\t\t\tvar value;\n\t\t\tvar optionWasSelected;\n\t\t\tvar i = len;\n\t\n\t\t\t// take the final selected option...\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar option = options[i];\n\t\n\t\t\t\tif ( option.getAttribute( 'selected' ) ) {\n\t\t\t\t\tif ( !option.getAttribute( 'disabled' ) ) {\n\t\t\t\t\t\tvalue = option.getAttribute( 'value' );\n\t\t\t\t\t}\n\t\n\t\t\t\t\toptionWasSelected = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// or the first non-disabled option, if none are selected\n\t\t\tif ( !optionWasSelected ) {\n\t\t\t\twhile ( ++i < len ) {\n\t\t\t\t\tif ( !options[i].getAttribute( 'disabled' ) ) {\n\t\t\t\t\t\tvalue = options[i].getAttribute( 'value' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// This is an optimisation (aka hack) that allows us to forgo some\n\t\t\t// other more expensive work\n\t\t\t// TODO does it still work? seems at odds with new architecture\n\t\t\tif ( value !== undefined ) {\n\t\t\t\tthis.element.attributeByName.value.value = value;\n\t\t\t}\n\t\n\t\t\treturn value;\n\t\t};\n\t\n\t\tSingleSelectBinding.prototype.getValue = function getValue () {\n\t\t\tvar options = this.node.options;\n\t\t\tvar len = options.length;\n\t\n\t\t\tvar i;\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\t\tvar option = options[i];\n\t\n\t\t\t\tif ( options[i].selected && !options[i].disabled ) {\n\t\t\t\t\treturn option._ractive ? option._ractive.value : option.value;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tSingleSelectBinding.prototype.render = function render () {\n\t\t\tBinding$$1.prototype.render.call(this);\n\t\t\tthis.node.addEventListener( 'change', handleDomEvent, false );\n\t\t};\n\t\n\t\tSingleSelectBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\t\tvar option = getSelectedOptions( node )[0];\n\t\t\tthis.model.set( option._ractive ? option._ractive.value : option.value );\n\t\t};\n\t\n\t\t// TODO this method is an anomaly... is it necessary?\n\t\tSingleSelectBinding.prototype.setValue = function setValue ( value ) {\n\t\t\tthis.model.set( value );\n\t\t};\n\t\n\t\tSingleSelectBinding.prototype.unrender = function unrender () {\n\t\t\tthis.node.removeEventListener( 'change', handleDomEvent, false );\n\t\t};\n\t\n\t\treturn SingleSelectBinding;\n\t}(Binding));\n\t\n\tfunction isBindable ( attribute ) {\n\t\treturn attribute &&\n\t\t\t   attribute.template.f &&\n\t\t       attribute.template.f.length === 1 &&\n\t\t       attribute.template.f[0].t === INTERPOLATOR &&\n\t\t       !attribute.template.f[0].s;\n\t}\n\t\n\tfunction selectBinding ( element ) {\n\t\tvar attributes = element.attributeByName;\n\t\n\t\t// contenteditable - bind if the contenteditable attribute is true\n\t\t// or is bindable and may thus become true...\n\t\tif ( element.getAttribute( 'contenteditable' ) || isBindable( attributes.contenteditable ) ) {\n\t\t\t// ...and this element also has a value attribute to bind\n\t\t\treturn isBindable( attributes.value ) ? ContentEditableBinding : null;\n\t\t}\n\t\n\t\t// <input>\n\t\tif ( element.name === 'input' ) {\n\t\t\tvar type = element.getAttribute( 'type' );\n\t\n\t\t\tif ( type === 'radio' || type === 'checkbox' ) {\n\t\t\t\tvar bindName = isBindable( attributes.name );\n\t\t\t\tvar bindChecked = isBindable( attributes.checked );\n\t\n\t\t\t\t// for radios we can either bind the name attribute, or the checked attribute - not both\n\t\t\t\tif ( bindName && bindChecked ) {\n\t\t\t\t\tif ( type === 'radio' ) {\n\t\t\t\t\t\twarnIfDebug( 'A radio input can have two-way binding on its name attribute, or its checked attribute - not both', { ractive: element.root });\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// A checkbox with bindings for both name and checked - see https://github.com/ractivejs/ractive/issues/1749\n\t\t\t\t\t\treturn CheckboxBinding;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif ( bindName ) {\n\t\t\t\t\treturn type === 'radio' ? RadioNameBinding : CheckboxNameBinding;\n\t\t\t\t}\n\t\n\t\t\t\tif ( bindChecked ) {\n\t\t\t\t\treturn type === 'radio' ? RadioBinding : CheckboxBinding;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( type === 'file' && isBindable( attributes.value ) ) {\n\t\t\t\treturn Binding;\n\t\t\t}\n\t\n\t\t\tif ( isBindable( attributes.value ) ) {\n\t\t\t\treturn ( type === 'number' || type === 'range' ) ? NumericBinding : GenericBinding;\n\t\t\t}\n\t\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// <select>\n\t\tif ( element.name === 'select' && isBindable( attributes.value ) ) {\n\t\t\treturn element.getAttribute( 'multiple' ) ? MultipleSelectBinding : SingleSelectBinding;\n\t\t}\n\t\n\t\t// <textarea>\n\t\tif ( element.name === 'textarea' && isBindable( attributes.value ) ) {\n\t\t\treturn GenericBinding;\n\t\t}\n\t}\n\t\n\tfunction makeDirty$2 ( query ) {\n\t\tquery.makeDirty();\n\t}\n\t\n\tvar endsWithSemi = /;\\s*$/;\n\t\n\tvar Element = (function (Item$$1) {\n\t\tfunction Element ( options ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tItem$$1.call( this, options );\n\t\n\t\t\tthis.liveQueries = []; // TODO rare case. can we handle differently?\n\t\n\t\t\tthis.name = options.template.e.toLowerCase();\n\t\t\tthis.isVoid = voidElementNames.test( this.name );\n\t\n\t\t\t// find parent element\n\t\t\tthis.parent = findElement( this.parentFragment, false );\n\t\n\t\t\tif ( this.parent && this.parent.name === 'option' ) {\n\t\t\t\tthrow new Error( (\"An <option> element cannot contain other elements (encountered <\" + (this.name) + \">)\") );\n\t\t\t}\n\t\n\t\t\tthis.decorators = [];\n\t\n\t\t\t// create attributes\n\t\t\tthis.attributeByName = {};\n\t\n\t\t\tthis.attributes = [];\n\t\t\tvar leftovers = [];\n\t\t\t( this.template.m || [] ).forEach( function ( template ) {\n\t\t\t\tswitch ( template.t ) {\n\t\t\t\t\tcase ATTRIBUTE:\n\t\t\t\t\tcase BINDING_FLAG:\n\t\t\t\t\tcase DECORATOR:\n\t\t\t\t\tcase EVENT:\n\t\t\t\t\tcase TRANSITION:\n\t\t\t\t\t\tthis$1.attributes.push( createItem({\n\t\t\t\t\t\t\towner: this$1,\n\t\t\t\t\t\t\tparentFragment: this$1.parentFragment,\n\t\t\t\t\t\t\ttemplate: template\n\t\t\t\t\t\t}) );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tleftovers.push( template );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tthis.attributes.push( new ConditionalAttribute({\n\t\t\t\towner: this,\n\t\t\t\tparentFragment: this.parentFragment,\n\t\t\t\ttemplate: leftovers\n\t\t\t}) );\n\t\n\t\t\tvar i = this.attributes.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar attr = this$1.attributes[ i ];\n\t\t\t\tif ( attr.name === 'type' ) this$1.attributes.unshift( this$1.attributes.splice( i, 1 )[ 0 ] );\n\t\t\t\telse if ( attr.name === 'max' ) this$1.attributes.unshift( this$1.attributes.splice( i, 1 )[ 0 ] );\n\t\t\t\telse if ( attr.name === 'min' ) this$1.attributes.unshift( this$1.attributes.splice( i, 1 )[ 0 ] );\n\t\t\t\telse if ( attr.name === 'class' ) this$1.attributes.unshift( this$1.attributes.splice( i, 1 )[ 0 ] );\n\t\t\t\telse if ( attr.name === 'value' ) {\n\t\t\t\t\tthis$1.attributes.push( this$1.attributes.splice( i, 1 )[ 0 ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// create children\n\t\t\tif ( options.template.f && !options.deferContent ) {\n\t\t\t\tthis.fragment = new Fragment({\n\t\t\t\t\ttemplate: options.template.f,\n\t\t\t\t\towner: this,\n\t\t\t\t\tcssIds: null\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tthis.binding = null; // filled in later\n\t\t}\n\t\n\t\tElement.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\t\tElement.prototype.constructor = Element;\n\t\n\t\tElement.prototype.bind = function bind$1 () {\n\t\t\tthis.attributes.binding = true;\n\t\t\tthis.attributes.forEach( bind$2 );\n\t\t\tthis.attributes.binding = false;\n\t\n\t\t\tif ( this.fragment ) this.fragment.bind();\n\t\n\t\t\t// create two-way binding if necessary\n\t\t\tif ( !this.binding ) this.recreateTwowayBinding();\n\t\t};\n\t\n\t\tElement.prototype.createTwowayBinding = function createTwowayBinding () {\n\t\t\tvar shouldBind = 'twoway' in this ? this.twoway : this.ractive.twoway;\n\t\n\t\t\tif ( !shouldBind ) return null;\n\t\n\t\t\tvar Binding = selectBinding( this );\n\t\n\t\t\tif ( !Binding ) return null;\n\t\n\t\t\tvar binding = new Binding( this );\n\t\n\t\t\treturn binding && binding.model ?\n\t\t\t\tbinding :\n\t\t\t\tnull;\n\t\t};\n\t\n\t\tElement.prototype.destroyed = function destroyed () {\n\t\t\tthis.attributes.forEach( function ( a ) { return a.destroyed(); } );\n\t\t\tif ( this.fragment ) this.fragment.destroyed();\n\t\t};\n\t\n\t\tElement.prototype.detach = function detach () {\n\t\t\t// if this element is no longer rendered, the transitions are complete and the attributes can be torn down\n\t\t\tif ( !this.rendered ) this.destroyed();\n\t\n\t\t\treturn detachNode( this.node );\n\t\t};\n\t\n\t\tElement.prototype.find = function find ( selector ) {\n\t\t\tif ( matches( this.node, selector ) ) return this.node;\n\t\t\tif ( this.fragment ) {\n\t\t\t\treturn this.fragment.find( selector );\n\t\t\t}\n\t\t};\n\t\n\t\tElement.prototype.findAll = function findAll ( selector, query ) {\n\t\t\t// Add this node to the query, if applicable, and register the\n\t\t\t// query on this element\n\t\t\tvar matches$$1 = query.test( this.node );\n\t\t\tif ( matches$$1 ) {\n\t\t\t\tquery.add( this.node );\n\t\t\t\tif ( query.live ) this.liveQueries.push( query );\n\t\t\t}\n\t\n\t\t\tif ( this.fragment ) {\n\t\t\t\tthis.fragment.findAll( selector, query );\n\t\t\t}\n\t\t};\n\t\n\t\tElement.prototype.findComponent = function findComponent ( name ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\treturn this.fragment.findComponent( name );\n\t\t\t}\n\t\t};\n\t\n\t\tElement.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\tthis.fragment.findAllComponents( name, query );\n\t\t\t}\n\t\t};\n\t\n\t\tElement.prototype.findNextNode = function findNextNode () {\n\t\t\treturn null;\n\t\t};\n\t\n\t\tElement.prototype.firstNode = function firstNode () {\n\t\t\treturn this.node;\n\t\t};\n\t\n\t\tElement.prototype.getAttribute = function getAttribute ( name ) {\n\t\t\tvar attribute = this.attributeByName[ name ];\n\t\t\treturn attribute ? attribute.getValue() : undefined;\n\t\t};\n\t\n\t\tElement.prototype.recreateTwowayBinding = function recreateTwowayBinding () {\n\t\t\tif ( this.binding ) {\n\t\t\t\tthis.binding.unbind();\n\t\t\t\tthis.binding.unrender();\n\t\t\t}\n\t\n\t\t\tif ( this.binding = this.createTwowayBinding() ) {\n\t\t\t\tthis.binding.bind();\n\t\t\t\tif ( this.rendered ) this.binding.render();\n\t\t\t}\n\t\t};\n\t\n\t\tElement.prototype.render = function render$1 ( target, occupants ) {\n\t\t\t// TODO determine correct namespace\n\t\t\tvar this$1 = this;\n\t\n\t\t\tthis.namespace = getNamespace( this );\n\t\n\t\t\tvar node;\n\t\t\tvar existing = false;\n\t\n\t\t\tif ( occupants ) {\n\t\t\t\tvar n;\n\t\t\t\twhile ( ( n = occupants.shift() ) ) {\n\t\t\t\t\tif ( n.nodeName.toUpperCase() === this$1.template.e.toUpperCase() && n.namespaceURI === this$1.namespace ) {\n\t\t\t\t\t\tthis$1.node = node = n;\n\t\t\t\t\t\texisting = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdetachNode( n );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( !node ) {\n\t\t\t\tnode = createElement( this.template.e, this.namespace, this.getAttribute( 'is' ) );\n\t\t\t\tthis.node = node;\n\t\t\t}\n\t\n\t\t\tdefineProperty( node, '_ractive', {\n\t\t\t\tvalue: {\n\t\t\t\t\tproxy: this\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t// Is this a top-level node of a component? If so, we may need to add\n\t\t\t// a data-ractive-css attribute, for CSS encapsulation\n\t\t\tif ( this.parentFragment.cssIds ) {\n\t\t\t\tnode.setAttribute( 'data-ractive-css', this.parentFragment.cssIds.map( function ( x ) { return (\"{\" + x + \"}\"); } ).join( ' ' ) );\n\t\t\t}\n\t\n\t\t\tif ( existing && this.foundNode ) this.foundNode( node );\n\t\n\t\t\tif ( this.fragment ) {\n\t\t\t\tvar children = existing ? toArray( node.childNodes ) : undefined;\n\t\n\t\t\t\tthis.fragment.render( node, children );\n\t\n\t\t\t\t// clean up leftover children\n\t\t\t\tif ( children ) {\n\t\t\t\t\tchildren.forEach( detachNode );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( existing ) {\n\t\t\t\t// store initial values for two-way binding\n\t\t\t\tif ( this.binding && this.binding.wasUndefined ) this.binding.setFromNode( node );\n\t\t\t\t// remove unused attributes\n\t\t\t\tvar i = node.attributes.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tvar name = node.attributes[i].name;\n\t\t\t\t\tif ( !( name in this$1.attributeByName ) ) node.removeAttribute( name );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthis.attributes.forEach( render$1$1 );\n\t\n\t\t\tif ( this.binding ) this.binding.render();\n\t\n\t\t\tupdateLiveQueries$1( this );\n\t\n\t\t\tif ( this._introTransition && this.ractive.transitionsEnabled ) {\n\t\t\t\tthis._introTransition.isIntro = true;\n\t\t\t\trunloop.registerTransition( this._introTransition );\n\t\t\t}\n\t\n\t\t\tif ( !existing ) {\n\t\t\t\ttarget.appendChild( node );\n\t\t\t}\n\t\n\t\t\tthis.rendered = true;\n\t\t};\n\t\n\t\tElement.prototype.shuffled = function shuffled () {\n\t\t\tthis.liveQueries.forEach( makeDirty$2 );\n\t\t\tItem$$1.prototype.shuffled.call(this);\n\t\t};\n\t\n\t\tElement.prototype.toString = function toString () {\n\t\t\tvar tagName = this.template.e;\n\t\n\t\t\tvar attrs = this.attributes.map( stringifyAttribute ).join( '' );\n\t\n\t\t\t// Special case - selected options\n\t\t\tif ( this.name === 'option' && this.isSelected() ) {\n\t\t\t\tattrs += ' selected';\n\t\t\t}\n\t\n\t\t\t// Special case - two-way radio name bindings\n\t\t\tif ( this.name === 'input' && inputIsCheckedRadio( this ) ) {\n\t\t\t\tattrs += ' checked';\n\t\t\t}\n\t\n\t\t\t// Special case style and class attributes and directives\n\t\t\tvar style, cls;\n\t\t\tthis.attributes.forEach( function ( attr ) {\n\t\t\t\tif ( attr.name === 'class' ) {\n\t\t\t\t\tcls = ( cls || '' ) + ( cls ? ' ' : '' ) + safeAttributeString( attr.getString() );\n\t\t\t\t} else if ( attr.name === 'style' ) {\n\t\t\t\t\tstyle = ( style || '' ) + ( style ? ' ' : '' ) + safeAttributeString( attr.getString() );\n\t\t\t\t\tif ( style && !endsWithSemi.test( style ) ) style += ';';\n\t\t\t\t} else if ( attr.styleName ) {\n\t\t\t\t\tstyle = ( style || '' ) + ( style ? ' ' : '' ) +  \"\" + (decamelize( attr.styleName )) + \": \" + (safeAttributeString( attr.getString() )) + \";\";\n\t\t\t\t} else if ( attr.inlineClass && attr.getValue() ) {\n\t\t\t\t\tcls = ( cls || '' ) + ( cls ? ' ' : '' ) + attr.inlineClass;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// put classes first, then inline style\n\t\t\tif ( style !== undefined ) attrs = ' style' + ( style ? (\"=\\\"\" + style + \"\\\"\") : '' ) + attrs;\n\t\t\tif ( cls !== undefined ) attrs = ' class' + (cls ? (\"=\\\"\" + cls + \"\\\"\") : '') + attrs;\n\t\n\t\t\tvar str = \"<\" + tagName + \"\" + attrs + \">\";\n\t\n\t\t\tif ( this.isVoid ) return str;\n\t\n\t\t\t// Special case - textarea\n\t\t\tif ( this.name === 'textarea' && this.getAttribute( 'value' ) !== undefined ) {\n\t\t\t\tstr += escapeHtml( this.getAttribute( 'value' ) );\n\t\t\t}\n\t\n\t\t\t// Special case - contenteditable\n\t\t\telse if ( this.getAttribute( 'contenteditable' ) !== undefined ) {\n\t\t\t\tstr += ( this.getAttribute( 'value' ) || '' );\n\t\t\t}\n\t\n\t\t\tif ( this.fragment ) {\n\t\t\t\tstr += this.fragment.toString( !/^(?:script|style)$/i.test( this.template.e ) ); // escape text unless script/style\n\t\t\t}\n\t\n\t\t\tstr += \"</\" + tagName + \">\";\n\t\t\treturn str;\n\t\t};\n\t\n\t\tElement.prototype.unbind = function unbind$1 () {\n\t\t\tthis.attributes.forEach( unbind$1$1 );\n\t\n\t\t\tif ( this.binding ) this.binding.unbind();\n\t\t\tif ( this.fragment ) this.fragment.unbind();\n\t\t};\n\t\n\t\tElement.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\t\tif ( !this.rendered ) return;\n\t\t\tthis.rendered = false;\n\t\n\t\t\t// unrendering before intro completed? complete it now\n\t\t\t// TODO should be an API for aborting transitions\n\t\t\tvar transition = this._introTransition;\n\t\t\tif ( transition && transition.complete ) transition.complete();\n\t\n\t\t\t// Detach as soon as we can\n\t\t\tif ( this.name === 'option' ) {\n\t\t\t\t// <option> elements detach immediately, so that\n\t\t\t\t// their parent <select> element syncs correctly, and\n\t\t\t\t// since option elements can't have transitions anyway\n\t\t\t\tthis.detach();\n\t\t\t} else if ( shouldDestroy ) {\n\t\t\t\trunloop.detachWhenReady( this );\n\t\t\t}\n\t\n\t\t\tif ( this.fragment ) this.fragment.unrender();\n\t\n\t\t\tif ( this.binding ) this.binding.unrender();\n\t\n\t\t\t// outro transition\n\t\t\tif ( this._outroTransition && this.ractive.transitionsEnabled ) {\n\t\t\t\tthis._outroTransition.isIntro = false;\n\t\t\t\trunloop.registerTransition( this._outroTransition );\n\t\t\t}\n\t\n\t\t\tremoveFromLiveQueries( this );\n\t\t\t// TODO forms are a special case\n\t\t};\n\t\n\t\tElement.prototype.update = function update$1 () {\n\t\t\tif ( this.dirty ) {\n\t\t\t\tthis.dirty = false;\n\t\n\t\t\t\tthis.attributes.forEach( update$1$1 );\n\t\n\t\t\t\tif ( this.fragment ) this.fragment.update();\n\t\t\t}\n\t\t};\n\t\n\t\treturn Element;\n\t}(Item));\n\t\n\tfunction inputIsCheckedRadio ( element ) {\n\t\tvar attributes = element.attributeByName;\n\t\n\t\tvar typeAttribute  = attributes.type;\n\t\tvar valueAttribute = attributes.value;\n\t\tvar nameAttribute  = attributes.name;\n\t\n\t\tif ( !typeAttribute || ( typeAttribute.value !== 'radio' ) || !valueAttribute || !nameAttribute.interpolator ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( valueAttribute.getValue() === nameAttribute.interpolator.model.get() ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tfunction stringifyAttribute ( attribute ) {\n\t\tvar str = attribute.toString();\n\t\treturn str ? ' ' + str : '';\n\t}\n\t\n\tfunction removeFromLiveQueries ( element ) {\n\t\tvar i = element.liveQueries.length;\n\t\twhile ( i-- ) {\n\t\t\tvar query = element.liveQueries[i];\n\t\t\tquery.remove( element.node );\n\t\t}\n\t}\n\t\n\tfunction getNamespace ( element ) {\n\t\t// Use specified namespace...\n\t\tvar xmlns$$1 = element.getAttribute( 'xmlns' );\n\t\tif ( xmlns$$1 ) return xmlns$$1;\n\t\n\t\t// ...or SVG namespace, if this is an <svg> element\n\t\tif ( element.name === 'svg' ) return svg$1;\n\t\n\t\tvar parent = element.parent;\n\t\n\t\tif ( parent ) {\n\t\t\t// ...or HTML, if the parent is a <foreignObject>\n\t\t\tif ( parent.name === 'foreignobject' ) return html;\n\t\n\t\t\t// ...or inherit from the parent node\n\t\t\treturn parent.node.namespaceURI;\n\t\t}\n\t\n\t\treturn element.ractive.el.namespaceURI;\n\t}\n\t\n\tvar Form = (function (Element$$1) {\n\t\tfunction Form ( options ) {\n\t\t\tElement$$1.call( this, options );\n\t\t\tthis.formBindings = [];\n\t\t}\n\t\n\t\tForm.prototype = Object.create( Element$$1 && Element$$1.prototype );\n\t\tForm.prototype.constructor = Form;\n\t\n\t\tForm.prototype.render = function render ( target, occupants ) {\n\t\t\tElement$$1.prototype.render.call( this, target, occupants );\n\t\t\tthis.node.addEventListener( 'reset', handleReset, false );\n\t\t};\n\t\n\t\tForm.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\t\tthis.node.removeEventListener( 'reset', handleReset, false );\n\t\t\tElement$$1.prototype.unrender.call( this, shouldDestroy );\n\t\t};\n\t\n\t\treturn Form;\n\t}(Element));\n\t\n\tfunction handleReset () {\n\t\tvar element = this._ractive.proxy;\n\t\n\t\trunloop.start();\n\t\telement.formBindings.forEach( updateModel$2 );\n\t\trunloop.end();\n\t}\n\t\n\tfunction updateModel$2 ( binding ) {\n\t\tbinding.model.set( binding.resetValue );\n\t}\n\t\n\tvar Mustache = (function (Item$$1) {\n\t\tfunction Mustache ( options ) {\n\t\t\tItem$$1.call( this, options );\n\t\n\t\t\tthis.parentFragment = options.parentFragment;\n\t\t\tthis.template = options.template;\n\t\t\tthis.index = options.index;\n\t\t\tif ( options.owner ) this.parent = options.owner;\n\t\n\t\t\tthis.isStatic = !!options.template.s;\n\t\n\t\t\tthis.model = null;\n\t\t\tthis.dirty = false;\n\t\t}\n\t\n\t\tMustache.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\t\tMustache.prototype.constructor = Mustache;\n\t\n\t\tMustache.prototype.bind = function bind () {\n\t\t\t// try to find a model for this view\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar model = resolve$3( this.parentFragment, this.template );\n\t\t\tvar value = model ? model.get() : undefined;\n\t\n\t\t\tif ( this.isStatic ) {\n\t\t\t\tthis.model = { get: function () { return value; } };\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( model ) {\n\t\t\t\tmodel.register( this );\n\t\t\t\tthis.model = model;\n\t\t\t} else {\n\t\t\t\tthis.resolver = this.parentFragment.resolve( this.template.r, function ( model ) {\n\t\t\t\t\tthis$1.model = model;\n\t\t\t\t\tmodel.register( this$1 );\n\t\n\t\t\t\t\tthis$1.handleChange();\n\t\t\t\t\tthis$1.resolver = null;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\n\t\tMustache.prototype.handleChange = function handleChange () {\n\t\t\tthis.bubble();\n\t\t};\n\t\n\t\tMustache.prototype.rebinding = function rebinding ( next, previous, safe ) {\n\t\t\tnext = rebindMatch( this.template, next, previous );\n\t\t\tif ( this['static'] ) return false;\n\t\t\tif ( next === this.model ) return false;\n\t\n\t\t\tif ( this.model ) {\n\t\t\t\tthis.model.unregister( this );\n\t\t\t}\n\t\t\tif ( next ) next.addShuffleRegister( this, 'mark' );\n\t\t\tthis.model = next;\n\t\t\tif ( !safe ) this.handleChange();\n\t\t\treturn true;\n\t\t};\n\t\n\t\tMustache.prototype.unbind = function unbind () {\n\t\t\tif ( !this.isStatic ) {\n\t\t\t\tthis.model && this.model.unregister( this );\n\t\t\t\tthis.model = undefined;\n\t\t\t\tthis.resolver && this.resolver.unbind();\n\t\t\t}\n\t\t};\n\t\n\t\treturn Mustache;\n\t}(Item));\n\t\n\tvar Interpolator = (function (Mustache$$1) {\n\t\tfunction Interpolator () {\n\t\t\tMustache$$1.apply(this, arguments);\n\t\t}\n\t\n\t\tInterpolator.prototype = Object.create( Mustache$$1 && Mustache$$1.prototype );\n\t\tInterpolator.prototype.constructor = Interpolator;\n\t\n\t\tInterpolator.prototype.bubble = function bubble () {\n\t\t\tif ( this.owner ) this.owner.bubble();\n\t\t\tMustache$$1.prototype.bubble.call(this);\n\t\t};\n\t\n\t\tInterpolator.prototype.detach = function detach () {\n\t\t\treturn detachNode( this.node );\n\t\t};\n\t\n\t\tInterpolator.prototype.firstNode = function firstNode () {\n\t\t\treturn this.node;\n\t\t};\n\t\n\t\tInterpolator.prototype.getString = function getString () {\n\t\t\treturn this.model ? safeToStringValue( this.model.get() ) : '';\n\t\t};\n\t\n\t\tInterpolator.prototype.render = function render ( target, occupants ) {\n\t\t\tif ( inAttributes() ) return;\n\t\t\tvar value = this.getString();\n\t\n\t\t\tthis.rendered = true;\n\t\n\t\t\tif ( occupants ) {\n\t\t\t\tvar n = occupants[0];\n\t\t\t\tif ( n && n.nodeType === 3 ) {\n\t\t\t\t\toccupants.shift();\n\t\t\t\t\tif ( n.nodeValue !== value ) {\n\t\t\t\t\t\tn.nodeValue = value;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tn = this.node = doc.createTextNode( value );\n\t\t\t\t\tif ( occupants[0] ) {\n\t\t\t\t\t\ttarget.insertBefore( n, occupants[0] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.appendChild( n );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tthis.node = n;\n\t\t\t} else {\n\t\t\t\tthis.node = doc.createTextNode( value );\n\t\t\t\ttarget.appendChild( this.node );\n\t\t\t}\n\t\t};\n\t\n\t\tInterpolator.prototype.toString = function toString ( escape ) {\n\t\t\tvar string = this.getString();\n\t\t\treturn escape ? escapeHtml( string ) : string;\n\t\t};\n\t\n\t\tInterpolator.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\t\tif ( shouldDestroy ) this.detach();\n\t\t\tthis.rendered = false;\n\t\t};\n\t\n\t\tInterpolator.prototype.update = function update () {\n\t\t\tif ( this.dirty ) {\n\t\t\t\tthis.dirty = false;\n\t\t\t\tif ( this.rendered ) {\n\t\t\t\t\tthis.node.data = this.getString();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tInterpolator.prototype.valueOf = function valueOf () {\n\t\t\treturn this.model ? this.model.get() : undefined;\n\t\t};\n\t\n\t\treturn Interpolator;\n\t}(Mustache));\n\t\n\tvar Input = (function (Element$$1) {\n\t\tfunction Input () {\n\t\t\tElement$$1.apply(this, arguments);\n\t\t}\n\t\n\t\tInput.prototype = Object.create( Element$$1 && Element$$1.prototype );\n\t\tInput.prototype.constructor = Input;\n\t\n\t\tInput.prototype.render = function render ( target, occupants ) {\n\t\t\tElement$$1.prototype.render.call( this, target, occupants );\n\t\t\tthis.node.defaultValue = this.node.value;\n\t\t};\n\t\n\t\treturn Input;\n\t}(Element));\n\t\n\tvar Mapping = (function (Item$$1) {\n\t\tfunction Mapping ( options ) {\n\t\t\tItem$$1.call( this, options );\n\t\n\t\t\tthis.name = options.template.n;\n\t\n\t\t\tthis.owner = options.owner || options.parentFragment.owner || options.element || findElement( options.parentFragment );\n\t\t\tthis.element = options.element || (this.owner.attributeByName ? this.owner : findElement( options.parentFragment ) );\n\t\t\tthis.parentFragment = this.element.parentFragment; // shared\n\t\t\tthis.ractive = this.parentFragment.ractive;\n\t\n\t\t\tthis.fragment = null;\n\t\n\t\t\tthis.element.attributeByName[ this.name ] = this;\n\t\n\t\t\tthis.value = options.template.f;\n\t\t}\n\t\n\t\tMapping.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\t\tMapping.prototype.constructor = Mapping;\n\t\n\t\tMapping.prototype.bind = function bind () {\n\t\t\tif ( this.fragment ) {\n\t\t\t\tthis.fragment.bind();\n\t\t\t}\n\t\n\t\t\tvar template = this.template.f;\n\t\t\tvar viewmodel = this.element.instance.viewmodel;\n\t\n\t\t\tif ( template === 0 ) {\n\t\t\t\t// empty attributes are `true`\n\t\t\t\tviewmodel.joinKey( this.name ).set( true );\n\t\t\t}\n\t\n\t\t\telse if ( typeof template === 'string' ) {\n\t\t\t\tvar parsed = parseJSON( template );\n\t\t\t\tviewmodel.joinKey( this.name ).set( parsed ? parsed.value : template );\n\t\t\t}\n\t\n\t\t\telse if ( isArray( template ) ) {\n\t\t\t\tcreateMapping( this, true );\n\t\t\t}\n\t\t};\n\t\n\t\tMapping.prototype.render = function render () {};\n\t\n\t\tMapping.prototype.unbind = function unbind () {\n\t\t\tif ( this.fragment ) this.fragment.unbind();\n\t\t\tif ( this.boundFragment ) this.boundFragment.unbind();\n\t\n\t\t\tif ( this.element.bound ) {\n\t\t\t\tif ( this.link.target === this.model ) this.link.owner.unlink();\n\t\t\t}\n\t\t};\n\t\n\t\tMapping.prototype.unrender = function unrender () {};\n\t\n\t\tMapping.prototype.update = function update () {\n\t\t\tif ( this.dirty ) {\n\t\t\t\tthis.dirty = false;\n\t\t\t\tif ( this.fragment ) this.fragment.update();\n\t\t\t\tif ( this.boundFragment ) this.boundFragment.update();\n\t\t\t\tif ( this.rendered ) this.updateDelegate();\n\t\t\t}\n\t\t};\n\t\n\t\treturn Mapping;\n\t}(Item));\n\t\n\tfunction createMapping ( item ) {\n\t\tvar template = item.template.f;\n\t\tvar viewmodel = item.element.instance.viewmodel;\n\t\tvar childData = viewmodel.value;\n\t\n\t\tif ( template.length === 1 && template[0].t === INTERPOLATOR ) {\n\t\t\titem.model = resolve$3( item.parentFragment, template[0] );\n\t\n\t\t\tif ( !item.model ) {\n\t\t\t\twarnOnceIfDebug( (\"The \" + (item.name) + \"='{{\" + (template[0].r) + \"}}' mapping is ambiguous, and may cause unexpected results. Consider initialising your data to eliminate the ambiguity\"), { ractive: item.element.instance }); // TODO add docs page explaining item\n\t\t\t\titem.parentFragment.ractive.get( item.name ); // side-effect: create mappings as necessary\n\t\t\t\titem.model = item.parentFragment.findContext().joinKey( item.name );\n\t\t\t}\n\t\n\t\t\titem.link = viewmodel.createLink( item.name, item.model, template[0].r );\n\t\n\t\t\tif ( item.model.get() === undefined && item.name in childData ) {\n\t\t\t\titem.model.set( childData[ item.name ] );\n\t\t\t}\n\t\t}\n\t\n\t\telse {\n\t\t\titem.boundFragment = new Fragment({\n\t\t\t\towner: item,\n\t\t\t\ttemplate: template\n\t\t\t}).bind();\n\t\n\t\t\titem.model = viewmodel.joinKey( item.name );\n\t\t\titem.model.set( item.boundFragment.valueOf() );\n\t\n\t\t\t// item is a *bit* of a hack\n\t\t\titem.boundFragment.bubble = function () {\n\t\t\t\tFragment.prototype.bubble.call( item.boundFragment );\n\t\t\t\t// defer this to avoid mucking around model deps if there happens to be an expression involved\n\t\t\t\trunloop.scheduleTask(function () {\n\t\t\t\t\titem.boundFragment.update();\n\t\t\t\t\titem.model.set( item.boundFragment.valueOf() );\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t}\n\t\n\tfunction findParentSelect ( element ) {\n\t\twhile ( element ) {\n\t\t\tif ( element.name === 'select' ) return element;\n\t\t\telement = element.parent;\n\t\t}\n\t}\n\t\n\tvar Option = (function (Element$$1) {\n\t\tfunction Option ( options ) {\n\t\t\tvar template = options.template;\n\t\t\tif ( !template.a ) template.a = {};\n\t\n\t\t\t// If the value attribute is missing, use the element's content,\n\t\t\t// as long as it isn't disabled\n\t\t\tif ( template.a.value === undefined && !( 'disabled' in template.a ) ) {\n\t\t\t\ttemplate.a.value = template.f || '';\n\t\t\t}\n\t\n\t\t\tElement$$1.call( this, options );\n\t\n\t\t\tthis.select = findParentSelect( this.parent );\n\t\t}\n\t\n\t\tOption.prototype = Object.create( Element$$1 && Element$$1.prototype );\n\t\tOption.prototype.constructor = Option;\n\t\n\t\tOption.prototype.bind = function bind () {\n\t\t\tif ( !this.select ) {\n\t\t\t\tElement$$1.prototype.bind.call(this);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If the select has a value, it overrides the `selected` attribute on\n\t\t\t// this option - so we delete the attribute\n\t\t\tvar selectedAttribute = this.attributeByName.selected;\n\t\t\tif ( selectedAttribute && this.select.getAttribute( 'value' ) !== undefined ) {\n\t\t\t\tvar index = this.attributes.indexOf( selectedAttribute );\n\t\t\t\tthis.attributes.splice( index, 1 );\n\t\t\t\tdelete this.attributeByName.selected;\n\t\t\t}\n\t\n\t\t\tElement$$1.prototype.bind.call(this);\n\t\t\tthis.select.options.push( this );\n\t\t};\n\t\n\t\tOption.prototype.bubble = function bubble () {\n\t\t\t// if we're using content as value, may need to update here\n\t\t\tvar value = this.getAttribute( 'value' );\n\t\t\tif ( this.node.value !== value ) {\n\t\t\t\tthis.node._ractive.value = value;\n\t\t\t}\n\t\t\tElement$$1.prototype.bubble.call(this);\n\t\t};\n\t\n\t\tOption.prototype.getAttribute = function getAttribute ( name ) {\n\t\t\tvar attribute = this.attributeByName[ name ];\n\t\t\treturn attribute ? attribute.getValue() : name === 'value' && this.fragment ? this.fragment.valueOf() : undefined;\n\t\t};\n\t\n\t\tOption.prototype.isSelected = function isSelected () {\n\t\t\tvar optionValue = this.getAttribute( 'value' );\n\t\n\t\t\tif ( optionValue === undefined || !this.select ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tvar selectValue = this.select.getAttribute( 'value' );\n\t\n\t\t\tif ( selectValue == optionValue ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\tif ( this.select.getAttribute( 'multiple' ) && isArray( selectValue ) ) {\n\t\t\t\tvar i = selectValue.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( selectValue[i] == optionValue ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tOption.prototype.render = function render ( target, occupants ) {\n\t\t\tElement$$1.prototype.render.call( this, target, occupants );\n\t\n\t\t\tif ( !this.attributeByName.value ) {\n\t\t\t\tthis.node._ractive.value = this.getAttribute( 'value' );\n\t\t\t}\n\t\t};\n\t\n\t\tOption.prototype.unbind = function unbind () {\n\t\t\tElement$$1.prototype.unbind.call(this);\n\t\n\t\t\tif ( this.select ) {\n\t\t\t\tremoveFromArray( this.select.options, this );\n\t\t\t}\n\t\t};\n\t\n\t\treturn Option;\n\t}(Element));\n\t\n\tfunction getPartialTemplate ( ractive, name, parentFragment ) {\n\t\t// If the partial in instance or view heirarchy instances, great\n\t\tvar partial = getPartialFromRegistry( ractive, name, parentFragment || {} );\n\t\tif ( partial ) return partial;\n\t\n\t\t// Does it exist on the page as a script tag?\n\t\tpartial = parser.fromId( name, { noThrow: true } );\n\t\tif ( partial ) {\n\t\t\t// parse and register to this ractive instance\n\t\t\tvar parsed = parser.parseFor( partial, ractive );\n\t\n\t\t\t// register extra partials on the ractive instance if they don't already exist\n\t\t\tif ( parsed.p ) fillGaps( ractive.partials, parsed.p );\n\t\n\t\t\t// register (and return main partial if there are others in the template)\n\t\t\treturn ractive.partials[ name ] = parsed.t;\n\t\t}\n\t}\n\t\n\tfunction getPartialFromRegistry ( ractive, name, parentFragment ) {\n\t\t// if there was an instance up-hierarchy, cool\n\t\tvar partial = findParentPartial( name, parentFragment.owner );\n\t\tif ( partial ) return partial;\n\t\n\t\t// find first instance in the ractive or view hierarchy that has this partial\n\t\tvar instance = findInstance( 'partials', ractive, name );\n\t\n\t\tif ( !instance ) { return; }\n\t\n\t\tpartial = instance.partials[ name ];\n\t\n\t\t// partial is a function?\n\t\tvar fn;\n\t\tif ( typeof partial === 'function' ) {\n\t\t\tfn = partial.bind( instance );\n\t\t\tfn.isOwner = instance.partials.hasOwnProperty(name);\n\t\t\tpartial = fn.call( ractive, parser );\n\t\t}\n\t\n\t\tif ( !partial && partial !== '' ) {\n\t\t\twarnIfDebug( noRegistryFunctionReturn, name, 'partial', 'partial', { ractive: ractive });\n\t\t\treturn;\n\t\t}\n\t\n\t\t// If this was added manually to the registry,\n\t\t// but hasn't been parsed, parse it now\n\t\tif ( !parser.isParsed( partial ) ) {\n\t\t\t// use the parseOptions of the ractive instance on which it was found\n\t\t\tvar parsed = parser.parseFor( partial, instance );\n\t\n\t\t\t// Partials cannot contain nested partials!\n\t\t\t// TODO add a test for this\n\t\t\tif ( parsed.p ) {\n\t\t\t\twarnIfDebug( 'Partials ({{>%s}}) cannot contain nested inline partials', name, { ractive: ractive });\n\t\t\t}\n\t\n\t\t\t// if fn, use instance to store result, otherwise needs to go\n\t\t\t// in the correct point in prototype chain on instance or constructor\n\t\t\tvar target = fn ? instance : findOwner( instance, name );\n\t\n\t\t\t// may be a template with partials, which need to be registered and main template extracted\n\t\t\ttarget.partials[ name ] = partial = parsed.t;\n\t\t}\n\t\n\t\t// store for reset\n\t\tif ( fn ) partial._fn = fn;\n\t\n\t\treturn partial.v ? partial.t : partial;\n\t}\n\t\n\tfunction findOwner ( ractive, key ) {\n\t\treturn ractive.partials.hasOwnProperty( key )\n\t\t\t? ractive\n\t\t\t: findConstructor( ractive.constructor, key);\n\t}\n\t\n\tfunction findConstructor ( constructor, key ) {\n\t\tif ( !constructor ) { return; }\n\t\treturn constructor.partials.hasOwnProperty( key )\n\t\t\t? constructor\n\t\t\t: findConstructor( constructor._Parent, key );\n\t}\n\t\n\tfunction findParentPartial( name, parent ) {\n\t\tif ( parent ) {\n\t\t\tif ( parent.template && parent.template.p && parent.template.p[name] ) {\n\t\t\t\treturn parent.template.p[name];\n\t\t\t} else if ( parent.parentFragment && parent.parentFragment.owner ) {\n\t\t\t\treturn findParentPartial( name, parent.parentFragment.owner );\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar Partial = (function (Mustache$$1) {\n\t\tfunction Partial () {\n\t\t\tMustache$$1.apply(this, arguments);\n\t\t}\n\t\n\t\tPartial.prototype = Object.create( Mustache$$1 && Mustache$$1.prototype );\n\t\tPartial.prototype.constructor = Partial;\n\t\n\t\tPartial.prototype.bind = function bind () {\n\t\t\t// keep track of the reference name for future resets\n\t\t\tthis.refName = this.template.r;\n\t\n\t\t\t// name matches take priority over expressions\n\t\t\tvar template = this.refName ? getPartialTemplate( this.ractive, this.refName, this.parentFragment ) || null : null;\n\t\t\tvar templateObj;\n\t\n\t\t\tif ( template ) {\n\t\t\t\tthis.named = true;\n\t\t\t\tthis.setTemplate( this.template.r, template );\n\t\t\t}\n\t\n\t\t\tif ( !template ) {\n\t\t\t\tMustache$$1.prototype.bind.call(this);\n\t\t\t\tif ( this.model && ( templateObj = this.model.get() ) && typeof templateObj === 'object' && ( typeof templateObj.template === 'string' || isArray( templateObj.t ) ) ) {\n\t\t\t\t\tif ( templateObj.template ) {\n\t\t\t\t\t\tthis.source = templateObj.template;\n\t\t\t\t\t\ttemplateObj = parsePartial( this.template.r, templateObj.template, this.ractive );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.source = templateObj.t;\n\t\t\t\t\t}\n\t\t\t\t\tthis.setTemplate( this.template.r, templateObj.t );\n\t\t\t\t} else if ( ( !this.model || typeof this.model.get() !== 'string' ) && this.refName ) {\n\t\t\t\t\tthis.setTemplate( this.refName, template );\n\t\t\t\t} else {\n\t\t\t\t\tthis.setTemplate( this.model.get() );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthis.fragment = new Fragment({\n\t\t\t\towner: this,\n\t\t\t\ttemplate: this.partialTemplate\n\t\t\t}).bind();\n\t\t};\n\t\n\t\tPartial.prototype.destroyed = function destroyed () {\n\t\t\tthis.fragment.destroyed();\n\t\t};\n\t\n\t\tPartial.prototype.detach = function detach () {\n\t\t\treturn this.fragment.detach();\n\t\t};\n\t\n\t\tPartial.prototype.find = function find ( selector ) {\n\t\t\treturn this.fragment.find( selector );\n\t\t};\n\t\n\t\tPartial.prototype.findAll = function findAll ( selector, query ) {\n\t\t\tthis.fragment.findAll( selector, query );\n\t\t};\n\t\n\t\tPartial.prototype.findComponent = function findComponent ( name ) {\n\t\t\treturn this.fragment.findComponent( name );\n\t\t};\n\t\n\t\tPartial.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\t\tthis.fragment.findAllComponents( name, query );\n\t\t};\n\t\n\t\tPartial.prototype.firstNode = function firstNode ( skipParent ) {\n\t\t\treturn this.fragment.firstNode( skipParent );\n\t\t};\n\t\n\t\tPartial.prototype.forceResetTemplate = function forceResetTemplate () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tthis.partialTemplate = undefined;\n\t\n\t\t\t// on reset, check for the reference name first\n\t\t\tif ( this.refName ) {\n\t\t\t\tthis.partialTemplate = getPartialTemplate( this.ractive, this.refName, this.parentFragment );\n\t\t\t}\n\t\n\t\t\t// then look for the resolved name\n\t\t\tif ( !this.partialTemplate ) {\n\t\t\t\tthis.partialTemplate = getPartialTemplate( this.ractive, this.name, this.parentFragment );\n\t\t\t}\n\t\n\t\t\tif ( !this.partialTemplate ) {\n\t\t\t\twarnOnceIfDebug( (\"Could not find template for partial '\" + (this.name) + \"'\") );\n\t\t\t\tthis.partialTemplate = [];\n\t\t\t}\n\t\n\t\t\tif ( this.inAttribute ) {\n\t\t\t\tdoInAttributes( function () { return this$1.fragment.resetTemplate( this$1.partialTemplate ); } );\n\t\t\t} else {\n\t\t\t\tthis.fragment.resetTemplate( this.partialTemplate );\n\t\t\t}\n\t\n\t\t\tthis.bubble();\n\t\t};\n\t\n\t\tPartial.prototype.render = function render ( target, occupants ) {\n\t\t\tthis.fragment.render( target, occupants );\n\t\t};\n\t\n\t\tPartial.prototype.setTemplate = function setTemplate ( name, template ) {\n\t\t\tthis.name = name;\n\t\n\t\t\tif ( !template && template !== null ) template = getPartialTemplate( this.ractive, name, this.parentFragment );\n\t\n\t\t\tif ( !template ) {\n\t\t\t\twarnOnceIfDebug( (\"Could not find template for partial '\" + name + \"'\") );\n\t\t\t}\n\t\n\t\t\tthis.partialTemplate = template || [];\n\t\t};\n\t\n\t\tPartial.prototype.toString = function toString ( escape ) {\n\t\t\treturn this.fragment.toString( escape );\n\t\t};\n\t\n\t\tPartial.prototype.unbind = function unbind () {\n\t\t\tMustache$$1.prototype.unbind.call(this);\n\t\t\tthis.fragment.unbind();\n\t\t};\n\t\n\t\tPartial.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\t\tthis.fragment.unrender( shouldDestroy );\n\t\t};\n\t\n\t\tPartial.prototype.update = function update () {\n\t\t\tvar template;\n\t\n\t\t\tif ( this.dirty ) {\n\t\t\t\tthis.dirty = false;\n\t\n\t\t\t\tif ( !this.named ) {\n\t\t\t\t\tif ( this.model ) {\n\t\t\t\t\t\ttemplate = this.model.get();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( template && typeof template === 'string' && template !== this.name ) {\n\t\t\t\t\t\tthis.setTemplate( template );\n\t\t\t\t\t\tthis.fragment.resetTemplate( this.partialTemplate );\n\t\t\t\t\t} else if ( template && typeof template === 'object' && ( typeof template.template === 'string' || isArray( template.t ) ) ) {\n\t\t\t\t\t\tif ( template.t !== this.source && template.template !== this.source ) {\n\t\t\t\t\t\t\tif ( template.template ) {\n\t\t\t\t\t\t\t\tthis.source = template.template;\n\t\t\t\t\t\t\t\ttemplate = parsePartial( this.name, template.template, this.ractive );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.source = template.t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setTemplate( this.name, template.t );\n\t\t\t\t\t\t\tthis.fragment.resetTemplate( this.partialTemplate );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tthis.fragment.update();\n\t\t\t}\n\t\t};\n\t\n\t\treturn Partial;\n\t}(Mustache));\n\t\n\tfunction parsePartial( name, partial, ractive ) {\n\t\tvar parsed;\n\t\n\t\ttry {\n\t\t\tparsed = parser.parse( partial, parser.getParseOptions( ractive ) );\n\t\t} catch (e) {\n\t\t\twarnIfDebug( (\"Could not parse partial from expression '\" + name + \"'\\n\" + (e.message)) );\n\t\t}\n\t\n\t\treturn parsed || { t: [] };\n\t}\n\t\n\tvar RepeatedFragment = function RepeatedFragment ( options ) {\n\t\tthis.parent = options.owner.parentFragment;\n\t\n\t\t// bit of a hack, so reference resolution works without another\n\t\t// layer of indirection\n\t\tthis.parentFragment = this;\n\t\tthis.owner = options.owner;\n\t\tthis.ractive = this.parent.ractive;\n\t\n\t\t// encapsulated styles should be inherited until they get applied by an element\n\t\tthis.cssIds = 'cssIds' in options ? options.cssIds : ( this.parent ? this.parent.cssIds : null );\n\t\n\t\tthis.context = null;\n\t\tthis.rendered = false;\n\t\tthis.iterations = [];\n\t\n\t\tthis.template = options.template;\n\t\n\t\tthis.indexRef = options.indexRef;\n\t\tthis.keyRef = options.keyRef;\n\t\n\t\tthis.pendingNewIndices = null;\n\t\tthis.previousIterations = null;\n\t\n\t\t// track array versus object so updates of type rest\n\t\tthis.isArray = false;\n\t};\n\t\n\tRepeatedFragment.prototype.bind = function bind ( context ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tthis.context = context;\n\t\tvar value = context.get();\n\t\n\t\t// {{#each array}}...\n\t\tif ( this.isArray = isArray( value ) ) {\n\t\t\t// we can't use map, because of sparse arrays\n\t\t\tthis.iterations = [];\n\t\t\tvar max = value.length;\n\t\t\tfor ( var i = 0; i < max; i += 1 ) {\n\t\t\t\tthis$1.iterations[i] = this$1.createIteration( i, i );\n\t\t\t}\n\t\t}\n\t\n\t\t// {{#each object}}...\n\t\telse if ( isObject( value ) ) {\n\t\t\tthis.isArray = false;\n\t\n\t\t\t// TODO this is a dreadful hack. There must be a neater way\n\t\t\tif ( this.indexRef ) {\n\t\t\t\tvar refs = this.indexRef.split( ',' );\n\t\t\t\tthis.keyRef = refs[0];\n\t\t\t\tthis.indexRef = refs[1];\n\t\t\t}\n\t\n\t\t\tthis.iterations = Object.keys( value ).map( function ( key, index ) {\n\t\t\t\treturn this$1.createIteration( key, index );\n\t\t\t});\n\t\t}\n\t\n\t\treturn this;\n\t};\n\t\n\tRepeatedFragment.prototype.bubble = function bubble () {\n\t\tthis.owner.bubble();\n\t};\n\t\n\tRepeatedFragment.prototype.createIteration = function createIteration ( key, index ) {\n\t\tvar fragment = new Fragment({\n\t\t\towner: this,\n\t\t\ttemplate: this.template\n\t\t});\n\t\n\t\t// TODO this is a bit hacky\n\t\tfragment.key = key;\n\t\tfragment.index = index;\n\t\tfragment.isIteration = true;\n\t\n\t\tvar model = this.context.joinKey( key );\n\t\n\t\t// set up an iteration alias if there is one\n\t\tif ( this.owner.template.z ) {\n\t\t\tfragment.aliases = {};\n\t\t\tfragment.aliases[ this.owner.template.z[0].n ] = model;\n\t\t}\n\t\n\t\treturn fragment.bind( model );\n\t};\n\t\n\tRepeatedFragment.prototype.destroyed = function destroyed () {\n\t\tthis.iterations.forEach( function ( i ) { return i.destroyed(); } );\n\t};\n\t\n\tRepeatedFragment.prototype.detach = function detach () {\n\t\tvar docFrag = createDocumentFragment();\n\t\tthis.iterations.forEach( function ( fragment ) { return docFrag.appendChild( fragment.detach() ); } );\n\t\treturn docFrag;\n\t};\n\t\n\tRepeatedFragment.prototype.find = function find ( selector ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar len = this.iterations.length;\n\t\tvar i;\n\t\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tvar found = this$1.iterations[i].find( selector );\n\t\t\tif ( found ) return found;\n\t\t}\n\t};\n\t\n\tRepeatedFragment.prototype.findAll = function findAll ( selector, query ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar len = this.iterations.length;\n\t\tvar i;\n\t\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tthis$1.iterations[i].findAll( selector, query );\n\t\t}\n\t};\n\t\n\tRepeatedFragment.prototype.findComponent = function findComponent ( name ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar len = this.iterations.length;\n\t\tvar i;\n\t\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tvar found = this$1.iterations[i].findComponent( name );\n\t\t\tif ( found ) return found;\n\t\t}\n\t};\n\t\n\tRepeatedFragment.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar len = this.iterations.length;\n\t\tvar i;\n\t\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tthis$1.iterations[i].findAllComponents( name, query );\n\t\t}\n\t};\n\t\n\tRepeatedFragment.prototype.findNextNode = function findNextNode ( iteration ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( iteration.index < this.iterations.length - 1 ) {\n\t\t\tfor ( var i = iteration.index + 1; i < this$1.iterations.length; i++ ) {\n\t\t\t\tvar node = this$1.iterations[ i ].firstNode( true );\n\t\t\t\tif ( node ) return node;\n\t\t\t}\n\t\t}\n\t\n\t\treturn this.owner.findNextNode();\n\t};\n\t\n\tRepeatedFragment.prototype.firstNode = function firstNode ( skipParent ) {\n\t\treturn this.iterations[0] ? this.iterations[0].firstNode( skipParent ) : null;\n\t};\n\t\n\tRepeatedFragment.prototype.rebinding = function rebinding ( next ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tthis.context = next;\n\t\tthis.iterations.forEach( function ( fragment ) {\n\t\t\tvar model = next ? next.joinKey( fragment.key || fragment.index ) : undefined;\n\t\t\tfragment.context = model;\n\t\t\tif ( this$1.owner.template.z ) {\n\t\t\t\tfragment.aliases = {};\n\t\t\t\tfragment.aliases[ this$1.owner.template.z[0].n ] = model;\n\t\t\t}\n\t\t});\n\t};\n\t\n\tRepeatedFragment.prototype.render = function render ( target, occupants ) {\n\t\t// TODO use docFrag.cloneNode...\n\t\n\t\tif ( this.iterations ) {\n\t\t\tthis.iterations.forEach( function ( fragment ) { return fragment.render( target, occupants ); } );\n\t\t}\n\t\n\t\tthis.rendered = true;\n\t};\n\t\n\tRepeatedFragment.prototype.shuffle = function shuffle ( newIndices ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( !this.pendingNewIndices ) this.previousIterations = this.iterations.slice();\n\t\n\t\tif ( !this.pendingNewIndices ) this.pendingNewIndices = [];\n\t\n\t\tthis.pendingNewIndices.push( newIndices );\n\t\n\t\tvar iterations = [];\n\t\n\t\tnewIndices.forEach( function ( newIndex, oldIndex ) {\n\t\t\tif ( newIndex === -1 ) return;\n\t\n\t\t\tvar fragment = this$1.iterations[ oldIndex ];\n\t\t\titerations[ newIndex ] = fragment;\n\t\n\t\t\tif ( newIndex !== oldIndex && fragment ) fragment.dirty = true;\n\t\t});\n\t\n\t\tthis.iterations = iterations;\n\t\n\t\tthis.bubble();\n\t};\n\t\n\tRepeatedFragment.prototype.shuffled = function shuffled () {\n\t\tthis.iterations.forEach( function ( i ) { return i.shuffled(); } );\n\t};\n\t\n\tRepeatedFragment.prototype.toString = function toString$1 ( escape ) {\n\t\treturn this.iterations ?\n\t\t\tthis.iterations.map( escape ? toEscapedString : toString$2 ).join( '' ) :\n\t\t\t'';\n\t};\n\t\n\tRepeatedFragment.prototype.unbind = function unbind$1 () {\n\t\tthis.iterations.forEach( unbind$1$1 );\n\t\treturn this;\n\t};\n\t\n\tRepeatedFragment.prototype.unrender = function unrender$1 ( shouldDestroy ) {\n\t\tthis.iterations.forEach( shouldDestroy ? unrenderAndDestroy : unrender$1$1 );\n\t\tif ( this.pendingNewIndices && this.previousIterations ) {\n\t\t\tthis.previousIterations.forEach( function ( fragment ) {\n\t\t\t\tif ( fragment.rendered ) shouldDestroy ? unrenderAndDestroy( fragment ) : unrender$1$1( fragment );\n\t\t\t});\n\t\t}\n\t\tthis.rendered = false;\n\t};\n\t\n\t// TODO smart update\n\tRepeatedFragment.prototype.update = function update$1 () {\n\t\t// skip dirty check, since this is basically just a facade\n\t\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( this.pendingNewIndices ) {\n\t\t\tthis.updatePostShuffle();\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( this.updating ) return;\n\t\tthis.updating = true;\n\t\n\t\tvar value = this.context.get(),\n\t\t\t\t  wasArray = this.isArray;\n\t\n\t\tvar toRemove;\n\t\tvar oldKeys;\n\t\tvar reset = true;\n\t\tvar i;\n\t\n\t\tif ( this.isArray = isArray( value ) ) {\n\t\t\tif ( wasArray ) {\n\t\t\t\treset = false;\n\t\t\t\tif ( this.iterations.length > value.length ) {\n\t\t\t\t\ttoRemove = this.iterations.splice( value.length );\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( isObject( value ) && !wasArray ) {\n\t\t\treset = false;\n\t\t\ttoRemove = [];\n\t\t\toldKeys = {};\n\t\t\ti = this.iterations.length;\n\t\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar fragment$1 = this$1.iterations[i];\n\t\t\t\tif ( fragment$1.key in value ) {\n\t\t\t\t\toldKeys[ fragment$1.key ] = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis$1.iterations.splice( i, 1 );\n\t\t\t\t\ttoRemove.push( fragment$1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif ( reset ) {\n\t\t\ttoRemove = this.iterations;\n\t\t\tthis.iterations = [];\n\t\t}\n\t\n\t\tif ( toRemove ) {\n\t\t\ttoRemove.forEach( function ( fragment ) {\n\t\t\t\tfragment.unbind();\n\t\t\t\tfragment.unrender( true );\n\t\t\t});\n\t\t}\n\t\n\t\t// update the remaining ones\n\t\tthis.iterations.forEach( update$1$1 );\n\t\n\t\t// add new iterations\n\t\tvar newLength = isArray( value ) ?\n\t\t\tvalue.length :\n\t\t\tisObject( value ) ?\n\t\t\t\tObject.keys( value ).length :\n\t\t\t\t0;\n\t\n\t\tvar docFrag;\n\t\tvar fragment;\n\t\n\t\tif ( newLength > this.iterations.length ) {\n\t\t\tdocFrag = this.rendered ? createDocumentFragment() : null;\n\t\t\ti = this.iterations.length;\n\t\n\t\t\tif ( isArray( value ) ) {\n\t\t\t\twhile ( i < value.length ) {\n\t\t\t\t\tfragment = this$1.createIteration( i, i );\n\t\n\t\t\t\t\tthis$1.iterations.push( fragment );\n\t\t\t\t\tif ( this$1.rendered ) fragment.render( docFrag );\n\t\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\telse if ( isObject( value ) ) {\n\t\t\t\t// TODO this is a dreadful hack. There must be a neater way\n\t\t\t\tif ( this.indexRef && !this.keyRef ) {\n\t\t\t\t\tvar refs = this.indexRef.split( ',' );\n\t\t\t\t\tthis.keyRef = refs[0];\n\t\t\t\t\tthis.indexRef = refs[1];\n\t\t\t\t}\n\t\n\t\t\t\tObject.keys( value ).forEach( function ( key ) {\n\t\t\t\t\tif ( !oldKeys || !( key in oldKeys ) ) {\n\t\t\t\t\t\tfragment = this$1.createIteration( key, i );\n\t\n\t\t\t\t\t\tthis$1.iterations.push( fragment );\n\t\t\t\t\t\tif ( this$1.rendered ) fragment.render( docFrag );\n\t\n\t\t\t\t\t\ti += 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tif ( this.rendered ) {\n\t\t\t\tvar parentNode = this.parent.findParentNode();\n\t\t\t\tvar anchor = this.parent.findNextNode( this.owner );\n\t\n\t\t\t\tparentNode.insertBefore( docFrag, anchor );\n\t\t\t}\n\t\t}\n\t\n\t\tthis.updating = false;\n\t};\n\t\n\tRepeatedFragment.prototype.updatePostShuffle = function updatePostShuffle () {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar newIndices = this.pendingNewIndices[ 0 ];\n\t\n\t\t// map first shuffle through\n\t\tthis.pendingNewIndices.slice( 1 ).forEach( function ( indices ) {\n\t\t\tnewIndices.forEach( function ( newIndex, oldIndex ) {\n\t\t\t\tnewIndices[ oldIndex ] = indices[ newIndex ];\n\t\t\t});\n\t\t});\n\t\n\t\t// This algorithm (for detaching incorrectly-ordered fragments from the DOM and\n\t\t// storing them in a document fragment for later reinsertion) seems a bit hokey,\n\t\t// but it seems to work for now\n\t\tvar len = this.context.get().length, oldLen = this.previousIterations.length;\n\t\tvar i;\n\t\tvar removed = {};\n\t\n\t\tnewIndices.forEach( function ( newIndex, oldIndex ) {\n\t\t\tvar fragment = this$1.previousIterations[ oldIndex ];\n\t\t\tthis$1.previousIterations[ oldIndex ] = null;\n\t\n\t\t\tif ( newIndex === -1 ) {\n\t\t\t\tremoved[ oldIndex ] = fragment;\n\t\t\t} else if ( fragment.index !== newIndex ) {\n\t\t\t\tvar model = this$1.context.joinKey( newIndex );\n\t\t\t\tfragment.index = newIndex;\n\t\t\t\tfragment.context = model;\n\t\t\t\tif ( this$1.owner.template.z ) {\n\t\t\t\t\tfragment.aliases = {};\n\t\t\t\t\tfragment.aliases[ this$1.owner.template.z[0].n ] = model;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\t// if the array was spliced outside of ractive, sometimes there are leftover fragments not in the newIndices\n\t\tthis.previousIterations.forEach( function ( frag, i ) {\n\t\t\tif ( frag ) removed[ i ] = frag;\n\t\t});\n\t\n\t\t// create new/move existing iterations\n\t\tvar docFrag = this.rendered ? createDocumentFragment() : null;\n\t\tvar parentNode = this.rendered ? this.parent.findParentNode() : null;\n\t\n\t\tvar contiguous = 'startIndex' in newIndices;\n\t\ti = contiguous ? newIndices.startIndex : 0;\n\t\n\t\tfor ( i; i < len; i++ ) {\n\t\t\tvar frag = this$1.iterations[i];\n\t\n\t\t\tif ( frag && contiguous ) {\n\t\t\t\t// attach any built-up iterations\n\t\t\t\tif ( this$1.rendered ) {\n\t\t\t\t\tif ( removed[i] ) docFrag.appendChild( removed[i].detach() );\n\t\t\t\t\tif ( docFrag.childNodes.length  ) parentNode.insertBefore( docFrag, frag.firstNode() );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tif ( !frag ) this$1.iterations[i] = this$1.createIteration( i, i );\n\t\n\t\t\tif ( this$1.rendered ) {\n\t\t\t\tif ( removed[i] ) docFrag.appendChild( removed[i].detach() );\n\t\n\t\t\t\tif ( frag ) docFrag.appendChild( frag.detach() );\n\t\t\t\telse {\n\t\t\t\t\tthis$1.iterations[i].render( docFrag );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// append any leftovers\n\t\tif ( this.rendered ) {\n\t\t\tfor ( i = len; i < oldLen; i++ ) {\n\t\t\t\tif ( removed[i] ) docFrag.appendChild( removed[i].detach() );\n\t\t\t}\n\t\n\t\t\tif ( docFrag.childNodes.length ) {\n\t\t\t\tparentNode.insertBefore( docFrag, this.owner.findNextNode() );\n\t\t\t}\n\t\t}\n\t\n\t\t// trigger removal on old nodes\n\t\tObject.keys( removed ).forEach( function ( k ) { return removed[k].unbind().unrender( true ); } );\n\t\n\t\tthis.iterations.forEach( update$1$1 );\n\t\n\t\tthis.pendingNewIndices = null;\n\t\n\t\tthis.shuffled();\n\t};\n\t\n\tfunction isEmpty ( value ) {\n\t\treturn !value ||\n\t\t       ( isArray( value ) && value.length === 0 ) ||\n\t\t\t   ( isObject( value ) && Object.keys( value ).length === 0 );\n\t}\n\t\n\tfunction getType ( value, hasIndexRef ) {\n\t\tif ( hasIndexRef || isArray( value ) ) return SECTION_EACH;\n\t\tif ( isObject( value ) || typeof value === 'function' ) return SECTION_IF_WITH;\n\t\tif ( value === undefined ) return null;\n\t\treturn SECTION_IF;\n\t}\n\t\n\tvar Section = (function (Mustache$$1) {\n\t\tfunction Section ( options ) {\n\t\t\tMustache$$1.call( this, options );\n\t\n\t\t\tthis.sectionType = options.template.n || null;\n\t\t\tthis.templateSectionType = this.sectionType;\n\t\t\tthis.subordinate = options.template.l === 1;\n\t\t\tthis.fragment = null;\n\t\t}\n\t\n\t\tSection.prototype = Object.create( Mustache$$1 && Mustache$$1.prototype );\n\t\tSection.prototype.constructor = Section;\n\t\n\t\tSection.prototype.bind = function bind () {\n\t\t\tMustache$$1.prototype.bind.call(this);\n\t\n\t\t\tif ( this.subordinate ) {\n\t\t\t\tthis.sibling = this.parentFragment.items[ this.parentFragment.items.indexOf( this ) - 1 ];\n\t\t\t\tthis.sibling.nextSibling = this;\n\t\t\t}\n\t\n\t\t\t// if we managed to bind, we need to create children\n\t\t\tif ( this.model ) {\n\t\t\t\tthis.dirty = true;\n\t\t\t\tthis.update();\n\t\t\t} else if ( this.sectionType && this.sectionType === SECTION_UNLESS && ( !this.sibling || !this.sibling.isTruthy() ) ) {\n\t\t\t\tthis.fragment = new Fragment({\n\t\t\t\t\towner: this,\n\t\t\t\t\ttemplate: this.template.f\n\t\t\t\t}).bind();\n\t\t\t}\n\t\t};\n\t\n\t\tSection.prototype.destroyed = function destroyed () {\n\t\t\tif ( this.fragment ) this.fragment.destroyed();\n\t\t};\n\t\n\t\tSection.prototype.detach = function detach () {\n\t\t\treturn this.fragment ? this.fragment.detach() : createDocumentFragment();\n\t\t};\n\t\n\t\tSection.prototype.find = function find ( selector ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\treturn this.fragment.find( selector );\n\t\t\t}\n\t\t};\n\t\n\t\tSection.prototype.findAll = function findAll ( selector, query ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\tthis.fragment.findAll( selector, query );\n\t\t\t}\n\t\t};\n\t\n\t\tSection.prototype.findComponent = function findComponent ( name ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\treturn this.fragment.findComponent( name );\n\t\t\t}\n\t\t};\n\t\n\t\tSection.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\tthis.fragment.findAllComponents( name, query );\n\t\t\t}\n\t\t};\n\t\n\t\tSection.prototype.firstNode = function firstNode ( skipParent ) {\n\t\t\treturn this.fragment && this.fragment.firstNode( skipParent );\n\t\t};\n\t\n\t\tSection.prototype.isTruthy = function isTruthy () {\n\t\t\tif ( this.subordinate && this.sibling.isTruthy() ) return true;\n\t\t\tvar value = !this.model ? undefined : this.model.isRoot ? this.model.value : this.model.get();\n\t\t\treturn !!value && !isEmpty( value );\n\t\t};\n\t\n\t\tSection.prototype.rebinding = function rebinding ( next, previous, safe ) {\n\t\t\tif ( Mustache$$1.prototype.rebinding.call( this, next, previous, safe ) ) {\n\t\t\t\tif ( this.fragment && this.sectionType !== SECTION_IF && this.sectionType !== SECTION_UNLESS ) {\n\t\t\t\t\tthis.fragment.rebinding( next, previous );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tSection.prototype.render = function render ( target, occupants ) {\n\t\t\tthis.rendered = true;\n\t\t\tif ( this.fragment ) this.fragment.render( target, occupants );\n\t\t};\n\t\n\t\tSection.prototype.shuffle = function shuffle ( newIndices ) {\n\t\t\tif ( this.fragment && this.sectionType === SECTION_EACH ) {\n\t\t\t\tthis.fragment.shuffle( newIndices );\n\t\t\t}\n\t\t};\n\t\n\t\tSection.prototype.toString = function toString ( escape ) {\n\t\t\treturn this.fragment ? this.fragment.toString( escape ) : '';\n\t\t};\n\t\n\t\tSection.prototype.unbind = function unbind () {\n\t\t\tMustache$$1.prototype.unbind.call(this);\n\t\t\tif ( this.fragment ) this.fragment.unbind();\n\t\t};\n\t\n\t\tSection.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\t\tif ( this.rendered && this.fragment ) this.fragment.unrender( shouldDestroy );\n\t\t\tthis.rendered = false;\n\t\t};\n\t\n\t\tSection.prototype.update = function update () {\n\t\t\tif ( !this.dirty ) return;\n\t\n\t\t\tif ( this.fragment && this.sectionType !== SECTION_IF && this.sectionType !== SECTION_UNLESS ) {\n\t\t\t\tthis.fragment.context = this.model;\n\t\t\t}\n\t\n\t\t\tif ( !this.model && this.sectionType !== SECTION_UNLESS ) return;\n\t\n\t\t\tthis.dirty = false;\n\t\n\t\t\tvar value = !this.model ? undefined : this.model.isRoot ? this.model.value : this.model.get();\n\t\t\tvar siblingFalsey = !this.subordinate || !this.sibling.isTruthy();\n\t\t\tvar lastType = this.sectionType;\n\t\n\t\t\t// watch for switching section types\n\t\t\tif ( this.sectionType === null || this.templateSectionType === null ) this.sectionType = getType( value, this.template.i );\n\t\t\tif ( lastType && lastType !== this.sectionType && this.fragment ) {\n\t\t\t\tif ( this.rendered ) {\n\t\t\t\t\tthis.fragment.unbind().unrender( true );\n\t\t\t\t}\n\t\n\t\t\t\tthis.fragment = null;\n\t\t\t}\n\t\n\t\t\tvar newFragment;\n\t\n\t\t\tif ( this.sectionType === SECTION_EACH ) {\n\t\t\t\tif ( this.fragment ) {\n\t\t\t\t\tthis.fragment.update();\n\t\t\t\t} else {\n\t\t\t\t\t// TODO can this happen?\n\t\t\t\t\tnewFragment = new RepeatedFragment({\n\t\t\t\t\t\towner: this,\n\t\t\t\t\t\ttemplate: this.template.f,\n\t\t\t\t\t\tindexRef: this.template.i\n\t\t\t\t\t}).bind( this.model );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// WITH is now IF_WITH; WITH is only used for {{>partial context}}\n\t\t\telse if ( this.sectionType === SECTION_WITH ) {\n\t\t\t\tif ( this.fragment ) {\n\t\t\t\t\tthis.fragment.update();\n\t\t\t\t} else {\n\t\t\t\t\tnewFragment = new Fragment({\n\t\t\t\t\t\towner: this,\n\t\t\t\t\t\ttemplate: this.template.f\n\t\t\t\t\t}).bind( this.model );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\telse if ( this.sectionType === SECTION_IF_WITH ) {\n\t\t\t\tif ( this.fragment ) {\n\t\t\t\t\tif ( isEmpty( value ) ) {\n\t\t\t\t\t\tif ( this.rendered ) {\n\t\t\t\t\t\t\tthis.fragment.unbind().unrender( true );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tthis.fragment = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.fragment.update();\n\t\t\t\t\t}\n\t\t\t\t} else if ( !isEmpty( value ) ) {\n\t\t\t\t\tnewFragment = new Fragment({\n\t\t\t\t\t\towner: this,\n\t\t\t\t\t\ttemplate: this.template.f\n\t\t\t\t\t}).bind( this.model );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\telse {\n\t\t\t\tvar fragmentShouldExist = siblingFalsey && ( this.sectionType === SECTION_UNLESS ? isEmpty( value ) : !!value && !isEmpty( value ) );\n\t\n\t\t\t\tif ( this.fragment ) {\n\t\t\t\t\tif ( fragmentShouldExist ) {\n\t\t\t\t\t\tthis.fragment.update();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ( this.rendered ) {\n\t\t\t\t\t\t\tthis.fragment.unbind().unrender( true );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tthis.fragment = null;\n\t\t\t\t\t}\n\t\t\t\t} else if ( fragmentShouldExist ) {\n\t\t\t\t\tnewFragment = new Fragment({\n\t\t\t\t\t\towner: this,\n\t\t\t\t\t\ttemplate: this.template.f\n\t\t\t\t\t}).bind( null );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( newFragment ) {\n\t\t\t\tif ( this.rendered ) {\n\t\t\t\t\tvar parentNode = this.parentFragment.findParentNode();\n\t\t\t\t\tvar anchor = this.parentFragment.findNextNode( this );\n\t\n\t\t\t\t\tif ( anchor ) {\n\t\t\t\t\t\tvar docFrag = createDocumentFragment();\n\t\t\t\t\t\tnewFragment.render( docFrag );\n\t\n\t\t\t\t\t\t// we use anchor.parentNode, not parentNode, because the sibling\n\t\t\t\t\t\t// may be temporarily detached as a result of a shuffle\n\t\t\t\t\t\tanchor.parentNode.insertBefore( docFrag, anchor );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewFragment.render( parentNode );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tthis.fragment = newFragment;\n\t\t\t}\n\t\n\t\t\tif ( this.nextSibling ) {\n\t\t\t\tthis.nextSibling.dirty = true;\n\t\t\t\tthis.nextSibling.update();\n\t\t\t}\n\t\t};\n\t\n\t\treturn Section;\n\t}(Mustache));\n\t\n\tfunction valueContains ( selectValue, optionValue ) {\n\t\tvar i = selectValue.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( selectValue[i] == optionValue ) return true;\n\t\t}\n\t}\n\t\n\tvar Select = (function (Element$$1) {\n\t\tfunction Select ( options ) {\n\t\t\tElement$$1.call( this, options );\n\t\t\tthis.options = [];\n\t\t}\n\t\n\t\tSelect.prototype = Object.create( Element$$1 && Element$$1.prototype );\n\t\tSelect.prototype.constructor = Select;\n\t\n\t\tSelect.prototype.foundNode = function foundNode ( node ) {\n\t\t\tif ( this.binding ) {\n\t\t\t\tvar selectedOptions = getSelectedOptions( node );\n\t\n\t\t\t\tif ( selectedOptions.length > 0 ) {\n\t\t\t\t\tthis.selectedOptions = selectedOptions;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tSelect.prototype.render = function render ( target, occupants ) {\n\t\t\tElement$$1.prototype.render.call( this, target, occupants );\n\t\t\tthis.sync();\n\t\n\t\t\tvar node = this.node;\n\t\n\t\t\tvar i = node.options.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tnode.options[i].defaultSelected = node.options[i].selected;\n\t\t\t}\n\t\n\t\t\tthis.rendered = true;\n\t\t};\n\t\n\t\tSelect.prototype.sync = function sync () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar selectNode = this.node;\n\t\n\t\t\tif ( !selectNode ) return;\n\t\n\t\t\tvar options = toArray( selectNode.options );\n\t\n\t\t\tif ( this.selectedOptions ) {\n\t\t\t\toptions.forEach( function ( o ) {\n\t\t\t\t\tif ( this$1.selectedOptions.indexOf( o ) >= 0 ) o.selected = true;\n\t\t\t\t\telse o.selected = false;\n\t\t\t\t});\n\t\t\t\tthis.binding.setFromNode( selectNode );\n\t\t\t\tdelete this.selectedOptions;\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar selectValue = this.getAttribute( 'value' );\n\t\t\tvar isMultiple = this.getAttribute( 'multiple' );\n\t\n\t\t\t// If the <select> has a specified value, that should override\n\t\t\t// these options\n\t\t\tif ( selectValue !== undefined ) {\n\t\t\t\tvar optionWasSelected;\n\t\n\t\t\t\toptions.forEach( function ( o ) {\n\t\t\t\t\tvar optionValue = o._ractive ? o._ractive.value : o.value;\n\t\t\t\t\tvar shouldSelect = isMultiple ? valueContains( selectValue, optionValue ) : selectValue == optionValue;\n\t\n\t\t\t\t\tif ( shouldSelect ) {\n\t\t\t\t\t\toptionWasSelected = true;\n\t\t\t\t\t}\n\t\n\t\t\t\t\to.selected = shouldSelect;\n\t\t\t\t});\n\t\n\t\t\t\tif ( !optionWasSelected && !isMultiple ) {\n\t\t\t\t\tif ( this.binding ) {\n\t\t\t\t\t\tthis.binding.forceUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Otherwise the value should be initialised according to which\n\t\t\t// <option> element is selected, if twoway binding is in effect\n\t\t\telse if ( this.binding ) {\n\t\t\t\tthis.binding.forceUpdate();\n\t\t\t}\n\t\t};\n\t\n\t\tSelect.prototype.update = function update () {\n\t\t\tElement$$1.prototype.update.call(this);\n\t\t\tthis.sync();\n\t\t};\n\t\n\t\treturn Select;\n\t}(Element));\n\t\n\tvar Textarea = (function (Input$$1) {\n\t\tfunction Textarea( options ) {\n\t\t\tvar template = options.template;\n\t\n\t\t\toptions.deferContent = true;\n\t\n\t\t\tInput$$1.call( this, options );\n\t\n\t\t\t// check for single interpolator binding\n\t\t\tif ( !this.attributeByName.value ) {\n\t\t\t\tif ( template.f && isBindable( { template: template } ) ) {\n\t\t\t\t\tthis.attributes.push( createItem( {\n\t\t\t\t\t\towner: this,\n\t\t\t\t\t\ttemplate: { t: ATTRIBUTE, f: template.f, n: 'value' },\n\t\t\t\t\t\tparentFragment: this.parentFragment\n\t\t\t\t\t} ) );\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragment = new Fragment({ owner: this, cssIds: null, template: template.f });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tTextarea.prototype = Object.create( Input$$1 && Input$$1.prototype );\n\t\tTextarea.prototype.constructor = Textarea;\n\t\n\t\tTextarea.prototype.bubble = function bubble () {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tif ( !this.dirty ) {\n\t\t\t\tthis.dirty = true;\n\t\n\t\t\t\tif ( this.rendered && !this.binding && this.fragment ) {\n\t\t\t\t\trunloop.scheduleTask( function () {\n\t\t\t\t\t\tthis$1.dirty = false;\n\t\t\t\t\t\tthis$1.node.value = this$1.fragment.toString();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tthis.parentFragment.bubble(); // default behaviour\n\t\t\t}\n\t\t};\n\t\n\t\treturn Textarea;\n\t}(Input));\n\t\n\tvar Text = (function (Item$$1) {\n\t\tfunction Text ( options ) {\n\t\t\tItem$$1.call( this, options );\n\t\t\tthis.type = TEXT;\n\t\t}\n\t\n\t\tText.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\t\tText.prototype.constructor = Text;\n\t\n\t\tText.prototype.bind = function bind () {\n\t\t\t// noop\n\t\t};\n\t\n\t\tText.prototype.detach = function detach () {\n\t\t\treturn detachNode( this.node );\n\t\t};\n\t\n\t\tText.prototype.firstNode = function firstNode () {\n\t\t\treturn this.node;\n\t\t};\n\t\n\t\tText.prototype.render = function render ( target, occupants ) {\n\t\t\tif ( inAttributes() ) return;\n\t\t\tthis.rendered = true;\n\t\n\t\t\tif ( occupants ) {\n\t\t\t\tvar n = occupants[0];\n\t\t\t\tif ( n && n.nodeType === 3 ) {\n\t\t\t\t\toccupants.shift();\n\t\t\t\t\tif ( n.nodeValue !== this.template ) {\n\t\t\t\t\t\tn.nodeValue = this.template;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tn = this.node = doc.createTextNode( this.template );\n\t\t\t\t\tif ( occupants[0] ) {\n\t\t\t\t\t\ttarget.insertBefore( n, occupants[0] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.appendChild( n );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tthis.node = n;\n\t\t\t} else {\n\t\t\t\tthis.node = doc.createTextNode( this.template );\n\t\t\t\ttarget.appendChild( this.node );\n\t\t\t}\n\t\t};\n\t\n\t\tText.prototype.toString = function toString ( escape ) {\n\t\t\treturn escape ? escapeHtml( this.template ) : this.template;\n\t\t};\n\t\n\t\tText.prototype.unbind = function unbind () {\n\t\t\t// noop\n\t\t};\n\t\n\t\tText.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\t\tif ( this.rendered && shouldDestroy ) this.detach();\n\t\t\tthis.rendered = false;\n\t\t};\n\t\n\t\tText.prototype.update = function update () {\n\t\t\t// noop\n\t\t};\n\t\n\t\tText.prototype.valueOf = function valueOf () {\n\t\t\treturn this.template;\n\t\t};\n\t\n\t\treturn Text;\n\t}(Item));\n\t\n\tvar prefix;\n\t\n\tif ( !isClient ) {\n\t\tprefix = null;\n\t} else {\n\t\tvar prefixCache = {};\n\t\tvar testStyle = createElement( 'div' ).style;\n\t\n\t\tprefix = function ( prop ) {\n\t\t\tprop = camelCase( prop );\n\t\n\t\t\tif ( !prefixCache[ prop ] ) {\n\t\t\t\tif ( testStyle[ prop ] !== undefined ) {\n\t\t\t\t\tprefixCache[ prop ] = prop;\n\t\t\t\t}\n\t\n\t\t\t\telse {\n\t\t\t\t\t// test vendors...\n\t\t\t\t\tvar capped = prop.charAt( 0 ).toUpperCase() + prop.substring( 1 );\n\t\n\t\t\t\t\tvar i = vendors.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tvar vendor = vendors[i];\n\t\t\t\t\t\tif ( testStyle[ vendor + capped ] !== undefined ) {\n\t\t\t\t\t\t\tprefixCache[ prop ] = vendor + capped;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn prefixCache[ prop ];\n\t\t};\n\t}\n\t\n\tvar prefix$1 = prefix;\n\t\n\tvar visible;\n\tvar hidden = 'hidden';\n\t\n\tif ( doc ) {\n\t\tvar prefix$2;\n\t\n\t\tif ( hidden in doc ) {\n\t\t\tprefix$2 = '';\n\t\t} else {\n\t\t\tvar i$1 = vendors.length;\n\t\t\twhile ( i$1-- ) {\n\t\t\t\tvar vendor = vendors[i$1];\n\t\t\t\thidden = vendor + 'Hidden';\n\t\n\t\t\t\tif ( hidden in doc ) {\n\t\t\t\t\tprefix$2 = vendor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif ( prefix$2 !== undefined ) {\n\t\t\tdoc.addEventListener( prefix$2 + 'visibilitychange', onChange );\n\t\t\tonChange();\n\t\t} else {\n\t\t\t// gah, we're in an old browser\n\t\t\tif ( 'onfocusout' in doc ) {\n\t\t\t\tdoc.addEventListener( 'focusout', onHide );\n\t\t\t\tdoc.addEventListener( 'focusin', onShow );\n\t\t\t}\n\t\n\t\t\telse {\n\t\t\t\twin.addEventListener( 'pagehide', onHide );\n\t\t\t\twin.addEventListener( 'blur', onHide );\n\t\n\t\t\t\twin.addEventListener( 'pageshow', onShow );\n\t\t\t\twin.addEventListener( 'focus', onShow );\n\t\t\t}\n\t\n\t\t\tvisible = true; // until proven otherwise. Not ideal but hey\n\t\t}\n\t}\n\t\n\tfunction onChange () {\n\t\tvisible = !doc[ hidden ];\n\t}\n\t\n\tfunction onHide () {\n\t\tvisible = false;\n\t}\n\t\n\tfunction onShow () {\n\t\tvisible = true;\n\t}\n\t\n\tvar unprefixPattern = new RegExp( '^-(?:' + vendors.join( '|' ) + ')-' );\n\t\n\tvar unprefix = function ( prop ) {\n\t\treturn prop.replace( unprefixPattern, '' );\n\t};\n\t\n\tvar vendorPattern = new RegExp( '^(?:' + vendors.join( '|' ) + ')([A-Z])' );\n\t\n\tvar hyphenate = function ( str ) {\n\t\tif ( !str ) return ''; // edge case\n\t\n\t\tif ( vendorPattern.test( str ) ) str = '-' + str;\n\t\n\t\treturn str.replace( /[A-Z]/g, function ( match ) { return '-' + match.toLowerCase(); } );\n\t};\n\t\n\tvar createTransitions;\n\t\n\tif ( !isClient ) {\n\t\tcreateTransitions = null;\n\t} else {\n\t\tvar testStyle$1 = createElement( 'div' ).style;\n\t\tvar linear$1 = function ( x ) { return x; };\n\t\n\t\tvar canUseCssTransitions = {};\n\t\tvar cannotUseCssTransitions = {};\n\t\n\t\t// determine some facts about our environment\n\t\tvar TRANSITION$1;\n\t\tvar TRANSITIONEND;\n\t\tvar CSS_TRANSITIONS_ENABLED;\n\t\tvar TRANSITION_DURATION;\n\t\tvar TRANSITION_PROPERTY;\n\t\tvar TRANSITION_TIMING_FUNCTION;\n\t\n\t\tif ( testStyle$1.transition !== undefined ) {\n\t\t\tTRANSITION$1 = 'transition';\n\t\t\tTRANSITIONEND = 'transitionend';\n\t\t\tCSS_TRANSITIONS_ENABLED = true;\n\t\t} else if ( testStyle$1.webkitTransition !== undefined ) {\n\t\t\tTRANSITION$1 = 'webkitTransition';\n\t\t\tTRANSITIONEND = 'webkitTransitionEnd';\n\t\t\tCSS_TRANSITIONS_ENABLED = true;\n\t\t} else {\n\t\t\tCSS_TRANSITIONS_ENABLED = false;\n\t\t}\n\t\n\t\tif ( TRANSITION$1 ) {\n\t\t\tTRANSITION_DURATION = TRANSITION$1 + 'Duration';\n\t\t\tTRANSITION_PROPERTY = TRANSITION$1 + 'Property';\n\t\t\tTRANSITION_TIMING_FUNCTION = TRANSITION$1 + 'TimingFunction';\n\t\t}\n\t\n\t\tcreateTransitions = function ( t, to, options, changedProperties, resolve ) {\n\t\n\t\t\t// Wait a beat (otherwise the target styles will be applied immediately)\n\t\t\t// TODO use a fastdom-style mechanism?\n\t\t\tsetTimeout( function () {\n\t\t\t\tvar jsTransitionsComplete;\n\t\t\t\tvar cssTransitionsComplete;\n\t\t\t\tvar cssTimeout;\n\t\n\t\t\t\tfunction transitionDone () { clearTimeout( cssTimeout ); }\n\t\n\t\t\t\tfunction checkComplete () {\n\t\t\t\t\tif ( jsTransitionsComplete && cssTransitionsComplete ) {\n\t\t\t\t\t\tt.unregisterCompleteHandler( transitionDone );\n\t\t\t\t\t\t// will changes to events and fire have an unexpected consequence here?\n\t\t\t\t\t\tt.ractive.fire( t.name + ':end', t.node, t.isIntro );\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// this is used to keep track of which elements can use CSS to animate\n\t\t\t\t// which properties\n\t\t\t\tvar hashPrefix = ( t.node.namespaceURI || '' ) + t.node.tagName;\n\t\n\t\t\t\t// need to reset transition properties\n\t\t\t\tvar style = t.node.style;\n\t\t\t\tvar previous = {\n\t\t\t\t\tproperty: style[ TRANSITION_PROPERTY ],\n\t\t\t\t\ttiming: style[ TRANSITION_TIMING_FUNCTION ],\n\t\t\t\t\tduration: style[ TRANSITION_DURATION ]\n\t\t\t\t};\n\t\n\t\t\t\tstyle[ TRANSITION_PROPERTY ] = changedProperties.map( prefix$1 ).map( hyphenate ).join( ',' );\n\t\t\t\tstyle[ TRANSITION_TIMING_FUNCTION ] = hyphenate( options.easing || 'linear' );\n\t\t\t\tstyle[ TRANSITION_DURATION ] = ( options.duration / 1000 ) + 's';\n\t\n\t\t\t\tfunction transitionEndHandler ( event ) {\n\t\t\t\t\tvar index = changedProperties.indexOf( camelCase( unprefix( event.propertyName ) ) );\n\t\n\t\t\t\t\tif ( index !== -1 ) {\n\t\t\t\t\t\tchangedProperties.splice( index, 1 );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( changedProperties.length ) {\n\t\t\t\t\t\t// still transitioning...\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tclearTimeout( cssTimeout );\n\t\t\t\t\tcssTransitionsDone();\n\t\t\t\t}\n\t\n\t\t\t\tfunction cssTransitionsDone () {\n\t\t\t\t\tstyle[ TRANSITION_PROPERTY ] = previous.property;\n\t\t\t\t\tstyle[ TRANSITION_TIMING_FUNCTION ] = previous.duration;\n\t\t\t\t\tstyle[ TRANSITION_DURATION ] = previous.timing;\n\t\n\t\t\t\t\tt.node.removeEventListener( TRANSITIONEND, transitionEndHandler, false );\n\t\n\t\t\t\t\tcssTransitionsComplete = true;\n\t\t\t\t\tcheckComplete();\n\t\t\t\t}\n\t\n\t\t\t\tt.node.addEventListener( TRANSITIONEND, transitionEndHandler, false );\n\t\n\t\t\t\t// safety net in case transitionend never fires\n\t\t\t\tcssTimeout = setTimeout( function () {\n\t\t\t\t\tchangedProperties = [];\n\t\t\t\t\tcssTransitionsDone();\n\t\t\t\t}, options.duration + ( options.delay || 0 ) + 50 );\n\t\t\t\tt.registerCompleteHandler( transitionDone );\n\t\n\t\t\t\tsetTimeout( function () {\n\t\t\t\t\tvar i = changedProperties.length;\n\t\t\t\t\tvar hash;\n\t\t\t\t\tvar originalValue;\n\t\t\t\t\tvar index;\n\t\t\t\t\tvar propertiesToTransitionInJs = [];\n\t\t\t\t\tvar prop;\n\t\t\t\t\tvar suffix;\n\t\t\t\t\tvar interpolator;\n\t\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tprop = changedProperties[i];\n\t\t\t\t\t\thash = hashPrefix + prop;\n\t\n\t\t\t\t\t\tif ( CSS_TRANSITIONS_ENABLED && !cannotUseCssTransitions[ hash ] ) {\n\t\t\t\t\t\t\tstyle[ prefix$1( prop ) ] = to[ prop ];\n\t\n\t\t\t\t\t\t\t// If we're not sure if CSS transitions are supported for\n\t\t\t\t\t\t\t// this tag/property combo, find out now\n\t\t\t\t\t\t\tif ( !canUseCssTransitions[ hash ] ) {\n\t\t\t\t\t\t\t\toriginalValue = t.getStyle( prop );\n\t\n\t\t\t\t\t\t\t\t// if this property is transitionable in this browser,\n\t\t\t\t\t\t\t\t// the current style will be different from the target style\n\t\t\t\t\t\t\t\tcanUseCssTransitions[ hash ] = ( t.getStyle( prop ) != to[ prop ] );\n\t\t\t\t\t\t\t\tcannotUseCssTransitions[ hash ] = !canUseCssTransitions[ hash ];\n\t\n\t\t\t\t\t\t\t\t// Reset, if we're going to use timers after all\n\t\t\t\t\t\t\t\tif ( cannotUseCssTransitions[ hash ] ) {\n\t\t\t\t\t\t\t\t\tstyle[ prefix$1( prop ) ] = originalValue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( !CSS_TRANSITIONS_ENABLED || cannotUseCssTransitions[ hash ] ) {\n\t\t\t\t\t\t\t// we need to fall back to timer-based stuff\n\t\t\t\t\t\t\tif ( originalValue === undefined ) {\n\t\t\t\t\t\t\t\toriginalValue = t.getStyle( prop );\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// need to remove this from changedProperties, otherwise transitionEndHandler\n\t\t\t\t\t\t\t// will get confused\n\t\t\t\t\t\t\tindex = changedProperties.indexOf( prop );\n\t\t\t\t\t\t\tif ( index === -1 ) {\n\t\t\t\t\t\t\t\twarnIfDebug( 'Something very strange happened with transitions. Please raise an issue at https://github.com/ractivejs/ractive/issues - thanks!', { node: t.node });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tchangedProperties.splice( index, 1 );\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// TODO Determine whether this property is animatable at all\n\t\n\t\t\t\t\t\t\tsuffix = /[^\\d]*$/.exec( to[ prop ] )[0];\n\t\t\t\t\t\t\tinterpolator = interpolate( parseFloat( originalValue ), parseFloat( to[ prop ] ) ) || ( function () { return to[ prop ]; } );\n\t\n\t\t\t\t\t\t\t// ...then kick off a timer-based transition\n\t\t\t\t\t\t\tpropertiesToTransitionInJs.push({\n\t\t\t\t\t\t\t\tname: prefix$1( prop ),\n\t\t\t\t\t\t\t\tinterpolator: interpolator,\n\t\t\t\t\t\t\t\tsuffix: suffix\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// javascript transitions\n\t\t\t\t\tif ( propertiesToTransitionInJs.length ) {\n\t\t\t\t\t\tvar easing;\n\t\n\t\t\t\t\t\tif ( typeof options.easing === 'string' ) {\n\t\t\t\t\t\t\teasing = t.ractive.easing[ options.easing ];\n\t\n\t\t\t\t\t\t\tif ( !easing ) {\n\t\t\t\t\t\t\t\twarnOnceIfDebug( missingPlugin( options.easing, 'easing' ) );\n\t\t\t\t\t\t\t\teasing = linear$1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if ( typeof options.easing === 'function' ) {\n\t\t\t\t\t\t\teasing = options.easing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\teasing = linear$1;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tnew Ticker({\n\t\t\t\t\t\t\tduration: options.duration,\n\t\t\t\t\t\t\teasing: easing,\n\t\t\t\t\t\t\tstep: function ( pos ) {\n\t\t\t\t\t\t\t\tvar i = propertiesToTransitionInJs.length;\n\t\t\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\t\t\tvar prop = propertiesToTransitionInJs[i];\n\t\t\t\t\t\t\t\t\tt.node.style[ prop.name ] = prop.interpolator( pos ) + prop.suffix;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcomplete: function () {\n\t\t\t\t\t\t\t\tjsTransitionsComplete = true;\n\t\t\t\t\t\t\t\tcheckComplete();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjsTransitionsComplete = true;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( !changedProperties.length ) {\n\t\t\t\t\t\t// We need to cancel the transitionEndHandler, and deal with\n\t\t\t\t\t\t// the fact that it will never fire\n\t\t\t\t\t\tt.node.removeEventListener( TRANSITIONEND, transitionEndHandler, false );\n\t\t\t\t\t\tcssTransitionsComplete = true;\n\t\t\t\t\t\tcheckComplete();\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}, options.delay || 0 );\n\t\t};\n\t}\n\t\n\tvar createTransitions$1 = createTransitions;\n\t\n\tfunction resetStyle ( node, style ) {\n\t\tif ( style ) {\n\t\t\tnode.setAttribute( 'style', style );\n\t\t} else {\n\t\t\t// Next line is necessary, to remove empty style attribute!\n\t\t\t// See http://stackoverflow.com/a/7167553\n\t\t\tnode.getAttribute( 'style' );\n\t\t\tnode.removeAttribute( 'style' );\n\t\t}\n\t}\n\t\n\tvar getComputedStyle = win && ( win.getComputedStyle || legacy.getComputedStyle );\n\tvar resolved$1 = Promise$1.resolve();\n\t\n\tvar names = {\n\t\tt0: 'intro-outro',\n\t\tt1: 'intro',\n\t\tt2: 'outro'\n\t};\n\t\n\tvar Transition = function Transition ( options ) {\n\t\tthis.owner = options.owner || options.parentFragment.owner || findElement( options.parentFragment );\n\t\tthis.element = this.owner.attributeByName ? this.owner : findElement( options.parentFragment );\n\t\tthis.ractive = this.owner.ractive;\n\t\tthis.template = options.template;\n\t\tthis.parentFragment = options.parentFragment;\n\t\tthis.options = options;\n\t\tthis.onComplete = [];\n\t};\n\t\n\tTransition.prototype.animateStyle = function animateStyle ( style, value, options ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( arguments.length === 4 ) {\n\t\t\tthrow new Error( 't.animateStyle() returns a promise - use .then() instead of passing a callback' );\n\t\t}\n\t\n\t\t// Special case - page isn't visible. Don't animate anything, because\n\t\t// that way you'll never get CSS transitionend events\n\t\tif ( !visible ) {\n\t\t\tthis.setStyle( style, value );\n\t\t\treturn resolved$1;\n\t\t}\n\t\n\t\tvar to;\n\t\n\t\tif ( typeof style === 'string' ) {\n\t\t\tto = {};\n\t\t\tto[ style ] = value;\n\t\t} else {\n\t\t\tto = style;\n\t\n\t\t\t// shuffle arguments\n\t\t\toptions = value;\n\t\t}\n\t\n\t\t// As of 0.3.9, transition authors should supply an `option` object with\n\t\t// `duration` and `easing` properties (and optional `delay`), plus a\n\t\t// callback function that gets called after the animation completes\n\t\n\t\t// TODO remove this check in a future version\n\t\tif ( !options ) {\n\t\t\twarnOnceIfDebug( 'The \"%s\" transition does not supply an options object to `t.animateStyle()`. This will break in a future version of Ractive. For more info see https://github.com/RactiveJS/Ractive/issues/340', this.name );\n\t\t\toptions = this;\n\t\t}\n\t\n\t\treturn new Promise$1( function ( fulfil ) {\n\t\t\t// Edge case - if duration is zero, set style synchronously and complete\n\t\t\tif ( !options.duration ) {\n\t\t\t\tthis$1.setStyle( to );\n\t\t\t\tfulfil();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Get a list of the properties we're animating\n\t\t\tvar propertyNames = Object.keys( to );\n\t\t\tvar changedProperties = [];\n\t\n\t\t\t// Store the current styles\n\t\t\tvar computedStyle = getComputedStyle( this$1.owner.node );\n\t\n\t\t\tvar i = propertyNames.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar prop = propertyNames[i];\n\t\t\t\tvar current = computedStyle[ prefix$1( prop ) ];\n\t\n\t\t\t\tif ( current === '0px' ) current = 0;\n\t\n\t\t\t\t// we need to know if we're actually changing anything\n\t\t\t\tif ( current != to[ prop ] ) { // use != instead of !==, so we can compare strings with numbers\n\t\t\t\t\tchangedProperties.push( prop );\n\t\n\t\t\t\t\t// make the computed style explicit, so we can animate where\n\t\t\t\t\t// e.g. height='auto'\n\t\t\t\t\tthis$1.owner.node.style[ prefix$1( prop ) ] = current;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// If we're not actually changing anything, the transitionend event\n\t\t\t// will never fire! So we complete early\n\t\t\tif ( !changedProperties.length ) {\n\t\t\t\tfulfil();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tcreateTransitions$1( this$1, to, options, changedProperties, fulfil );\n\t\t});\n\t};\n\t\n\tTransition.prototype.bind = function bind () {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar options = this.options;\n\t\tif ( options.template ) {\n\t\t\tif ( options.template.v === 't0' || options.template.v == 't1' ) this.element._introTransition = this;\n\t\t\tif ( options.template.v === 't0' || options.template.v == 't2' ) this.element._outroTransition = this;\n\t\t\tthis.eventName = names[ options.template.v ];\n\t\t}\n\t\n\t\tvar ractive = this.owner.ractive;\n\t\n\t\tif ( options.name ) {\n\t\t\tthis.name = options.name;\n\t\t} else {\n\t\t\tvar name = options.template.f;\n\t\t\tif ( typeof name.n === 'string' ) name = name.n;\n\t\n\t\t\tif ( typeof name !== 'string' ) {\n\t\t\t\tvar fragment = new Fragment({\n\t\t\t\t\towner: this.owner,\n\t\t\t\t\ttemplate: name.n\n\t\t\t\t}).bind(); // TODO need a way to capture values without bind()\n\t\n\t\t\t\tname = fragment.toString();\n\t\t\t\tfragment.unbind();\n\t\n\t\t\t\tif ( name === '' ) {\n\t\t\t\t\t// empty string okay, just no transition\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthis.name = name;\n\t\t}\n\t\n\t\tif ( options.params ) {\n\t\t\tthis.params = options.params;\n\t\t} else {\n\t\t\tif ( options.template.f.a && !options.template.f.a.s ) {\n\t\t\t\tthis.params = options.template.f.a;\n\t\t\t}\n\t\n\t\t\telse if ( options.template.f.d ) {\n\t\t\t\t// TODO is there a way to interpret dynamic arguments without all the\n\t\t\t\t// 'dependency thrashing'?\n\t\t\t\tvar fragment$1 = new Fragment({\n\t\t\t\t\towner: this.owner,\n\t\t\t\t\ttemplate: options.template.f.d\n\t\t\t\t}).bind();\n\t\n\t\t\t\tthis.params = fragment$1.getArgsList();\n\t\t\t\tfragment$1.unbind();\n\t\t\t}\n\t\t}\n\t\n\t\tif ( typeof this.name === 'function' ) {\n\t\t\tthis._fn = this.name;\n\t\t\tthis.name = this._fn.name;\n\t\t} else {\n\t\t\tthis._fn = findInViewHierarchy( 'transitions', ractive, this.name );\n\t\t}\n\t\n\t\tif ( !this._fn ) {\n\t\t\twarnOnceIfDebug( missingPlugin( this.name, 'transition' ), { ractive: ractive });\n\t\t}\n\t\n\t\t// TODO: dry up after deprecation is done\n\t\tif ( options.template && this.template.f.a && this.template.f.a.s ) {\n\t\t\tthis.resolvers = [];\n\t\t\tthis.models = this.template.f.a.r.map( function ( ref, i ) {\n\t\t\t\tvar resolver;\n\t\t\t\tvar model = resolveReference( this$1.parentFragment, ref );\n\t\t\t\tif ( !model ) {\n\t\t\t\t\tresolver = this$1.parentFragment.resolve( ref, function ( model ) {\n\t\t\t\t\t\tthis$1.models[i] = model;\n\t\t\t\t\t\tremoveFromArray( this$1.resolvers, resolver );\n\t\t\t\t\t\tmodel.register( this$1 );\n\t\t\t\t\t});\n\t\n\t\t\t\t\tthis$1.resolvers.push( resolver );\n\t\t\t\t} else model.register( this$1 );\n\t\n\t\t\t\treturn model;\n\t\t\t});\n\t\t\tthis.argsFn = getFunction( this.template.f.a.s, this.template.f.a.r.length );\n\t\t}\n\t};\n\t\n\tTransition.prototype.destroyed = function destroyed () {};\n\t\n\tTransition.prototype.getStyle = function getStyle ( props ) {\n\t\tvar computedStyle = getComputedStyle( this.owner.node );\n\t\n\t\tif ( typeof props === 'string' ) {\n\t\t\tvar value = computedStyle[ prefix$1( props ) ];\n\t\t\treturn value === '0px' ? 0 : value;\n\t\t}\n\t\n\t\tif ( !isArray( props ) ) {\n\t\t\tthrow new Error( 'Transition$getStyle must be passed a string, or an array of strings representing CSS properties' );\n\t\t}\n\t\n\t\tvar styles = {};\n\t\n\t\tvar i = props.length;\n\t\twhile ( i-- ) {\n\t\t\tvar prop = props[i];\n\t\t\tvar value$1 = computedStyle[ prefix$1( prop ) ];\n\t\n\t\t\tif ( value$1 === '0px' ) value$1 = 0;\n\t\t\tstyles[ prop ] = value$1;\n\t\t}\n\t\n\t\treturn styles;\n\t};\n\t\n\tTransition.prototype.processParams = function processParams ( params, defaults ) {\n\t\tif ( typeof params === 'number' ) {\n\t\t\tparams = { duration: params };\n\t\t}\n\t\n\t\telse if ( typeof params === 'string' ) {\n\t\t\tif ( params === 'slow' ) {\n\t\t\t\tparams = { duration: 600 };\n\t\t\t} else if ( params === 'fast' ) {\n\t\t\t\tparams = { duration: 200 };\n\t\t\t} else {\n\t\t\t\tparams = { duration: 400 };\n\t\t\t}\n\t\t} else if ( !params ) {\n\t\t\tparams = {};\n\t\t}\n\t\n\t\treturn extend$1( {}, defaults, params );\n\t};\n\t\n\tTransition.prototype.rebinding = function rebinding ( next, previous ) {\n\t\tvar idx = this.models.indexOf( previous );\n\t\tif ( !~idx ) return;\n\t\n\t\tnext = rebindMatch( this.template.f.a.r[ idx ], next, previous );\n\t\tif ( next === previous ) return;\n\t\n\t\tprevious.unregister( this );\n\t\tthis.models.splice( idx, 1, next );\n\t\tif ( next ) next.addShuffleRegister( this, 'mark' );\n\t};\n\t\n\tTransition.prototype.registerCompleteHandler = function registerCompleteHandler ( fn ) {\n\t\taddToArray( this.onComplete, fn );\n\t};\n\t\n\tTransition.prototype.render = function render () {};\n\t\n\tTransition.prototype.setStyle = function setStyle ( style, value ) {\n\t\tif ( typeof style === 'string' ) {\n\t\t\tthis.owner.node.style[ prefix$1( style ) ] = value;\n\t\t}\n\t\n\t\telse {\n\t\t\tvar prop;\n\t\t\tfor ( prop in style ) {\n\t\t\t\tif ( style.hasOwnProperty( prop ) ) {\n\t\t\t\t\tthis.owner.node.style[ prefix$1( prop ) ] = style[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn this;\n\t};\n\t\n\tTransition.prototype.start = function start () {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar node = this.node = this.element.node;\n\t\tvar originalStyle = node.getAttribute( 'style' );\n\t\n\t\tvar completed;\n\t\tvar args = this.params;\n\t\n\t\t// create t.complete() - we don't want this on the prototype,\n\t\t// because we don't want `this` silliness when passing it as\n\t\t// an argument\n\t\tthis.complete = function ( noReset ) {\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis$1.onComplete.forEach( function ( fn ) { return fn(); } );\n\t\t\tif ( !noReset && this$1.isIntro ) {\n\t\t\t\tresetStyle( node, originalStyle);\n\t\t\t}\n\t\n\t\t\tthis$1._manager.remove( this$1 );\n\t\n\t\t\tcompleted = true;\n\t\t};\n\t\n\t\t// If the transition function doesn't exist, abort\n\t\tif ( !this._fn ) {\n\t\t\tthis.complete();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// get expression args if supplied\n\t\tif ( this.argsFn ) {\n\t\t\tvar values = this.models.map( function ( model ) {\n\t\t\t\tif ( !model ) return undefined;\n\t\n\t\t\t\treturn model.get();\n\t\t\t});\n\t\t\targs = this.argsFn.apply( this.ractive, values );\n\t\t}\n\t\n\t\tvar promise = this._fn.apply( this.ractive, [ this ].concat( args ) );\n\t\tif ( promise ) promise.then( this.complete );\n\t};\n\t\n\tTransition.prototype.toString = function toString () { return ''; };\n\t\n\tTransition.prototype.unbind = function unbind$1 () {\n\t\tif ( this.resolvers ) this.resolvers.forEach( unbind$1$1 );\n\t};\n\t\n\tTransition.prototype.unregisterCompleteHandler = function unregisterCompleteHandler ( fn ) {\n\t\tremoveFromArray( this.onComplete, fn );\n\t};\n\t\n\tTransition.prototype.unrender = function unrender () {};\n\t\n\tTransition.prototype.update = function update () {};\n\t\n\tvar elementCache = {};\n\t\n\tvar ieBug;\n\tvar ieBlacklist;\n\t\n\ttry {\n\t\tcreateElement( 'table' ).innerHTML = 'foo';\n\t} catch ( err ) {\n\t\tieBug = true;\n\t\n\t\tieBlacklist = {\n\t\t\tTABLE:  [ '<table class=\"x\">', '</table>' ],\n\t\t\tTHEAD:  [ '<table><thead class=\"x\">', '</thead></table>' ],\n\t\t\tTBODY:  [ '<table><tbody class=\"x\">', '</tbody></table>' ],\n\t\t\tTR:     [ '<table><tr class=\"x\">', '</tr></table>' ],\n\t\t\tSELECT: [ '<select class=\"x\">', '</select>' ]\n\t\t};\n\t}\n\t\n\tvar insertHtml = function ( html$$1, node, docFrag ) {\n\t\tvar nodes = [];\n\t\n\t\t// render 0 and false\n\t\tif ( html$$1 == null || html$$1 === '' ) return nodes;\n\t\n\t\tvar container;\n\t\tvar wrapper;\n\t\tvar selectedOption;\n\t\n\t\tif ( ieBug && ( wrapper = ieBlacklist[ node.tagName ] ) ) {\n\t\t\tcontainer = element( 'DIV' );\n\t\t\tcontainer.innerHTML = wrapper[0] + html$$1 + wrapper[1];\n\t\t\tcontainer = container.querySelector( '.x' );\n\t\n\t\t\tif ( container.tagName === 'SELECT' ) {\n\t\t\t\tselectedOption = container.options[ container.selectedIndex ];\n\t\t\t}\n\t\t}\n\t\n\t\telse if ( node.namespaceURI === svg$1 ) {\n\t\t\tcontainer = element( 'DIV' );\n\t\t\tcontainer.innerHTML = '<svg class=\"x\">' + html$$1 + '</svg>';\n\t\t\tcontainer = container.querySelector( '.x' );\n\t\t}\n\t\n\t\telse if ( node.tagName === 'TEXTAREA' ) {\n\t\t\tcontainer = createElement( 'div' );\n\t\n\t\t\tif ( typeof container.textContent !== 'undefined' ) {\n\t\t\t\tcontainer.textContent = html$$1;\n\t\t\t} else {\n\t\t\t\tcontainer.innerHTML = html$$1;\n\t\t\t}\n\t\t}\n\t\n\t\telse {\n\t\t\tcontainer = element( node.tagName );\n\t\t\tcontainer.innerHTML = html$$1;\n\t\n\t\t\tif ( container.tagName === 'SELECT' ) {\n\t\t\t\tselectedOption = container.options[ container.selectedIndex ];\n\t\t\t}\n\t\t}\n\t\n\t\tvar child;\n\t\twhile ( child = container.firstChild ) {\n\t\t\tnodes.push( child );\n\t\t\tdocFrag.appendChild( child );\n\t\t}\n\t\n\t\t// This is really annoying. Extracting <option> nodes from the\n\t\t// temporary container <select> causes the remaining ones to\n\t\t// become selected. So now we have to deselect them. IE8, you\n\t\t// amaze me. You really do\n\t\t// ...and now Chrome too\n\t\tvar i;\n\t\tif ( node.tagName === 'SELECT' ) {\n\t\t\ti = nodes.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( nodes[i] !== selectedOption ) {\n\t\t\t\t\tnodes[i].selected = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn nodes;\n\t};\n\t\n\tfunction element ( tagName ) {\n\t\treturn elementCache[ tagName ] || ( elementCache[ tagName ] = createElement( tagName ) );\n\t}\n\t\n\tvar Triple = (function (Mustache$$1) {\n\t\tfunction Triple ( options ) {\n\t\t\tMustache$$1.call( this, options );\n\t\t}\n\t\n\t\tTriple.prototype = Object.create( Mustache$$1 && Mustache$$1.prototype );\n\t\tTriple.prototype.constructor = Triple;\n\t\n\t\tTriple.prototype.detach = function detach () {\n\t\t\tvar docFrag = createDocumentFragment();\n\t\t\tthis.nodes.forEach( function ( node ) { return docFrag.appendChild( node ); } );\n\t\t\treturn docFrag;\n\t\t};\n\t\n\t\tTriple.prototype.find = function find ( selector ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar len = this.nodes.length;\n\t\t\tvar i;\n\t\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\t\tvar node = this$1.nodes[i];\n\t\n\t\t\t\tif ( node.nodeType !== 1 ) continue;\n\t\n\t\t\t\tif ( matches( node, selector ) ) return node;\n\t\n\t\t\t\tvar queryResult = node.querySelector( selector );\n\t\t\t\tif ( queryResult ) return queryResult;\n\t\t\t}\n\t\n\t\t\treturn null;\n\t\t};\n\t\n\t\tTriple.prototype.findAll = function findAll ( selector, query ) {\n\t\t\tvar this$1 = this;\n\t\n\t\t\tvar len = this.nodes.length;\n\t\t\tvar i;\n\t\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\t\tvar node = this$1.nodes[i];\n\t\n\t\t\t\tif ( node.nodeType !== 1 ) continue;\n\t\n\t\t\t\tif ( query.test( node ) ) query.add( node );\n\t\n\t\t\t\tvar queryAllResult = node.querySelectorAll( selector );\n\t\t\t\tif ( queryAllResult ) {\n\t\t\t\t\tvar numNodes = queryAllResult.length;\n\t\t\t\t\tvar j;\n\t\n\t\t\t\t\tfor ( j = 0; j < numNodes; j += 1 ) {\n\t\t\t\t\t\tquery.add( queryAllResult[j] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tTriple.prototype.findComponent = function findComponent () {\n\t\t\treturn null;\n\t\t};\n\t\n\t\tTriple.prototype.firstNode = function firstNode () {\n\t\t\treturn this.nodes[0];\n\t\t};\n\t\n\t\tTriple.prototype.render = function render ( target ) {\n\t\t\tvar html = this.model ? this.model.get() : '';\n\t\t\tthis.nodes = insertHtml( html, this.parentFragment.findParentNode(), target );\n\t\t\tthis.rendered = true;\n\t\t};\n\t\n\t\tTriple.prototype.toString = function toString () {\n\t\t\treturn this.model && this.model.get() != null ? decodeCharacterReferences( '' + this.model.get() ) : '';\n\t\t};\n\t\n\t\tTriple.prototype.unrender = function unrender () {\n\t\t\tif ( this.nodes ) this.nodes.forEach( function ( node ) { return detachNode( node ); } );\n\t\t\tthis.rendered = false;\n\t\t};\n\t\n\t\tTriple.prototype.update = function update () {\n\t\t\tif ( this.rendered && this.dirty ) {\n\t\t\t\tthis.dirty = false;\n\t\n\t\t\t\tthis.unrender();\n\t\t\t\tvar docFrag = createDocumentFragment();\n\t\t\t\tthis.render( docFrag );\n\t\n\t\t\t\tvar parentNode = this.parentFragment.findParentNode();\n\t\t\t\tvar anchor = this.parentFragment.findNextNode( this );\n\t\n\t\t\t\tparentNode.insertBefore( docFrag, anchor );\n\t\t\t}\n\t\t};\n\t\n\t\treturn Triple;\n\t}(Mustache));\n\t\n\tvar Yielder = (function (Item$$1) {\n\t\tfunction Yielder ( options ) {\n\t\t\tItem$$1.call( this, options );\n\t\n\t\t\tthis.container = options.parentFragment.ractive;\n\t\t\tthis.component = this.container.component;\n\t\n\t\t\tthis.containerFragment = options.parentFragment;\n\t\t\tthis.parentFragment = this.component.parentFragment;\n\t\n\t\t\t// {{yield}} is equivalent to {{yield content}}\n\t\t\tthis.name = options.template.n || '';\n\t\t}\n\t\n\t\tYielder.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\t\tYielder.prototype.constructor = Yielder;\n\t\n\t\tYielder.prototype.bind = function bind () {\n\t\t\tvar name = this.name;\n\t\n\t\t\t( this.component.yielders[ name ] || ( this.component.yielders[ name ] = [] ) ).push( this );\n\t\n\t\t\t// TODO don't parse here\n\t\t\tvar template = this.container._inlinePartials[ name || 'content' ];\n\t\n\t\t\tif ( typeof template === 'string' ) {\n\t\t\t\ttemplate = parse( template ).t;\n\t\t\t}\n\t\n\t\t\tif ( !template ) {\n\t\t\t\twarnIfDebug( (\"Could not find template for partial \\\"\" + name + \"\\\"\"), { ractive: this.ractive });\n\t\t\t\ttemplate = [];\n\t\t\t}\n\t\n\t\t\tthis.fragment = new Fragment({\n\t\t\t\towner: this,\n\t\t\t\tractive: this.container.parent,\n\t\t\t\ttemplate: template\n\t\t\t}).bind();\n\t\t};\n\t\n\t\tYielder.prototype.bubble = function bubble () {\n\t\t\tif ( !this.dirty ) {\n\t\t\t\tthis.containerFragment.bubble();\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t};\n\t\n\t\tYielder.prototype.detach = function detach () {\n\t\t\treturn this.fragment.detach();\n\t\t};\n\t\n\t\tYielder.prototype.find = function find ( selector ) {\n\t\t\treturn this.fragment.find( selector );\n\t\t};\n\t\n\t\tYielder.prototype.findAll = function findAll ( selector, queryResult ) {\n\t\t\tthis.fragment.find( selector, queryResult );\n\t\t};\n\t\n\t\tYielder.prototype.findComponent = function findComponent ( name ) {\n\t\t\treturn this.fragment.findComponent( name );\n\t\t};\n\t\n\t\tYielder.prototype.findAllComponents = function findAllComponents ( name, queryResult ) {\n\t\t\tthis.fragment.findAllComponents( name, queryResult );\n\t\t};\n\t\n\t\tYielder.prototype.findNextNode = function findNextNode() {\n\t\t\treturn this.containerFragment.findNextNode( this );\n\t\t};\n\t\n\t\tYielder.prototype.firstNode = function firstNode ( skipParent ) {\n\t\t\treturn this.fragment.firstNode( skipParent );\n\t\t};\n\t\n\t\tYielder.prototype.render = function render ( target, occupants ) {\n\t\t\treturn this.fragment.render( target, occupants );\n\t\t};\n\t\n\t\tYielder.prototype.setTemplate = function setTemplate ( name ) {\n\t\t\tvar template = this.parentFragment.ractive.partials[ name ];\n\t\n\t\t\tif ( typeof template === 'string' ) {\n\t\t\t\ttemplate = parse( template ).t;\n\t\t\t}\n\t\n\t\t\tthis.partialTemplate = template || []; // TODO warn on missing partial\n\t\t};\n\t\n\t\tYielder.prototype.toString = function toString ( escape ) {\n\t\t\treturn this.fragment.toString( escape );\n\t\t};\n\t\n\t\tYielder.prototype.unbind = function unbind () {\n\t\t\tthis.fragment.unbind();\n\t\t\tremoveFromArray( this.component.yielders[ this.name ], this );\n\t\t};\n\t\n\t\tYielder.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\t\tthis.fragment.unrender( shouldDestroy );\n\t\t};\n\t\n\t\tYielder.prototype.update = function update () {\n\t\t\tthis.dirty = false;\n\t\t\tthis.fragment.update();\n\t\t};\n\t\n\t\treturn Yielder;\n\t}(Item));\n\t\n\t// finds the component constructor in the registry or view hierarchy registries\n\tfunction getComponentConstructor ( ractive, name ) {\n\t\tvar instance = findInstance( 'components', ractive, name );\n\t\tvar Component;\n\t\n\t\tif ( instance ) {\n\t\t\tComponent = instance.components[ name ];\n\t\n\t\t\t// best test we have for not Ractive.extend\n\t\t\tif ( !Component._Parent ) {\n\t\t\t\t// function option, execute and store for reset\n\t\t\t\tvar fn = Component.bind( instance );\n\t\t\t\tfn.isOwner = instance.components.hasOwnProperty( name );\n\t\t\t\tComponent = fn();\n\t\n\t\t\t\tif ( !Component ) {\n\t\t\t\t\twarnIfDebug( noRegistryFunctionReturn, name, 'component', 'component', { ractive: ractive });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif ( typeof Component === 'string' ) {\n\t\t\t\t\t// allow string lookup\n\t\t\t\t\tComponent = getComponentConstructor( ractive, Component );\n\t\t\t\t}\n\t\n\t\t\t\tComponent._fn = fn;\n\t\t\t\tinstance.components[ name ] = Component;\n\t\t\t}\n\t\t}\n\t\n\t\treturn Component;\n\t}\n\t\n\tvar constructors = {};\n\tconstructors[ ALIAS ] = Alias;\n\tconstructors[ DOCTYPE ] = Doctype;\n\tconstructors[ INTERPOLATOR ] = Interpolator;\n\tconstructors[ PARTIAL ] = Partial;\n\tconstructors[ SECTION ] = Section;\n\tconstructors[ TRIPLE ] = Triple;\n\tconstructors[ YIELDER ] = Yielder;\n\t\n\tconstructors[ ATTRIBUTE ] = Attribute;\n\tconstructors[ BINDING_FLAG ] = BindingFlag;\n\tconstructors[ DECORATOR ] = Decorator;\n\tconstructors[ EVENT ] = EventDirective;\n\tconstructors[ TRANSITION ] = Transition;\n\t\n\tvar specialElements = {\n\t\tdoctype: Doctype,\n\t\tform: Form,\n\t\tinput: Input,\n\t\toption: Option,\n\t\tselect: Select,\n\t\ttextarea: Textarea\n\t};\n\t\n\tfunction createItem ( options ) {\n\t\tif ( typeof options.template === 'string' ) {\n\t\t\treturn new Text( options );\n\t\t}\n\t\n\t\tif ( options.template.t === ELEMENT ) {\n\t\t\t// could be component or element\n\t\t\tvar ComponentConstructor = getComponentConstructor( options.parentFragment.ractive, options.template.e );\n\t\t\tif ( ComponentConstructor ) {\n\t\t\t\treturn new Component( options, ComponentConstructor );\n\t\t\t}\n\t\n\t\t\tvar tagName = options.template.e.toLowerCase();\n\t\n\t\t\tvar ElementConstructor = specialElements[ tagName ] || Element;\n\t\t\treturn new ElementConstructor( options );\n\t\t}\n\t\n\t\tvar Item;\n\t\n\t\t// component mappings are a special case of attribute\n\t\tif ( options.template.t === ATTRIBUTE ) {\n\t\t\tvar el = options.owner;\n\t\t\tif ( !el || ( el.type !== COMPONENT && el.type !== ELEMENT ) ) {\n\t\t\t\tel = findElement( options.parentFragment );\n\t\t\t}\n\t\t\toptions.element = el;\n\t\n\t\t\tItem = el.type === COMPONENT ? Mapping : Attribute;\n\t\t} else {\n\t\t\tItem = constructors[ options.template.t ];\n\t\t}\n\t\n\t\tif ( !Item ) throw new Error( (\"Unrecognised item type \" + (options.template.t)) );\n\t\n\t\treturn new Item( options );\n\t}\n\t\n\t// TODO all this code needs to die\n\tfunction processItems ( items, values, guid, counter ) {\n\t\tif ( counter === void 0 ) counter = 0;\n\t\n\t\treturn items.map( function ( item ) {\n\t\t\tif ( item.type === TEXT ) {\n\t\t\t\treturn item.template;\n\t\t\t}\n\t\n\t\t\tif ( item.fragment ) {\n\t\t\t\tif ( item.fragment.iterations ) {\n\t\t\t\t\treturn item.fragment.iterations.map( function ( fragment ) {\n\t\t\t\t\t\treturn processItems( fragment.items, values, guid, counter );\n\t\t\t\t\t}).join( '' );\n\t\t\t\t} else {\n\t\t\t\t\treturn processItems( item.fragment.items, values, guid, counter );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar placeholderId = \"\" + guid + \"-\" + (counter++);\n\t\t\tvar model = item.model || item.newModel;\n\t\n\t\t\tvalues[ placeholderId ] = model ?\n\t\t\t\tmodel.wrapper ?\n\t\t\t\t\tmodel.wrapper.value :\n\t\t\t\t\tmodel.get() :\n\t\t\t\tundefined;\n\t\n\t\t\treturn '${' + placeholderId + '}';\n\t\t}).join( '' );\n\t}\n\t\n\tfunction unrenderAndDestroy$1 ( item ) {\n\t\titem.unrender( true );\n\t}\n\t\n\tvar Fragment = function Fragment ( options ) {\n\t\tthis.owner = options.owner; // The item that owns this fragment - an element, section, partial, or attribute\n\t\n\t\tthis.isRoot = !options.owner.parentFragment;\n\t\tthis.parent = this.isRoot ? null : this.owner.parentFragment;\n\t\tthis.ractive = options.ractive || ( this.isRoot ? options.owner : this.parent.ractive );\n\t\n\t\tthis.componentParent = ( this.isRoot && this.ractive.component ) ? this.ractive.component.parentFragment : null;\n\t\n\t\tthis.context = null;\n\t\tthis.rendered = false;\n\t\n\t\t// encapsulated styles should be inherited until they get applied by an element\n\t\tthis.cssIds = 'cssIds' in options ? options.cssIds : ( this.parent ? this.parent.cssIds : null );\n\t\n\t\tthis.resolvers = [];\n\t\n\t\tthis.dirty = false;\n\t\tthis.dirtyArgs = this.dirtyValue = true; // TODO getArgsList is nonsense - should deprecate legacy directives style\n\t\n\t\tthis.template = options.template || [];\n\t\tthis.createItems();\n\t};\n\t\n\tFragment.prototype.bind = function bind$1 ( context ) {\n\t\tthis.context = context;\n\t\tthis.items.forEach( bind$2 );\n\t\tthis.bound = true;\n\t\n\t\t// in rare cases, a forced resolution (or similar) will cause the\n\t\t// fragment to be dirty before it's even finished binding. In those\n\t\t// cases we update immediately\n\t\tif ( this.dirty ) this.update();\n\t\n\t\treturn this;\n\t};\n\t\n\tFragment.prototype.bubble = function bubble () {\n\t\tthis.dirtyArgs = this.dirtyValue = true;\n\t\n\t\tif ( !this.dirty ) {\n\t\t\tthis.dirty = true;\n\t\n\t\t\tif ( this.isRoot ) { // TODO encapsulate 'is component root, but not overall root' check?\n\t\t\t\tif ( this.ractive.component ) {\n\t\t\t\t\tthis.ractive.component.bubble();\n\t\t\t\t} else if ( this.bound ) {\n\t\t\t\t\trunloop.addFragment( this );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.owner.bubble();\n\t\t\t}\n\t\t}\n\t};\n\t\n\tFragment.prototype.createItems = function createItems () {\n\t\t// this is a hot code path\n\t\tvar this$1 = this;\n\t\n\t\t\tvar max = this.template.length;\n\t\tthis.items = [];\n\t\tfor ( var i = 0; i < max; i++ ) {\n\t\t\tthis$1.items[i] = createItem({ parentFragment: this$1, template: this$1.template[i], index: i });\n\t\t}\n\t};\n\t\n\tFragment.prototype.destroyed = function destroyed () {\n\t\tthis.items.forEach( function ( i ) { return i.destroyed(); } );\n\t};\n\t\n\tFragment.prototype.detach = function detach () {\n\t\tvar docFrag = createDocumentFragment();\n\t\tthis.items.forEach( function ( item ) { return docFrag.appendChild( item.detach() ); } );\n\t\treturn docFrag;\n\t};\n\t\n\tFragment.prototype.find = function find ( selector ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar len = this.items.length;\n\t\tvar i;\n\t\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tvar found = this$1.items[i].find( selector );\n\t\t\tif ( found ) return found;\n\t\t}\n\t};\n\t\n\tFragment.prototype.findAll = function findAll ( selector, query ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( this.items ) {\n\t\t\tvar len = this.items.length;\n\t\t\tvar i;\n\t\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\t\tvar item = this$1.items[i];\n\t\n\t\t\t\tif ( item.findAll ) {\n\t\t\t\t\titem.findAll( selector, query );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn query;\n\t};\n\t\n\tFragment.prototype.findComponent = function findComponent ( name ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar len = this.items.length;\n\t\tvar i;\n\t\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tvar found = this$1.items[i].findComponent( name );\n\t\t\tif ( found ) return found;\n\t\t}\n\t};\n\t\n\tFragment.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tif ( this.items ) {\n\t\t\tvar len = this.items.length;\n\t\t\tvar i;\n\t\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\t\tvar item = this$1.items[i];\n\t\n\t\t\t\tif ( item.findAllComponents ) {\n\t\t\t\t\titem.findAllComponents( name, query );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn query;\n\t};\n\t\n\tFragment.prototype.findContext = function findContext () {\n\t\tvar fragment = this;\n\t\twhile ( fragment && !fragment.context ) fragment = fragment.parent;\n\t\tif ( !fragment ) return this.ractive.viewmodel;\n\t\telse return fragment.context;\n\t};\n\t\n\tFragment.prototype.findNextNode = function findNextNode ( item ) {\n\t\t// search for the next node going forward\n\t\tvar this$1 = this;\n\t\n\t\t\tfor ( var i = item.index + 1; i < this$1.items.length; i++ ) {\n\t\t\tif ( !this$1.items[ i ] ) continue;\n\t\n\t\t\tvar node = this$1.items[ i ].firstNode( true );\n\t\t\tif ( node ) return node;\n\t\t}\n\t\n\t\t// if this is the root fragment, and there are no more items,\n\t\t// it means we're at the end...\n\t\tif ( this.isRoot ) {\n\t\t\tif ( this.ractive.component ) {\n\t\t\t\treturn this.ractive.component.parentFragment.findNextNode( this.ractive.component );\n\t\t\t}\n\t\n\t\t\t// TODO possible edge case with other content\n\t\t\t// appended to this.ractive.el?\n\t\t\treturn null;\n\t\t}\n\t\n\t\treturn this.owner.findNextNode( this ); // the argument is in case the parent is a RepeatedFragment\n\t};\n\t\n\tFragment.prototype.findParentNode = function findParentNode () {\n\t\tvar fragment = this;\n\t\n\t\tdo {\n\t\t\tif ( fragment.owner.type === ELEMENT ) {\n\t\t\t\treturn fragment.owner.node;\n\t\t\t}\n\t\n\t\t\tif ( fragment.isRoot && !fragment.ractive.component ) { // TODO encapsulate check\n\t\t\t\treturn fragment.ractive.el;\n\t\t\t}\n\t\n\t\t\tif ( fragment.owner.type === YIELDER ) {\n\t\t\t\tfragment = fragment.owner.containerFragment;\n\t\t\t} else {\n\t\t\t\tfragment = fragment.componentParent || fragment.parent; // TODO ugh\n\t\t\t}\n\t\t} while ( fragment );\n\t\n\t\tthrow new Error( 'Could not find parent node' ); // TODO link to issue tracker\n\t};\n\t\n\tFragment.prototype.findRepeatingFragment = function findRepeatingFragment () {\n\t\tvar fragment = this;\n\t\t// TODO better check than fragment.parent.iterations\n\t\twhile ( ( fragment.parent || fragment.componentParent ) && !fragment.isIteration ) {\n\t\t\tfragment = fragment.parent || fragment.componentParent;\n\t\t}\n\t\n\t\treturn fragment;\n\t};\n\t\n\tFragment.prototype.firstNode = function firstNode ( skipParent ) {\n\t\tvar this$1 = this;\n\t\n\t\t\tvar node;\n\t\tfor ( var i = 0; i < this$1.items.length; i++ ) {\n\t\t\tnode = this$1.items[i].firstNode( true );\n\t\n\t\t\tif ( node ) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( skipParent ) return null;\n\t\n\t\treturn this.parent.findNextNode( this.owner );\n\t};\n\t\n\t// TODO ideally, this would be deprecated in favour of an\n\t// expression-like approach\n\tFragment.prototype.getArgsList = function getArgsList () {\n\t\tif ( this.dirtyArgs ) {\n\t\t\tvar values = {};\n\t\t\tvar source = processItems( this.items, values, this.ractive._guid );\n\t\t\tvar parsed = parseJSON( '[' + source + ']', values );\n\t\n\t\t\tthis.argsList = parsed ?\n\t\t\t\tparsed.value :\n\t\t\t\t[ this.toString() ];\n\t\n\t\t\tthis.dirtyArgs = false;\n\t\t}\n\t\n\t\treturn this.argsList;\n\t};\n\t\n\tFragment.prototype.rebinding = function rebinding ( next ) {\n\t\tthis.context = next;\n\t};\n\t\n\tFragment.prototype.render = function render ( target, occupants ) {\n\t\tif ( this.rendered ) throw new Error( 'Fragment is already rendered!' );\n\t\tthis.rendered = true;\n\t\n\t\tthis.items.forEach( function ( item ) { return item.render( target, occupants ); } );\n\t};\n\t\n\tFragment.prototype.resetTemplate = function resetTemplate ( template ) {\n\t\tvar wasBound = this.bound;\n\t\tvar wasRendered = this.rendered;\n\t\n\t\t// TODO ensure transitions are disabled globally during reset\n\t\n\t\tif ( wasBound ) {\n\t\t\tif ( wasRendered ) this.unrender( true );\n\t\t\tthis.unbind();\n\t\t}\n\t\n\t\tthis.template = template;\n\t\tthis.createItems();\n\t\n\t\tif ( wasBound ) {\n\t\t\tthis.bind( this.context );\n\t\n\t\t\tif ( wasRendered ) {\n\t\t\t\tvar parentNode = this.findParentNode();\n\t\t\t\tvar anchor = this.parent ? this.parent.findNextNode( this.owner ) : null;\n\t\n\t\t\t\tif ( anchor ) {\n\t\t\t\t\tvar docFrag = createDocumentFragment();\n\t\t\t\t\tthis.render( docFrag );\n\t\t\t\t\tparentNode.insertBefore( docFrag, anchor );\n\t\t\t\t} else {\n\t\t\t\t\tthis.render( parentNode );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\tFragment.prototype.resolve = function resolve ( template, callback ) {\n\t\tif ( !this.context && this.parent.resolve ) {\n\t\t\treturn this.parent.resolve( template, callback );\n\t\t}\n\t\n\t\tvar resolver = new ReferenceResolver( this, template, callback );\n\t\tthis.resolvers.push( resolver );\n\t\n\t\treturn resolver; // so we can e.g. force resolution\n\t};\n\t\n\tFragment.prototype.shuffled = function shuffled () {\n\t\tthis.items.forEach( function ( i ) { return i.shuffled(); } );\n\t};\n\t\n\tFragment.prototype.toHtml = function toHtml () {\n\t\treturn this.toString();\n\t};\n\t\n\tFragment.prototype.toString = function toString$1 ( escape ) {\n\t\treturn this.items.map( escape ? toEscapedString : toString$2 ).join( '' );\n\t};\n\t\n\tFragment.prototype.unbind = function unbind$1 () {\n\t\tthis.items.forEach( unbind$1$1 );\n\t\tthis.bound = false;\n\t\n\t\treturn this;\n\t};\n\t\n\tFragment.prototype.unrender = function unrender$1 ( shouldDestroy ) {\n\t\tthis.items.forEach( shouldDestroy ? unrenderAndDestroy$1 : unrender$1$1 );\n\t\tthis.rendered = false;\n\t};\n\t\n\tFragment.prototype.update = function update$1 () {\n\t\tif ( this.dirty ) {\n\t\t\tif ( !this.updating ) {\n\t\t\t\tthis.dirty = false;\n\t\t\t\tthis.updating = true;\n\t\t\t\tthis.items.forEach( update$1$1 );\n\t\t\t\tthis.updating = false;\n\t\t\t} else if ( this.isRoot ) {\n\t\t\t\trunloop.addFragmentToRoot( this );\n\t\t\t}\n\t\t}\n\t};\n\t\n\tFragment.prototype.valueOf = function valueOf () {\n\t\tif ( this.items.length === 1 ) {\n\t\t\treturn this.items[0].valueOf();\n\t\t}\n\t\n\t\tif ( this.dirtyValue ) {\n\t\t\tvar values = {};\n\t\t\tvar source = processItems( this.items, values, this.ractive._guid );\n\t\t\tvar parsed = parseJSON( source, values );\n\t\n\t\t\tthis.value = parsed ?\n\t\t\t\tparsed.value :\n\t\t\t\tthis.toString();\n\t\n\t\t\tthis.dirtyValue = false;\n\t\t}\n\t\n\t\treturn this.value;\n\t};\n\t\n\t// TODO should resetTemplate be asynchronous? i.e. should it be a case\n\t// of outro, update template, intro? I reckon probably not, since that\n\t// could be achieved with unrender-resetTemplate-render. Also, it should\n\t// conceptually be similar to resetPartial, which couldn't be async\n\t\n\tfunction Ractive$resetTemplate ( template ) {\n\t\ttemplateConfigurator.init( null, this, { template: template });\n\t\n\t\tvar transitionsEnabled = this.transitionsEnabled;\n\t\tthis.transitionsEnabled = false;\n\t\n\t\t// Is this is a component, we need to set the `shouldDestroy`\n\t\t// flag, otherwise it will assume by default that a parent node\n\t\t// will be detached, and therefore it doesn't need to bother\n\t\t// detaching its own nodes\n\t\tvar component = this.component;\n\t\tif ( component ) component.shouldDestroy = true;\n\t\tthis.unrender();\n\t\tif ( component ) component.shouldDestroy = false;\n\t\n\t\t// remove existing fragment and create new one\n\t\tthis.fragment.unbind().unrender( true );\n\t\n\t\tthis.fragment = new Fragment({\n\t\t\ttemplate: this.template,\n\t\t\troot: this,\n\t\t\towner: this\n\t\t});\n\t\n\t\tvar docFrag = createDocumentFragment();\n\t\tthis.fragment.bind( this.viewmodel ).render( docFrag );\n\t\n\t\t// if this is a component, its el may not be valid, so find a\n\t\t// target based on the component container\n\t\tif ( component ) {\n\t\t\tthis.fragment.findParentNode().insertBefore( docFrag, component.findNextNode() );\n\t\t} else {\n\t\t\tthis.el.insertBefore( docFrag, this.anchor );\n\t\t}\n\t\n\t\tthis.transitionsEnabled = transitionsEnabled;\n\t}\n\t\n\tvar reverse$1 = makeArrayMethod( 'reverse' ).path;\n\t\n\tfunction Ractive$set ( keypath, value ) {\n\t\tvar ractive = this;\n\t\n\t\treturn set$1( ractive, build( ractive, keypath, value ) );\n\t}\n\t\n\tvar shift$1 = makeArrayMethod( 'shift' ).path;\n\t\n\tvar sort$1 = makeArrayMethod( 'sort' ).path;\n\t\n\tvar splice$1 = makeArrayMethod( 'splice' ).path;\n\t\n\tfunction Ractive$subtract ( keypath, d ) {\n\t\treturn add$1( this, keypath, ( d === undefined ? -1 : -d ) );\n\t}\n\t\n\tvar teardownHook$1 = new Hook( 'teardown' );\n\t\n\t// Teardown. This goes through the root fragment and all its children, removing observers\n\t// and generally cleaning up after itself\n\t\n\tfunction Ractive$teardown () {\n\t\tif ( this.torndown ) {\n\t\t\twarnIfDebug( 'ractive.teardown() was called on a Ractive instance that was already torn down' );\n\t\t\treturn Promise$1.resolve();\n\t\t}\n\t\n\t\tthis.torndown = true;\n\t\tthis.fragment.unbind();\n\t\tthis.viewmodel.teardown();\n\t\n\t\tthis._observers.forEach( cancel$1 );\n\t\n\t\tif ( this.fragment.rendered && this.el.__ractive_instances__ ) {\n\t\t\tremoveFromArray( this.el.__ractive_instances__, this );\n\t\t}\n\t\n\t\tthis.shouldDestroy = true;\n\t\tvar promise = ( this.fragment.rendered ? this.unrender() : Promise$1.resolve() );\n\t\n\t\tteardownHook$1.fire( this );\n\t\n\t\treturn promise;\n\t}\n\t\n\tfunction Ractive$toggle ( keypath ) {\n\t\tif ( typeof keypath !== 'string' ) {\n\t\t\tthrow new TypeError( badArguments );\n\t\t}\n\t\n\t\treturn set$1( this, gather( this, keypath ).map( function ( m ) { return [ m, !m.get() ]; } ) );\n\t}\n\t\n\tfunction Ractive$toCSS() {\n\t\tvar cssIds = [ this.cssId ].concat( this.findAllComponents().map( function ( c ) { return c.cssId; } ) );\n\t\tvar uniqueCssIds = Object.keys(cssIds.reduce( function ( ids, id ) { return (ids[id] = true, ids); }, {}));\n\t\treturn getCSS( uniqueCssIds );\n\t}\n\t\n\tfunction Ractive$toHTML () {\n\t\treturn this.fragment.toString( true );\n\t}\n\t\n\tfunction Ractive$transition ( name, node, params ) {\n\t\n\t\tif ( node instanceof HTMLElement ) {\n\t\t\t// good to go\n\t\t}\n\t\telse if ( isObject( node ) ) {\n\t\t\t// omitted, use event node\n\t\t\tparams = node;\n\t\t}\n\t\n\t\t// if we allow query selector, then it won't work\n\t\t// simple params like \"fast\"\n\t\n\t\t// else if ( typeof node === 'string' ) {\n\t\t// \t// query selector\n\t\t// \tnode = this.find( node )\n\t\t// }\n\t\n\t\tnode = node || this.event.node;\n\t\n\t\tif ( !node || !node._ractive ) {\n\t\t\tfatal( (\"No node was supplied for transition \" + name) );\n\t\t}\n\t\n\t\tparams = params || {};\n\t\tvar owner = node._ractive.proxy;\n\t\tvar transition = new Transition({ owner: owner, parentFragment: owner.parentFragment, name: name, params: params });\n\t\ttransition.bind();\n\t\n\t\tvar promise = runloop.start( this, true );\n\t\trunloop.registerTransition( transition );\n\t\trunloop.end();\n\t\n\t\tpromise.then( function () { return transition.unbind(); } );\n\t\treturn promise;\n\t}\n\t\n\tfunction unlink$2( here ) {\n\t\tvar promise = runloop.start();\n\t\tthis.viewmodel.joinAll( splitKeypath( here ), { lastLink: false } ).unlink();\n\t\trunloop.end();\n\t\treturn promise;\n\t}\n\t\n\tvar unrenderHook$1 = new Hook( 'unrender' );\n\t\n\tfunction Ractive$unrender () {\n\t\tif ( !this.fragment.rendered ) {\n\t\t\twarnIfDebug( 'ractive.unrender() was called on a Ractive instance that was not rendered' );\n\t\t\treturn Promise$1.resolve();\n\t\t}\n\t\n\t\tvar promise = runloop.start( this, true );\n\t\n\t\t// If this is a component, and the component isn't marked for destruction,\n\t\t// don't detach nodes from the DOM unnecessarily\n\t\tvar shouldDestroy = !this.component || this.component.shouldDestroy || this.shouldDestroy;\n\t\tthis.fragment.unrender( shouldDestroy );\n\t\n\t\tremoveFromArray( this.el.__ractive_instances__, this );\n\t\n\t\tunrenderHook$1.fire( this );\n\t\n\t\trunloop.end();\n\t\treturn promise;\n\t}\n\t\n\tvar unshift$1 = makeArrayMethod( 'unshift' ).path;\n\t\n\tfunction Ractive$updateModel ( keypath, cascade ) {\n\t\tvar promise = runloop.start( this, true );\n\t\n\t\tif ( !keypath ) {\n\t\t\tthis.viewmodel.updateFromBindings( true );\n\t\t} else {\n\t\t\tthis.viewmodel.joinAll( splitKeypath( keypath ) ).updateFromBindings( cascade !== false );\n\t\t}\n\t\n\t\trunloop.end();\n\t\n\t\treturn promise;\n\t}\n\t\n\tvar proto = {\n\t\tadd: Ractive$add,\n\t\tanimate: Ractive$animate,\n\t\tdetach: Ractive$detach,\n\t\tfind: Ractive$find,\n\t\tfindAll: Ractive$findAll,\n\t\tfindAllComponents: Ractive$findAllComponents,\n\t\tfindComponent: Ractive$findComponent,\n\t\tfindContainer: Ractive$findContainer,\n\t\tfindParent: Ractive$findParent,\n\t\tfire: Ractive$fire,\n\t\tget: Ractive$get,\n\t\tgetNodeInfo: getNodeInfo,\n\t\tinsert: Ractive$insert,\n\t\tlink: link$2,\n\t\tmerge: thisRactive$merge,\n\t\tobserve: observe,\n\t\tobserveList: observeList,\n\t\tobserveOnce: observeOnce,\n\t\t// TODO reinstate these\n\t\t// observeListOnce,\n\t\toff: Ractive$off,\n\t\ton: Ractive$on,\n\t\tonce: Ractive$once,\n\t\tpop: pop$1,\n\t\tpush: push$1,\n\t\trender: Ractive$render,\n\t\treset: Ractive$reset,\n\t\tresetPartial: resetPartial,\n\t\tresetTemplate: Ractive$resetTemplate,\n\t\treverse: reverse$1,\n\t\tset: Ractive$set,\n\t\tshift: shift$1,\n\t\tsort: sort$1,\n\t\tsplice: splice$1,\n\t\tsubtract: Ractive$subtract,\n\t\tteardown: Ractive$teardown,\n\t\ttoggle: Ractive$toggle,\n\t\ttoCSS: Ractive$toCSS,\n\t\ttoCss: Ractive$toCSS,\n\t\ttoHTML: Ractive$toHTML,\n\t\ttoHtml: Ractive$toHTML,\n\t\ttransition: Ractive$transition,\n\t\tunlink: unlink$2,\n\t\tunrender: Ractive$unrender,\n\t\tunshift: unshift$1,\n\t\tupdate: Ractive$update,\n\t\tupdateModel: Ractive$updateModel\n\t};\n\t\n\tvar wrap$1 = function ( method, superMethod, force ) {\n\t\n\t\tif ( force || needsSuper( method, superMethod ) )  {\n\t\n\t\t\treturn function () {\n\t\n\t\t\t\tvar hasSuper = ( '_super' in this ), _super = this._super, result;\n\t\n\t\t\t\tthis._super = superMethod;\n\t\n\t\t\t\tresult = method.apply( this, arguments );\n\t\n\t\t\t\tif ( hasSuper ) {\n\t\t\t\t\tthis._super = _super;\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\n\t\telse {\n\t\t\treturn method;\n\t\t}\n\t};\n\t\n\tfunction needsSuper ( method, superMethod ) {\n\t\treturn typeof superMethod === 'function' && /_super/.test( method );\n\t}\n\t\n\tfunction unwrap ( Child ) {\n\t\tvar options = {};\n\t\n\t\twhile ( Child ) {\n\t\t\taddRegistries( Child, options );\n\t\t\taddOtherOptions( Child, options );\n\t\n\t\t\tif ( Child._Parent !== Ractive ) {\n\t\t\t\tChild = Child._Parent;\n\t\t\t} else {\n\t\t\t\tChild = false;\n\t\t\t}\n\t\t}\n\t\n\t\treturn options;\n\t}\n\t\n\tfunction addRegistries ( Child, options ) {\n\t\tregistries.forEach( function ( r ) {\n\t\t\taddRegistry(\n\t\t\t\tr.useDefaults ? Child.prototype : Child,\n\t\t\t\toptions, r.name );\n\t\t});\n\t}\n\t\n\tfunction addRegistry ( target, options, name ) {\n\t\tvar registry, keys = Object.keys( target[ name ] );\n\t\n\t\tif ( !keys.length ) { return; }\n\t\n\t\tif ( !( registry = options[ name ] ) ) {\n\t\t\tregistry = options[ name ] = {};\n\t\t}\n\t\n\t\tkeys\n\t\t\t.filter( function ( key ) { return !( key in registry ); } )\n\t\t\t.forEach( function ( key ) { return registry[ key ] = target[ name ][ key ]; } );\n\t}\n\t\n\tfunction addOtherOptions ( Child, options ) {\n\t\tObject.keys( Child.prototype ).forEach( function ( key ) {\n\t\t\tif ( key === 'computed' ) { return; }\n\t\n\t\t\tvar value = Child.prototype[ key ];\n\t\n\t\t\tif ( !( key in options ) ) {\n\t\t\t\toptions[ key ] = value._method ? value._method : value;\n\t\t\t}\n\t\n\t\t\t// is it a wrapped function?\n\t\t\telse if ( typeof options[ key ] === 'function'\n\t\t\t\t\t&& typeof value === 'function'\n\t\t\t\t\t&& options[ key ]._method ) {\n\t\n\t\t\t\tvar result, needsSuper = value._method;\n\t\n\t\t\t\tif ( needsSuper ) { value = value._method; }\n\t\n\t\t\t\t// rewrap bound directly to parent fn\n\t\t\t\tresult = wrap$1( options[ key ]._method, value );\n\t\n\t\t\t\tif ( needsSuper ) { result._method = result; }\n\t\n\t\t\t\toptions[ key ] = result;\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction extend$3 () {\n\t\tvar options = [], len = arguments.length;\n\t\twhile ( len-- ) options[ len ] = arguments[ len ];\n\t\n\t\tif( !options.length ) {\n\t\t\treturn extendOne( this );\n\t\t} else {\n\t\t\treturn options.reduce( extendOne, this );\n\t\t}\n\t}\n\t\n\tfunction extendOne ( Parent, options ) {\n\t\tif ( options === void 0 ) options = {};\n\t\n\t\tvar Child, proto;\n\t\n\t\t// if we're extending with another Ractive instance...\n\t\t//\n\t\t//   var Human = Ractive.extend(...), Spider = Ractive.extend(...);\n\t\t//   var Spiderman = Human.extend( Spider );\n\t\t//\n\t\t// ...inherit prototype methods and default options as well\n\t\tif ( options.prototype instanceof Ractive ) {\n\t\t\toptions = unwrap( options );\n\t\t}\n\t\n\t\tChild = function ( options ) {\n\t\t\tif ( !( this instanceof Child ) ) return new Child( options );\n\t\n\t\t\tconstruct( this, options || {} );\n\t\t\tinitialise( this, options || {}, {} );\n\t\t};\n\t\n\t\tproto = create( Parent.prototype );\n\t\tproto.constructor = Child;\n\t\n\t\t// Static properties\n\t\tdefineProperties( Child, {\n\t\t\t// alias prototype as defaults\n\t\t\tdefaults: { value: proto },\n\t\n\t\t\t// extendable\n\t\t\textend: { value: extend$3, writable: true, configurable: true },\n\t\n\t\t\t// Parent - for IE8, can't use Object.getPrototypeOf\n\t\t\t_Parent: { value: Parent }\n\t\t});\n\t\n\t\t// extend configuration\n\t\tconfig.extend( Parent, proto, options );\n\t\n\t\tdataConfigurator.extend( Parent, proto, options );\n\t\n\t\tif ( options.computed ) {\n\t\t\tproto.computed = extend$1( create( Parent.prototype.computed ), options.computed );\n\t\t}\n\t\n\t\tChild.prototype = proto;\n\t\n\t\treturn Child;\n\t}\n\t\n\tfunction joinKeys () {\n\t\tvar keys = [], len = arguments.length;\n\t\twhile ( len-- ) keys[ len ] = arguments[ len ];\n\t\n\t\treturn keys.map( escapeKey ).join( '.' );\n\t}\n\t\n\tfunction splitKeypath$1 ( keypath ) {\n\t\treturn splitKeypath( keypath ).map( unescapeKey );\n\t}\n\t\n\t// Ractive.js makes liberal use of things like Array.prototype.indexOf. In\n\t// older browsers, these are made available via a shim - here, we do a quick\n\t// pre-flight check to make sure that either a) we're not in a shit browser,\n\t// or b) we're using a Ractive-legacy.js build\n\tvar FUNCTION = 'function';\n\t\n\tif (\n\t\ttypeof Date.now !== FUNCTION                 ||\n\t\ttypeof String.prototype.trim !== FUNCTION    ||\n\t\ttypeof Object.keys !== FUNCTION              ||\n\t\ttypeof Array.prototype.indexOf !== FUNCTION  ||\n\t\ttypeof Array.prototype.forEach !== FUNCTION  ||\n\t\ttypeof Array.prototype.map !== FUNCTION      ||\n\t\ttypeof Array.prototype.filter !== FUNCTION   ||\n\t\t( win && typeof win.addEventListener !== FUNCTION )\n\t) {\n\t\tthrow new Error( 'It looks like you\\'re attempting to use Ractive.js in an older browser. You\\'ll need to use one of the \\'legacy builds\\' in order to continue - see http://docs.ractivejs.org/latest/legacy-builds for more information.' );\n\t}\n\t\n\tfunction Ractive ( options ) {\n\t\tif ( !( this instanceof Ractive ) ) return new Ractive( options );\n\t\n\t\tconstruct( this, options || {} );\n\t\tinitialise( this, options || {}, {} );\n\t}\n\t\n\textend$1( Ractive.prototype, proto, defaults );\n\tRactive.prototype.constructor = Ractive;\n\t\n\t// alias prototype as `defaults`\n\tRactive.defaults = Ractive.prototype;\n\t\n\t// static properties\n\tdefineProperties( Ractive, {\n\t\n\t\t// debug flag\n\t\tDEBUG:          { writable: true, value: true },\n\t\tDEBUG_PROMISES: { writable: true, value: true },\n\t\n\t\t// static methods:\n\t\textend:         { value: extend$3 },\n\t\tescapeKey:      { value: escapeKey },\n\t\tgetNodeInfo:    { value: staticInfo },\n\t\tjoinKeys:       { value: joinKeys },\n\t\tparse:          { value: parse },\n\t\tsplitKeypath:   { value: splitKeypath$1 },\n\t\tunescapeKey:    { value: unescapeKey },\n\t\tgetCSS:         { value: getCSS },\n\t\n\t\t// namespaced constructors\n\t\tPromise:        { value: Promise$1 },\n\t\n\t\t// support\n\t\tenhance:        { writable: true, value: false },\n\t\tsvg:            { value: svg },\n\t\tmagic:          { value: magic },\n\t\n\t\t// version\n\t\tVERSION:        { value: '0.8.0' },\n\t\n\t\t// plugins\n\t\tadaptors:       { writable: true, value: {} },\n\t\tcomponents:     { writable: true, value: {} },\n\t\tdecorators:     { writable: true, value: {} },\n\t\teasing:         { writable: true, value: easing },\n\t\tevents:         { writable: true, value: {} },\n\t\tinterpolators:  { writable: true, value: interpolators },\n\t\tpartials:       { writable: true, value: {} },\n\t\ttransitions:    { writable: true, value: {} }\n\t});\n\t\n\treturn Ractive;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"container\\\">\\t\\n    <div>\\n        <h3>Progressbar Width Handler</h3>\\n    </div>\\n\\t<div class=\\\"row-1\\\">\\n        <!-- Uses Ractive Component to encapsulate the progressbar template -->\\n\\t   <ProgressbarHandler />\\n    </div>\\t\\n</div>\\n\"\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _ractive = __webpack_require__(1);\n\t\n\tvar _ractive2 = _interopRequireDefault(_ractive);\n\t\n\tvar _progressbar = __webpack_require__(4);\n\t\n\tvar _progressbar2 = _interopRequireDefault(_progressbar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* Imports template to be used in ractive component */\n\t\n\t/* Creates a ractive component encapsulating properties and methods */\n\t/* Name- progressbarHandler.js\r\n\t  Description- The Ractive Component - ProgressbarHandler\r\n\t  Version- 1.0\r\n\t*/\n\t\n\tvar ProgressbarHandler = _ractive2.default.extend({\n\t    isolated: true,\n\t    template: _progressbar2.default,\n\t\n\t    /* Event handler method to be called upon width change button clicks */\n\t    changeInterval: function changeInterval(val) {\n\t\n\t        /* Holds the selected progress bar value from drop down */\n\t        var selectedBar = this.get('selectedProgressBar');\n\t        if (selectedBar == null) return;\n\t\n\t        var keyPath = 'progressbars[' + selectedBar + '].value';\n\t        var keyPath1 = 'progressbars[' + selectedBar + '].showvalue';\n\t\n\t        if (this.get(keyPath1) < 0) {\n\t            this.set(keyPath, 0);\n\t            this.set(keyPath1, 0);\n\t        }\n\t        var nextVal = this.get(keyPath1) + val;\n\t        this.set(keyPath1, nextVal);\n\t        this.animate(keyPath, nextVal);\n\t    },\n\t\n\t    /* Initializes data */\n\t    data: function data() {\n\t        return {\n\t            selectedProgressBar: 'select',\n\t            progressbars: [{ name: 'ProgressBar1', value: 0, showvalue: 0 }, { name: 'ProgressBar2', value: 0, showvalue: 0 }, { name: 'ProgressBar3', value: 0, showvalue: 0 }],\n\t            intervals: [+25, +10, -10, -25]\n\t        };\n\t    }\n\t});\n\t\n\texports.default = ProgressbarHandler;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"    <!-- This is the main template to show the progressbar content -->\\r\\n    <!-- Loop over the 'progressbars' property of ractive instance and show -->\\r\\n    {{#each progressbars}}\\r\\n        <div class=\\\"row-pb\\\">\\r\\n            <div class=\\\"display-label\\\">{{showvalue < 0 ? 0 : showvalue}}%</div>\\r\\n            <div class=\\\"progress-bar{{value > 100 ? 'R' : 'B'}}\\\" style=\\\"width: {{value > 100 ? 100 : ( value < 0 ? 0 : value )}}%\\\"></div>\\r\\n        </div>\\r\\n    {{/each}}\\r\\n\\r\\n    <!-- Progress-bar drop-down -->\\r\\n    <select value=\\\"{{selectedProgressBar}}\\\" class=\\\"row-select\\\">\\r\\n        <option selected value=\\\"select\\\">Select Progress Bar</option>\\r\\n        {{#each progressbars :index}}\\r\\n            <option value=\\\"{{index}}\\\">{{name}}</option>\\r\\n        {{/each}}\\r\\n    </select>\\r\\n\\r\\n    <!-- Width change buttons -->\\r\\n    {{#each intervals}}\\r\\n        <button disabled=\\\"{{selectedProgressBar == 'select'}}\\\" \\r\\n                on-click=\\\"@this.changeInterval(this)\\\" class=\\\"btns\\\">\\r\\n            {{this > 0 ? \\\"+\\\" : \\\"\\\"}}{{this}}\\r\\n        </button>\\r\\n    {{/each}}\"\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** /js/app-bundle.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e2ccfe4f452d62546a93\n **/","/* Name- app.js\r\n  Description- The entry js of the ractive application\r\n  Version- 1.0\r\n*/\r\n\r\nimport Ractive from 'ractive';  \r\nimport template from '../views/app.html'; /* Imports template to be used in ractive instance */\r\nimport ProgressbarHandlerComponent from './components/progressbarHandler'; /* Imports component to be used in ractive instance */\r\n\r\nrequire(\"../styles/scss/_build.scss\"); /* Incorporates the scss styles */\r\n\r\n/* Creates a new ractive instance,\r\n  el: the element to show the content,\r\n  template: the content to be shown,\r\n  components: the component modules to be used in the ractive instance */\r\nvar App = new Ractive({  \r\n  el: '#app',\r\n  template: template,\r\n  components: {\r\n      ProgressbarHandler: ProgressbarHandlerComponent\r\n  }\r\n});\r\n\r\nexport default App;\n\n\n/** WEBPACK FOOTER **\n ** ./app/js/app.js\n **/","/*\n\tRactive.js v0.8.0\n\tSun Oct 09 2016 20:58:50 GMT-0400 (EDT) - commit 7c01d1418d335a9a33c57929b24b8bac7c9c421a\n\n\thttp://ractivejs.org\n\thttp://twitter.com/RactiveJS\n\n\tReleased under the MIT License.\n*/\n\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  ((function() { var current = global.Ractive; var next = factory(); next.noConflict = function() { global.Ractive = current; return next; }; return global.Ractive = next; })());\n}(this, (function () { 'use strict';\n\nvar defaults = {\n\t// render placement:\n\tel:                     void 0,\n\tappend:\t\t\t\t    false,\n\n\t// template:\n\ttemplate:               null,\n\n\t// parse:\n\tdelimiters:             [ '{{', '}}' ],\n\ttripleDelimiters:       [ '{{{', '}}}' ],\n\tstaticDelimiters:       [ '[[', ']]' ],\n\tstaticTripleDelimiters: [ '[[[', ']]]' ],\n\tcsp: \t\t\t\t\ttrue,\n\tinterpolate:            false,\n\tpreserveWhitespace:     false,\n\tsanitize:               false,\n\tstripComments:          true,\n\n\t// data & binding:\n\tdata:                   {},\n\tcomputed:               {},\n\tmagic:                  false,\n\tmodifyArrays:           false,\n\tadapt:                  [],\n\tisolated:               false,\n\ttwoway:                 true,\n\tlazy:                   false,\n\n\t// transitions:\n\tnoIntro:                false,\n\ttransitionsEnabled:     true,\n\tcomplete:               void 0,\n\n\t// css:\n\tcss:                    null,\n\tnoCssTransform:         false\n};\n\n// These are a subset of the easing equations found at\n// https://raw.github.com/danro/easing-js - license info\n// follows:\n\n// --------------------------------------------------\n// easing.js v0.5.4\n// Generic set of easing functions with AMD support\n// https://github.com/danro/easing-js\n// This code may be freely distributed under the MIT license\n// http://danro.mit-license.org/\n// --------------------------------------------------\n// All functions adapted from Thomas Fuchs & Jeremy Kahn\n// Easing Equations (c) 2003 Robert Penner, BSD license\n// https://raw.github.com/danro/easing-js/master/LICENSE\n// --------------------------------------------------\n\n// In that library, the functions named easeIn, easeOut, and\n// easeInOut below are named easeInCubic, easeOutCubic, and\n// (you guessed it) easeInOutCubic.\n//\n// You can add additional easing functions to this list, and they\n// will be globally available.\n\n\nvar easing = {\n\tlinear: function ( pos ) { return pos; },\n\teaseIn: function ( pos ) { return Math.pow( pos, 3 ); },\n\teaseOut: function ( pos ) { return ( Math.pow( ( pos - 1 ), 3 ) + 1 ); },\n\teaseInOut: function ( pos ) {\n\t\tif ( ( pos /= 0.5 ) < 1 ) { return ( 0.5 * Math.pow( pos, 3 ) ); }\n\t\treturn ( 0.5 * ( Math.pow( ( pos - 2 ), 3 ) + 2 ) );\n\t}\n};\n\nvar legacy = null;\n\n/*global console, navigator */\n\nvar win = typeof window !== 'undefined' ? window : null;\nvar doc = win ? document : null;\n\nvar isClient = !!doc;\nvar isJsdom = ( typeof navigator !== 'undefined' && /jsDom/.test( navigator.appName ) );\nvar hasConsole = ( typeof console !== 'undefined' && typeof console.warn === 'function' && typeof console.warn.apply === 'function' );\n\nvar magic;\ntry {\n\tObject.defineProperty({}, 'test', { value: 0 });\n\tmagic = true;\n} catch ( e ) {\n\tmagic = false;\n}\n\nvar svg = doc ?\n\tdoc.implementation.hasFeature( 'http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1' ) :\n\tfalse;\n\nvar vendors = [ 'o', 'ms', 'moz', 'webkit' ];\n\nvar html   = 'http://www.w3.org/1999/xhtml';\nvar mathml = 'http://www.w3.org/1998/Math/MathML';\nvar svg$1    = 'http://www.w3.org/2000/svg';\nvar xlink  = 'http://www.w3.org/1999/xlink';\nvar xml    = 'http://www.w3.org/XML/1998/namespace';\nvar xmlns  = 'http://www.w3.org/2000/xmlns';\n\nvar namespaces = { html: html, mathml: mathml, svg: svg$1, xlink: xlink, xml: xml, xmlns: xmlns };\n\nvar createElement;\nvar matches;\nvar div;\nvar methodNames;\nvar unprefixed;\nvar prefixed;\nvar i;\nvar j;\nvar makeFunction;\n\n// Test for SVG support\nif ( !svg ) {\n\tcreateElement = function ( type, ns, extend ) {\n\t\tif ( ns && ns !== html ) {\n\t\t\tthrow 'This browser does not support namespaces other than http://www.w3.org/1999/xhtml. The most likely cause of this error is that you\\'re trying to render SVG in an older browser. See http://docs.ractivejs.org/latest/svg-and-older-browsers for more information';\n\t\t}\n\n\t\treturn extend ?\n\t\t\tdoc.createElement( type, extend ) :\n\t\t\tdoc.createElement( type );\n\t};\n} else {\n\tcreateElement = function ( type, ns, extend ) {\n\t\tif ( !ns || ns === html ) {\n\t\t\treturn extend ?\n\t\t\t\tdoc.createElement( type, extend ) :\n\t\t\t\tdoc.createElement( type );\n\t\t}\n\n\t\treturn extend ?\n\t\t\tdoc.createElementNS( ns, type, extend ) :\n\t\t\tdoc.createElementNS( ns, type );\n\t};\n}\n\nfunction createDocumentFragment () {\n\treturn doc.createDocumentFragment();\n}\n\nfunction getElement ( input ) {\n\tvar output;\n\n\tif ( !input || typeof input === 'boolean' ) { return; }\n\n\tif ( !win || !doc || !input ) {\n\t\treturn null;\n\t}\n\n\t// We already have a DOM node - no work to do. (Duck typing alert!)\n\tif ( input.nodeType ) {\n\t\treturn input;\n\t}\n\n\t// Get node from string\n\tif ( typeof input === 'string' ) {\n\t\t// try ID first\n\t\toutput = doc.getElementById( input );\n\n\t\t// then as selector, if possible\n\t\tif ( !output && doc.querySelector ) {\n\t\t\toutput = doc.querySelector( input );\n\t\t}\n\n\t\t// did it work?\n\t\tif ( output && output.nodeType ) {\n\t\t\treturn output;\n\t\t}\n\t}\n\n\t// If we've been given a collection (jQuery, Zepto etc), extract the first item\n\tif ( input[0] && input[0].nodeType ) {\n\t\treturn input[0];\n\t}\n\n\treturn null;\n}\n\nif ( !isClient ) {\n\tmatches = null;\n} else {\n\tdiv = createElement( 'div' );\n\tmethodNames = [ 'matches', 'matchesSelector' ];\n\n\tmakeFunction = function ( methodName ) {\n\t\treturn function ( node, selector ) {\n\t\t\treturn node[ methodName ]( selector );\n\t\t};\n\t};\n\n\ti = methodNames.length;\n\n\twhile ( i-- && !matches ) {\n\t\tunprefixed = methodNames[i];\n\n\t\tif ( div[ unprefixed ] ) {\n\t\t\tmatches = makeFunction( unprefixed );\n\t\t} else {\n\t\t\tj = vendors.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\tprefixed = vendors[i] + unprefixed.substr( 0, 1 ).toUpperCase() + unprefixed.substring( 1 );\n\n\t\t\t\tif ( div[ prefixed ] ) {\n\t\t\t\t\tmatches = makeFunction( prefixed );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// IE8...\n\tif ( !matches ) {\n\t\tmatches = function ( node, selector ) {\n\t\t\tvar nodes, parentNode, i;\n\n\t\t\tparentNode = node.parentNode;\n\n\t\t\tif ( !parentNode ) {\n\t\t\t\t// empty dummy <div>\n\t\t\t\tdiv.innerHTML = '';\n\n\t\t\t\tparentNode = div;\n\t\t\t\tnode = node.cloneNode();\n\n\t\t\t\tdiv.appendChild( node );\n\t\t\t}\n\n\t\t\tnodes = parentNode.querySelectorAll( selector );\n\n\t\t\ti = nodes.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( nodes[i] === node ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nfunction detachNode ( node ) {\n\tif ( node && typeof node.parentNode !== 'unknown' && node.parentNode ) {\n\t\tnode.parentNode.removeChild( node );\n\t}\n\n\treturn node;\n}\n\nfunction safeToStringValue ( value ) {\n\treturn ( value == null || !value.toString ) ? '' : '' + value;\n}\n\nfunction safeAttributeString ( string ) {\n\treturn safeToStringValue( string )\n\t\t.replace( /&/g, '&amp;' )\n\t\t.replace( /\"/g, '&quot;' )\n\t\t.replace( /'/g, '&#39;' );\n}\n\nvar camel = /(-.)/g;\nfunction camelize ( string ) {\n\treturn string.replace( camel, function ( s ) { return s.charAt( 1 ).toUpperCase(); } );\n}\n\nvar decamel = /[A-Z]/g;\nfunction decamelize ( string ) {\n\treturn string.replace( decamel, function ( s ) { return (\"-\" + (s.toLowerCase())); } );\n}\n\nvar create;\nvar defineProperty;\nvar defineProperties;\n\ntry {\n\tObject.defineProperty({}, 'test', { get: function() {}, set: function() {} });\n\n\tif ( doc ) {\n\t\tObject.defineProperty( createElement( 'div' ), 'test', { value: 0 });\n\t}\n\n\tdefineProperty = Object.defineProperty;\n} catch ( err ) {\n\t// Object.defineProperty doesn't exist, or we're in IE8 where you can\n\t// only use it with DOM objects (what were you smoking, MSFT?)\n\tdefineProperty = function ( obj, prop, desc ) {\n\t\tif ( desc.get ) obj[ prop ] = desc.get();\n\t\telse obj[ prop ] = desc.value;\n\t};\n}\n\ntry {\n\ttry {\n\t\tObject.defineProperties({}, { test: { value: 0 } });\n\t} catch ( err ) {\n\t\t// TODO how do we account for this? noMagic = true;\n\t\tthrow err;\n\t}\n\n\tif ( doc ) {\n\t\tObject.defineProperties( createElement( 'div' ), { test: { value: 0 } });\n\t}\n\n\tdefineProperties = Object.defineProperties;\n} catch ( err ) {\n\tdefineProperties = function ( obj, props ) {\n\t\tvar prop;\n\n\t\tfor ( prop in props ) {\n\t\t\tif ( props.hasOwnProperty( prop ) ) {\n\t\t\t\tdefineProperty( obj, prop, props[ prop ] );\n\t\t\t}\n\t\t}\n\t};\n}\n\ntry {\n\tObject.create( null );\n\n\tcreate = Object.create;\n} catch ( err ) {\n\t// sigh\n\tcreate = (function () {\n\t\tvar F = function () {};\n\n\t\treturn function ( proto, props ) {\n\t\t\tvar obj;\n\n\t\t\tif ( proto === null ) {\n\t\t\t\treturn {};\n\t\t\t}\n\n\t\t\tF.prototype = proto;\n\t\t\tobj = new F();\n\n\t\t\tif ( props ) {\n\t\t\t\tObject.defineProperties( obj, props );\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t};\n\t}());\n}\n\nfunction extend$1 ( target ) {\n\tvar sources = [], len = arguments.length - 1;\n\twhile ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n\tvar prop;\n\n\tsources.forEach( function ( source ) {\n\t\tfor ( prop in source ) {\n\t\t\tif ( hasOwn.call( source, prop ) ) {\n\t\t\t\ttarget[ prop ] = source[ prop ];\n\t\t\t}\n\t\t}\n\t});\n\n\treturn target;\n}\n\nfunction fillGaps ( target ) {\n\tvar sources = [], len = arguments.length - 1;\n\twhile ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n\tsources.forEach( function ( s ) {\n\t\tfor ( var key in s ) {\n\t\t\tif ( hasOwn.call( s, key ) && !( key in target ) ) {\n\t\t\t\ttarget[ key ] = s[ key ];\n\t\t\t}\n\t\t}\n\t});\n\n\treturn target;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar toString$1$1 = Object.prototype.toString;\nvar arrayLikePattern = /^\\[object (?:Array|FileList)\\]$/;\n\n// thanks, http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\nfunction isArray ( thing ) {\n\treturn toString$1$1.call( thing ) === '[object Array]';\n}\n\n\n\nfunction isEqual ( a, b ) {\n\tif ( a === null && b === null ) {\n\t\treturn true;\n\t}\n\n\tif ( typeof a === 'object' || typeof b === 'object' ) {\n\t\treturn false;\n\t}\n\n\treturn a === b;\n}\n\n// http://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric\nfunction isNumeric ( thing ) {\n\treturn !isNaN( parseFloat( thing ) ) && isFinite( thing );\n}\n\nfunction isObject ( thing ) {\n\treturn ( thing && toString$1$1.call( thing ) === '[object Object]' );\n}\n\nvar noop = function () {};\n\n/* global console */\nvar alreadyWarned = {};\nvar log;\nvar printWarning;\nvar welcome;\n\nif ( hasConsole ) {\n\tvar welcomeIntro = [\n\t\t(\"%cRactive.js %c0.8.0 %cin debug mode, %cmore...\"),\n\t\t'color: rgb(114, 157, 52); font-weight: normal;',\n\t\t'color: rgb(85, 85, 85); font-weight: normal;',\n\t\t'color: rgb(85, 85, 85); font-weight: normal;',\n\t\t'color: rgb(82, 140, 224); font-weight: normal; text-decoration: underline;'\n\t];\n\tvar welcomeMessage = \"You're running Ractive 0.8.0 in debug mode - messages will be printed to the console to help you fix problems and optimise your application.\\n\\nTo disable debug mode, add this line at the start of your app:\\n  Ractive.DEBUG = false;\\n\\nTo disable debug mode when your app is minified, add this snippet:\\n  Ractive.DEBUG = /unminified/.test(function(){/*unminified*/});\\n\\nGet help and support:\\n  http://docs.ractivejs.org\\n  http://stackoverflow.com/questions/tagged/ractivejs\\n  http://groups.google.com/forum/#!forum/ractive-js\\n  http://twitter.com/ractivejs\\n\\nFound a bug? Raise an issue:\\n  https://github.com/ractivejs/ractive/issues\\n\\n\";\n\n\twelcome = function () {\n\t\tvar hasGroup = !!console.groupCollapsed;\n\t\tconsole[ hasGroup ? 'groupCollapsed' : 'log' ].apply( console, welcomeIntro );\n\t\tconsole.log( welcomeMessage );\n\t\tif ( hasGroup ) {\n\t\t\tconsole.groupEnd( welcomeIntro );\n\t\t}\n\n\t\twelcome = noop;\n\t};\n\n\tprintWarning = function ( message, args ) {\n\t\twelcome();\n\n\t\t// extract information about the instance this message pertains to, if applicable\n\t\tif ( typeof args[ args.length - 1 ] === 'object' ) {\n\t\t\tvar options = args.pop();\n\t\t\tvar ractive = options ? options.ractive : null;\n\n\t\t\tif ( ractive ) {\n\t\t\t\t// if this is an instance of a component that we know the name of, add\n\t\t\t\t// it to the message\n\t\t\t\tvar name;\n\t\t\t\tif ( ractive.component && ( name = ractive.component.name ) ) {\n\t\t\t\t\tmessage = \"<\" + name + \"> \" + message;\n\t\t\t\t}\n\n\t\t\t\tvar node;\n\t\t\t\tif ( node = ( options.node || ( ractive.fragment && ractive.fragment.rendered && ractive.find( '*' ) ) ) ) {\n\t\t\t\t\targs.push( node );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconsole.warn.apply( console, [ '%cRactive.js: %c' + message, 'color: rgb(114, 157, 52);', 'color: rgb(85, 85, 85);' ].concat( args ) );\n\t};\n\n\tlog = function () {\n\t\tconsole.log.apply( console, arguments );\n\t};\n} else {\n\tprintWarning = log = welcome = noop;\n}\n\nfunction format ( message, args ) {\n\treturn message.replace( /%s/g, function () { return args.shift(); } );\n}\n\nfunction fatal ( message ) {\n\tvar args = [], len = arguments.length - 1;\n\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n\tmessage = format( message, args );\n\tthrow new Error( message );\n}\n\nfunction logIfDebug () {\n\tif ( Ractive.DEBUG ) {\n\t\tlog.apply( null, arguments );\n\t}\n}\n\nfunction warn ( message ) {\n\tvar args = [], len = arguments.length - 1;\n\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n\tmessage = format( message, args );\n\tprintWarning( message, args );\n}\n\nfunction warnOnce ( message ) {\n\tvar args = [], len = arguments.length - 1;\n\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n\tmessage = format( message, args );\n\n\tif ( alreadyWarned[ message ] ) {\n\t\treturn;\n\t}\n\n\talreadyWarned[ message ] = true;\n\tprintWarning( message, args );\n}\n\nfunction warnIfDebug () {\n\tif ( Ractive.DEBUG ) {\n\t\twarn.apply( null, arguments );\n\t}\n}\n\nfunction warnOnceIfDebug () {\n\tif ( Ractive.DEBUG ) {\n\t\twarnOnce.apply( null, arguments );\n\t}\n}\n\n// Error messages that are used (or could be) in multiple places\nvar badArguments = 'Bad arguments';\nvar noRegistryFunctionReturn = 'A function was specified for \"%s\" %s, but no %s was returned';\nvar missingPlugin = function ( name, type ) { return (\"Missing \\\"\" + name + \"\\\" \" + type + \" plugin. You may need to download a plugin via http://docs.ractivejs.org/latest/plugins#\" + type + \"s\"); };\n\nfunction findInViewHierarchy ( registryName, ractive, name ) {\n\tvar instance = findInstance( registryName, ractive, name );\n\treturn instance ? instance[ registryName ][ name ] : null;\n}\n\nfunction findInstance ( registryName, ractive, name ) {\n\twhile ( ractive ) {\n\t\tif ( name in ractive[ registryName ] ) {\n\t\t\treturn ractive;\n\t\t}\n\n\t\tif ( ractive.isolated ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tractive = ractive.parent;\n\t}\n}\n\nfunction interpolate ( from, to, ractive, type ) {\n\tif ( from === to ) return null;\n\n\tif ( type ) {\n\t\tvar interpol = findInViewHierarchy( 'interpolators', ractive, type );\n\t\tif ( interpol ) return interpol( from, to ) || null;\n\n\t\tfatal( missingPlugin( type, 'interpolator' ) );\n\t}\n\n\treturn interpolators.number( from, to ) ||\n\t       interpolators.array( from, to ) ||\n\t       interpolators.object( from, to ) ||\n\t       null;\n}\n\nfunction snap ( to ) {\n\treturn function () { return to; };\n}\n\nvar interpolators = {\n\tnumber: function ( from, to ) {\n\t\tvar delta;\n\n\t\tif ( !isNumeric( from ) || !isNumeric( to ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfrom = +from;\n\t\tto = +to;\n\n\t\tdelta = to - from;\n\n\t\tif ( !delta ) {\n\t\t\treturn function () { return from; };\n\t\t}\n\n\t\treturn function ( t ) {\n\t\t\treturn from + ( t * delta );\n\t\t};\n\t},\n\n\tarray: function ( from, to ) {\n\t\tvar intermediate, interpolators, len, i;\n\n\t\tif ( !isArray( from ) || !isArray( to ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tintermediate = [];\n\t\tinterpolators = [];\n\n\t\ti = len = Math.min( from.length, to.length );\n\t\twhile ( i-- ) {\n\t\t\tinterpolators[i] = interpolate( from[i], to[i] );\n\t\t}\n\n\t\t// surplus values - don't interpolate, but don't exclude them either\n\t\tfor ( i=len; i<from.length; i+=1 ) {\n\t\t\tintermediate[i] = from[i];\n\t\t}\n\n\t\tfor ( i=len; i<to.length; i+=1 ) {\n\t\t\tintermediate[i] = to[i];\n\t\t}\n\n\t\treturn function ( t ) {\n\t\t\tvar i = len;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tintermediate[i] = interpolators[i]( t );\n\t\t\t}\n\n\t\t\treturn intermediate;\n\t\t};\n\t},\n\n\tobject: function ( from, to ) {\n\t\tvar properties, len, interpolators, intermediate, prop;\n\n\t\tif ( !isObject( from ) || !isObject( to ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tproperties = [];\n\t\tintermediate = {};\n\t\tinterpolators = {};\n\n\t\tfor ( prop in from ) {\n\t\t\tif ( hasOwn.call( from, prop ) ) {\n\t\t\t\tif ( hasOwn.call( to, prop ) ) {\n\t\t\t\t\tproperties.push( prop );\n\t\t\t\t\tinterpolators[ prop ] = interpolate( from[ prop ], to[ prop ] ) || snap( to[ prop ] );\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tintermediate[ prop ] = from[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor ( prop in to ) {\n\t\t\tif ( hasOwn.call( to, prop ) && !hasOwn.call( from, prop ) ) {\n\t\t\t\tintermediate[ prop ] = to[ prop ];\n\t\t\t}\n\t\t}\n\n\t\tlen = properties.length;\n\n\t\treturn function ( t ) {\n\t\t\tvar i = len, prop;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tprop = properties[i];\n\n\t\t\t\tintermediate[ prop ] = interpolators[ prop ]( t );\n\t\t\t}\n\n\t\t\treturn intermediate;\n\t\t};\n\t}\n};\n\n// TODO: deprecate in future release\nvar deprecations = {\n\tconstruct: {\n\t\tdeprecated: 'beforeInit',\n\t\treplacement: 'onconstruct'\n\t},\n\trender: {\n\t\tdeprecated: 'init',\n\t\tmessage: 'The \"init\" method has been deprecated ' +\n\t\t\t'and will likely be removed in a future release. ' +\n\t\t\t'You can either use the \"oninit\" method which will fire ' +\n\t\t\t'only once prior to, and regardless of, any eventual ractive ' +\n\t\t\t'instance being rendered, or if you need to access the ' +\n\t\t\t'rendered DOM, use \"onrender\" instead. ' +\n\t\t\t'See http://docs.ractivejs.org/latest/migrating for more information.'\n\t},\n\tcomplete: {\n\t\tdeprecated: 'complete',\n\t\treplacement: 'oncomplete'\n\t}\n};\n\nvar Hook = function Hook ( event ) {\n\tthis.event = event;\n\tthis.method = 'on' + event;\n\tthis.deprecate = deprecations[ event ];\n};\n\nHook.prototype.call = function call ( method, ractive, arg ) {\n\tif ( ractive[ method ] ) {\n\t\targ ? ractive[ method ]( arg ) : ractive[ method ]();\n\t\treturn true;\n\t}\n};\n\nHook.prototype.fire = function fire ( ractive, arg ) {\n\tthis.call( this.method, ractive, arg );\n\n\t// handle deprecations\n\tif ( !ractive[ this.method ] && this.deprecate && this.call( this.deprecate.deprecated, ractive, arg ) ) {\n\t\tif ( this.deprecate.message ) {\n\t\t\twarnIfDebug( this.deprecate.message );\n\t\t} else {\n\t\t\twarnIfDebug( 'The method \"%s\" has been deprecated in favor of \"%s\" and will likely be removed in a future release. See http://docs.ractivejs.org/latest/migrating for more information.', this.deprecate.deprecated, this.deprecate.replacement );\n\t\t}\n\t}\n\n\t// TODO should probably use internal method, in case ractive.fire was overwritten\n\targ ? ractive.fire( this.event, arg ) : ractive.fire( this.event );\n};\n\nfunction addToArray ( array, value ) {\n\tvar index = array.indexOf( value );\n\n\tif ( index === -1 ) {\n\t\tarray.push( value );\n\t}\n}\n\nfunction arrayContains ( array, value ) {\n\tfor ( var i = 0, c = array.length; i < c; i++ ) {\n\t\tif ( array[i] == value ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction arrayContentsMatch ( a, b ) {\n\tvar i;\n\n\tif ( !isArray( a ) || !isArray( b ) ) {\n\t\treturn false;\n\t}\n\n\tif ( a.length !== b.length ) {\n\t\treturn false;\n\t}\n\n\ti = a.length;\n\twhile ( i-- ) {\n\t\tif ( a[i] !== b[i] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction ensureArray ( x ) {\n\tif ( typeof x === 'string' ) {\n\t\treturn [ x ];\n\t}\n\n\tif ( x === undefined ) {\n\t\treturn [];\n\t}\n\n\treturn x;\n}\n\nfunction lastItem ( array ) {\n\treturn array[ array.length - 1 ];\n}\n\nfunction removeFromArray ( array, member ) {\n\tif ( !array ) {\n\t\treturn;\n\t}\n\n\tvar index = array.indexOf( member );\n\n\tif ( index !== -1 ) {\n\t\tarray.splice( index, 1 );\n\t}\n}\n\nfunction toArray ( arrayLike ) {\n\tvar array = [], i = arrayLike.length;\n\twhile ( i-- ) {\n\t\tarray[i] = arrayLike[i];\n\t}\n\n\treturn array;\n}\n\nvar _Promise;\nvar PENDING = {};\nvar FULFILLED = {};\nvar REJECTED = {};\n\nif ( typeof Promise === 'function' ) {\n\t// use native Promise\n\t_Promise = Promise;\n} else {\n\t_Promise = function ( callback ) {\n\t\tvar fulfilledHandlers = [],\n\t\t\trejectedHandlers = [],\n\t\t\tstate = PENDING,\n\n\t\t\tresult,\n\t\t\tdispatchHandlers,\n\t\t\tmakeResolver,\n\t\t\tfulfil,\n\t\t\treject,\n\n\t\t\tpromise;\n\n\t\tmakeResolver = function ( newState ) {\n\t\t\treturn function ( value ) {\n\t\t\t\tif ( state !== PENDING ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult = value;\n\t\t\t\tstate = newState;\n\n\t\t\t\tdispatchHandlers = makeDispatcher( ( state === FULFILLED ? fulfilledHandlers : rejectedHandlers ), result );\n\n\t\t\t\t// dispatch onFulfilled and onRejected handlers asynchronously\n\t\t\t\twait( dispatchHandlers );\n\t\t\t};\n\t\t};\n\n\t\tfulfil = makeResolver( FULFILLED );\n\t\treject = makeResolver( REJECTED );\n\n\t\ttry {\n\t\t\tcallback( fulfil, reject );\n\t\t} catch ( err ) {\n\t\t\treject( err );\n\t\t}\n\n\t\tpromise = {\n\t\t\t// `then()` returns a Promise - 2.2.7\n\t\t\tthen: function ( onFulfilled, onRejected ) {\n\t\t\t\tvar promise2 = new _Promise( function ( fulfil, reject ) {\n\n\t\t\t\t\tvar processResolutionHandler = function ( handler, handlers, forward ) {\n\n\t\t\t\t\t\t// 2.2.1.1\n\t\t\t\t\t\tif ( typeof handler === 'function' ) {\n\t\t\t\t\t\t\thandlers.push( function ( p1result ) {\n\t\t\t\t\t\t\t\tvar x;\n\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tx = handler( p1result );\n\t\t\t\t\t\t\t\t\tresolve$1( promise2, x, fulfil, reject );\n\t\t\t\t\t\t\t\t} catch ( err ) {\n\t\t\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Forward the result of promise1 to promise2, if resolution handlers\n\t\t\t\t\t\t\t// are not given\n\t\t\t\t\t\t\thandlers.push( forward );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// 2.2\n\t\t\t\t\tprocessResolutionHandler( onFulfilled, fulfilledHandlers, fulfil );\n\t\t\t\t\tprocessResolutionHandler( onRejected, rejectedHandlers, reject );\n\n\t\t\t\t\tif ( state !== PENDING ) {\n\t\t\t\t\t\t// If the promise has resolved already, dispatch the appropriate handlers asynchronously\n\t\t\t\t\t\twait( dispatchHandlers );\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\treturn promise2;\n\t\t\t}\n\t\t};\n\n\t\tpromise[ 'catch' ] = function ( onRejected ) {\n\t\t\treturn this.then( null, onRejected );\n\t\t};\n\n\t\treturn promise;\n\t};\n\n\t_Promise.all = function ( promises ) {\n\t\treturn new _Promise( function ( fulfil, reject ) {\n\t\t\tvar result = [], pending, i, processPromise;\n\n\t\t\tif ( !promises.length ) {\n\t\t\t\tfulfil( result );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tprocessPromise = function ( promise, i ) {\n\t\t\t\tif ( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\tpromise.then( function ( value ) {\n\t\t\t\t\t\tresult[i] = value;\n\t\t\t\t\t\t--pending || fulfil( result );\n\t\t\t\t\t}, reject );\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tresult[i] = promise;\n\t\t\t\t\t--pending || fulfil( result );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tpending = i = promises.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tprocessPromise( promises[i], i );\n\t\t\t}\n\t\t});\n\t};\n\n\t_Promise.resolve = function ( value ) {\n\t\treturn new _Promise( function ( fulfil ) {\n\t\t\tfulfil( value );\n\t\t});\n\t};\n\n\t_Promise.reject = function ( reason ) {\n\t\treturn new _Promise( function ( fulfil, reject ) {\n\t\t\treject( reason );\n\t\t});\n\t};\n}\n\nvar Promise$1 = _Promise;\n\n// TODO use MutationObservers or something to simulate setImmediate\nfunction wait ( callback ) {\n\tsetTimeout( callback, 0 );\n}\n\nfunction makeDispatcher ( handlers, result ) {\n\treturn function () {\n\t\tvar handler;\n\n\t\twhile ( handler = handlers.shift() ) {\n\t\t\thandler( result );\n\t\t}\n\t};\n}\n\nfunction resolve$1 ( promise, x, fulfil, reject ) {\n\t// Promise Resolution Procedure\n\tvar then;\n\n\t// 2.3.1\n\tif ( x === promise ) {\n\t\tthrow new TypeError( 'A promise\\'s fulfillment handler cannot return the same promise' );\n\t}\n\n\t// 2.3.2\n\tif ( x instanceof _Promise ) {\n\t\tx.then( fulfil, reject );\n\t}\n\n\t// 2.3.3\n\telse if ( x && ( typeof x === 'object' || typeof x === 'function' ) ) {\n\t\ttry {\n\t\t\tthen = x.then; // 2.3.3.1\n\t\t} catch ( e ) {\n\t\t\treject( e ); // 2.3.3.2\n\t\t\treturn;\n\t\t}\n\n\t\t// 2.3.3.3\n\t\tif ( typeof then === 'function' ) {\n\t\t\tvar called, resolvePromise, rejectPromise;\n\n\t\t\tresolvePromise = function ( y ) {\n\t\t\t\tif ( called ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcalled = true;\n\t\t\t\tresolve$1( promise, y, fulfil, reject );\n\t\t\t};\n\n\t\t\trejectPromise = function ( r ) {\n\t\t\t\tif ( called ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcalled = true;\n\t\t\t\treject( r );\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tthen.call( x, resolvePromise, rejectPromise );\n\t\t\t} catch ( e ) {\n\t\t\t\tif ( !called ) { // 2.3.3.3.4.1\n\t\t\t\t\treject( e ); // 2.3.3.3.4.2\n\t\t\t\t\tcalled = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tfulfil( x );\n\t\t}\n\t}\n\n\telse {\n\t\tfulfil( x );\n\t}\n}\n\nvar TransitionManager = function TransitionManager ( callback, parent ) {\n\tthis.callback = callback;\n\tthis.parent = parent;\n\n\tthis.intros = [];\n\tthis.outros = [];\n\n\tthis.children = [];\n\tthis.totalChildren = this.outroChildren = 0;\n\n\tthis.detachQueue = [];\n\tthis.outrosComplete = false;\n\n\tif ( parent ) {\n\t\tparent.addChild( this );\n\t}\n};\n\nTransitionManager.prototype.add = function add ( transition ) {\n\tvar list = transition.isIntro ? this.intros : this.outros;\n\tlist.push( transition );\n};\n\nTransitionManager.prototype.addChild = function addChild ( child ) {\n\tthis.children.push( child );\n\n\tthis.totalChildren += 1;\n\tthis.outroChildren += 1;\n};\n\nTransitionManager.prototype.decrementOutros = function decrementOutros () {\n\tthis.outroChildren -= 1;\n\tcheck( this );\n};\n\nTransitionManager.prototype.decrementTotal = function decrementTotal () {\n\tthis.totalChildren -= 1;\n\tcheck( this );\n};\n\nTransitionManager.prototype.detachNodes = function detachNodes () {\n\tthis.detachQueue.forEach( detach$1 );\n\tthis.children.forEach( _detachNodes );\n};\n\nTransitionManager.prototype.ready = function ready () {\n\tdetachImmediate( this );\n};\n\nTransitionManager.prototype.remove = function remove ( transition ) {\n\tvar list = transition.isIntro ? this.intros : this.outros;\n\tremoveFromArray( list, transition );\n\tcheck( this );\n};\n\nTransitionManager.prototype.start = function start () {\n\tthis.children.forEach( function ( c ) { return c.start(); } );\n\tthis.intros.concat( this.outros ).forEach( function ( t ) { return t.start(); } );\n\tthis.ready = true;\n\tcheck( this );\n};\n\nfunction detach$1 ( element ) {\n\telement.detach();\n}\n\nfunction _detachNodes ( tm ) { // _ to avoid transpiler quirk\n\ttm.detachNodes();\n}\n\nfunction check ( tm ) {\n\tif ( !tm.ready || tm.outros.length || tm.outroChildren ) return;\n\n\t// If all outros are complete, and we haven't already done this,\n\t// we notify the parent if there is one, otherwise\n\t// start detaching nodes\n\tif ( !tm.outrosComplete ) {\n\t\ttm.outrosComplete = true;\n\n\t\tif ( tm.parent && !tm.parent.outrosComplete ) {\n\t\t\ttm.parent.decrementOutros( tm );\n\t\t} else {\n\t\t\ttm.detachNodes();\n\t\t}\n\t}\n\n\t// Once everything is done, we can notify parent transition\n\t// manager and call the callback\n\tif ( !tm.intros.length && !tm.totalChildren ) {\n\t\tif ( typeof tm.callback === 'function' ) {\n\t\t\ttm.callback();\n\t\t}\n\n\t\tif ( tm.parent && !tm.notifiedTotal ) {\n\t\t\ttm.notifiedTotal = true;\n\t\t\ttm.parent.decrementTotal();\n\t\t}\n\t}\n}\n\n// check through the detach queue to see if a node is up or downstream from a\n// transition and if not, go ahead and detach it\nfunction detachImmediate ( manager ) {\n\tvar queue = manager.detachQueue;\n\tvar outros = collectAllOutros( manager );\n\n\tvar i = queue.length, j = 0, node, trans;\n\tstart: while ( i-- ) {\n\t\tnode = queue[i].node;\n\t\tj = outros.length;\n\t\twhile ( j-- ) {\n\t\t\ttrans = outros[j].element.node;\n\t\t\t// check to see if the node is, contains, or is contained by the transitioning node\n\t\t\tif ( trans === node || trans.contains( node ) || node.contains( trans ) ) continue start;\n\t\t}\n\n\t\t// no match, we can drop it\n\t\tqueue[i].detach();\n\t\tqueue.splice( i, 1 );\n\t}\n}\n\nfunction collectAllOutros ( manager, list ) {\n\tif ( !list ) {\n\t\tlist = [];\n\t\tvar parent = manager;\n\t\twhile ( parent.parent ) parent = parent.parent;\n\t\treturn collectAllOutros( parent, list );\n\t} else {\n\t\tvar i = manager.children.length;\n\t\twhile ( i-- ) {\n\t\t\tlist = collectAllOutros( manager.children[i], list );\n\t\t}\n\t\tlist = list.concat( manager.outros );\n\t\treturn list;\n\t}\n}\n\nvar changeHook = new Hook( 'change' );\n\nvar batch;\n\nvar runloop = {\n\tstart: function ( instance, returnPromise ) {\n\t\tvar promise, fulfilPromise;\n\n\t\tif ( returnPromise ) {\n\t\t\tpromise = new Promise$1( function ( f ) { return ( fulfilPromise = f ); } );\n\t\t}\n\n\t\tbatch = {\n\t\t\tpreviousBatch: batch,\n\t\t\ttransitionManager: new TransitionManager( fulfilPromise, batch && batch.transitionManager ),\n\t\t\tfragments: [],\n\t\t\ttasks: [],\n\t\t\timmediateObservers: [],\n\t\t\tdeferredObservers: [],\n\t\t\tractives: [],\n\t\t\tinstance: instance\n\t\t};\n\n\t\treturn promise;\n\t},\n\n\tend: function () {\n\t\tflushChanges();\n\n\t\tif ( !batch.previousBatch ) batch.transitionManager.start();\n\n\t\tbatch = batch.previousBatch;\n\t},\n\n\taddFragment: function ( fragment ) {\n\t\taddToArray( batch.fragments, fragment );\n\t},\n\n\t// TODO: come up with a better way to handle fragments that trigger their own update\n\taddFragmentToRoot: function ( fragment ) {\n\t\tif ( !batch ) return;\n\n\t\tvar b = batch;\n\t\twhile ( b.previousBatch ) {\n\t\t\tb = b.previousBatch;\n\t\t}\n\n\t\taddToArray( b.fragments, fragment );\n\t},\n\n\taddInstance: function ( instance ) {\n\t\tif ( batch ) addToArray( batch.ractives, instance );\n\t},\n\n\taddObserver: function ( observer, defer ) {\n\t\taddToArray( defer ? batch.deferredObservers : batch.immediateObservers, observer );\n\t},\n\n\tregisterTransition: function ( transition ) {\n\t\ttransition._manager = batch.transitionManager;\n\t\tbatch.transitionManager.add( transition );\n\t},\n\n\t// synchronise node detachments with transition ends\n\tdetachWhenReady: function ( thing ) {\n\t\tbatch.transitionManager.detachQueue.push( thing );\n\t},\n\n\tscheduleTask: function ( task, postRender ) {\n\t\tvar _batch;\n\n\t\tif ( !batch ) {\n\t\t\ttask();\n\t\t} else {\n\t\t\t_batch = batch;\n\t\t\twhile ( postRender && _batch.previousBatch ) {\n\t\t\t\t// this can't happen until the DOM has been fully updated\n\t\t\t\t// otherwise in some situations (with components inside elements)\n\t\t\t\t// transitions and decorators will initialise prematurely\n\t\t\t\t_batch = _batch.previousBatch;\n\t\t\t}\n\n\t\t\t_batch.tasks.push( task );\n\t\t}\n\t}\n};\n\nfunction dispatch$1 ( observer ) {\n\tobserver.dispatch();\n}\n\nfunction flushChanges () {\n\tvar which = batch.immediateObservers;\n\tbatch.immediateObservers = [];\n\twhich.forEach( dispatch$1 );\n\n\t// Now that changes have been fully propagated, we can update the DOM\n\t// and complete other tasks\n\tvar i = batch.fragments.length;\n\tvar fragment;\n\n\twhich = batch.fragments;\n\tbatch.fragments = [];\n\tvar ractives = batch.ractives;\n\tbatch.ractives = [];\n\n\twhile ( i-- ) {\n\t\tfragment = which[i];\n\n\t\t// TODO deprecate this. It's annoying and serves no useful function\n\t\tvar ractive = fragment.ractive;\n\t\tchangeHook.fire( ractive, ractive.viewmodel.changes );\n\t\tractive.viewmodel.changes = {};\n\t\tremoveFromArray( ractives, ractive );\n\n\t\tfragment.update();\n\t}\n\n\ti = ractives.length;\n\twhile ( i-- ) {\n\t\tvar ractive$1 = ractives[i];\n\t\tchangeHook.fire( ractive$1, ractive$1.viewmodel.changes );\n\t\tractive$1.viewmodel.changes = {};\n\t}\n\n\tbatch.transitionManager.ready();\n\n\twhich = batch.deferredObservers;\n\tbatch.deferredObservers = [];\n\twhich.forEach( dispatch$1 );\n\n\tvar tasks = batch.tasks;\n\tbatch.tasks = [];\n\n\tfor ( i = 0; i < tasks.length; i += 1 ) {\n\t\ttasks[i]();\n\t}\n\n\t// If updating the view caused some model blowback - e.g. a triple\n\t// containing <option> elements caused the binding on the <select>\n\t// to update - then we start over\n\tif ( batch.fragments.length || batch.immediateObservers.length || batch.deferredObservers.length || batch.ractives.length ) return flushChanges();\n}\n\nvar refPattern = /\\[\\s*(\\*|[0-9]|[1-9][0-9]+)\\s*\\]/g;\nvar splitPattern = /([^\\\\](?:\\\\\\\\)*)\\./;\nvar escapeKeyPattern = /\\\\|\\./g;\nvar unescapeKeyPattern = /((?:\\\\)+)\\1|\\\\(\\.)/g;\n\nfunction escapeKey ( key ) {\n\tif ( typeof key === 'string' ) {\n\t\treturn key.replace( escapeKeyPattern, '\\\\$&' );\n\t}\n\n\treturn key;\n}\n\nfunction normalise ( ref ) {\n\treturn ref ? ref.replace( refPattern, '.$1' ) : '';\n}\n\nfunction splitKeypath ( keypath ) {\n\tvar result = [],\n\t\tmatch;\n\n\tkeypath = normalise( keypath );\n\n\twhile ( match = splitPattern.exec( keypath ) ) {\n\t\tvar index = match.index + match[1].length;\n\t\tresult.push( keypath.substr( 0, index ) );\n\t\tkeypath = keypath.substr( index + 1 );\n\t}\n\n\tresult.push(keypath);\n\n\treturn result;\n}\n\nfunction unescapeKey ( key ) {\n\tif ( typeof key === 'string' ) {\n\t\treturn key.replace( unescapeKeyPattern, '$1$2' );\n\t}\n\n\treturn key;\n}\n\nfunction bind$1$1 ( fn, context ) {\n\tif ( !/this/.test( fn.toString() ) ) return fn;\n\n\tvar bound = fn.bind( context );\n\tfor ( var prop in fn ) bound[ prop ] = fn[ prop ];\n\n\treturn bound;\n}\n\nfunction set$1 ( ractive, pairs ) {\n\tvar promise = runloop.start( ractive, true );\n\n\tvar i = pairs.length;\n\twhile ( i-- ) {\n\t\tvar ref = pairs[i], model = ref[0], value = ref[1];\n\t\tif ( typeof value === 'function' ) value = bind$1$1( value, ractive );\n\t\tmodel.set( value );\n\t}\n\n\trunloop.end();\n\n\treturn promise;\n}\n\nvar star = /\\*/;\nfunction gather ( ractive, keypath, base ) {\n\tif ( base === void 0 ) base = ractive.viewmodel;\n\n\tif ( star.test( keypath ) ) {\n\t\treturn base.findMatches( splitKeypath( keypath ) );\n\t} else {\n\t\treturn [ base.joinAll( splitKeypath( keypath ) ) ];\n\t}\n}\n\nfunction build ( ractive, keypath, value ) {\n\tvar sets = [];\n\n\t// set multiple keypaths in one go\n\tif ( isObject( keypath ) ) {\n\t\tvar loop = function ( k ) {\n\t\t\tif ( keypath.hasOwnProperty( k ) ) {\n\t\t\t\tsets.push.apply( sets, gather( ractive, k ).map( function ( m ) { return [ m, keypath[k] ]; } ) );\n\t\t\t}\n\t\t};\n\n\t\tfor ( var k in keypath ) loop( k );\n\n\t}\n\t// set a single keypath\n\telse {\n\t\tsets.push.apply( sets, gather( ractive, keypath ).map( function ( m ) { return [ m, value ]; } ) );\n\t}\n\n\treturn sets;\n}\n\nvar errorMessage = 'Cannot add to a non-numeric value';\n\nfunction add$1 ( ractive, keypath, d ) {\n\tif ( typeof keypath !== 'string' || !isNumeric( d ) ) {\n\t\tthrow new Error( 'Bad arguments' );\n\t}\n\n\tvar sets = build( ractive, keypath, d );\n\n\treturn set$1( ractive, sets.map( function ( pair ) {\n\t\tvar model = pair[0], add = pair[1], value = model.get();\n\t\tif ( !isNumeric( add ) || !isNumeric( value ) ) throw new Error( errorMessage );\n\t\treturn [ model, value + add ];\n\t}));\n}\n\nfunction Ractive$add ( keypath, d ) {\n\treturn add$1( this, keypath, ( d === undefined ? 1 : +d ) );\n}\n\nvar noAnimation = Promise$1.resolve();\ndefineProperty( noAnimation, 'stop', { value: noop });\n\nvar linear = easing.linear;\n\nfunction getOptions ( options, instance ) {\n\toptions = options || {};\n\n\tvar easing$$1;\n\tif ( options.easing ) {\n\t\teasing$$1 = typeof options.easing === 'function' ?\n\t\t\toptions.easing :\n\t\t\tinstance.easing[ options.easing ];\n\t}\n\n\treturn {\n\t\teasing: easing$$1 || linear,\n\t\tduration: 'duration' in options ? options.duration : 400,\n\t\tcomplete: options.complete || noop,\n\t\tstep: options.step || noop\n\t};\n}\n\nfunction animate$1 ( ractive, model, to, options ) {\n\toptions = getOptions( options, ractive );\n\tvar from = model.get();\n\n\t// don't bother animating values that stay the same\n\tif ( isEqual( from, to ) ) {\n\t\toptions.complete( options.to );\n\t\treturn noAnimation; // TODO should this have .then and .catch methods?\n\t}\n\n\tvar interpolator = interpolate( from, to, ractive, options.interpolator );\n\n\t// if we can't interpolate the value, set it immediately\n\tif ( !interpolator ) {\n\t\trunloop.start();\n\t\tmodel.set( to );\n\t\trunloop.end();\n\n\t\treturn noAnimation;\n\t}\n\n\treturn model.animate( from, to, options, interpolator );\n}\n\nfunction Ractive$animate ( keypath, to, options ) {\n\tif ( typeof keypath === 'object' ) {\n\t\tvar keys = Object.keys( keypath );\n\n\t\tthrow new Error( (\"ractive.animate(...) no longer supports objects. Instead of ractive.animate({\\n  \" + (keys.map( function ( key ) { return (\"'\" + key + \"': \" + (keypath[ key ])); } ).join( '\\n  ' )) + \"\\n}, {...}), do\\n\\n\" + (keys.map( function ( key ) { return (\"ractive.animate('\" + key + \"', \" + (keypath[ key ]) + \", {...});\"); } ).join( '\\n' )) + \"\\n\") );\n\t}\n\n\n\treturn animate$1( this, this.viewmodel.joinAll( splitKeypath( keypath ) ), to, options );\n}\n\nvar detachHook = new Hook( 'detach' );\n\nfunction Ractive$detach () {\n\tif ( this.isDetached ) {\n\t\treturn this.el;\n\t}\n\n\tif ( this.el ) {\n\t\tremoveFromArray( this.el.__ractive_instances__, this );\n\t}\n\n\tthis.el = this.fragment.detach();\n\tthis.isDetached = true;\n\n\tdetachHook.fire( this );\n\treturn this.el;\n}\n\nfunction Ractive$find ( selector ) {\n\tif ( !this.el ) throw new Error( (\"Cannot call ractive.find('\" + selector + \"') unless instance is rendered to the DOM\") );\n\n\treturn this.fragment.find( selector );\n}\n\nfunction sortByDocumentPosition ( node, otherNode ) {\n\tif ( node.compareDocumentPosition ) {\n\t\tvar bitmask = node.compareDocumentPosition( otherNode );\n\t\treturn ( bitmask & 2 ) ? 1 : -1;\n\t}\n\n\t// In old IE, we can piggy back on the mechanism for\n\t// comparing component positions\n\treturn sortByItemPosition( node, otherNode );\n}\n\nfunction sortByItemPosition ( a, b ) {\n\tvar ancestryA = getAncestry( a.component || a._ractive.proxy );\n\tvar ancestryB = getAncestry( b.component || b._ractive.proxy );\n\n\tvar oldestA = lastItem( ancestryA );\n\tvar oldestB = lastItem( ancestryB );\n\tvar mutualAncestor;\n\n\t// remove items from the end of both ancestries as long as they are identical\n\t// - the final one removed is the closest mutual ancestor\n\twhile ( oldestA && ( oldestA === oldestB ) ) {\n\t\tancestryA.pop();\n\t\tancestryB.pop();\n\n\t\tmutualAncestor = oldestA;\n\n\t\toldestA = lastItem( ancestryA );\n\t\toldestB = lastItem( ancestryB );\n\t}\n\n\t// now that we have the mutual ancestor, we can find which is earliest\n\toldestA = oldestA.component || oldestA;\n\toldestB = oldestB.component || oldestB;\n\n\tvar fragmentA = oldestA.parentFragment;\n\tvar fragmentB = oldestB.parentFragment;\n\n\t// if both items share a parent fragment, our job is easy\n\tif ( fragmentA === fragmentB ) {\n\t\tvar indexA = fragmentA.items.indexOf( oldestA );\n\t\tvar indexB = fragmentB.items.indexOf( oldestB );\n\n\t\t// if it's the same index, it means one contains the other,\n\t\t// so we see which has the longest ancestry\n\t\treturn ( indexA - indexB ) || ancestryA.length - ancestryB.length;\n\t}\n\n\t// if mutual ancestor is a section, we first test to see which section\n\t// fragment comes first\n\tvar fragments = mutualAncestor.iterations;\n\tif ( fragments ) {\n\t\tvar indexA$1 = fragments.indexOf( fragmentA );\n\t\tvar indexB$1 = fragments.indexOf( fragmentB );\n\n\t\treturn ( indexA$1 - indexB$1 ) || ancestryA.length - ancestryB.length;\n\t}\n\n\tthrow new Error( 'An unexpected condition was met while comparing the position of two components. Please file an issue at https://github.com/ractivejs/ractive/issues - thanks!' );\n}\n\nfunction getParent ( item ) {\n\tvar parentFragment = item.parentFragment;\n\n\tif ( parentFragment ) return parentFragment.owner;\n\n\tif ( item.component && ( parentFragment = item.component.parentFragment ) ) {\n\t\treturn parentFragment.owner;\n\t}\n}\n\nfunction getAncestry ( item ) {\n\tvar ancestry = [ item ];\n\tvar ancestor = getParent( item );\n\n\twhile ( ancestor ) {\n\t\tancestry.push( ancestor );\n\t\tancestor = getParent( ancestor );\n\t}\n\n\treturn ancestry;\n}\n\n\nvar Query = function Query ( ractive, selector, live, isComponentQuery ) {\n\tthis.ractive = ractive;\n\tthis.selector = selector;\n\tthis.live = live;\n\tthis.isComponentQuery = isComponentQuery;\n\n\tthis.result = [];\n\n\tthis.dirty = true;\n};\n\nQuery.prototype.add = function add ( item ) {\n\tthis.result.push( item );\n\tthis.makeDirty();\n};\n\nQuery.prototype.cancel = function cancel () {\n\tvar liveQueries = this._root[ this.isComponentQuery ? 'liveComponentQueries' : 'liveQueries' ];\n\tvar selector = this.selector;\n\n\tvar index = liveQueries.indexOf( selector );\n\n\tif ( index !== -1 ) {\n\t\tliveQueries.splice( index, 1 );\n\t\tliveQueries[ selector ] = null;\n\t}\n};\n\nQuery.prototype.init = function init () {\n\tthis.dirty = false;\n};\n\nQuery.prototype.makeDirty = function makeDirty () {\n\tvar this$1 = this;\n\n\t\tif ( !this.dirty ) {\n\t\tthis.dirty = true;\n\n\t\t// Once the DOM has been updated, ensure the query\n\t\t// is correctly ordered\n\t\trunloop.scheduleTask( function () { return this$1.update(); } );\n\t}\n};\n\nQuery.prototype.remove = function remove ( nodeOrComponent ) {\n\tvar index = this.result.indexOf( this.isComponentQuery ? nodeOrComponent.instance : nodeOrComponent );\n\tif ( index !== -1 ) this.result.splice( index, 1 );\n};\n\nQuery.prototype.update = function update () {\n\tthis.result.sort( this.isComponentQuery ? sortByItemPosition : sortByDocumentPosition );\n\tthis.dirty = false;\n};\n\nQuery.prototype.test = function test ( item ) {\n\treturn this.isComponentQuery ?\n\t\t( !this.selector || item.name === this.selector ) :\n\t\t( item ? matches( item, this.selector ) : null );\n};\n\nfunction Ractive$findAll ( selector, options ) {\n\tif ( !this.el ) throw new Error( (\"Cannot call ractive.findAll('\" + selector + \"', ...) unless instance is rendered to the DOM\") );\n\n\toptions = options || {};\n\tvar liveQueries = this._liveQueries;\n\n\t// Shortcut: if we're maintaining a live query with this\n\t// selector, we don't need to traverse the parallel DOM\n\tvar query = liveQueries[ selector ];\n\tif ( query ) {\n\t\t// Either return the exact same query, or (if not live) a snapshot\n\t\treturn ( options && options.live ) ? query : query.slice();\n\t}\n\n\tquery = new Query( this, selector, !!options.live, false );\n\n\t// Add this to the list of live queries Ractive needs to maintain,\n\t// if applicable\n\tif ( query.live ) {\n\t\tliveQueries.push( selector );\n\t\tliveQueries[ '_' + selector ] = query;\n\t}\n\n\tthis.fragment.findAll( selector, query );\n\n\tquery.init();\n\treturn query.result;\n}\n\nfunction Ractive$findAllComponents ( selector, options ) {\n\toptions = options || {};\n\tvar liveQueries = this._liveComponentQueries;\n\n\t// Shortcut: if we're maintaining a live query with this\n\t// selector, we don't need to traverse the parallel DOM\n\tvar query = liveQueries[ selector ];\n\tif ( query ) {\n\t\t// Either return the exact same query, or (if not live) a snapshot\n\t\treturn ( options && options.live ) ? query : query.slice();\n\t}\n\n\tquery = new Query( this, selector, !!options.live, true );\n\n\t// Add this to the list of live queries Ractive needs to maintain,\n\t// if applicable\n\tif ( query.live ) {\n\t\tliveQueries.push( selector );\n\t\tliveQueries[ '_' + selector ] = query;\n\t}\n\n\tthis.fragment.findAllComponents( selector, query );\n\n\tquery.init();\n\treturn query.result;\n}\n\nfunction Ractive$findComponent ( selector ) {\n\treturn this.fragment.findComponent( selector );\n}\n\nfunction Ractive$findContainer ( selector ) {\n\tif ( this.container ) {\n\t\tif ( this.container.component && this.container.component.name === selector ) {\n\t\t\treturn this.container;\n\t\t} else {\n\t\t\treturn this.container.findContainer( selector );\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction Ractive$findParent ( selector ) {\n\n\tif ( this.parent ) {\n\t\tif ( this.parent.component && this.parent.component.name === selector ) {\n\t\t\treturn this.parent;\n\t\t} else {\n\t\t\treturn this.parent.findParent ( selector );\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction enqueue ( ractive, event ) {\n\tif ( ractive.event ) {\n\t\tractive._eventQueue.push( ractive.event );\n\t}\n\n\tractive.event = event;\n}\n\nfunction dequeue ( ractive ) {\n\tif ( ractive._eventQueue.length ) {\n\t\tractive.event = ractive._eventQueue.pop();\n\t} else {\n\t\tractive.event = null;\n\t}\n}\n\nvar starMaps = {};\n\n// This function takes a keypath such as 'foo.bar.baz', and returns\n// all the variants of that keypath that include a wildcard in place\n// of a key, such as 'foo.bar.*', 'foo.*.baz', 'foo.*.*' and so on.\n// These are then checked against the dependants map (ractive.viewmodel.depsMap)\n// to see if any pattern observers are downstream of one or more of\n// these wildcard keypaths (e.g. 'foo.bar.*.status')\nfunction getPotentialWildcardMatches ( keypath ) {\n\tvar keys, starMap, mapper, i, result, wildcardKeypath;\n\n\tkeys = splitKeypath( keypath );\n\tif( !( starMap = starMaps[ keys.length ]) ) {\n\t\tstarMap = getStarMap( keys.length );\n\t}\n\n\tresult = [];\n\n\tmapper = function ( star, i ) {\n\t\treturn star ? '*' : keys[i];\n\t};\n\n\ti = starMap.length;\n\twhile ( i-- ) {\n\t\twildcardKeypath = starMap[i].map( mapper ).join( '.' );\n\n\t\tif ( !result.hasOwnProperty( wildcardKeypath ) ) {\n\t\t\tresult.push( wildcardKeypath );\n\t\t\tresult[ wildcardKeypath ] = true;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n// This function returns all the possible true/false combinations for\n// a given number - e.g. for two, the possible combinations are\n// [ true, true ], [ true, false ], [ false, true ], [ false, false ].\n// It does so by getting all the binary values between 0 and e.g. 11\nfunction getStarMap ( num ) {\n\tvar ones = '', max, binary, starMap, mapper, i, j, l, map;\n\n\tif ( !starMaps[ num ] ) {\n\t\tstarMap = [];\n\n\t\twhile ( ones.length < num ) {\n\t\t\tones += 1;\n\t\t}\n\n\t\tmax = parseInt( ones, 2 );\n\n\t\tmapper = function ( digit ) {\n\t\t\treturn digit === '1';\n\t\t};\n\n\t\tfor ( i = 0; i <= max; i += 1 ) {\n\t\t\tbinary = i.toString( 2 );\n\t\t\twhile ( binary.length < num ) {\n\t\t\t\tbinary = '0' + binary;\n\t\t\t}\n\n\t\t\tmap = [];\n\t\t\tl = binary.length;\n\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\tmap.push( mapper( binary[j] ) );\n\t\t\t}\n\t\t\tstarMap[i] = map;\n\t\t}\n\n\t\tstarMaps[ num ] = starMap;\n\t}\n\n\treturn starMaps[ num ];\n}\n\nvar wildcardCache = {};\n\nfunction fireEvent ( ractive, eventName, options ) {\n\tif ( options === void 0 ) options = {};\n\n\tif ( !eventName ) { return; }\n\n\tif ( !options.event ) {\n\t\toptions.event = {\n\t\t\tname: eventName,\n\t\t\t// until event not included as argument default\n\t\t\t_noArg: true\n\t\t};\n\t} else {\n\t\toptions.event.name = eventName;\n\t}\n\n\tvar eventNames = getWildcardNames( eventName );\n\n\treturn fireEventAs( ractive, eventNames, options.event, options.args, true );\n}\n\nfunction getWildcardNames ( eventName ) {\n\tif ( wildcardCache.hasOwnProperty( eventName ) ) {\n\t\treturn wildcardCache[ eventName ];\n\t} else {\n\t\treturn wildcardCache[ eventName ] = getPotentialWildcardMatches( eventName );\n\t}\n}\n\nfunction fireEventAs  ( ractive, eventNames, event, args, initialFire ) {\n\n\tif ( initialFire === void 0 ) initialFire = false;\n\n\tvar subscribers, i, bubble = true;\n\n\tenqueue( ractive, event );\n\n\tfor ( i = eventNames.length; i >= 0; i-- ) {\n\t\tsubscribers = ractive._subs[ eventNames[ i ] ];\n\n\t\tif ( subscribers ) {\n\t\t\tbubble = notifySubscribers( ractive, subscribers, event, args ) && bubble;\n\t\t}\n\t}\n\n\tdequeue( ractive );\n\n\tif ( ractive.parent && bubble ) {\n\n\t\tif ( initialFire && ractive.component ) {\n\t\t\tvar fullName = ractive.component.name + '.' + eventNames[ eventNames.length-1 ];\n\t\t\teventNames = getWildcardNames( fullName );\n\n\t\t\tif( event && !event.component ) {\n\t\t\t\tevent.component = ractive;\n\t\t\t}\n\t\t}\n\n\t\tfireEventAs( ractive.parent, eventNames, event, args );\n\t}\n\n\treturn bubble;\n}\n\nfunction notifySubscribers ( ractive, subscribers, event, args ) {\n\tvar originalEvent = null, stopEvent = false;\n\n\tif ( event && !event._noArg ) {\n\t\targs = [ event ].concat( args );\n\t}\n\n\t// subscribers can be modified inflight, e.g. \"once\" functionality\n\t// so we need to copy to make sure everyone gets called\n\tsubscribers = subscribers.slice();\n\n\tfor ( var i = 0, len = subscribers.length; i < len; i += 1 ) {\n\t\tif ( subscribers[ i ].apply( ractive, args ) === false ) {\n\t\t\tstopEvent = true;\n\t\t}\n\t}\n\n\tif ( event && !event._noArg && stopEvent && ( originalEvent = event.original ) ) {\n\t\toriginalEvent.preventDefault && originalEvent.preventDefault();\n\t\toriginalEvent.stopPropagation && originalEvent.stopPropagation();\n\t}\n\n\treturn !stopEvent;\n}\n\nfunction Ractive$fire ( eventName ) {\n\tvar args = [], len = arguments.length - 1;\n\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n\treturn fireEvent( this, eventName, { args: args });\n}\n\nfunction badReference ( key ) {\n\tthrow new Error( (\"An index or key reference (\" + key + \") cannot have child properties\") );\n}\n\nfunction resolveAmbiguousReference ( fragment, ref ) {\n\tvar localViewmodel = fragment.findContext().root;\n\tvar keys = splitKeypath( ref );\n\tvar key = keys[0];\n\n\tvar hasContextChain;\n\tvar crossedComponentBoundary;\n\tvar aliases;\n\n\twhile ( fragment ) {\n\t\t// repeated fragments\n\t\tif ( fragment.isIteration ) {\n\t\t\tif ( key === fragment.parent.keyRef ) {\n\t\t\t\tif ( keys.length > 1 ) badReference( key );\n\t\t\t\treturn fragment.context.getKeyModel( fragment.key );\n\t\t\t}\n\n\t\t\tif ( key === fragment.parent.indexRef ) {\n\t\t\t\tif ( keys.length > 1 ) badReference( key );\n\t\t\t\treturn fragment.context.getKeyModel( fragment.index );\n\t\t\t}\n\t\t}\n\n\t\t// alias node or iteration\n\t\tif ( ( ( aliases = fragment.owner.aliases ) || ( aliases = fragment.aliases ) ) && aliases.hasOwnProperty( key ) ) {\n\t\t\tvar model = aliases[ key ];\n\n\t\t\tif ( keys.length === 1 ) return model;\n\t\t\telse if ( typeof model.joinAll === 'function' ) {\n\t\t\t\treturn model.joinAll( keys.slice( 1 ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( fragment.context ) {\n\t\t\t// TODO better encapsulate the component check\n\t\t\tif ( !fragment.isRoot || fragment.ractive.component ) hasContextChain = true;\n\n\t\t\tif ( fragment.context.has( key ) ) {\n\t\t\t\tif ( crossedComponentBoundary ) {\n\t\t\t\t\treturn localViewmodel.createLink( key, fragment.context.joinKey( keys.shift() ), key ).joinAll( keys );\n\t\t\t\t}\n\n\t\t\t\treturn fragment.context.joinAll( keys );\n\t\t\t}\n\t\t}\n\n\t\tif ( fragment.componentParent && !fragment.ractive.isolated ) {\n\t\t\t// ascend through component boundary\n\t\t\tfragment = fragment.componentParent;\n\t\t\tcrossedComponentBoundary = true;\n\t\t} else {\n\t\t\tfragment = fragment.parent;\n\t\t}\n\t}\n\n\tif ( !hasContextChain ) {\n\t\treturn localViewmodel.joinAll( keys );\n\t}\n}\n\nvar stack = [];\nvar captureGroup;\n\nfunction startCapturing () {\n\tstack.push( captureGroup = [] );\n}\n\nfunction stopCapturing () {\n\tvar dependencies = stack.pop();\n\tcaptureGroup = stack[ stack.length - 1 ];\n\treturn dependencies;\n}\n\nfunction capture ( model ) {\n\tif ( captureGroup ) {\n\t\tcaptureGroup.push( model );\n\t}\n}\n\nvar KeyModel = function KeyModel ( key, parent ) {\n\tthis.value = key;\n\tthis.isReadonly = this.isKey = true;\n\tthis.deps = [];\n\tthis.links = [];\n\tthis.parent = parent;\n};\n\nKeyModel.prototype.get = function get ( shouldCapture ) {\n\tif ( shouldCapture ) capture( this );\n\treturn unescapeKey( this.value );\n};\n\nKeyModel.prototype.getKeypath = function getKeypath () {\n\treturn unescapeKey( this.value );\n};\n\nKeyModel.prototype.rebinding = function rebinding ( next, previous ) {\n\tvar this$1 = this;\n\n\t\tvar i = this.deps.length;\n\twhile ( i-- ) this$1.deps[i].rebinding( next, previous, false );\n\n\ti = this.links.length;\n\twhile ( i-- ) this$1.links[i].rebinding( next, previous, false );\n};\n\nKeyModel.prototype.register = function register ( dependant ) {\n\tthis.deps.push( dependant );\n};\n\nKeyModel.prototype.registerLink = function registerLink ( link ) {\n\taddToArray( this.links, link );\n};\n\nKeyModel.prototype.unregister = function unregister ( dependant ) {\n\tremoveFromArray( this.deps, dependant );\n};\n\nKeyModel.prototype.unregisterLink = function unregisterLink ( link ) {\n\tremoveFromArray( this.links, link );\n};\n\nfunction bind$2               ( x ) { x.bind(); }\nfunction cancel$1             ( x ) { x.cancel(); }\nfunction handleChange$1$1       ( x ) { x.handleChange(); }\nfunction mark$1$1               ( x ) { x.mark(); }\nfunction marked             ( x ) { x.marked(); }\nfunction notifiedUpstream   ( x ) { x.notifiedUpstream(); }\nfunction render$1$1             ( x ) { x.render(); }\nfunction teardown$1$1           ( x ) { x.teardown(); }\nfunction unbind$1$1             ( x ) { x.unbind(); }\nfunction unrender$1$1           ( x ) { x.unrender(); }\nfunction unrenderAndDestroy ( x ) { x.unrender( true ); }\nfunction update$1$1             ( x ) { x.update(); }\nfunction toString$2           ( x ) { return x.toString(); }\nfunction toEscapedString    ( x ) { return x.toString( true ); }\n\nvar KeypathModel = function KeypathModel ( parent, ractive ) {\n\tthis.parent = parent;\n\tthis.ractive = ractive;\n\tthis.value = ractive ? parent.getKeypath( ractive ) : parent.getKeypath();\n\tthis.deps = [];\n\tthis.children = {};\n\tthis.isReadonly = this.isKeypath = true;\n};\n\nKeypathModel.prototype.get = function get ( shouldCapture ) {\n\tif ( shouldCapture ) capture( this );\n\treturn this.value;\n};\n\nKeypathModel.prototype.getChild = function getChild ( ractive ) {\n\tif ( !( ractive._guid in this.children ) ) {\n\t\tvar model = new KeypathModel( this.parent, ractive );\n\t\tthis.children[ ractive._guid ] = model;\n\t\tmodel.owner = this;\n\t}\n\treturn this.children[ ractive._guid ];\n};\n\nKeypathModel.prototype.getKeypath = function getKeypath () {\n\treturn this.value;\n};\n\nKeypathModel.prototype.handleChange = function handleChange$1 () {\n\tvar this$1 = this;\n\n\t\tvar keys = Object.keys( this.children );\n\tvar i = keys.length;\n\twhile ( i-- ) {\n\t\tthis$1.children[ keys[i] ].handleChange();\n\t}\n\n\tthis.deps.forEach( handleChange$1$1 );\n};\n\nKeypathModel.prototype.rebindChildren = function rebindChildren ( next ) {\n\tvar this$1 = this;\n\n\t\tvar keys = Object.keys( this.children );\n\tvar i = keys.length;\n\twhile ( i-- ) {\n\t\tvar child = this$1.children[keys[i]];\n\t\tchild.value = next.getKeypath( child.ractive );\n\t\tchild.handleChange();\n\t}\n};\n\nKeypathModel.prototype.rebinding = function rebinding ( next, previous ) {\n\tvar this$1 = this;\n\n\t\tvar model = next ? next.getKeypathModel( this.ractive ) : undefined;\n\n\tvar keys = Object.keys( this.children );\n\tvar i = keys.length;\n\twhile ( i-- ) {\n\t\tthis$1.children[ keys[i] ].rebinding( next, previous, false );\n\t}\n\n\ti = this.deps.length;\n\twhile ( i-- ) {\n\t\tthis$1.deps[i].rebinding( model, this$1, false );\n\t}\n};\n\nKeypathModel.prototype.register = function register ( dep ) {\n\tthis.deps.push( dep );\n};\n\nKeypathModel.prototype.removeChild = function removeChild( model ) {\n\tif ( model.ractive ) delete this.children[ model.ractive._guid ];\n};\n\nKeypathModel.prototype.teardown = function teardown () {\n\tvar this$1 = this;\n\n\t\tif ( this.owner ) this.owner.removeChild( this );\n\n\tvar keys = Object.keys( this.children );\n\tvar i = keys.length;\n\twhile ( i-- ) {\n\t\tthis$1.children[ keys[i] ].teardown();\n\t}\n};\n\nKeypathModel.prototype.unregister = function unregister ( dep ) {\n\tremoveFromArray( this.deps, dep );\n\tif ( !this.deps.length ) this.teardown();\n};\n\nvar hasProp = Object.prototype.hasOwnProperty;\n\nvar shuffleTasks = { early: [], mark: [] };\nvar registerQueue = { early: [], mark: [] };\n\nvar ModelBase = function ModelBase ( parent ) {\n\tthis.deps = [];\n\n\tthis.children = [];\n\tthis.childByKey = {};\n\tthis.links = [];\n\n\tthis.keyModels = {};\n\n\tthis.unresolved = [];\n\tthis.unresolvedByKey = {};\n\n\tthis.bindings = [];\n\tthis.patternObservers = [];\n\n\tif ( parent ) {\n\t\tthis.parent = parent;\n\t\tthis.root = parent.root;\n\t}\n};\n\nModelBase.prototype.addUnresolved = function addUnresolved ( key, resolver ) {\n\tif ( !this.unresolvedByKey[ key ] ) {\n\t\tthis.unresolved.push( key );\n\t\tthis.unresolvedByKey[ key ] = [];\n\t}\n\n\tthis.unresolvedByKey[ key ].push( resolver );\n};\n\nModelBase.prototype.addShuffleTask = function addShuffleTask ( task, stage ) { if ( stage === void 0 ) stage = 'early';\n\n\tshuffleTasks[stage].push( task ); };\nModelBase.prototype.addShuffleRegister = function addShuffleRegister ( item, stage ) { if ( stage === void 0 ) stage = 'early';\n\n\tregisterQueue[stage].push({ model: this, item: item }); };\n\nModelBase.prototype.clearUnresolveds = function clearUnresolveds ( specificKey ) {\n\tvar this$1 = this;\n\n\t\tvar i = this.unresolved.length;\n\n\twhile ( i-- ) {\n\t\tvar key = this$1.unresolved[i];\n\n\t\tif ( specificKey && key !== specificKey ) continue;\n\n\t\tvar resolvers = this$1.unresolvedByKey[ key ];\n\t\tvar hasKey = this$1.has( key );\n\n\t\tvar j = resolvers.length;\n\t\twhile ( j-- ) {\n\t\t\tif ( hasKey ) resolvers[j].attemptResolution();\n\t\t\tif ( resolvers[j].resolved ) resolvers.splice( j, 1 );\n\t\t}\n\n\t\tif ( !resolvers.length ) {\n\t\t\tthis$1.unresolved.splice( i, 1 );\n\t\t\tthis$1.unresolvedByKey[ key ] = null;\n\t\t}\n\t}\n};\n\nModelBase.prototype.findMatches = function findMatches ( keys ) {\n\tvar len = keys.length;\n\n\tvar existingMatches = [ this ];\n\tvar matches;\n\tvar i;\n\n\tvar loop = function (  ) {\n\t\tvar key = keys[i];\n\n\t\tif ( key === '*' ) {\n\t\t\tmatches = [];\n\t\t\texistingMatches.forEach( function ( model ) {\n\t\t\t\tmatches.push.apply( matches, model.getValueChildren( model.get() ) );\n\t\t\t});\n\t\t} else {\n\t\t\tmatches = existingMatches.map( function ( model ) { return model.joinKey( key ); } );\n\t\t}\n\n\t\texistingMatches = matches;\n\t};\n\n\t\tfor ( i = 0; i < len; i += 1 ) loop(  );\n\n\treturn matches;\n};\n\nModelBase.prototype.getKeyModel = function getKeyModel ( key, skip ) {\n\tif ( key !== undefined && !skip ) return this.parent.getKeyModel( key, true );\n\n\tif ( !( key in this.keyModels ) ) this.keyModels[ key ] = new KeyModel( escapeKey( key ), this );\n\n\treturn this.keyModels[ key ];\n};\n\nModelBase.prototype.getKeypath = function getKeypath ( ractive ) {\n\tif ( ractive !== this.ractive && this._link ) return this._link.target.getKeypath( ractive );\n\n\tif ( !this.keypath ) {\n\t\tthis.keypath = this.parent.isRoot ? this.key : (\"\" + (this.parent.getKeypath( ractive )) + \".\" + (escapeKey( this.key )));\n\t}\n\n\treturn this.keypath;\n};\n\nModelBase.prototype.getValueChildren = function getValueChildren ( value ) {\n\tvar this$1 = this;\n\n\t\tvar children;\n\tif ( isArray( value ) ) {\n\t\tchildren = [];\n\t\tif ( 'length' in this && this.length !== value.length ) {\n\t\t\tchildren.push( this.joinKey( 'length' ) );\n\t\t}\n\t\tvalue.forEach( function ( m, i ) {\n\t\t\tchildren.push( this$1.joinKey( i ) );\n\t\t});\n\t}\n\n\telse if ( isObject( value ) || typeof value === 'function' ) {\n\t\tchildren = Object.keys( value ).map( function ( key ) { return this$1.joinKey( key ); } );\n\t}\n\n\telse if ( value != null ) {\n\t\treturn [];\n\t}\n\n\treturn children;\n};\n\nModelBase.prototype.getVirtual = function getVirtual ( shouldCapture ) {\n\tvar this$1 = this;\n\n\t\tvar value = this.get( shouldCapture, { virtual: false } );\n\tif ( isObject( value ) ) {\n\t\tvar result = isArray( value ) ? [] : {};\n\n\t\tvar keys = Object.keys( value );\n\t\tvar i = keys.length;\n\t\twhile ( i-- ) {\n\t\t\tvar child = this$1.childByKey[ keys[i] ];\n\t\t\tif ( !child ) result[ keys[i] ] = value[ keys[i] ];\n\t\t\telse if ( child._link ) result[ keys[i] ] = child._link.getVirtual();\n\t\t\telse result[ keys[i] ] = child.getVirtual();\n\t\t}\n\n\t\ti = this.children.length;\n\t\twhile ( i-- ) {\n\t\t\tvar child$1 = this$1.children[i];\n\t\t\tif ( !( child$1.key in result ) && child$1._link ) {\n\t\t\t\tresult[ child$1.key ] = child$1._link.getVirtual();\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t} else return value;\n};\n\nModelBase.prototype.has = function has ( key ) {\n\tif ( this._link ) return this._link.has( key );\n\n\tvar value = this.get();\n\tif ( !value ) return false;\n\n\tkey = unescapeKey( key );\n\tif ( hasProp.call( value, key ) ) return true;\n\n\t// We climb up the constructor chain to find if one of them contains the key\n\tvar constructor = value.constructor;\n\twhile ( constructor !== Function && constructor !== Array && constructor !== Object ) {\n\t\tif ( hasProp.call( constructor.prototype, key ) ) return true;\n\t\tconstructor = constructor.constructor;\n\t}\n\n\treturn false;\n};\n\nModelBase.prototype.joinAll = function joinAll ( keys, opts ) {\n\tvar model = this;\n\tfor ( var i = 0; i < keys.length; i += 1 ) {\n\t\tif ( opts && opts.lastLink === false && i + 1 === keys.length && model.childByKey[keys[i]] && model.childByKey[keys[i]]._link ) return model.childByKey[keys[i]];\n\t\tmodel = model.joinKey( keys[i], opts );\n\t}\n\n\treturn model;\n};\n\nModelBase.prototype.notifyUpstream = function notifyUpstream () {\n\tvar parent = this.parent, prev = this;\n\twhile ( parent ) {\n\t\tif ( parent.patternObservers.length ) parent.patternObservers.forEach( function ( o ) { return o.notify( prev.key ); } );\n\t\tparent.links.forEach( notifiedUpstream );\n\t\tparent.deps.forEach( handleChange$1$1 );\n\t\tprev = parent;\n\t\tparent = parent.parent;\n\t}\n};\n\nModelBase.prototype.rebinding = function rebinding ( next, previous, safe ) {\n\t// tell the deps to move to the new target\n\tvar this$1 = this;\n\n\t\tvar i = this.deps.length;\n\twhile ( i-- ) {\n\t\tif ( this$1.deps[i].rebinding ) this$1.deps[i].rebinding( next, previous, safe );\n\t}\n\n\ti = this.links.length;\n\twhile ( i-- ) {\n\t\tvar link = this$1.links[i];\n\t\t// only relink the root of the link tree\n\t\tif ( link.owner._link ) link.relinking( next, true, safe );\n\t}\n\n\ti = this.children.length;\n\twhile ( i-- ) {\n\t\tvar child = this$1.children[i];\n\t\tchild.rebinding( next ? next.joinKey( child.key ) : undefined, child, safe );\n\t}\n\n\ti = this.unresolved.length;\n\twhile ( i-- ) {\n\t\tvar unresolved = this$1.unresolvedByKey[ this$1.unresolved[i] ];\n\t\tvar c = unresolved.length;\n\t\twhile ( c-- ) {\n\t\t\tunresolved[c].rebinding( next, previous );\n\t\t}\n\t}\n\n\tif ( this.keypathModel ) this.keypathModel.rebinding( next, previous, false );\n\n\ti = this.bindings.length;\n\twhile ( i-- ) {\n\t\tthis$1.bindings[i].rebinding( next, previous, safe );\n\t}\n};\n\nModelBase.prototype.register = function register ( dep ) {\n\tthis.deps.push( dep );\n};\n\nModelBase.prototype.registerChange = function registerChange ( key, value ) {\n\tif ( !this.isRoot ) {\n\t\tthis.root.registerChange( key, value );\n\t} else {\n\t\tthis.changes[ key ] = value;\n\t\trunloop.addInstance( this.root.ractive );\n\t}\n};\n\nModelBase.prototype.registerLink = function registerLink ( link ) {\n\taddToArray( this.links, link );\n};\n\nModelBase.prototype.registerPatternObserver = function registerPatternObserver ( observer ) {\n\tthis.patternObservers.push( observer );\n\tthis.register( observer );\n};\n\nModelBase.prototype.registerTwowayBinding = function registerTwowayBinding ( binding ) {\n\tthis.bindings.push( binding );\n};\n\nModelBase.prototype.removeUnresolved = function removeUnresolved ( key, resolver ) {\n\tvar resolvers = this.unresolvedByKey[ key ];\n\n\tif ( resolvers ) {\n\t\tremoveFromArray( resolvers, resolver );\n\t}\n};\n\nModelBase.prototype.shuffled = function shuffled () {\n\tvar this$1 = this;\n\n\t\tvar i = this.children.length;\n\twhile ( i-- ) {\n\t\tthis$1.children[i].shuffled();\n\t}\n\tif ( this.wrapper ) {\n\t\tthis.wrapper.teardown();\n\t\tthis.wrapper = null;\n\t\tthis.rewrap = true;\n\t}\n};\n\nModelBase.prototype.unregister = function unregister ( dependant ) {\n\tremoveFromArray( this.deps, dependant );\n};\n\nModelBase.prototype.unregisterLink = function unregisterLink ( link ) {\n\tremoveFromArray( this.links, link );\n};\n\nModelBase.prototype.unregisterPatternObserver = function unregisterPatternObserver ( observer ) {\n\tremoveFromArray( this.patternObservers, observer );\n\tthis.unregister( observer );\n};\n\nModelBase.prototype.unregisterTwowayBinding = function unregisterTwowayBinding ( binding ) {\n\tremoveFromArray( this.bindings, binding );\n};\n\nModelBase.prototype.updateFromBindings = function updateFromBindings$1 ( cascade ) {\n\tvar this$1 = this;\n\n\t\tvar i = this.bindings.length;\n\twhile ( i-- ) {\n\t\tvar value = this$1.bindings[i].getValue();\n\t\tif ( value !== this$1.value ) this$1.set( value );\n\t}\n\n\t// check for one-way bindings if there are no two-ways\n\tif ( !this.bindings.length ) {\n\t\tvar oneway = findBoundValue( this.deps );\n\t\tif ( oneway && oneway.value !== this.value ) this.set( oneway.value );\n\t}\n\n\tif ( cascade ) {\n\t\tthis.children.forEach( updateFromBindings );\n\t\tthis.links.forEach( updateFromBindings );\n\t\tif ( this._link ) this._link.updateFromBindings( cascade );\n\t}\n};\n\nfunction updateFromBindings ( model ) {\n\tmodel.updateFromBindings( true );\n}\n\nfunction findBoundValue( list ) {\n\tvar i = list.length;\n\twhile ( i-- ) {\n\t\tif ( list[i].bound ) {\n\t\t\tvar owner = list[i].owner;\n\t\t\tif ( owner ) {\n\t\t\t\tvar value = owner.name === 'checked' ?\n\t\t\t\t\towner.node.checked :\n\t\t\t\t\towner.node.value;\n\t\t\t\treturn { value: value };\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction fireShuffleTasks ( stage ) {\n\tif ( !stage ) {\n\t\tfireShuffleTasks( 'early' );\n\t\tfireShuffleTasks( 'mark' );\n\t} else {\n\t\tvar tasks = shuffleTasks[stage];\n\t\tshuffleTasks[stage] = [];\n\t\tvar i = tasks.length;\n\t\twhile ( i-- ) tasks[i]();\n\n\t\tvar register = registerQueue[stage];\n\t\tregisterQueue[stage] = [];\n\t\ti = register.length;\n\t\twhile ( i-- ) register[i].model.register( register[i].item );\n\t}\n}\n\nKeyModel.prototype.addShuffleTask = ModelBase.prototype.addShuffleTask;\nKeyModel.prototype.addShuffleRegister = ModelBase.prototype.addShuffleRegister;\nKeypathModel.prototype.addShuffleTask = ModelBase.prototype.addShuffleTask;\nKeypathModel.prototype.addShuffleRegister = ModelBase.prototype.addShuffleRegister;\n\n// this is the dry method of checking to see if a rebind applies to\n// a particular keypath because in some cases, a dep may be bound\n// directly to a particular keypath e.g. foo.bars.0.baz and need\n// to avoid getting kicked to foo.bars.1.baz if foo.bars is unshifted\nfunction rebindMatch ( template, next, previous ) {\n\tvar keypath = template.r || template;\n\n\t// no valid keypath, go with next\n\tif ( !keypath || typeof keypath !== 'string' ) return next;\n\n\t// completely contextual ref, go with next\n\tif ( keypath === '.' || keypath[0] === '@' || (next || previous).isKey || (next || previous).isKeypath ) return next;\n\n\tvar parts = keypath.split( '/' );\n\tvar keys = splitKeypath( parts[ parts.length - 1 ] );\n\n\t// check the keypath against the model keypath to see if it matches\n\tvar model = next || previous;\n\tvar i = keys.length;\n\tvar match = true, shuffling = false;\n\n\twhile ( model && i-- ) {\n\t\tif ( model.shuffling ) shuffling = true;\n\t\t// non-strict comparison to account for indices in keypaths\n\t\tif ( keys[i] != model.key ) match = false;\n\t\tmodel = model.parent;\n\t}\n\n\t// next is undefined, but keypath is shuffling and previous matches\n\tif ( !next && match && shuffling ) return previous;\n\t// next is defined, but doesn't match the keypath\n\telse if ( next && !match && shuffling ) return previous;\n\telse return next;\n}\n\nvar LinkModel = (function (ModelBase$$1) {\n\tfunction LinkModel ( parent, owner, target, key ) {\n\t\tModelBase$$1.call( this, parent );\n\n\t\tthis.owner = owner;\n\t\tthis.target = target;\n\t\tthis.key = key === undefined ? owner.key : key;\n\t\tif ( owner.isLink ) this.sourcePath = \"\" + (owner.sourcePath) + \".\" + (this.key);\n\n\t\ttarget.registerLink( this );\n\n\t\tthis.isReadonly = parent.isReadonly;\n\n\t\tthis.isLink = true;\n\t}\n\n\tLinkModel.prototype = Object.create( ModelBase$$1 && ModelBase$$1.prototype );\n\tLinkModel.prototype.constructor = LinkModel;\n\n\tLinkModel.prototype.animate = function animate ( from, to, options, interpolator ) {\n\t\tthis.target.animate( from, to, options, interpolator );\n\t};\n\n\tLinkModel.prototype.applyValue = function applyValue ( value ) {\n\t\tthis.target.applyValue( value );\n\t};\n\n\tLinkModel.prototype.get = function get ( shouldCapture, opts ) {\n\t\tif ( shouldCapture ) {\n\t\t\tcapture( this );\n\n\t\t\t// may need to tell the target to unwrap\n\t\t\topts = opts || {};\n\t\t\topts.unwrap = true;\n\t\t}\n\n\t\treturn this.target.get( false, opts );\n\t};\n\n\tLinkModel.prototype.getKeypath = function getKeypath ( ractive ) {\n\t\tif ( ractive && ractive !== this.root.ractive ) return this.target.getKeypath( ractive );\n\n\t\treturn ModelBase$$1.prototype.getKeypath.call( this, ractive );\n\t};\n\n\tLinkModel.prototype.getKeypathModel = function getKeypathModel ( ractive ) {\n\t\tif ( !this.keypathModel ) this.keypathModel = new KeypathModel( this );\n\t\tif ( ractive && ractive !== this.root.ractive ) return this.keypathModel.getChild( ractive );\n\t\treturn this.keypathModel;\n\t};\n\n\tLinkModel.prototype.handleChange = function handleChange$1 () {\n\t\tthis.deps.forEach( handleChange$1$1 );\n\t\tthis.links.forEach( handleChange$1$1 );\n\t\tthis.notifyUpstream();\n\t};\n\n\tLinkModel.prototype.joinKey = function joinKey ( key ) {\n\t\t// TODO: handle nested links\n\t\tif ( key === undefined || key === '' ) return this;\n\n\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\tvar child = new LinkModel( this, this, this.target.joinKey( key ), key );\n\t\t\tthis.children.push( child );\n\t\t\tthis.childByKey[ key ] = child;\n\t\t}\n\n\t\treturn this.childByKey[ key ];\n\t};\n\n\tLinkModel.prototype.mark = function mark () {\n\t\tthis.target.mark();\n\t};\n\n\tLinkModel.prototype.marked = function marked$1 () {\n\t\tthis.links.forEach( marked );\n\n\t\tthis.deps.forEach( handleChange$1$1 );\n\t\tthis.clearUnresolveds();\n\t};\n\n\tLinkModel.prototype.notifiedUpstream = function notifiedUpstream$1 () {\n\t\tthis.links.forEach( notifiedUpstream );\n\t\tthis.deps.forEach( handleChange$1$1 );\n\t};\n\n\tLinkModel.prototype.relinked = function relinked () {\n\t\tthis.target.registerLink( this );\n\t\tthis.children.forEach( function ( c ) { return c.relinked(); } );\n\t};\n\n\tLinkModel.prototype.relinking = function relinking ( target, root, safe ) {\n\t\tvar this$1 = this;\n\n\t\tif ( root && this.sourcePath ) target = rebindMatch( this.sourcePath, target, this.target );\n\t\tif ( !target || this.target === target ) return;\n\n\t\tthis.target.unregisterLink( this );\n\t\tif ( this.keypathModel ) this.keypathModel.rebindChildren( target );\n\n\t\tthis.target = target;\n\t\tthis.children.forEach( function ( c ) {\n\t\t\tc.relinking( target.joinKey( c.key ), false, safe );\n\t\t});\n\n\t\tif ( root ) this.addShuffleTask( function () {\n\t\t\tthis$1.relinked();\n\t\t\tif ( !safe ) this$1.notifyUpstream();\n\t\t});\n\t};\n\n\tLinkModel.prototype.set = function set ( value ) {\n\t\tthis.target.set( value );\n\t};\n\n\tLinkModel.prototype.shuffle = function shuffle ( newIndices ) {\n\t\t// let the real model handle firing off shuffles\n\t\tvar this$1 = this;\n\n\t\tif ( !this.target.shuffling ) {\n\t\t\tthis.target.shuffle( newIndices );\n\t\t} else {\n\t\t\tvar i = newIndices.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar idx = newIndices[ i ];\n\t\t\t\t// nothing is actually changing, so move in the index and roll on\n\t\t\t\tif ( i === idx ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// rebind the children on i to idx\n\t\t\t\tif ( i in this$1.childByKey ) this$1.childByKey[ i ].rebinding( !~idx ? undefined : this$1.joinKey( idx ), this$1.childByKey[ i ], true );\n\n\t\t\t\tif ( !~idx && this$1.keyModels[ i ] ) {\n\t\t\t\t\tthis$1.keyModels[i].rebinding( undefined, this$1.keyModels[i], false );\n\t\t\t\t} else if ( ~idx && this$1.keyModels[ i ] ) {\n\t\t\t\t\tif ( !this$1.keyModels[ idx ] ) this$1.childByKey[ idx ].getKeyModel( idx );\n\t\t\t\t\tthis$1.keyModels[i].rebinding( this$1.keyModels[ idx ], this$1.keyModels[i], false );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar upstream = this.source().length !== this.source().value.length;\n\n\t\t\tthis.links.forEach( function ( l ) { return l.shuffle( newIndices ); } );\n\n\t\t\ti = this.deps.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( this$1.deps[i].shuffle ) this$1.deps[i].shuffle( newIndices );\n\t\t\t}\n\n\t\t\tthis.marked();\n\n\t\t\tif ( upstream ) this.notifyUpstream();\n\t\t}\n\t};\n\n\tLinkModel.prototype.source = function source () {\n\t\tif ( this.target.source ) return this.target.source();\n\t\telse return this.target;\n\t};\n\n\tLinkModel.prototype.teardown = function teardown$1 () {\n\t\tif ( this._link ) this._link.teardown();\n\t\tthis.children.forEach( teardown$1$1 );\n\t};\n\n\treturn LinkModel;\n}(ModelBase));\n\nModelBase.prototype.link = function link ( model, keypath ) {\n\tvar lnk = this._link || new LinkModel( this.parent, this, model, this.key );\n\tlnk.sourcePath = keypath;\n\tif ( this._link ) this._link.relinking( model, true, false );\n\tthis.rebinding( lnk, this, false );\n\tfireShuffleTasks();\n\n\tvar unresolved = !this._link;\n\tthis._link = lnk;\n\tif ( unresolved ) this.parent.clearUnresolveds();\n\tlnk.marked();\n\treturn lnk;\n};\n\nModelBase.prototype.unlink = function unlink () {\n\tif ( this._link ) {\n\t\tvar ln = this._link;\n\t\tthis._link = undefined;\n\t\tln.rebinding( this, this._link );\n\t\tfireShuffleTasks();\n\t\tln.teardown();\n\t}\n};\n\nvar requestAnimationFrame;\n\n// If window doesn't exist, we don't need requestAnimationFrame\nif ( !win ) {\n\trequestAnimationFrame = null;\n} else {\n\t// https://gist.github.com/paulirish/1579671\n\t(function(vendors$$1, lastTime, win$$1) {\n\n\t\tvar x, setTimeout;\n\n\t\tif ( win$$1.requestAnimationFrame ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( x = 0; x < vendors$$1.length && !win$$1.requestAnimationFrame; ++x ) {\n\t\t\twin$$1.requestAnimationFrame = win$$1[vendors$$1[x]+'RequestAnimationFrame'];\n\t\t}\n\n\t\tif ( !win$$1.requestAnimationFrame ) {\n\t\t\tsetTimeout = win$$1.setTimeout;\n\n\t\t\twin$$1.requestAnimationFrame = function(callback) {\n\t\t\t\tvar currTime, timeToCall, id;\n\n\t\t\t\tcurrTime = Date.now();\n\t\t\t\ttimeToCall = Math.max( 0, 16 - (currTime - lastTime ) );\n\t\t\t\tid = setTimeout( function() { callback(currTime + timeToCall); }, timeToCall );\n\n\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\treturn id;\n\t\t\t};\n\t\t}\n\n\t}( vendors, 0, win ));\n\n\trequestAnimationFrame = win.requestAnimationFrame;\n}\n\nvar rAF = requestAnimationFrame;\n\nvar getTime = ( win && win.performance && typeof win.performance.now === 'function' ) ?\n\tfunction () { return win.performance.now(); } :\n\tfunction () { return Date.now(); };\n\n// TODO what happens if a transition is aborted?\n\nvar tickers = [];\nvar running = false;\n\nfunction tick () {\n\trunloop.start();\n\n\tvar now = getTime();\n\n\tvar i;\n\tvar ticker;\n\n\tfor ( i = 0; i < tickers.length; i += 1 ) {\n\t\tticker = tickers[i];\n\n\t\tif ( !ticker.tick( now ) ) {\n\t\t\t// ticker is complete, remove it from the stack, and decrement i so we don't miss one\n\t\t\ttickers.splice( i--, 1 );\n\t\t}\n\t}\n\n\trunloop.end();\n\n\tif ( tickers.length ) {\n\t\trAF( tick );\n\t} else {\n\t\trunning = false;\n\t}\n}\n\nvar Ticker = function Ticker ( options ) {\n\tthis.duration = options.duration;\n\tthis.step = options.step;\n\tthis.complete = options.complete;\n\tthis.easing = options.easing;\n\n\tthis.start = getTime();\n\tthis.end = this.start + this.duration;\n\n\tthis.running = true;\n\n\ttickers.push( this );\n\tif ( !running ) rAF( tick );\n};\n\nTicker.prototype.tick = function tick$1 ( now ) {\n\tif ( !this.running ) return false;\n\n\tif ( now > this.end ) {\n\t\tif ( this.step ) this.step( 1 );\n\t\tif ( this.complete ) this.complete( 1 );\n\n\t\treturn false;\n\t}\n\n\tvar elapsed = now - this.start;\n\tvar eased = this.easing( elapsed / this.duration );\n\n\tif ( this.step ) this.step( eased );\n\n\treturn true;\n};\n\nTicker.prototype.stop = function stop () {\n\tif ( this.abort ) this.abort();\n\tthis.running = false;\n};\n\nvar prefixers = {};\n\n// TODO this is legacy. sooner we can replace the old adaptor API the better\nfunction prefixKeypath ( obj, prefix ) {\n\tvar prefixed = {}, key;\n\n\tif ( !prefix ) {\n\t\treturn obj;\n\t}\n\n\tprefix += '.';\n\n\tfor ( key in obj ) {\n\t\tif ( obj.hasOwnProperty( key ) ) {\n\t\t\tprefixed[ prefix + key ] = obj[ key ];\n\t\t}\n\t}\n\n\treturn prefixed;\n}\n\nfunction getPrefixer ( rootKeypath ) {\n\tvar rootDot;\n\n\tif ( !prefixers[ rootKeypath ] ) {\n\t\trootDot = rootKeypath ? rootKeypath + '.' : '';\n\n\t\tprefixers[ rootKeypath ] = function ( relativeKeypath, value ) {\n\t\t\tvar obj;\n\n\t\t\tif ( typeof relativeKeypath === 'string' ) {\n\t\t\t\tobj = {};\n\t\t\t\tobj[ rootDot + relativeKeypath ] = value;\n\t\t\t\treturn obj;\n\t\t\t}\n\n\t\t\tif ( typeof relativeKeypath === 'object' ) {\n\t\t\t\t// 'relativeKeypath' is in fact a hash, not a keypath\n\t\t\t\treturn rootDot ? prefixKeypath( relativeKeypath, rootKeypath ) : relativeKeypath;\n\t\t\t}\n\t\t};\n\t}\n\n\treturn prefixers[ rootKeypath ];\n}\n\nvar Model = (function (ModelBase$$1) {\n\tfunction Model ( parent, key ) {\n\t\tModelBase$$1.call( this, parent );\n\n\t\tthis.value = undefined;\n\n\t\tthis.ticker = null;\n\n\t\tif ( parent ) {\n\t\t\tthis.key = unescapeKey( key );\n\t\t\tthis.isReadonly = parent.isReadonly;\n\n\t\t\tif ( parent.value ) {\n\t\t\t\tthis.value = parent.value[ this.key ];\n\t\t\t\tif ( isArray( this.value ) ) this.length = this.value.length;\n\t\t\t\tthis.adapt();\n\t\t\t}\n\t\t}\n\t}\n\n\tModel.prototype = Object.create( ModelBase$$1 && ModelBase$$1.prototype );\n\tModel.prototype.constructor = Model;\n\n\tModel.prototype.adapt = function adapt () {\n\t\tvar this$1 = this;\n\n\t\tvar adaptors = this.root.adaptors;\n\t\tvar len = adaptors.length;\n\n\t\tthis.rewrap = false;\n\n\t\t// Exit early if no adaptors\n\t\tif ( len === 0 ) return;\n\n\t\tvar value = this.value;\n\n\t\t// TODO remove this legacy nonsense\n\t\tvar ractive = this.root.ractive;\n\t\tvar keypath = this.getKeypath();\n\n\t\t// tear previous adaptor down if present\n\t\tif ( this.wrapper ) {\n\t\t\tvar shouldTeardown = !this.wrapper.reset || this.wrapper.reset( value ) === false;\n\n\t\t\tif ( shouldTeardown ) {\n\t\t\t\tthis.wrapper.teardown();\n\t\t\t\tthis.wrapper = null;\n\n\t\t\t\t// don't branch for undefined values\n\t\t\t\tif ( this.value !== undefined ) {\n\t\t\t\t\tvar parentValue = this.parent.value || this.parent.createBranch( this.key );\n\t\t\t\t\tif ( parentValue[ this.key ] !== this.value ) parentValue[ this.key ] = value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.value = this.wrapper.get();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tvar i;\n\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tvar adaptor = adaptors[i];\n\t\t\tif ( adaptor.filter( value, keypath, ractive ) ) {\n\t\t\t\tthis$1.wrapper = adaptor.wrap( ractive, value, keypath, getPrefixer( keypath ) );\n\t\t\t\tthis$1.wrapper.value = this$1.value;\n\t\t\t\tthis$1.wrapper.__model = this$1; // massive temporary hack to enable array adaptor\n\n\t\t\t\tthis$1.value = this$1.wrapper.get();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tModel.prototype.animate = function animate ( from, to, options, interpolator ) {\n\t\tvar this$1 = this;\n\n\t\tif ( this.ticker ) this.ticker.stop();\n\n\t\tvar fulfilPromise;\n\t\tvar promise = new Promise$1( function ( fulfil ) { return fulfilPromise = fulfil; } );\n\n\t\tthis.ticker = new Ticker({\n\t\t\tduration: options.duration,\n\t\t\teasing: options.easing,\n\t\t\tstep: function ( t ) {\n\t\t\t\tvar value = interpolator( t );\n\t\t\t\tthis$1.applyValue( value );\n\t\t\t\tif ( options.step ) options.step( t, value );\n\t\t\t},\n\t\t\tcomplete: function () {\n\t\t\t\tthis$1.applyValue( to );\n\t\t\t\tif ( options.complete ) options.complete( to );\n\n\t\t\t\tthis$1.ticker = null;\n\t\t\t\tfulfilPromise();\n\t\t\t}\n\t\t});\n\n\t\tpromise.stop = this.ticker.stop;\n\t\treturn promise;\n\t};\n\n\tModel.prototype.applyValue = function applyValue ( value ) {\n\t\tif ( isEqual( value, this.value ) ) return;\n\n\t\t// TODO deprecate this nonsense\n\t\tthis.registerChange( this.getKeypath(), value );\n\n\t\tif ( this.parent.wrapper && this.parent.wrapper.set ) {\n\t\t\tthis.parent.wrapper.set( this.key, value );\n\t\t\tthis.parent.value = this.parent.wrapper.get();\n\n\t\t\tthis.value = this.parent.value[ this.key ];\n\t\t\tthis.adapt();\n\t\t} else if ( this.wrapper ) {\n\t\t\tthis.value = value;\n\t\t\tthis.adapt();\n\t\t} else {\n\t\t\tvar parentValue = this.parent.value || this.parent.createBranch( this.key );\n\t\t\tparentValue[ this.key ] = value;\n\n\t\t\tthis.value = value;\n\t\t\tthis.adapt();\n\t\t}\n\n\t\tthis.parent.clearUnresolveds();\n\t\tthis.clearUnresolveds();\n\n\t\t// keep track of array length\n\t\tif ( isArray( value ) ) this.length = value.length;\n\n\t\t// notify dependants\n\t\tthis.links.forEach( handleChange$1$1 );\n\t\tthis.children.forEach( mark$1$1 );\n\t\tthis.deps.forEach( handleChange$1$1 );\n\n\t\tthis.notifyUpstream();\n\n\t\tif ( this.key === 'length' && isArray( this.parent.value ) ) this.parent.length = this.parent.value.length;\n\t};\n\n\tModel.prototype.createBranch = function createBranch ( key ) {\n\t\tvar branch = isNumeric( key ) ? [] : {};\n\t\tthis.set( branch );\n\n\t\treturn branch;\n\t};\n\n\tModel.prototype.get = function get ( shouldCapture, opts ) {\n\t\tif ( this._link ) return this._link.get( shouldCapture, opts );\n\t\tif ( shouldCapture ) capture( this );\n\t\t// if capturing, this value needs to be unwrapped because it's for external use\n\t\tif ( opts && opts.virtual ) return this.getVirtual( false );\n\t\treturn ( shouldCapture || ( opts && opts.unwrap ) ) && this.wrapper ? this.wrapper.value : this.value;\n\t};\n\n\tModel.prototype.getKeypathModel = function getKeypathModel ( ractive ) {\n\t\tif ( !this.keypathModel ) this.keypathModel = new KeypathModel( this );\n\t\treturn this.keypathModel;\n\t};\n\n\tModel.prototype.joinKey = function joinKey ( key, opts ) {\n\t\tif ( this._link ) {\n\t\t\tif ( opts && !opts.lastLink === false && ( key === undefined || key === '' ) ) return this;\n\t\t\treturn this._link.joinKey( key );\n\t\t}\n\n\t\tif ( key === undefined || key === '' ) return this;\n\n\n\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\tvar child = new Model( this, key );\n\t\t\tthis.children.push( child );\n\t\t\tthis.childByKey[ key ] = child;\n\t\t}\n\n\t\tif ( this.childByKey[ key ]._link ) return this.childByKey[ key ]._link;\n\t\treturn this.childByKey[ key ];\n\t};\n\n\tModel.prototype.mark = function mark$1 () {\n\t\tif ( this._link ) return this._link.mark();\n\n\t\tvar value = this.retrieve();\n\n\t\tif ( !isEqual( value, this.value ) ) {\n\t\t\tvar old = this.value;\n\t\t\tthis.value = value;\n\n\t\t\t// make sure the wrapper stays in sync\n\t\t\tif ( old !== value || this.rewrap ) this.adapt();\n\n\t\t\t// keep track of array lengths\n\t\t\tif ( isArray( value ) ) this.length = value.length;\n\n\t\t\tthis.children.forEach( mark$1$1 );\n\t\t\tthis.links.forEach( marked );\n\n\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t\tthis.clearUnresolveds();\n\t\t}\n\t};\n\n\tModel.prototype.merge = function merge ( array, comparator ) {\n\t\tvar oldArray = this.value, newArray = array;\n\t\tif ( oldArray === newArray ) oldArray = recreateArray( this );\n\t\tif ( comparator ) {\n\t\t\toldArray = oldArray.map( comparator );\n\t\t\tnewArray = newArray.map( comparator );\n\t\t}\n\n\t\tvar oldLength = oldArray.length;\n\n\t\tvar usedIndices = {};\n\t\tvar firstUnusedIndex = 0;\n\n\t\tvar newIndices = oldArray.map( function ( item ) {\n\t\t\tvar index;\n\t\t\tvar start = firstUnusedIndex;\n\n\t\t\tdo {\n\t\t\t\tindex = newArray.indexOf( item, start );\n\n\t\t\t\tif ( index === -1 ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tstart = index + 1;\n\t\t\t} while ( ( usedIndices[ index ] === true ) && start < oldLength );\n\n\t\t\t// keep track of the first unused index, so we don't search\n\t\t\t// the whole of newArray for each item in oldArray unnecessarily\n\t\t\tif ( index === firstUnusedIndex ) {\n\t\t\t\tfirstUnusedIndex += 1;\n\t\t\t}\n\t\t\t// allow next instance of next \"equal\" to be found item\n\t\t\tusedIndices[ index ] = true;\n\t\t\treturn index;\n\t\t});\n\n\t\tthis.parent.value[ this.key ] = array;\n\t\tthis.shuffle( newIndices );\n\t};\n\n\tModel.prototype.retrieve = function retrieve () {\n\t\treturn this.parent.value ? this.parent.value[ this.key ] : undefined;\n\t};\n\n\tModel.prototype.set = function set ( value ) {\n\t\tif ( this.ticker ) this.ticker.stop();\n\t\tthis.applyValue( value );\n\t};\n\n\tModel.prototype.shuffle = function shuffle ( newIndices ) {\n\t\tvar this$1 = this;\n\n\t\tthis.shuffling = true;\n\t\tvar i = newIndices.length;\n\t\twhile ( i-- ) {\n\t\t\tvar idx = newIndices[ i ];\n\t\t\t// nothing is actually changing, so move in the index and roll on\n\t\t\tif ( i === idx ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// rebind the children on i to idx\n\t\t\tif ( i in this$1.childByKey ) this$1.childByKey[ i ].rebinding( !~idx ? undefined : this$1.joinKey( idx ), this$1.childByKey[ i ], true );\n\n\t\t\tif ( !~idx && this$1.keyModels[ i ] ) {\n\t\t\t\tthis$1.keyModels[i].rebinding( undefined, this$1.keyModels[i], false );\n\t\t\t} else if ( ~idx && this$1.keyModels[ i ] ) {\n\t\t\t\tif ( !this$1.keyModels[ idx ] ) this$1.childByKey[ idx ].getKeyModel( idx );\n\t\t\t\tthis$1.keyModels[i].rebinding( this$1.keyModels[ idx ], this$1.keyModels[i], false );\n\t\t\t}\n\t\t}\n\n\t\tvar upstream = this.length !== this.value.length;\n\n\t\tthis.links.forEach( function ( l ) { return l.shuffle( newIndices ); } );\n\t\tfireShuffleTasks( 'early' );\n\n\t\ti = this.deps.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( this$1.deps[i].shuffle ) this$1.deps[i].shuffle( newIndices );\n\t\t}\n\n\t\tthis.mark();\n\t\tfireShuffleTasks( 'mark' );\n\n\t\tif ( upstream ) this.notifyUpstream();\n\t\tthis.shuffling = false;\n\t};\n\n\tModel.prototype.teardown = function teardown$1 () {\n\t\tif ( this._link ) this._link.teardown();\n\t\tthis.children.forEach( teardown$1$1 );\n\t\tif ( this.wrapper ) this.wrapper.teardown();\n\t\tif ( this.keypathModel ) this.keypathModel.teardown();\n\t};\n\n\treturn Model;\n}(ModelBase));\n\nfunction recreateArray( model ) {\n\tvar array = [];\n\n\tfor ( var i = 0; i < model.length; i++ ) {\n\t\tarray[ i ] = (model.childByKey[i] || {}).value;\n\t}\n\n\treturn array;\n}\n\n/* global global */\nvar GlobalModel = (function (Model$$1) {\n\tfunction GlobalModel ( ) {\n\t\tModel$$1.call( this, null, '@global' );\n\t\tthis.value = typeof global !== 'undefined' ? global : window;\n\t\tthis.isRoot = true;\n\t\tthis.root = this;\n\t\tthis.adaptors = [];\n\t}\n\n\tGlobalModel.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\tGlobalModel.prototype.constructor = GlobalModel;\n\n\tGlobalModel.prototype.getKeypath = function getKeypath() {\n\t\treturn '@global';\n\t};\n\n\t// global model doesn't contribute changes events because it has no instance\n\tGlobalModel.prototype.registerChange = function registerChange () {};\n\n\treturn GlobalModel;\n}(Model));\n\nvar GlobalModel$1 = new GlobalModel();\n\nvar keypathExpr = /^@[^\\(]+\\(([^\\)]+)\\)/;\n\nfunction resolveReference ( fragment, ref ) {\n\tvar context = fragment.findContext();\n\n\t// special references\n\t// TODO does `this` become `.` at parse time?\n\tif ( ref === '.' || ref === 'this' ) return context;\n\tif ( ref.indexOf( '@keypath' ) === 0 ) {\n\t\tvar match = keypathExpr.exec( ref );\n\t\tif ( match && match[1] ) {\n\t\t\tvar model = resolveReference( fragment, match[1] );\n\t\t\tif ( model ) return model.getKeypathModel();\n\t\t}\n\t\treturn context.getKeypathModel();\n\t}\n\tif ( ref.indexOf( '@rootpath' ) === 0 ) {\n\t\t// check to see if this is an empty component root\n\t\twhile ( context.isRoot && context.ractive.component ) {\n\t\t\tcontext = context.ractive.component.parentFragment.findContext();\n\t\t}\n\n\t\tvar match$1 = keypathExpr.exec( ref );\n\t\tif ( match$1 && match$1[1] ) {\n\t\t\tvar model$1 = resolveReference( fragment, match$1[1] );\n\t\t\tif ( model$1 ) return model$1.getKeypathModel( fragment.ractive.root );\n\t\t}\n\t\treturn context.getKeypathModel( fragment.ractive.root );\n\t}\n\tif ( ref === '@index' || ref === '@key' ) {\n\t\tvar repeater = fragment.findRepeatingFragment();\n\t\t// make sure the found fragment is actually an iteration\n\t\tif ( !repeater.isIteration ) return;\n\t\treturn repeater.context.getKeyModel( repeater[ ref[1] === 'i' ? 'index' : 'key' ] );\n\t}\n\tif ( ref === '@this' ) {\n\t\treturn fragment.ractive.viewmodel.getRactiveModel();\n\t}\n\tif ( ref === '@global' ) {\n\t\treturn GlobalModel$1;\n\t}\n\n\t// ancestor references\n\tif ( ref[0] === '~' ) return fragment.ractive.viewmodel.joinAll( splitKeypath( ref.slice( 2 ) ) );\n\tif ( ref[0] === '.' ) {\n\t\tvar parts = ref.split( '/' );\n\n\t\twhile ( parts[0] === '.' || parts[0] === '..' ) {\n\t\t\tvar part = parts.shift();\n\n\t\t\tif ( part === '..' ) {\n\t\t\t\tcontext = context.parent;\n\t\t\t}\n\t\t}\n\n\t\tref = parts.join( '/' );\n\n\t\t// special case - `{{.foo}}` means the same as `{{./foo}}`\n\t\tif ( ref[0] === '.' ) ref = ref.slice( 1 );\n\t\treturn context.joinAll( splitKeypath( ref ) );\n\t}\n\n\treturn resolveAmbiguousReference( fragment, ref );\n}\n\nfunction Ractive$get ( keypath, opts ) {\n\tif ( typeof keypath !== 'string' ) return this.viewmodel.get( true, keypath );\n\n\tvar keys = splitKeypath( keypath );\n\tvar key = keys[0];\n\n\tvar model;\n\n\tif ( !this.viewmodel.has( key ) ) {\n\t\t// if this is an inline component, we may need to create\n\t\t// an implicit mapping\n\t\tif ( this.component && !this.isolated ) {\n\t\t\tmodel = resolveReference( this.component.parentFragment, key );\n\n\t\t\tif ( model ) {\n\t\t\t\tthis.viewmodel.map( key, model );\n\t\t\t}\n\t\t}\n\t}\n\n\tmodel = this.viewmodel.joinAll( keys );\n\treturn model.get( true, opts );\n}\n\nfunction gatherRefs( fragment ) {\n\tvar key = {}, index = {};\n\n\t// walk up the template gather refs as we go\n\twhile ( fragment ) {\n\t\tif ( fragment.parent && ( fragment.parent.indexRef || fragment.parent.keyRef ) ) {\n\t\t\tvar ref = fragment.parent.indexRef;\n\t\t\tif ( ref && !( ref in index ) ) index[ref] = fragment.index;\n\t\t\tref = fragment.parent.keyRef;\n\t\t\tif ( ref && !( ref in key ) ) key[ref] = fragment.key;\n\t\t}\n\n\t\tif ( fragment.componentParent && !fragment.ractive.isolated ) {\n\t\t\tfragment = fragment.componentParent;\n\t\t} else {\n\t\t\tfragment = fragment.parent;\n\t\t}\n\t}\n\n\treturn { key: key, index: index };\n}\n\n// This function takes an array, the name of a mutator method, and the\n// arguments to call that mutator method with, and returns an array that\n// maps the old indices to their new indices.\n\n// So if you had something like this...\n//\n//     array = [ 'a', 'b', 'c', 'd' ];\n//     array.push( 'e' );\n//\n// ...you'd get `[ 0, 1, 2, 3 ]` - in other words, none of the old indices\n// have changed. If you then did this...\n//\n//     array.unshift( 'z' );\n//\n// ...the indices would be `[ 1, 2, 3, 4, 5 ]` - every item has been moved\n// one higher to make room for the 'z'. If you removed an item, the new index\n// would be -1...\n//\n//     array.splice( 2, 2 );\n//\n// ...this would result in [ 0, 1, -1, -1, 2, 3 ].\n//\n// This information is used to enable fast, non-destructive shuffling of list\n// sections when you do e.g. `ractive.splice( 'items', 2, 2 );\n\nfunction getNewIndices ( length, methodName, args ) {\n\tvar spliceArguments, newIndices = [], removeStart, removeEnd, balance, i;\n\n\tspliceArguments = getSpliceEquivalent( length, methodName, args );\n\n\tif ( !spliceArguments ) {\n\t\treturn null; // TODO support reverse and sort?\n\t}\n\n\tbalance = ( spliceArguments.length - 2 ) - spliceArguments[1];\n\n\tremoveStart = Math.min( length, spliceArguments[0] );\n\tremoveEnd = removeStart + spliceArguments[1];\n\tnewIndices.startIndex = removeStart;\n\n\tfor ( i = 0; i < removeStart; i += 1 ) {\n\t\tnewIndices.push( i );\n\t}\n\n\tfor ( ; i < removeEnd; i += 1 ) {\n\t\tnewIndices.push( -1 );\n\t}\n\n\tfor ( ; i < length; i += 1 ) {\n\t\tnewIndices.push( i + balance );\n\t}\n\n\t// there is a net shift for the rest of the array starting with index + balance\n\tif ( balance !== 0 ) {\n\t\tnewIndices.touchedFrom = spliceArguments[0];\n\t} else {\n\t\tnewIndices.touchedFrom = length;\n\t}\n\n\treturn newIndices;\n}\n\n\n// The pop, push, shift an unshift methods can all be represented\n// as an equivalent splice\nfunction getSpliceEquivalent ( length, methodName, args ) {\n\tswitch ( methodName ) {\n\t\tcase 'splice':\n\t\t\tif ( args[0] !== undefined && args[0] < 0 ) {\n\t\t\t\targs[0] = length + Math.max( args[0], -length );\n\t\t\t}\n\n\t\t\tif ( args[0] === undefined ) args[0] = 0;\n\n\t\t\twhile ( args.length < 2 ) {\n\t\t\t\targs.push( length - args[0] );\n\t\t\t}\n\n\t\t\tif ( typeof args[1] !== 'number' ) {\n\t\t\t\targs[1] = length - args[0];\n\t\t\t}\n\n\t\t\t// ensure we only remove elements that exist\n\t\t\targs[1] = Math.min( args[1], length - args[0] );\n\n\t\t\treturn args;\n\n\t\tcase 'sort':\n\t\tcase 'reverse':\n\t\t\treturn null;\n\n\t\tcase 'pop':\n\t\t\tif ( length ) {\n\t\t\t\treturn [ length - 1, 1 ];\n\t\t\t}\n\t\t\treturn [ 0, 0 ];\n\n\t\tcase 'push':\n\t\t\treturn [ length, 0 ].concat( args );\n\n\t\tcase 'shift':\n\t\t\treturn [ 0, length ? 1 : 0 ];\n\n\t\tcase 'unshift':\n\t\t\treturn [ 0, 0 ].concat( args );\n\t}\n}\n\nvar arrayProto = Array.prototype;\n\nvar makeArrayMethod = function ( methodName ) {\n\tfunction path ( keypath ) {\n\t\tvar args = [], len = arguments.length - 1;\n\t\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n\t\treturn model( this.viewmodel.joinAll( splitKeypath( keypath ) ), args );\n\t}\n\n\tfunction model ( mdl, args ) {\n\t\tvar array = mdl.get();\n\n\t\tif ( !isArray( array ) ) {\n\t\t\tif ( array === undefined ) {\n\t\t\t\tarray = [];\n\t\t\t\tvar result$1 = arrayProto[ methodName ].apply( array, args );\n\t\t\t\tvar promise$1 = runloop.start( this, true ).then( function () { return result$1; } );\n\t\t\t\tmdl.set( array );\n\t\t\t\trunloop.end();\n\t\t\t\treturn promise$1;\n\t\t\t} else {\n\t\t\t\tthrow new Error( (\"shuffle array method \" + methodName + \" called on non-array at \" + (mdl.getKeypath())) );\n\t\t\t}\n\t\t}\n\n\t\tvar newIndices = getNewIndices( array.length, methodName, args );\n\t\tvar result = arrayProto[ methodName ].apply( array, args );\n\n\t\tvar promise = runloop.start( this, true ).then( function () { return result; } );\n\t\tpromise.result = result;\n\n\t\tif ( newIndices ) {\n\t\t\tmdl.shuffle( newIndices );\n\t\t} else {\n\t\t\tmdl.set( result );\n\t\t}\n\n\t\trunloop.end();\n\n\t\treturn promise;\n\t}\n\n\treturn { path: path, model: model };\n};\n\nvar comparators = {};\n\nfunction getComparator ( option ) {\n\tif ( !option ) return null; // use existing arrays\n\tif ( option === true ) return JSON.stringify;\n\tif ( typeof option === 'function' ) return option;\n\n\tif ( typeof option === 'string' ) {\n\t\treturn comparators[ option ] || ( comparators[ option ] = function ( thing ) { return thing[ option ]; } );\n\t}\n\n\tthrow new Error( 'If supplied, options.compare must be a string, function, or `true`' ); // TODO link to docs\n}\n\nfunction merge$2 ( ractive, model, array, options ) {\n\tvar promise = runloop.start( ractive, true );\n\tvar value = model.get();\n\n\tif ( !isArray( value ) || !isArray( array ) ) {\n\t\tthrow new Error( 'You cannot merge an array with a non-array' );\n\t}\n\n\tvar comparator = getComparator( options && options.compare );\n\tmodel.merge( array, comparator );\n\n\trunloop.end();\n\treturn promise;\n}\n\nfunction thisRactive$merge ( keypath, array, options ) {\n\treturn merge$2( this, this.viewmodel.joinAll( splitKeypath( keypath ) ), array, options );\n}\n\nvar updateHook = new Hook( 'update' );\n\nfunction update$3 ( ractive, model ) {\n\tif ( model.parent && model.parent.wrapper ) return update$3( ractive, model.parent );\n\n\tvar promise = runloop.start( ractive, true );\n\n\tmodel.mark();\n\tmodel.registerChange( model.getKeypath(), model.get() );\n\n\tif ( !model.isRoot ) {\n\t\t// there may be unresolved refs that are now resolvable up the context tree\n\t\tvar parent = model.parent, key = model.key;\n\t\twhile ( parent && !parent.isRoot ) {\n\t\t\tif ( parent.clearUnresolveds ) parent.clearUnresolveds( key );\n\t\t\tkey = parent.key;\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\t// notify upstream of changes\n\tmodel.notifyUpstream();\n\n\trunloop.end();\n\n\tupdateHook.fire( ractive, model );\n\n\treturn promise;\n}\n\nfunction Ractive$update ( keypath ) {\n\tif ( keypath ) keypath = splitKeypath( keypath );\n\n\treturn update$3( this, keypath ? this.viewmodel.joinAll( keypath ) : this.viewmodel );\n}\n\nvar modelPush = makeArrayMethod( 'push' ).model;\nvar modelPop = makeArrayMethod( 'pop' ).model;\nvar modelShift = makeArrayMethod( 'shift' ).model;\nvar modelUnshift = makeArrayMethod( 'unshift' ).model;\nvar modelSort = makeArrayMethod( 'sort' ).model;\nvar modelSplice = makeArrayMethod( 'splice' ).model;\nvar modelReverse = makeArrayMethod( 'reverse' ).model;\n\n// TODO: at some point perhaps this could support relative * keypaths?\nfunction build$1 ( el, keypath, value ) {\n\tvar sets = [];\n\n\t// set multiple keypaths in one go\n\tif ( isObject( keypath ) ) {\n\t\tfor ( var k in keypath ) {\n\t\t\tif ( keypath.hasOwnProperty( k ) ) {\n\t\t\t\tsets.push( [ findModel( el, k ).model, keypath[k] ] );\n\t\t\t}\n\t\t}\n\n\t}\n\t// set a single keypath\n\telse {\n\t\tsets.push( [ findModel( el, keypath ).model, value ] );\n\t}\n\n\treturn sets;\n}\n\n// get relative keypaths and values\nfunction get$1 ( keypath ) {\n\tif ( !keypath ) return this._element.parentFragment.findContext().get( true );\n\n\tvar model = resolveReference( this._element.parentFragment, keypath );\n\n\treturn model ? model.get( true ) : undefined;\n}\n\nfunction resolve$2 ( path, ractive ) {\n\tvar ref = findModel( this, path ), model = ref.model, instance = ref.instance;\n\treturn model ? model.getKeypath( ractive || instance ) : path;\n}\n\nfunction findModel ( el, path ) {\n\tvar frag = el._element.parentFragment;\n\n\tif ( typeof path !== 'string' ) {\n\t\treturn { model: frag.findContext(), instance: path };\n\t}\n\n\treturn { model: resolveReference( frag, path ), instance: frag.ractive };\n}\n\n// the usual mutation suspects\nfunction add$2 ( keypath, value ) {\n\tif ( value === undefined ) value = 1;\n\tif ( !isNumeric( value ) ) throw new Error( 'Bad arguments' );\n\treturn set$1( this.ractive, build$1( this, keypath, value ).map( function ( pair ) {\n\t\tvar model = pair[0], val = pair[1], value = model.get();\n\t\tif ( !isNumeric( val ) || !isNumeric( value ) ) throw new Error( 'Cannot add non-numeric value' );\n\t\treturn [ model, value + val ];\n\t}) );\n}\n\nfunction animate$2 ( keypath, value, options ) {\n\tvar model = findModel( this, keypath ).model;\n\treturn animate$1( this.ractive, model, value, options );\n}\n\nfunction link$1 ( source, dest ) {\n\tvar there = findModel( this, source ).model, here = findModel( this, dest ).model;\n\tvar promise = runloop.start( this.ractive, true );\n\there.link( there, source );\n\trunloop.end();\n\treturn promise;\n}\n\nfunction merge$1 ( keypath, array, options ) {\n\treturn merge$2( this.ractive, findModel( this, keypath ).model, array, options );\n}\n\nfunction pop ( keypath ) {\n\treturn modelPop( findModel( this, keypath ).model, [] );\n}\n\nfunction push ( keypath ) {\n\tvar values = [], len = arguments.length - 1;\n\twhile ( len-- > 0 ) values[ len ] = arguments[ len + 1 ];\n\n\treturn modelPush( findModel( this, keypath ).model, values );\n}\n\nfunction reverse ( keypath ) {\n\treturn modelReverse( findModel( this, keypath ).model, [] );\n}\n\nfunction set$2 ( keypath, value ) {\n\treturn set$1( this.ractive, build$1( this, keypath, value ) );\n}\n\nfunction shift ( keypath ) {\n\treturn modelShift( findModel( this, keypath ).model, [] );\n}\n\nfunction splice ( keypath, index, drop ) {\n\tvar add = [], len = arguments.length - 3;\n\twhile ( len-- > 0 ) add[ len ] = arguments[ len + 3 ];\n\n\tadd.unshift( index, drop );\n\treturn modelSplice( findModel( this, keypath ).model, add );\n}\n\nfunction sort ( keypath ) {\n\treturn modelSort( findModel( this, keypath ).model, [] );\n}\n\nfunction subtract ( keypath, value ) {\n\tif ( value === undefined ) value = 1;\n\tif ( !isNumeric( value ) ) throw new Error( 'Bad arguments' );\n\treturn set$1( this.ractive, build$1( this, keypath, value ).map( function ( pair ) {\n\t\tvar model = pair[0], val = pair[1], value = model.get();\n\t\tif ( !isNumeric( val ) || !isNumeric( value ) ) throw new Error( 'Cannot add non-numeric value' );\n\t\treturn [ model, value - val ];\n\t}) );\n}\n\nfunction toggle ( keypath ) {\n\tvar ref = findModel( this, keypath ), model = ref.model;\n\treturn set$1( this.ractive, [ [ model, !model.get() ] ] );\n}\n\nfunction unlink$1 ( dest ) {\n\tvar here = findModel( this, dest ).model;\n\tvar promise = runloop.start( this.ractive, true );\n\tif ( here.owner && here.owner._link ) here.owner.unlink();\n\trunloop.end();\n\treturn promise;\n}\n\nfunction unshift ( keypath ) {\n\tvar add = [], len = arguments.length - 1;\n\twhile ( len-- > 0 ) add[ len ] = arguments[ len + 1 ];\n\n\treturn modelUnshift( findModel( this, keypath ).model, add );\n}\n\nfunction update$2 ( keypath ) {\n\treturn update$3( this.ractive, findModel( this, keypath ).model );\n}\n\nfunction updateModel$1 ( keypath, cascade ) {\n\tvar ref = findModel( this, keypath ), model = ref.model;\n\tvar promise = runloop.start( this.ractive, true );\n\tmodel.updateFromBindings( cascade );\n\trunloop.end();\n\treturn promise;\n}\n\n// two-way binding related helpers\nfunction isBound () {\n\tvar ref = getBindingModel( this ), model = ref.model;\n\treturn !!model;\n}\n\nfunction getBindingPath ( ractive ) {\n\tvar ref = getBindingModel( this ), model = ref.model, instance = ref.instance;\n\tif ( model ) return model.getKeypath( ractive || instance );\n}\n\nfunction getBinding () {\n\tvar ref = getBindingModel( this ), model = ref.model;\n\tif ( model ) return model.get( true );\n}\n\nfunction getBindingModel ( ctx ) {\n\tvar el = ctx._element;\n\treturn { model: el.binding && el.binding.model, instance: el.parentFragment.ractive };\n}\n\nfunction setBinding ( value ) {\n\tvar ref = getBindingModel( this ), model = ref.model;\n\treturn set$1( this.ractive, [ [ model, value ] ] );\n}\n\n// deprecated getters\nfunction keypath () {\n\twarnOnceIfDebug( (\"Object property keypath is deprecated, please use resolve() instead.\") );\n\treturn this.resolve();\n}\n\nfunction rootpath () {\n\twarnOnceIfDebug( (\"Object property rootpath is deprecated, please use resolve( ractive.root ) instead.\") );\n\treturn this.resolve( this.ractive.root );\n}\n\nfunction context () {\n\twarnOnceIfDebug( (\"Object property context is deprecated, please use get() instead.\") );\n\treturn this.get();\n}\n\nfunction index () {\n\twarnOnceIfDebug( (\"Object property index is deprecated, you can use get( \\\"indexName\\\" ) instead.\") );\n\treturn gatherRefs( this._element.parentFragment ).index;\n}\n\nfunction key () {\n\twarnOnceIfDebug( (\"Object property key is deprecated, you can use get( \\\"keyName\\\" ) instead.\") );\n\treturn gatherRefs( this._element.parentFragment ).key;\n}\n\nfunction addHelpers ( obj, element ) {\n\tdefineProperties( obj, {\n\t\t_element: { value: element },\n\t\tractive: { value: element.parentFragment.ractive },\n\t\tresolve: { value: resolve$2 },\n\t\tget: { value: get$1 },\n\n\t\tadd: { value: add$2 },\n\t\tanimate: { value: animate$2 },\n\t\tlink: { value: link$1 },\n\t\tmerge: { value: merge$1 },\n\t\tpop: { value: pop },\n\t\tpush: { value: push },\n\t\treverse: { value: reverse },\n\t\tset: { value: set$2 },\n\t\tshift: { value: shift },\n\t\tsort: { value: sort },\n\t\tsplice: { value: splice },\n\t\tsubtract: { value: subtract },\n\t\ttoggle: { value: toggle },\n\t\tunlink: { value: unlink$1 },\n\t\tunshift: { value: unshift },\n\t\tupdate: { value: update$2 },\n\t\tupdateModel: { value: updateModel$1 },\n\n\t\tisBound: { value: isBound },\n\t\tgetBindingPath: { value: getBindingPath },\n\t\tgetBinding: { value: getBinding },\n\t\tsetBinding: { value: setBinding },\n\n\t\tkeypath: { get: keypath },\n\t\trootpath: { get: rootpath },\n\t\tcontext: { get: context },\n\t\tindex: { get: index },\n\t\tkey: { get: key }\n\t});\n\n\treturn obj;\n}\n\nvar query = doc && doc.querySelector;\n\nvar staticInfo = function( node ) {\n\tif ( typeof node === 'string' && query ) {\n\t\tnode = query.call( document, node );\n\t}\n\n\tif ( !node || !node._ractive ) return {};\n\n\tvar storage = node._ractive;\n\n\treturn addHelpers( {}, storage.proxy );\n};\n\nfunction getNodeInfo( node ) {\n\tif ( typeof node === 'string' ) {\n\t\tnode = this.find( node );\n\t}\n\n\treturn staticInfo( node );\n}\n\nvar insertHook = new Hook( 'insert' );\n\nfunction Ractive$insert ( target, anchor ) {\n\tif ( !this.fragment.rendered ) {\n\t\t// TODO create, and link to, documentation explaining this\n\t\tthrow new Error( 'The API has changed - you must call `ractive.render(target[, anchor])` to render your Ractive instance. Once rendered you can use `ractive.insert()`.' );\n\t}\n\n\ttarget = getElement( target );\n\tanchor = getElement( anchor ) || null;\n\n\tif ( !target ) {\n\t\tthrow new Error( 'You must specify a valid target to insert into' );\n\t}\n\n\ttarget.insertBefore( this.detach(), anchor );\n\tthis.el = target;\n\n\t( target.__ractive_instances__ || ( target.__ractive_instances__ = [] ) ).push( this );\n\tthis.isDetached = false;\n\n\tfireInsertHook( this );\n}\n\nfunction fireInsertHook( ractive ) {\n\tinsertHook.fire( ractive );\n\n\tractive.findAllComponents('*').forEach( function ( child ) {\n\t\tfireInsertHook( child.instance );\n\t});\n}\n\nfunction link$2( there, here ) {\n\tif ( here === there || (there + '.').indexOf( here + '.' ) === 0 || (here + '.').indexOf( there + '.' ) === 0 ) {\n\t\tthrow new Error( 'A keypath cannot be linked to itself.' );\n\t}\n\n\tvar promise = runloop.start();\n\tvar model;\n\n\t// may need to allow a mapping to resolve implicitly\n\tvar sourcePath = splitKeypath( there );\n\tif ( !this.viewmodel.has( sourcePath[0] ) && this.component ) {\n\t\tmodel = resolveReference( this.component.parentFragment, sourcePath[0] );\n\t\tmodel = model.joinAll( sourcePath.slice( 1 ) );\n\t}\n\n\tthis.viewmodel.joinAll( splitKeypath( here ) ).link( model || this.viewmodel.joinAll( sourcePath ), there );\n\n\trunloop.end();\n\n\treturn promise;\n}\n\nvar ReferenceResolver = function ReferenceResolver ( fragment, reference, callback ) {\n\tvar this$1 = this;\n\n\t\tthis.fragment = fragment;\n\tthis.reference = normalise( reference );\n\tthis.callback = callback;\n\n\tthis.keys = splitKeypath( reference );\n\tthis.resolved = false;\n\n\tthis.contexts = [];\n\n\t// TODO the consumer should take care of addUnresolved\n\t// we attach to all the contexts between here and the root\n\t// - whenever their values change, they can quickly\n\t// check to see if we can resolve\n\twhile ( fragment ) {\n\t\tif ( fragment.context ) {\n\t\t\tfragment.context.addUnresolved( this$1.keys[0], this$1 );\n\t\t\tthis$1.contexts.push( fragment.context );\n\t\t}\n\n\t\tfragment = fragment.componentParent || fragment.parent;\n\t}\n};\n\nReferenceResolver.prototype.attemptResolution = function attemptResolution () {\n\tif ( this.resolved ) return;\n\n\tvar model = resolveAmbiguousReference( this.fragment, this.reference );\n\n\tif ( model ) {\n\t\tthis.resolved = true;\n\t\tthis.callback( model );\n\t}\n};\n\nReferenceResolver.prototype.forceResolution = function forceResolution () {\n\tif ( this.resolved ) return;\n\n\tvar model = this.fragment.findContext().joinAll( this.keys );\n\tthis.callback( model );\n\tthis.resolved = true;\n};\n\nReferenceResolver.prototype.rebinding = function rebinding ( next, previous ) {\n\tvar this$1 = this;\n\n\t\tif ( previous ) previous.removeUnresolved( this.keys[0], this );\n\tif ( next ) runloop.scheduleTask( function () { return next.addUnresolved( this$1.keys[0], this$1 ); } );\n};\n\nReferenceResolver.prototype.unbind = function unbind () {\n\tvar this$1 = this;\n\n\t\tif ( this.fragment ) removeFromArray( this.fragment.unresolved, this );\n\n\tif ( this.resolved ) return;\n\n\tthis.contexts.forEach( function ( c ) { return c.removeUnresolved( this$1.keys[0], this$1 ); } );\n};\n\nfunction observe ( keypath, callback, options ) {\n\tvar this$1 = this;\n\n\tvar observers = [];\n\tvar map;\n\n\tif ( isObject( keypath ) ) {\n\t\tmap = keypath;\n\t\toptions = callback || {};\n\n\t\tObject.keys( map ).forEach( function ( keypath ) {\n\t\t\tvar callback = map[ keypath ];\n\n\t\t\tkeypath.split( ' ' ).forEach( function ( keypath ) {\n\t\t\t\tobservers.push( createObserver( this$1, keypath, callback, options ) );\n\t\t\t});\n\t\t});\n\t}\n\n\telse {\n\t\tvar keypaths;\n\n\t\tif ( typeof keypath === 'function' ) {\n\t\t\toptions = callback;\n\t\t\tcallback = keypath;\n\t\t\tkeypaths = [ '' ];\n\t\t} else {\n\t\t\tkeypaths = keypath.split( ' ' );\n\t\t}\n\n\t\tkeypaths.forEach( function ( keypath ) {\n\t\t\tobservers.push( createObserver( this$1, keypath, callback, options || {} ) );\n\t\t});\n\t}\n\n\t// add observers to the Ractive instance, so they can be\n\t// cancelled on ractive.teardown()\n\tthis._observers.push.apply( this._observers, observers );\n\n\treturn {\n\t\tcancel: function () {\n\t\t\tobservers.forEach( function ( observer ) {\n\t\t\t\tremoveFromArray ( this$1._observers, observer );\n\t\t\t\tobserver.cancel();\n\t\t\t} );\n\t\t}\n\t};\n}\n\nfunction createObserver ( ractive, keypath, callback, options ) {\n\tvar viewmodel = ractive.viewmodel;\n\n\tvar keys = splitKeypath( keypath );\n\tvar wildcardIndex = keys.indexOf( '*' );\n\toptions.keypath = keypath;\n\n\t// normal keypath - no wildcards\n\tif ( !~wildcardIndex ) {\n\t\tvar key = keys[0];\n\t\tvar model;\n\n\t\t// if not the root model itself, check if viewmodel has key.\n\t\tif ( key !== '' && !viewmodel.has( key ) ) {\n\t\t\t// if this is an inline component, we may need to create an implicit mapping\n\t\t\tif ( ractive.component && !ractive.isolated ) {\n\t\t\t\tmodel = resolveReference( ractive.component.parentFragment, key );\n\t\t\t\tif ( model ) {\n\t\t\t\t\tviewmodel.map( key, model );\n\t\t\t\t\tmodel = viewmodel.joinAll( keys );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmodel = viewmodel.joinAll( keys );\n\t\t}\n\n\t\treturn new Observer( ractive, model, callback, options );\n\t}\n\n\t// pattern observers - more complex case\n\tvar baseModel = wildcardIndex === 0 ?\n\t\tviewmodel :\n\t\tviewmodel.joinAll( keys.slice( 0, wildcardIndex ) );\n\n\treturn new PatternObserver( ractive, baseModel, keys.splice( wildcardIndex ), callback, options );\n}\n\nvar Observer = function Observer ( ractive, model, callback, options ) {\n\tvar this$1 = this;\n\n\t\tthis.context = options.context || ractive;\n\tthis.callback = callback;\n\tthis.ractive = ractive;\n\n\tif ( model ) this.resolved( model );\n\telse {\n\t\tthis.keypath = options.keypath;\n\t\tthis.resolver = new ReferenceResolver( ractive.fragment, options.keypath, function ( model ) {\n\t\t\tthis$1.resolved( model );\n\t\t});\n\t}\n\n\tif ( options.init !== false ) {\n\t\tthis.dirty = true;\n\t\tthis.dispatch();\n\t} else {\n\t\tthis.oldValue = this.newValue;\n\t}\n\n\tthis.defer = options.defer;\n\tthis.once = options.once;\n\tthis.strict = options.strict;\n\n\tthis.dirty = false;\n};\n\nObserver.prototype.cancel = function cancel () {\n\tthis.cancelled = true;\n\tif ( this.model ) {\n\t\tthis.model.unregister( this );\n\t} else {\n\t\tthis.resolver.unbind();\n\t}\n};\n\nObserver.prototype.dispatch = function dispatch () {\n\tif ( !this.cancelled ) {\n\t\tthis.callback.call( this.context, this.newValue, this.oldValue, this.keypath );\n\t\tthis.oldValue = this.model ? this.model.get() : this.newValue;\n\t\tthis.dirty = false;\n\t}\n};\n\nObserver.prototype.handleChange = function handleChange () {\n\tvar this$1 = this;\n\n\t\tif ( !this.dirty ) {\n\t\tvar newValue = this.model.get();\n\t\tif ( isEqual( newValue, this.oldValue ) ) return;\n\n\t\tthis.newValue = newValue;\n\n\t\tif ( this.strict && this.newValue === this.oldValue ) return;\n\n\t\trunloop.addObserver( this, this.defer );\n\t\tthis.dirty = true;\n\n\t\tif ( this.once ) runloop.scheduleTask( function () { return this$1.cancel(); } );\n\t}\n};\n\nObserver.prototype.rebinding = function rebinding ( next, previous ) {\n\tvar this$1 = this;\n\n\t\tnext = rebindMatch( this.keypath, next, previous );\n\t// TODO: set up a resolver if next is undefined?\n\tif ( next === this.model ) return false;\n\n\tif ( this.model ) this.model.unregister( this );\n\tif ( next ) next.addShuffleTask( function () { return this$1.resolved( next ); } );\n};\n\nObserver.prototype.resolved = function resolved ( model ) {\n\tthis.model = model;\n\tthis.keypath = model.getKeypath( this.ractive );\n\n\tthis.oldValue = undefined;\n\tthis.newValue = model.get();\n\n\tmodel.register( this );\n};\n\nvar PatternObserver = function PatternObserver ( ractive, baseModel, keys, callback, options ) {\n\tvar this$1 = this;\n\n\t\tthis.context = options.context || ractive;\n\tthis.ractive = ractive;\n\tthis.baseModel = baseModel;\n\tthis.keys = keys;\n\tthis.callback = callback;\n\n\tvar pattern = keys.join( '\\\\.' ).replace( /\\*/g, '(.+)' );\n\tvar baseKeypath = baseModel.getKeypath( ractive );\n\tthis.pattern = new RegExp( (\"^\" + (baseKeypath ? baseKeypath + '\\\\.' : '') + \"\" + pattern + \"$\") );\n\n\tthis.oldValues = {};\n\tthis.newValues = {};\n\n\tthis.defer = options.defer;\n\tthis.once = options.once;\n\tthis.strict = options.strict;\n\n\tthis.dirty = false;\n\tthis.changed = [];\n\tthis.partial = false;\n\n\tvar models = baseModel.findMatches( this.keys );\n\n\tmodels.forEach( function ( model ) {\n\t\tthis$1.newValues[ model.getKeypath( this$1.ractive ) ] = model.get();\n\t});\n\n\tif ( options.init !== false ) {\n\t\tthis.dispatch();\n\t} else {\n\t\tthis.oldValues = this.newValues;\n\t}\n\n\tbaseModel.registerPatternObserver( this );\n};\n\nPatternObserver.prototype.cancel = function cancel () {\n\tthis.baseModel.unregisterPatternObserver( this );\n};\n\nPatternObserver.prototype.dispatch = function dispatch () {\n\tvar this$1 = this;\n\n\t\tObject.keys( this.newValues ).forEach( function ( keypath ) {\n\t\tif ( this$1.newKeys && !this$1.newKeys[ keypath ] ) return;\n\n\t\tvar newValue = this$1.newValues[ keypath ];\n\t\tvar oldValue = this$1.oldValues[ keypath ];\n\n\t\tif ( this$1.strict && newValue === oldValue ) return;\n\t\tif ( isEqual( newValue, oldValue ) ) return;\n\n\t\tvar args = [ newValue, oldValue, keypath ];\n\t\tif ( keypath ) {\n\t\t\tvar wildcards = this$1.pattern.exec( keypath );\n\t\t\tif ( wildcards ) {\n\t\t\t\targs = args.concat( wildcards.slice( 1 ) );\n\t\t\t}\n\t\t}\n\n\t\tthis$1.callback.apply( this$1.context, args );\n\t});\n\n\tif ( this.partial ) {\n\t\tfor ( var k in this.newValues ) {\n\t\t\tthis.oldValues[k] = this.newValues[k];\n\t\t}\n\t} else {\n\t\tthis.oldValues = this.newValues;\n\t}\n\n\tthis.newKeys = null;\n\tthis.dirty = false;\n};\n\nPatternObserver.prototype.notify = function notify ( key ) {\n\tthis.changed.push( key );\n};\n\nPatternObserver.prototype.shuffle = function shuffle ( newIndices ) {\n\tvar this$1 = this;\n\n\t\tif ( !isArray( this.baseModel.value ) ) return;\n\n\tvar base = this.baseModel.getKeypath( this.ractive );\n\tvar max = this.baseModel.value.length;\n\tvar suffix = this.keys.length > 1 ? '.' + this.keys.slice( 1 ).join( '.' ) : '';\n\n\tthis.newKeys = {};\n\tfor ( var i = 0; i < newIndices.length; i++ ) {\n\t\tif ( newIndices[ i ] === -1 || newIndices[ i ] === i ) continue;\n\t\tthis$1.newKeys[ (\"\" + base + \".\" + i + \"\" + suffix) ] = true;\n\t}\n\n\tfor ( var i$1 = newIndices.touchedFrom; i$1 < max; i$1++ ) {\n\t\tthis$1.newKeys[ (\"\" + base + \".\" + i$1 + \"\" + suffix) ] = true;\n\t}\n};\n\nPatternObserver.prototype.handleChange = function handleChange () {\n\tvar this$1 = this;\n\n\t\tif ( !this.dirty || this.changed.length ) {\n\t\tif ( !this.dirty ) this.newValues = {};\n\n\t\t// handle case where previously extant keypath no longer exists -\n\t\t// observer should still fire, with undefined as new value\n\t\t// TODO huh. according to the test suite that's not the case...\n\t\t// Object.keys( this.oldValues ).forEach( keypath => {\n\t\t// this.newValues[ keypath ] = undefined;\n\t\t// });\n\n\t\tif ( !this.changed.length ) {\n\t\t\tthis.baseModel.findMatches( this.keys ).forEach( function ( model ) {\n\t\t\t\tvar keypath = model.getKeypath( this$1.ractive );\n\t\t\t\tthis$1.newValues[ keypath ] = model.get();\n\t\t\t});\n\t\t\tthis.partial = false;\n\t\t} else {\n\t\t\tvar ok = this.baseModel.isRoot ?\n\t\t\t\tthis.changed :\n\t\t\t\tthis.changed.map( function ( key ) { return this$1.baseModel.getKeypath( this$1.ractive ) + '.' + escapeKey( key ); } );\n\n\t\t\tthis.baseModel.findMatches( this.keys ).forEach( function ( model ) {\n\t\t\t\tvar keypath = model.getKeypath( this$1.ractive );\n\t\t\t\t// is this model on a changed keypath?\n\t\t\t\tif ( ok.filter( function ( k ) { return keypath.indexOf( k ) === 0 && ( keypath.length === k.length || keypath[k.length] === '.' ); } ).length ) {\n\t\t\t\t\tthis$1.newValues[ keypath ] = model.get();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.partial = true;\n\t\t}\n\n\t\trunloop.addObserver( this, this.defer );\n\t\tthis.dirty = true;\n\t\tthis.changed.length = 0;\n\n\t\tif ( this.once ) this.cancel();\n\t}\n};\n\nfunction observeList ( keypath, callback, options ) {\n\tif ( typeof keypath !== 'string' ) {\n\t\tthrow new Error( 'ractive.observeList() must be passed a string as its first argument' );\n\t}\n\n\tvar model = this.viewmodel.joinAll( splitKeypath( keypath ) );\n\tvar observer = new ListObserver( this, model, callback, options || {} );\n\n\t// add observer to the Ractive instance, so it can be\n\t// cancelled on ractive.teardown()\n\tthis._observers.push( observer );\n\n\treturn {\n\t\tcancel: function () {\n\t\t\tobserver.cancel();\n\t\t}\n\t};\n}\n\nfunction negativeOne () {\n\treturn -1;\n}\n\nvar ListObserver = function ListObserver ( context, model, callback, options ) {\n\tthis.context = context;\n\tthis.model = model;\n\tthis.keypath = model.getKeypath();\n\tthis.callback = callback;\n\n\tthis.pending = null;\n\n\tmodel.register( this );\n\n\tif ( options.init !== false ) {\n\t\tthis.sliced = [];\n\t\tthis.shuffle([]);\n\t\tthis.handleChange();\n\t} else {\n\t\tthis.sliced = this.slice();\n\t}\n};\n\nListObserver.prototype.handleChange = function handleChange () {\n\tif ( this.pending ) {\n\t\t// post-shuffle\n\t\tthis.callback( this.pending );\n\t\tthis.pending = null;\n\t}\n\n\telse {\n\t\t// entire array changed\n\t\tthis.shuffle( this.sliced.map( negativeOne ) );\n\t\tthis.handleChange();\n\t}\n};\n\nListObserver.prototype.shuffle = function shuffle ( newIndices ) {\n\tvar this$1 = this;\n\n\t\tvar newValue = this.slice();\n\n\tvar inserted = [];\n\tvar deleted = [];\n\tvar start;\n\n\tvar hadIndex = {};\n\n\tnewIndices.forEach( function ( newIndex, oldIndex ) {\n\t\thadIndex[ newIndex ] = true;\n\n\t\tif ( newIndex !== oldIndex && start === undefined ) {\n\t\t\tstart = oldIndex;\n\t\t}\n\n\t\tif ( newIndex === -1 ) {\n\t\t\tdeleted.push( this$1.sliced[ oldIndex ] );\n\t\t}\n\t});\n\n\tif ( start === undefined ) start = newIndices.length;\n\n\tvar len = newValue.length;\n\tfor ( var i = 0; i < len; i += 1 ) {\n\t\tif ( !hadIndex[i] ) inserted.push( newValue[i] );\n\t}\n\n\tthis.pending = { inserted: inserted, deleted: deleted, start: start };\n\tthis.sliced = newValue;\n};\n\nListObserver.prototype.slice = function slice () {\n\tvar value = this.model.get();\n\treturn isArray( value ) ? value.slice() : [];\n};\n\nvar onceOptions = { init: false, once: true };\n\nfunction observeOnce ( keypath, callback, options ) {\n\tif ( isObject( keypath ) || typeof keypath === 'function' ) {\n\t\toptions = extend$1( callback || {}, onceOptions );\n\t\treturn this.observe( keypath, options );\n\t}\n\n\toptions = extend$1( options || {}, onceOptions );\n\treturn this.observe( keypath, callback, options );\n}\n\nvar trim = function ( str ) { return str.trim(); };\n\nvar notEmptyString = function ( str ) { return str !== ''; };\n\nfunction Ractive$off ( eventName, callback ) {\n\t// if no arguments specified, remove all callbacks\n\tvar this$1 = this;\n\n\tif ( !eventName ) {\n\t\t// TODO use this code instead, once the following issue has been resolved\n\t\t// in PhantomJS (tests are unpassable otherwise!)\n\t\t// https://github.com/ariya/phantomjs/issues/11856\n\t\t// defineProperty( this, '_subs', { value: create( null ), configurable: true });\n\t\tfor ( eventName in this._subs ) {\n\t\t\tdelete this._subs[ eventName ];\n\t\t}\n\t}\n\n\telse {\n\t\t// Handle multiple space-separated event names\n\t\tvar eventNames = eventName.split( ' ' ).map( trim ).filter( notEmptyString );\n\n\t\teventNames.forEach( function ( eventName ) {\n\t\t\tvar subscribers = this$1._subs[ eventName ];\n\n\t\t\t// If we have subscribers for this event...\n\t\t\tif ( subscribers ) {\n\t\t\t\t// ...if a callback was specified, only remove that\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tvar index = subscribers.indexOf( callback );\n\t\t\t\t\tif ( index !== -1 ) {\n\t\t\t\t\t\tsubscribers.splice( index, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ...otherwise remove all callbacks\n\t\t\t\telse {\n\t\t\t\t\tthis$1._subs[ eventName ] = [];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\treturn this;\n}\n\nfunction Ractive$on ( eventName, callback ) {\n\t// allow multiple listeners to be bound in one go\n\tvar this$1 = this;\n\n\tif ( typeof eventName === 'object' ) {\n\t\tvar listeners = [];\n\t\tvar n;\n\n\t\tfor ( n in eventName ) {\n\t\t\tif ( eventName.hasOwnProperty( n ) ) {\n\t\t\t\tlisteners.push( this.on( n, eventName[ n ] ) );\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcancel: function () {\n\t\t\t\tvar listener;\n\t\t\t\twhile ( listener = listeners.pop() ) listener.cancel();\n\t\t\t}\n\t\t};\n\t}\n\n\t// Handle multiple space-separated event names\n\tvar eventNames = eventName.split( ' ' ).map( trim ).filter( notEmptyString );\n\n\teventNames.forEach( function ( eventName ) {\n\t\t( this$1._subs[ eventName ] || ( this$1._subs[ eventName ] = [] ) ).push( callback );\n\t});\n\n\treturn {\n\t\tcancel: function () { return this$1.off( eventName, callback ); }\n\t};\n}\n\nfunction Ractive$once ( eventName, handler ) {\n\tvar listener = this.on( eventName, function () {\n\t\thandler.apply( this, arguments );\n\t\tlistener.cancel();\n\t});\n\n\t// so we can still do listener.cancel() manually\n\treturn listener;\n}\n\nvar pop$1 = makeArrayMethod( 'pop' ).path;\n\nvar push$1 = makeArrayMethod( 'push' ).path;\n\nvar PREFIX = '/* Ractive.js component styles */';\n\n// Holds current definitions of styles.\nvar styleDefinitions = [];\n\n// Flag to tell if we need to update the CSS\nvar isDirty = false;\n\n// These only make sense on the browser. See additional setup below.\nvar styleElement = null;\nvar useCssText = null;\n\nfunction addCSS( styleDefinition ) {\n\tstyleDefinitions.push( styleDefinition );\n\tisDirty = true;\n}\n\nfunction applyCSS() {\n\n\t// Apply only seems to make sense when we're in the DOM. Server-side renders\n\t// can call toCSS to get the updated CSS.\n\tif ( !doc || !isDirty ) return;\n\n\tif ( useCssText ) {\n\t\tstyleElement.styleSheet.cssText = getCSS( null );\n\t} else {\n\t\tstyleElement.innerHTML = getCSS( null );\n\t}\n\n\tisDirty = false;\n}\n\nfunction getCSS( cssIds ) {\n\n\tvar filteredStyleDefinitions = cssIds ? styleDefinitions.filter( function ( style ) { return ~cssIds.indexOf( style.id ); } ) : styleDefinitions;\n\n\treturn filteredStyleDefinitions.reduce( function ( styles, style ) { return (\"\" + styles + \"\\n\\n/* {\" + (style.id) + \"} */\\n\" + (style.styles)); }, PREFIX );\n\n}\n\n// If we're on the browser, additional setup needed.\nif ( doc && ( !styleElement || !styleElement.parentNode ) ) {\n\n\tstyleElement = doc.createElement( 'style' );\n\tstyleElement.type = 'text/css';\n\n\tdoc.getElementsByTagName( 'head' )[ 0 ].appendChild( styleElement );\n\n\tuseCssText = !!styleElement.styleSheet;\n}\n\nvar renderHook = new Hook( 'render' );\nvar completeHook = new Hook( 'complete' );\n\nfunction render$2 ( ractive, target, anchor, occupants ) {\n\t// if `noIntro` is `true`, temporarily disable transitions\n\tvar transitionsEnabled = ractive.transitionsEnabled;\n\tif ( ractive.noIntro ) ractive.transitionsEnabled = false;\n\n\tvar promise = runloop.start( ractive, true );\n\trunloop.scheduleTask( function () { return renderHook.fire( ractive ); }, true );\n\n\tif ( ractive.fragment.rendered ) {\n\t\tthrow new Error( 'You cannot call ractive.render() on an already rendered instance! Call ractive.unrender() first' );\n\t}\n\n\tanchor = getElement( anchor ) || ractive.anchor;\n\n\tractive.el = target;\n\tractive.anchor = anchor;\n\n\t// ensure encapsulated CSS is up-to-date\n\tif ( ractive.cssId ) applyCSS();\n\n\tif ( target ) {\n\t\t( target.__ractive_instances__ || ( target.__ractive_instances__ = [] ) ).push( ractive );\n\n\t\tif ( anchor ) {\n\t\t\tvar docFrag = doc.createDocumentFragment();\n\t\t\tractive.fragment.render( docFrag );\n\t\t\ttarget.insertBefore( docFrag, anchor );\n\t\t} else {\n\t\t\tractive.fragment.render( target, occupants );\n\t\t}\n\t}\n\n\trunloop.end();\n\tractive.transitionsEnabled = transitionsEnabled;\n\n\treturn promise.then( function () { return completeHook.fire( ractive ); } );\n}\n\nfunction Ractive$render ( target, anchor ) {\n\tif ( this.torndown ) {\n\t\twarnIfDebug( 'ractive.render() was called on a Ractive instance that was already torn down' );\n\t\treturn Promise.resolve();\n\t}\n\n\ttarget = getElement( target ) || this.el;\n\n\tif ( !this.append && target ) {\n\t\t// Teardown any existing instances *before* trying to set up the new one -\n\t\t// avoids certain weird bugs\n\t\tvar others = target.__ractive_instances__;\n\t\tif ( others ) others.forEach( teardown$1$1 );\n\n\t\t// make sure we are the only occupants\n\t\tif ( !this.enhance ) {\n\t\t\ttarget.innerHTML = ''; // TODO is this quicker than removeChild? Initial research inconclusive\n\t\t}\n\t}\n\n\tvar occupants = this.enhance ? toArray( target.childNodes ) : null;\n\tvar promise = render$2( this, target, anchor, occupants );\n\n\tif ( occupants ) {\n\t\twhile ( occupants.length ) target.removeChild( occupants.pop() );\n\t}\n\n\treturn promise;\n}\n\nvar adaptConfigurator = {\n\textend: function ( Parent, proto, options ) {\n\t\tproto.adapt = combine( proto.adapt, ensureArray( options.adapt ) );\n\t},\n\n\tinit: function () {}\n};\n\nfunction combine ( a, b ) {\n\tvar c = a.slice();\n\tvar i = b.length;\n\n\twhile ( i-- ) {\n\t\tif ( !~c.indexOf( b[i] ) ) {\n\t\t\tc.push( b[i] );\n\t\t}\n\t}\n\n\treturn c;\n}\n\nvar selectorsPattern = /(?:^|\\})?\\s*([^\\{\\}]+)\\s*\\{/g;\nvar commentsPattern = /\\/\\*.*?\\*\\//g;\nvar selectorUnitPattern = /((?:(?:\\[[^\\]+]\\])|(?:[^\\s\\+\\>~:]))+)((?:::?[^\\s\\+\\>\\~\\(:]+(?:\\([^\\)]+\\))?)*\\s*[\\s\\+\\>\\~]?)\\s*/g;\nvar excludePattern = /^(?:@|\\d+%)/;\nvar dataRvcGuidPattern = /\\[data-ractive-css~=\"\\{[a-z0-9-]+\\}\"]/g;\n\nfunction trim$1 ( str ) {\n\treturn str.trim();\n}\n\nfunction extractString ( unit ) {\n\treturn unit.str;\n}\n\nfunction transformSelector ( selector, parent ) {\n\tvar selectorUnits = [];\n\tvar match;\n\n\twhile ( match = selectorUnitPattern.exec( selector ) ) {\n\t\tselectorUnits.push({\n\t\t\tstr: match[0],\n\t\t\tbase: match[1],\n\t\t\tmodifiers: match[2]\n\t\t});\n\t}\n\n\t// For each simple selector within the selector, we need to create a version\n\t// that a) combines with the id, and b) is inside the id\n\tvar base = selectorUnits.map( extractString );\n\n\tvar transformed = [];\n\tvar i = selectorUnits.length;\n\n\twhile ( i-- ) {\n\t\tvar appended = base.slice();\n\n\t\t// Pseudo-selectors should go after the attribute selector\n\t\tvar unit = selectorUnits[i];\n\t\tappended[i] = unit.base + parent + unit.modifiers || '';\n\n\t\tvar prepended = base.slice();\n\t\tprepended[i] = parent + ' ' + prepended[i];\n\n\t\ttransformed.push( appended.join( ' ' ), prepended.join( ' ' ) );\n\t}\n\n\treturn transformed.join( ', ' );\n}\n\nfunction transformCss ( css, id ) {\n\tvar dataAttr = \"[data-ractive-css~=\\\"{\" + id + \"}\\\"]\";\n\n\tvar transformed;\n\n\tif ( dataRvcGuidPattern.test( css ) ) {\n\t\ttransformed = css.replace( dataRvcGuidPattern, dataAttr );\n\t} else {\n\t\ttransformed = css\n\t\t.replace( commentsPattern, '' )\n\t\t.replace( selectorsPattern, function ( match, $1 ) {\n\t\t\t// don't transform at-rules and keyframe declarations\n\t\t\tif ( excludePattern.test( $1 ) ) return match;\n\n\t\t\tvar selectors = $1.split( ',' ).map( trim$1 );\n\t\t\tvar transformed = selectors\n\t\t\t\t.map( function ( selector ) { return transformSelector( selector, dataAttr ); } )\n\t\t\t\t.join( ', ' ) + ' ';\n\n\t\t\treturn match.replace( $1, transformed );\n\t\t});\n\t}\n\n\treturn transformed;\n}\n\nfunction s4() {\n\treturn Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n}\n\nfunction uuid() {\n\treturn s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\nvar cssConfigurator = {\n\tname: 'css',\n\n\t// Called when creating a new component definition\n\textend: function ( Parent, proto, options ) {\n\t\tif ( !options.css ) return;\n\n\t\tvar id = uuid();\n\t\tvar styles = options.noCssTransform ? options.css : transformCss( options.css, id );\n\n\t\tproto.cssId = id;\n\n\t\taddCSS( { id: id, styles: styles } );\n\n\t},\n\n\t// Called when creating a new component instance\n\tinit: function ( Parent, target, options ) {\n\t\tif ( !options.css ) return;\n\n\t\twarnIfDebug( (\"\\nThe css option is currently not supported on a per-instance basis and will be discarded. Instead, we recommend instantiating from a component definition with a css option.\\n\\nconst Component = Ractive.extend({\\n\\t...\\n\\tcss: '/* your css */',\\n\\t...\\n});\\n\\nconst componentInstance = new Component({ ... })\\n\\t\\t\") );\n\t}\n\n};\n\nfunction validate ( data ) {\n\t// Warn if userOptions.data is a non-POJO\n\tif ( data && data.constructor !== Object ) {\n\t\tif ( typeof data === 'function' ) {\n\t\t\t// TODO do we need to support this in the new Ractive() case?\n\t\t} else if ( typeof data !== 'object' ) {\n\t\t\tfatal( (\"data option must be an object or a function, `\" + data + \"` is not valid\") );\n\t\t} else {\n\t\t\twarnIfDebug( 'If supplied, options.data should be a plain JavaScript object - using a non-POJO as the root object may work, but is discouraged' );\n\t\t}\n\t}\n}\n\nvar dataConfigurator = {\n\tname: 'data',\n\n\textend: function ( Parent, proto, options ) {\n\t\tvar key;\n\t\tvar value;\n\n\t\t// check for non-primitives, which could cause mutation-related bugs\n\t\tif ( options.data && isObject( options.data ) ) {\n\t\t\tfor ( key in options.data ) {\n\t\t\t\tvalue = options.data[ key ];\n\n\t\t\t\tif ( value && typeof value === 'object' ) {\n\t\t\t\t\tif ( isObject( value ) || isArray( value ) ) {\n\t\t\t\t\t\twarnIfDebug( (\"Passing a `data` option with object and array properties to Ractive.extend() is discouraged, as mutating them is likely to cause bugs. Consider using a data function instead:\\n\\n  // this...\\n  data: function () {\\n    return {\\n      myObject: {}\\n    };\\n  })\\n\\n  // instead of this:\\n  data: {\\n    myObject: {}\\n  }\") );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tproto.data = combine$1( proto.data, options.data );\n\t},\n\n\tinit: function ( Parent, ractive, options ) {\n\t\tvar result = combine$1( Parent.prototype.data, options.data );\n\n\t\tif ( typeof result === 'function' ) result = result.call( ractive );\n\n\t\t// bind functions to the ractive instance at the top level,\n\t\t// unless it's a non-POJO (in which case alarm bells should ring)\n\t\tif ( result && result.constructor === Object ) {\n\t\t\tfor ( var prop in result ) {\n\t\t\t\tif ( typeof result[ prop ] === 'function' ) result[ prop ] = bind$1$1( result[ prop ], ractive );\n\t\t\t}\n\t\t}\n\n\t\treturn result || {};\n\t},\n\n\treset: function ( ractive ) {\n\t\tvar result = this.init( ractive.constructor, ractive, ractive.viewmodel );\n\t\tractive.viewmodel.root.set( result );\n\t\treturn true;\n\t}\n};\n\nfunction combine$1 ( parentValue, childValue ) {\n\tvalidate( childValue );\n\n\tvar parentIsFn = typeof parentValue === 'function';\n\tvar childIsFn = typeof childValue === 'function';\n\n\t// Very important, otherwise child instance can become\n\t// the default data object on Ractive or a component.\n\t// then ractive.set() ends up setting on the prototype!\n\tif ( !childValue && !parentIsFn ) {\n\t\tchildValue = {};\n\t}\n\n\t// Fast path, where we just need to copy properties from\n\t// parent to child\n\tif ( !parentIsFn && !childIsFn ) {\n\t\treturn fromProperties( childValue, parentValue );\n\t}\n\n\treturn function () {\n\t\tvar child = childIsFn ? callDataFunction( childValue, this ) : childValue;\n\t\tvar parent = parentIsFn ? callDataFunction( parentValue, this ) : parentValue;\n\n\t\treturn fromProperties( child, parent );\n\t};\n}\n\nfunction callDataFunction ( fn, context ) {\n\tvar data = fn.call( context );\n\n\tif ( !data ) return;\n\n\tif ( typeof data !== 'object' ) {\n\t\tfatal( 'Data function must return an object' );\n\t}\n\n\tif ( data.constructor !== Object ) {\n\t\twarnOnceIfDebug( 'Data function returned something other than a plain JavaScript object. This might work, but is strongly discouraged' );\n\t}\n\n\treturn data;\n}\n\nfunction fromProperties ( primary, secondary ) {\n\tif ( primary && secondary ) {\n\t\tfor ( var key in secondary ) {\n\t\t\tif ( !( key in primary ) ) {\n\t\t\t\tprimary[ key ] = secondary[ key ];\n\t\t\t}\n\t\t}\n\n\t\treturn primary;\n\t}\n\n\treturn primary || secondary;\n}\n\nvar TEMPLATE_VERSION = 4;\n\nvar pattern = /\\$\\{([^\\}]+)\\}/g;\n\nfunction fromExpression ( body, length ) {\n\tif ( length === void 0 ) length = 0;\n\n\tvar args = new Array( length );\n\n\twhile ( length-- ) {\n\t\targs[length] = \"_\" + length;\n\t}\n\n\t// Functions created directly with new Function() look like this:\n\t//     function anonymous (_0 /**/) { return _0*2 }\n\t//\n\t// With this workaround, we get a little more compact:\n\t//     function (_0){return _0*2}\n\treturn new Function( [], (\"return function (\" + (args.join(',')) + \"){return(\" + body + \");};\") )();\n}\n\nfunction fromComputationString ( str, bindTo ) {\n\tvar hasThis;\n\n\tvar functionBody = 'return (' + str.replace( pattern, function ( match, keypath ) {\n\t\thasThis = true;\n\t\treturn (\"__ractive.get(\\\"\" + keypath + \"\\\")\");\n\t}) + ');';\n\n\tif ( hasThis ) functionBody = \"var __ractive = this; \" + functionBody;\n\tvar fn = new Function( functionBody );\n\treturn hasThis ? fn.bind( bindTo ) : fn;\n}\n\nvar functions = create( null );\n\nfunction getFunction ( str, i ) {\n\tif ( functions[ str ] ) return functions[ str ];\n\treturn functions[ str ] = createFunction( str, i );\n}\n\nfunction addFunctions( template ) {\n\tif ( !template ) return;\n\n\tvar exp = template.e;\n\n\tif ( !exp ) return;\n\n\tObject.keys( exp ).forEach( function ( str ) {\n\t\tif ( functions[ str ] ) return;\n\t\tfunctions[ str ] = exp[ str ];\n\t});\n}\n\nvar Parser;\nvar ParseError;\nvar leadingWhitespace = /^\\s+/;\n\nParseError = function ( message ) {\n\tthis.name = 'ParseError';\n\tthis.message = message;\n\ttry {\n\t\tthrow new Error(message);\n\t} catch (e) {\n\t\tthis.stack = e.stack;\n\t}\n};\n\nParseError.prototype = Error.prototype;\n\nParser = function ( str, options ) {\n\tvar this$1 = this;\n\n\tvar items, item, lineStart = 0;\n\n\tthis.str = str;\n\tthis.options = options || {};\n\tthis.pos = 0;\n\n\tthis.lines = this.str.split( '\\n' );\n\tthis.lineEnds = this.lines.map( function ( line ) {\n\t\tvar lineEnd = lineStart + line.length + 1; // +1 for the newline\n\n\t\tlineStart = lineEnd;\n\t\treturn lineEnd;\n\t}, 0 );\n\n\t// Custom init logic\n\tif ( this.init ) this.init( str, options );\n\n\titems = [];\n\n\twhile ( ( this$1.pos < this$1.str.length ) && ( item = this$1.read() ) ) {\n\t\titems.push( item );\n\t}\n\n\tthis.leftover = this.remaining();\n\tthis.result = this.postProcess ? this.postProcess( items, options ) : items;\n};\n\nParser.prototype = {\n\tread: function ( converters ) {\n\t\tvar this$1 = this;\n\n\t\tvar pos, i, len, item;\n\n\t\tif ( !converters ) converters = this.converters;\n\n\t\tpos = this.pos;\n\n\t\tlen = converters.length;\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tthis$1.pos = pos; // reset for each attempt\n\n\t\t\tif ( item = converters[i]( this$1 ) ) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\tgetLinePos: function ( char ) {\n\t\tvar this$1 = this;\n\n\t\tvar lineNum = 0, lineStart = 0, columnNum;\n\n\t\twhile ( char >= this$1.lineEnds[ lineNum ] ) {\n\t\t\tlineStart = this$1.lineEnds[ lineNum ];\n\t\t\tlineNum += 1;\n\t\t}\n\n\t\tcolumnNum = char - lineStart;\n\t\treturn [ lineNum + 1, columnNum + 1, char ]; // line/col should be one-based, not zero-based!\n\t},\n\n\terror: function ( message ) {\n\t\tvar pos = this.getLinePos( this.pos );\n\t\tvar lineNum = pos[0];\n\t\tvar columnNum = pos[1];\n\n\t\tvar line = this.lines[ pos[0] - 1 ];\n\t\tvar numTabs = 0;\n\t\tvar annotation = line.replace( /\\t/g, function ( match, char ) {\n\t\t\tif ( char < pos[1] ) {\n\t\t\t\tnumTabs += 1;\n\t\t\t}\n\n\t\t\treturn '  ';\n\t\t}) + '\\n' + new Array( pos[1] + numTabs ).join( ' ' ) + '^----';\n\n\t\tvar error = new ParseError( (\"\" + message + \" at line \" + lineNum + \" character \" + columnNum + \":\\n\" + annotation) );\n\n\t\terror.line = pos[0];\n\t\terror.character = pos[1];\n\t\terror.shortMessage = message;\n\n\t\tthrow error;\n\t},\n\n\tmatchString: function ( string ) {\n\t\tif ( this.str.substr( this.pos, string.length ) === string ) {\n\t\t\tthis.pos += string.length;\n\t\t\treturn string;\n\t\t}\n\t},\n\n\tmatchPattern: function ( pattern ) {\n\t\tvar match;\n\n\t\tif ( match = pattern.exec( this.remaining() ) ) {\n\t\t\tthis.pos += match[0].length;\n\t\t\treturn match[1] || match[0];\n\t\t}\n\t},\n\n\tallowWhitespace: function () {\n\t\tthis.matchPattern( leadingWhitespace );\n\t},\n\n\tremaining: function () {\n\t\treturn this.str.substring( this.pos );\n\t},\n\n\tnextChar: function () {\n\t\treturn this.str.charAt( this.pos );\n\t}\n};\n\nParser.extend = function ( proto ) {\n\tvar Parent = this, Child, key;\n\n\tChild = function ( str, options ) {\n\t\tParser.call( this, str, options );\n\t};\n\n\tChild.prototype = create( Parent.prototype );\n\n\tfor ( key in proto ) {\n\t\tif ( hasOwn.call( proto, key ) ) {\n\t\t\tChild.prototype[ key ] = proto[ key ];\n\t\t}\n\t}\n\n\tChild.extend = Parser.extend;\n\treturn Child;\n};\n\nvar Parser$1 = Parser;\n\nvar TEXT              = 1;\nvar INTERPOLATOR      = 2;\nvar TRIPLE            = 3;\nvar SECTION           = 4;\nvar INVERTED          = 5;\nvar CLOSING           = 6;\nvar ELEMENT           = 7;\nvar PARTIAL           = 8;\nvar COMMENT           = 9;\nvar DELIMCHANGE       = 10;\nvar ATTRIBUTE         = 13;\nvar CLOSING_TAG       = 14;\nvar COMPONENT         = 15;\nvar YIELDER           = 16;\nvar INLINE_PARTIAL    = 17;\nvar DOCTYPE           = 18;\nvar ALIAS             = 19;\n\nvar NUMBER_LITERAL    = 20;\nvar STRING_LITERAL    = 21;\nvar ARRAY_LITERAL     = 22;\nvar OBJECT_LITERAL    = 23;\nvar BOOLEAN_LITERAL   = 24;\nvar REGEXP_LITERAL    = 25;\n\nvar GLOBAL            = 26;\nvar KEY_VALUE_PAIR    = 27;\n\n\nvar REFERENCE         = 30;\nvar REFINEMENT        = 31;\nvar MEMBER            = 32;\nvar PREFIX_OPERATOR   = 33;\nvar BRACKETED         = 34;\nvar CONDITIONAL       = 35;\nvar INFIX_OPERATOR    = 36;\n\nvar INVOCATION        = 40;\n\nvar SECTION_IF        = 50;\nvar SECTION_UNLESS    = 51;\nvar SECTION_EACH      = 52;\nvar SECTION_WITH      = 53;\nvar SECTION_IF_WITH   = 54;\n\nvar ELSE              = 60;\nvar ELSEIF            = 61;\n\nvar EVENT             = 70;\nvar DECORATOR         = 71;\nvar TRANSITION        = 72;\nvar BINDING_FLAG      = 73;\n\nvar delimiterChangePattern = /^[^\\s=]+/;\nvar whitespacePattern = /^\\s+/;\n\nfunction readDelimiterChange ( parser ) {\n\tvar start, opening, closing;\n\n\tif ( !parser.matchString( '=' ) ) {\n\t\treturn null;\n\t}\n\n\tstart = parser.pos;\n\n\t// allow whitespace before new opening delimiter\n\tparser.allowWhitespace();\n\n\topening = parser.matchPattern( delimiterChangePattern );\n\tif ( !opening ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\t// allow whitespace (in fact, it's necessary...)\n\tif ( !parser.matchPattern( whitespacePattern ) ) {\n\t\treturn null;\n\t}\n\n\tclosing = parser.matchPattern( delimiterChangePattern );\n\tif ( !closing ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\t// allow whitespace before closing '='\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( '=' ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\treturn [ opening, closing ];\n}\n\nvar regexpPattern = /^(\\/(?:[^\\n\\r\\u2028\\u2029/\\\\[]|\\\\.|\\[(?:[^\\n\\r\\u2028\\u2029\\]\\\\]|\\\\.)*])+\\/(?:([gimuy])(?![a-z]*\\2))*(?![a-zA-Z_$0-9]))/;\n\nfunction readNumberLiteral ( parser ) {\n\tvar result;\n\n\tif ( result = parser.matchPattern( regexpPattern ) ) {\n\t\treturn {\n\t\t\tt: REGEXP_LITERAL,\n\t\t\tv: result\n\t\t};\n\t}\n\n\treturn null;\n}\n\nvar pattern$1 = /[-/\\\\^$*+?.()|[\\]{}]/g;\n\nfunction escapeRegExp ( str ) {\n\treturn str.replace( pattern$1, '\\\\$&' );\n}\n\nvar regExpCache = {};\n\nvar getLowestIndex = function ( haystack, needles ) {\n\treturn haystack.search( regExpCache[needles.join()] || ( regExpCache[needles.join()] = new RegExp( needles.map( escapeRegExp ).join( '|' ) ) ) );\n};\n\n// https://github.com/kangax/html-minifier/issues/63#issuecomment-37763316\nvar booleanAttributes = /^(allowFullscreen|async|autofocus|autoplay|checked|compact|controls|declare|default|defaultChecked|defaultMuted|defaultSelected|defer|disabled|enabled|formNoValidate|hidden|indeterminate|inert|isMap|itemScope|loop|multiple|muted|noHref|noResize|noShade|noValidate|noWrap|open|pauseOnExit|readOnly|required|reversed|scoped|seamless|selected|sortable|translate|trueSpeed|typeMustMatch|visible)$/i;\nvar voidElementNames = /^(?:area|base|br|col|command|doctype|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;\n\nvar htmlEntities = { quot: 34, amp: 38, apos: 39, lt: 60, gt: 62, nbsp: 160, iexcl: 161, cent: 162, pound: 163, curren: 164, yen: 165, brvbar: 166, sect: 167, uml: 168, copy: 169, ordf: 170, laquo: 171, not: 172, shy: 173, reg: 174, macr: 175, deg: 176, plusmn: 177, sup2: 178, sup3: 179, acute: 180, micro: 181, para: 182, middot: 183, cedil: 184, sup1: 185, ordm: 186, raquo: 187, frac14: 188, frac12: 189, frac34: 190, iquest: 191, Agrave: 192, Aacute: 193, Acirc: 194, Atilde: 195, Auml: 196, Aring: 197, AElig: 198, Ccedil: 199, Egrave: 200, Eacute: 201, Ecirc: 202, Euml: 203, Igrave: 204, Iacute: 205, Icirc: 206, Iuml: 207, ETH: 208, Ntilde: 209, Ograve: 210, Oacute: 211, Ocirc: 212, Otilde: 213, Ouml: 214, times: 215, Oslash: 216, Ugrave: 217, Uacute: 218, Ucirc: 219, Uuml: 220, Yacute: 221, THORN: 222, szlig: 223, agrave: 224, aacute: 225, acirc: 226, atilde: 227, auml: 228, aring: 229, aelig: 230, ccedil: 231, egrave: 232, eacute: 233, ecirc: 234, euml: 235, igrave: 236, iacute: 237, icirc: 238, iuml: 239, eth: 240, ntilde: 241, ograve: 242, oacute: 243, ocirc: 244, otilde: 245, ouml: 246, divide: 247, oslash: 248, ugrave: 249, uacute: 250, ucirc: 251, uuml: 252, yacute: 253, thorn: 254, yuml: 255, OElig: 338, oelig: 339, Scaron: 352, scaron: 353, Yuml: 376, fnof: 402, circ: 710, tilde: 732, Alpha: 913, Beta: 914, Gamma: 915, Delta: 916, Epsilon: 917, Zeta: 918, Eta: 919, Theta: 920, Iota: 921, Kappa: 922, Lambda: 923, Mu: 924, Nu: 925, Xi: 926, Omicron: 927, Pi: 928, Rho: 929, Sigma: 931, Tau: 932, Upsilon: 933, Phi: 934, Chi: 935, Psi: 936, Omega: 937, alpha: 945, beta: 946, gamma: 947, delta: 948, epsilon: 949, zeta: 950, eta: 951, theta: 952, iota: 953, kappa: 954, lambda: 955, mu: 956, nu: 957, xi: 958, omicron: 959, pi: 960, rho: 961, sigmaf: 962, sigma: 963, tau: 964, upsilon: 965, phi: 966, chi: 967, psi: 968, omega: 969, thetasym: 977, upsih: 978, piv: 982, ensp: 8194, emsp: 8195, thinsp: 8201, zwnj: 8204, zwj: 8205, lrm: 8206, rlm: 8207, ndash: 8211, mdash: 8212, lsquo: 8216, rsquo: 8217, sbquo: 8218, ldquo: 8220, rdquo: 8221, bdquo: 8222, dagger: 8224, Dagger: 8225, bull: 8226, hellip: 8230, permil: 8240, prime: 8242, Prime: 8243, lsaquo: 8249, rsaquo: 8250, oline: 8254, frasl: 8260, euro: 8364, image: 8465, weierp: 8472, real: 8476, trade: 8482, alefsym: 8501, larr: 8592, uarr: 8593, rarr: 8594, darr: 8595, harr: 8596, crarr: 8629, lArr: 8656, uArr: 8657, rArr: 8658, dArr: 8659, hArr: 8660, forall: 8704, part: 8706, exist: 8707, empty: 8709, nabla: 8711, isin: 8712, notin: 8713, ni: 8715, prod: 8719, sum: 8721, minus: 8722, lowast: 8727, radic: 8730, prop: 8733, infin: 8734, ang: 8736, and: 8743, or: 8744, cap: 8745, cup: 8746, 'int': 8747, there4: 8756, sim: 8764, cong: 8773, asymp: 8776, ne: 8800, equiv: 8801, le: 8804, ge: 8805, sub: 8834, sup: 8835, nsub: 8836, sube: 8838, supe: 8839, oplus: 8853, otimes: 8855, perp: 8869, sdot: 8901, lceil: 8968, rceil: 8969, lfloor: 8970, rfloor: 8971, lang: 9001, rang: 9002, loz: 9674, spades: 9824, clubs: 9827, hearts: 9829, diams: 9830\t};\nvar controlCharacters = [ 8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 382, 376 ];\nvar entityPattern = new RegExp( '&(#?(?:x[\\\\w\\\\d]+|\\\\d+|' + Object.keys( htmlEntities ).join( '|' ) + '));?', 'g' );\nvar codePointSupport = typeof String.fromCodePoint === 'function';\nvar codeToChar = codePointSupport ? String.fromCodePoint : String.fromCharCode;\n\nfunction decodeCharacterReferences ( html ) {\n\treturn html.replace( entityPattern, function ( match, entity ) {\n\t\tvar code;\n\n\t\t// Handle named entities\n\t\tif ( entity[0] !== '#' ) {\n\t\t\tcode = htmlEntities[ entity ];\n\t\t} else if ( entity[1] === 'x' ) {\n\t\t\tcode = parseInt( entity.substring( 2 ), 16 );\n\t\t} else {\n\t\t\tcode = parseInt( entity.substring( 1 ), 10 );\n\t\t}\n\n\t\tif ( !code ) {\n\t\t\treturn match;\n\t\t}\n\n\t\treturn codeToChar( validateCode( code ) );\n\t});\n}\n\nvar lessThan = /</g;\nvar greaterThan = />/g;\nvar amp = /&/g;\nvar invalid = 65533;\n\nfunction escapeHtml ( str ) {\n\treturn str\n\t\t.replace( amp, '&amp;' )\n\t\t.replace( lessThan, '&lt;' )\n\t\t.replace( greaterThan, '&gt;' );\n}\n\n// some code points are verboten. If we were inserting HTML, the browser would replace the illegal\n// code points with alternatives in some cases - since we're bypassing that mechanism, we need\n// to replace them ourselves\n//\n// Source: http://en.wikipedia.org/wiki/Character_encodings_in_HTML#Illegal_characters\nfunction validateCode ( code ) {\n\tif ( !code ) {\n\t\treturn invalid;\n\t}\n\n\t// line feed becomes generic whitespace\n\tif ( code === 10 ) {\n\t\treturn 32;\n\t}\n\n\t// ASCII range. (Why someone would use HTML entities for ASCII characters I don't know, but...)\n\tif ( code < 128 ) {\n\t\treturn code;\n\t}\n\n\t// code points 128-159 are dealt with leniently by browsers, but they're incorrect. We need\n\t// to correct the mistake or we'll end up with missing € signs and so on\n\tif ( code <= 159 ) {\n\t\treturn controlCharacters[ code - 128 ];\n\t}\n\n\t// basic multilingual plane\n\tif ( code < 55296 ) {\n\t\treturn code;\n\t}\n\n\t// UTF-16 surrogate halves\n\tif ( code <= 57343 ) {\n\t\treturn invalid;\n\t}\n\n\t// rest of the basic multilingual plane\n\tif ( code <= 65535 ) {\n\t\treturn code;\n\t} else if ( !codePointSupport ) {\n\t\treturn invalid;\n\t}\n\n\t// supplementary multilingual plane 0x10000 - 0x1ffff\n\tif ( code >= 65536 && code <= 131071 ) {\n\t\treturn code;\n\t}\n\n\t// supplementary ideographic plane 0x20000 - 0x2ffff\n\tif ( code >= 131072 && code <= 196607 ) {\n\t\treturn code;\n\t}\n\n\treturn invalid;\n}\n\nvar expectedExpression = 'Expected a JavaScript expression';\nvar expectedParen = 'Expected closing paren';\n\n// bulletproof number regex from https://gist.github.com/Rich-Harris/7544330\nvar numberPattern = /^(?:[+-]?)0*(?:(?:(?:[1-9]\\d*)?\\.\\d+)|(?:(?:0|[1-9]\\d*)\\.)|(?:0|[1-9]\\d*))(?:[eE][+-]?\\d+)?/;\n\nfunction readNumberLiteral$1 ( parser ) {\n\tvar result;\n\n\tif ( result = parser.matchPattern( numberPattern ) ) {\n\t\treturn {\n\t\t\tt: NUMBER_LITERAL,\n\t\t\tv: result\n\t\t};\n\t}\n\n\treturn null;\n}\n\nfunction readBooleanLiteral ( parser ) {\n\tvar remaining = parser.remaining();\n\n\tif ( remaining.substr( 0, 4 ) === 'true' ) {\n\t\tparser.pos += 4;\n\t\treturn {\n\t\t\tt: BOOLEAN_LITERAL,\n\t\t\tv: 'true'\n\t\t};\n\t}\n\n\tif ( remaining.substr( 0, 5 ) === 'false' ) {\n\t\tparser.pos += 5;\n\t\treturn {\n\t\t\tt: BOOLEAN_LITERAL,\n\t\t\tv: 'false'\n\t\t};\n\t}\n\n\treturn null;\n}\n\nvar stringMiddlePattern;\nvar escapeSequencePattern;\nvar lineContinuationPattern;\n\n// Match one or more characters until: \", ', \\, or EOL/EOF.\n// EOL/EOF is written as (?!.) (meaning there's no non-newline char next).\nstringMiddlePattern = /^(?=.)[^\"'\\\\]+?(?:(?!.)|(?=[\"'\\\\]))/;\n\n// Match one escape sequence, including the backslash.\nescapeSequencePattern = /^\\\\(?:['\"\\\\bfnrt]|0(?![0-9])|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|(?=.)[^ux0-9])/;\n\n// Match one ES5 line continuation (backslash + line terminator).\nlineContinuationPattern = /^\\\\(?:\\r\\n|[\\u000A\\u000D\\u2028\\u2029])/;\n\n// Helper for defining getDoubleQuotedString and getSingleQuotedString.\nvar makeQuotedStringMatcher = function ( okQuote ) {\n\treturn function ( parser ) {\n\t\tvar literal = '\"';\n\t\tvar done = false;\n\t\tvar next;\n\n\t\twhile ( !done ) {\n\t\t\tnext = ( parser.matchPattern( stringMiddlePattern ) || parser.matchPattern( escapeSequencePattern ) ||\n\t\t\t\tparser.matchString( okQuote ) );\n\t\t\tif ( next ) {\n\t\t\t\tif ( next === (\"\\\"\") ) {\n\t\t\t\t\tliteral += \"\\\\\\\"\";\n\t\t\t\t} else if ( next === (\"\\\\'\") ) {\n\t\t\t\t\tliteral += \"'\";\n\t\t\t\t} else {\n\t\t\t\t\tliteral += next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext = parser.matchPattern( lineContinuationPattern );\n\t\t\t\tif ( next ) {\n\t\t\t\t\t// convert \\(newline-like) into a \\u escape, which is allowed in JSON\n\t\t\t\t\tliteral += '\\\\u' + ( '000' + next.charCodeAt(1).toString(16) ).slice( -4 );\n\t\t\t\t} else {\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tliteral += '\"';\n\n\t\t// use JSON.parse to interpret escapes\n\t\treturn JSON.parse( literal );\n\t};\n};\n\nvar getSingleQuotedString = makeQuotedStringMatcher( (\"\\\"\") );\nvar getDoubleQuotedString = makeQuotedStringMatcher( (\"'\") );\n\nvar readStringLiteral = function ( parser ) {\n\tvar start, string;\n\n\tstart = parser.pos;\n\n\tif ( parser.matchString( '\"' ) ) {\n\t\tstring = getDoubleQuotedString( parser );\n\n\t\tif ( !parser.matchString( '\"' ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tt: STRING_LITERAL,\n\t\t\tv: string\n\t\t};\n\t}\n\n\tif ( parser.matchString( (\"'\") ) ) {\n\t\tstring = getSingleQuotedString( parser );\n\n\t\tif ( !parser.matchString( (\"'\") ) ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tt: STRING_LITERAL,\n\t\t\tv: string\n\t\t};\n\t}\n\n\treturn null;\n};\n\nvar name = /^[a-zA-Z_$][a-zA-Z_$0-9]*/;\n\nvar identifier = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;\n\n// http://mathiasbynens.be/notes/javascript-properties\n// can be any name, string literal, or number literal\nfunction readKey ( parser ) {\n\tvar token;\n\n\tif ( token = readStringLiteral( parser ) ) {\n\t\treturn identifier.test( token.v ) ? token.v : '\"' + token.v.replace( /\"/g, '\\\\\"' ) + '\"';\n\t}\n\n\tif ( token = readNumberLiteral$1( parser ) ) {\n\t\treturn token.v;\n\t}\n\n\tif ( token = parser.matchPattern( name ) ) {\n\t\treturn token;\n\t}\n\n\treturn null;\n}\n\nfunction readKeyValuePair ( parser ) {\n\tvar start, key, value;\n\n\tstart = parser.pos;\n\n\t// allow whitespace between '{' and key\n\tparser.allowWhitespace();\n\n\tvar refKey = parser.nextChar() !== '\\'' && parser.nextChar() !== '\"';\n\n\tkey = readKey( parser );\n\tif ( key === null ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\t// allow whitespace between key and ':'\n\tparser.allowWhitespace();\n\n\t// es2015 shorthand property\n\tif ( refKey && ( parser.nextChar() === ',' || parser.nextChar() === '}' ) ) {\n\t\tif ( !name.test( key ) ) {\n\t\t\tparser.error( (\"Expected a valid reference, but found '\" + key + \"' instead.\") );\n\t\t}\n\n\t\treturn {\n\t\t\tt: KEY_VALUE_PAIR,\n\t\t\tk: key,\n\t\t\tv: {\n\t\t\t\tt: REFERENCE,\n\t\t\t\tn: key\n\t\t\t}\n\t\t};\n\t}\n\n\t// next character must be ':'\n\tif ( !parser.matchString( ':' ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\t// allow whitespace between ':' and value\n\tparser.allowWhitespace();\n\n\t// next expression must be a, well... expression\n\tvalue = readExpression( parser );\n\tif ( value === null ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\treturn {\n\t\tt: KEY_VALUE_PAIR,\n\t\tk: key,\n\t\tv: value\n\t};\n}\n\nfunction readKeyValuePairs ( parser ) {\n\tvar start, pairs, pair, keyValuePairs;\n\n\tstart = parser.pos;\n\n\tpair = readKeyValuePair( parser );\n\tif ( pair === null ) {\n\t\treturn null;\n\t}\n\n\tpairs = [ pair ];\n\n\tif ( parser.matchString( ',' ) ) {\n\t\tkeyValuePairs = readKeyValuePairs( parser );\n\n\t\tif ( !keyValuePairs ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pairs.concat( keyValuePairs );\n\t}\n\n\treturn pairs;\n}\n\nvar readObjectLiteral = function ( parser ) {\n\tvar start, keyValuePairs;\n\n\tstart = parser.pos;\n\n\t// allow whitespace\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( '{' ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\tkeyValuePairs = readKeyValuePairs( parser );\n\n\t// allow whitespace between final value and '}'\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( '}' ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\treturn {\n\t\tt: OBJECT_LITERAL,\n\t\tm: keyValuePairs\n\t};\n};\n\nfunction readExpressionList ( parser ) {\n\tparser.allowWhitespace();\n\n\tvar expr = readExpression( parser );\n\n\tif ( expr === null ) return null;\n\n\tvar expressions = [ expr ];\n\n\t// allow whitespace between expression and ','\n\tparser.allowWhitespace();\n\n\tif ( parser.matchString( ',' ) ) {\n\t\tvar next = readExpressionList( parser );\n\t\tif ( next === null ) parser.error( expectedExpression );\n\n\t\texpressions.push.apply( expressions, next );\n\t}\n\n\treturn expressions;\n}\n\nvar readArrayLiteral = function ( parser ) {\n\tvar start, expressionList;\n\n\tstart = parser.pos;\n\n\t// allow whitespace before '['\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( '[' ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\texpressionList = readExpressionList( parser );\n\n\tif ( !parser.matchString( ']' ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\treturn {\n\t\tt: ARRAY_LITERAL,\n\t\tm: expressionList\n\t};\n};\n\nfunction readLiteral ( parser ) {\n\treturn readNumberLiteral$1( parser )  ||\n\t       readBooleanLiteral( parser ) ||\n\t       readStringLiteral( parser )  ||\n\t       readObjectLiteral( parser )  ||\n\t       readArrayLiteral( parser )   ||\n\t       readNumberLiteral( parser );\n}\n\nvar prefixPattern = /^(?:~\\/|(?:\\.\\.\\/)+|\\.\\/(?:\\.\\.\\/)*|\\.)/;\nvar globals;\nvar keywords;\n\n// if a reference is a browser global, we don't deference it later, so it needs special treatment\nglobals = /^(?:Array|console|Date|RegExp|decodeURIComponent|decodeURI|encodeURIComponent|encodeURI|isFinite|isNaN|parseFloat|parseInt|JSON|Math|NaN|undefined|null|Object|Number|String|Boolean)\\b/;\n\n// keywords are not valid references, with the exception of `this`\nkeywords = /^(?:break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|throw|try|typeof|var|void|while|with)$/;\n\nvar legalReference = /^(?:[a-zA-Z$_0-9]|\\\\\\.)+(?:(?:\\.(?:[a-zA-Z$_0-9]|\\\\\\.)+)|(?:\\[[0-9]+\\]))*/;\nvar relaxedName = /^[a-zA-Z_$][-\\/a-zA-Z_$0-9]*/;\nvar specials = /^@(?:keypath|rootpath|index|key|this|global)/;\nvar specialCall = /^\\s*\\(/;\nvar spreadPattern = /^\\s*\\.{3}/;\n\nfunction readReference ( parser ) {\n\tvar startPos, prefix, name, global, reference, fullLength, lastDotIndex, spread;\n\n\tstartPos = parser.pos;\n\n\tname = parser.matchPattern( specials );\n\n\tif ( name === '@keypath' || name === '@rootpath' ) {\n\t\tif ( parser.matchPattern( specialCall ) ) {\n\t\t\tvar ref = readReference( parser );\n\t\t\tif ( !ref ) parser.error( (\"Expected a valid reference for a keypath expression\") );\n\n\t\t\tparser.allowWhitespace();\n\n\t\t\tif ( !parser.matchString( ')' ) ) parser.error( (\"Unclosed keypath expression\") );\n\t\t\tname += \"(\" + (ref.n) + \")\";\n\t\t}\n\t}\n\n\tspread = !name && parser.spreadArgs && parser.matchPattern( spreadPattern );\n\n\tif ( !name ) {\n\t\tprefix = parser.matchPattern( prefixPattern ) || '';\n\t\tname = ( !prefix && parser.relaxedNames && parser.matchPattern( relaxedName ) ) ||\n\t\t       parser.matchPattern( legalReference );\n\n\t\tif ( !name && prefix === '.' ) {\n\t\t\tprefix = '';\n\t\t\tname = '.';\n\t\t} else if ( !name && prefix ) {\n\t\t\tname = prefix;\n\t\t\tprefix = '';\n\t\t}\n\t}\n\n\tif ( !name ) {\n\t\treturn null;\n\t}\n\n\t// bug out if it's a keyword (exception for ancestor/restricted refs - see https://github.com/ractivejs/ractive/issues/1497)\n\tif ( !prefix && !parser.relaxedNames && keywords.test( name ) ) {\n\t\tparser.pos = startPos;\n\t\treturn null;\n\t}\n\n\t// if this is a browser global, stop here\n\tif ( !prefix && globals.test( name ) ) {\n\t\tglobal = globals.exec( name )[0];\n\t\tparser.pos = startPos + global.length;\n\n\t\treturn {\n\t\t\tt: GLOBAL,\n\t\t\tv: ( spread ? '...' : '' ) + global\n\t\t};\n\t}\n\n\tfullLength = ( spread ? 3 : 0 ) + ( prefix || '' ).length + name.length;\n\treference = ( prefix || '' ) + normalise( name );\n\n\tif ( parser.matchString( '(' ) ) {\n\t\t// if this is a method invocation (as opposed to a function) we need\n\t\t// to strip the method name from the reference combo, else the context\n\t\t// will be wrong\n\t\t// but only if the reference was actually a member and not a refinement\n\t\tlastDotIndex = reference.lastIndexOf( '.' );\n\t\tif ( lastDotIndex !== -1 && name[ name.length - 1 ] !== ']' ) {\n\t\t\tvar refLength = reference.length;\n\t\t\treference = reference.substr( 0, lastDotIndex );\n\t\t\tparser.pos = startPos + (fullLength - ( refLength - lastDotIndex ) );\n\t\t} else {\n\t\t\tparser.pos -= 1;\n\t\t}\n\t}\n\n\treturn {\n\t\tt: REFERENCE,\n\t\tn: ( spread ? '...' : '' ) + reference.replace( /^this\\./, './' ).replace( /^this$/, '.' )\n\t};\n}\n\nfunction readBracketedExpression ( parser ) {\n\tif ( !parser.matchString( '(' ) ) return null;\n\n\tparser.allowWhitespace();\n\n\tvar expr = readExpression( parser );\n\n\tif ( !expr ) parser.error( expectedExpression );\n\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( ')' ) ) parser.error( expectedParen );\n\n\treturn {\n\t\tt: BRACKETED,\n\t\tx: expr\n\t};\n}\n\nvar readPrimary = function ( parser ) {\n\treturn readLiteral( parser )\n\t\t|| readReference( parser )\n\t\t|| readBracketedExpression( parser );\n};\n\nfunction readRefinement ( parser ) {\n\t// some things call for strict refinement (partial names), meaning no space between reference and refinement\n\tif ( !parser.strictRefinement ) {\n\t\tparser.allowWhitespace();\n\t}\n\n\t// \".\" name\n\tif ( parser.matchString( '.' ) ) {\n\t\tparser.allowWhitespace();\n\n\t\tvar name$$1 = parser.matchPattern( name );\n\t\tif ( name$$1 ) {\n\t\t\treturn {\n\t\t\t\tt: REFINEMENT,\n\t\t\t\tn: name$$1\n\t\t\t};\n\t\t}\n\n\t\tparser.error( 'Expected a property name' );\n\t}\n\n\t// \"[\" expression \"]\"\n\tif ( parser.matchString( '[' ) ) {\n\t\tparser.allowWhitespace();\n\n\t\tvar expr = readExpression( parser );\n\t\tif ( !expr ) parser.error( expectedExpression );\n\n\t\tparser.allowWhitespace();\n\n\t\tif ( !parser.matchString( ']' ) ) parser.error( (\"Expected ']'\") );\n\n\t\treturn {\n\t\t\tt: REFINEMENT,\n\t\t\tx: expr\n\t\t};\n\t}\n\n\treturn null;\n}\n\nvar readMemberOrInvocation = function ( parser ) {\n\tvar expression = readPrimary( parser );\n\n\tif ( !expression ) return null;\n\n\twhile ( expression ) {\n\t\tvar refinement = readRefinement( parser );\n\t\tif ( refinement ) {\n\t\t\texpression = {\n\t\t\t\tt: MEMBER,\n\t\t\t\tx: expression,\n\t\t\t\tr: refinement\n\t\t\t};\n\t\t}\n\n\t\telse if ( parser.matchString( '(' ) ) {\n\t\t\tparser.allowWhitespace();\n\t\t\tvar start = parser.spreadArgs;\n\t\t\tparser.spreadArgs = true;\n\t\t\tvar expressionList = readExpressionList( parser );\n\t\t\tparser.spreadArgs = start;\n\n\t\t\tparser.allowWhitespace();\n\n\t\t\tif ( !parser.matchString( ')' ) ) {\n\t\t\t\tparser.error( expectedParen );\n\t\t\t}\n\n\t\t\texpression = {\n\t\t\t\tt: INVOCATION,\n\t\t\t\tx: expression\n\t\t\t};\n\n\t\t\tif ( expressionList ) expression.o = expressionList;\n\t\t}\n\n\t\telse {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn expression;\n};\n\nvar readTypeOf;\nvar makePrefixSequenceMatcher;\n\nmakePrefixSequenceMatcher = function ( symbol, fallthrough ) {\n\treturn function ( parser ) {\n\t\tvar expression;\n\n\t\tif ( expression = fallthrough( parser ) ) {\n\t\t\treturn expression;\n\t\t}\n\n\t\tif ( !parser.matchString( symbol ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tparser.allowWhitespace();\n\n\t\texpression = readExpression( parser );\n\t\tif ( !expression ) {\n\t\t\tparser.error( expectedExpression );\n\t\t}\n\n\t\treturn {\n\t\t\ts: symbol,\n\t\t\to: expression,\n\t\t\tt: PREFIX_OPERATOR\n\t\t};\n\t};\n};\n\n// create all prefix sequence matchers, return readTypeOf\n(function() {\n\tvar i, len, matcher, prefixOperators, fallthrough;\n\n\tprefixOperators = '! ~ + - typeof'.split( ' ' );\n\n\tfallthrough = readMemberOrInvocation;\n\tfor ( i = 0, len = prefixOperators.length; i < len; i += 1 ) {\n\t\tmatcher = makePrefixSequenceMatcher( prefixOperators[i], fallthrough );\n\t\tfallthrough = matcher;\n\t}\n\n\t// typeof operator is higher precedence than multiplication, so provides the\n\t// fallthrough for the multiplication sequence matcher we're about to create\n\t// (we're skipping void and delete)\n\treadTypeOf = fallthrough;\n}());\n\nvar readTypeof = readTypeOf;\n\nvar readLogicalOr;\nvar makeInfixSequenceMatcher;\n\nmakeInfixSequenceMatcher = function ( symbol, fallthrough ) {\n\treturn function ( parser ) {\n\t\tvar start, left, right;\n\n\t\tleft = fallthrough( parser );\n\t\tif ( !left ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Loop to handle left-recursion in a case like `a * b * c` and produce\n\t\t// left association, i.e. `(a * b) * c`.  The matcher can't call itself\n\t\t// to parse `left` because that would be infinite regress.\n\t\twhile ( true ) {\n\t\t\tstart = parser.pos;\n\n\t\t\tparser.allowWhitespace();\n\n\t\t\tif ( !parser.matchString( symbol ) ) {\n\t\t\t\tparser.pos = start;\n\t\t\t\treturn left;\n\t\t\t}\n\n\t\t\t// special case - in operator must not be followed by [a-zA-Z_$0-9]\n\t\t\tif ( symbol === 'in' && /[a-zA-Z_$0-9]/.test( parser.remaining().charAt( 0 ) ) ) {\n\t\t\t\tparser.pos = start;\n\t\t\t\treturn left;\n\t\t\t}\n\n\t\t\tparser.allowWhitespace();\n\n\t\t\t// right operand must also consist of only higher-precedence operators\n\t\t\tright = fallthrough( parser );\n\t\t\tif ( !right ) {\n\t\t\t\tparser.pos = start;\n\t\t\t\treturn left;\n\t\t\t}\n\n\t\t\tleft = {\n\t\t\t\tt: INFIX_OPERATOR,\n\t\t\t\ts: symbol,\n\t\t\t\to: [ left, right ]\n\t\t\t};\n\n\t\t\t// Loop back around.  If we don't see another occurrence of the symbol,\n\t\t\t// we'll return left.\n\t\t}\n\t};\n};\n\n// create all infix sequence matchers, and return readLogicalOr\n(function() {\n\tvar i, len, matcher, infixOperators, fallthrough;\n\n\t// All the infix operators on order of precedence (source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Operator_Precedence)\n\t// Each sequence matcher will initially fall through to its higher precedence\n\t// neighbour, and only attempt to match if one of the higher precedence operators\n\t// (or, ultimately, a literal, reference, or bracketed expression) already matched\n\tinfixOperators = '* / % + - << >> >>> < <= > >= in instanceof == != === !== & ^ | && ||'.split( ' ' );\n\n\t// A typeof operator is higher precedence than multiplication\n\tfallthrough = readTypeof;\n\tfor ( i = 0, len = infixOperators.length; i < len; i += 1 ) {\n\t\tmatcher = makeInfixSequenceMatcher( infixOperators[i], fallthrough );\n\t\tfallthrough = matcher;\n\t}\n\n\t// Logical OR is the fallthrough for the conditional matcher\n\treadLogicalOr = fallthrough;\n}());\n\nvar readLogicalOr$1 = readLogicalOr;\n\n// The conditional operator is the lowest precedence operator, so we start here\nfunction getConditional ( parser ) {\n\tvar start, expression, ifTrue, ifFalse;\n\n\texpression = readLogicalOr$1( parser );\n\tif ( !expression ) {\n\t\treturn null;\n\t}\n\n\tstart = parser.pos;\n\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( '?' ) ) {\n\t\tparser.pos = start;\n\t\treturn expression;\n\t}\n\n\tparser.allowWhitespace();\n\n\tifTrue = readExpression( parser );\n\tif ( !ifTrue ) {\n\t\tparser.error( expectedExpression );\n\t}\n\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( ':' ) ) {\n\t\tparser.error( 'Expected \":\"' );\n\t}\n\n\tparser.allowWhitespace();\n\n\tifFalse = readExpression( parser );\n\tif ( !ifFalse ) {\n\t\tparser.error( expectedExpression );\n\t}\n\n\treturn {\n\t\tt: CONDITIONAL,\n\t\to: [ expression, ifTrue, ifFalse ]\n\t};\n}\n\nfunction readExpression ( parser ) {\n\t// The conditional operator is the lowest precedence operator (except yield,\n\t// assignment operators, and commas, none of which are supported), so we\n\t// start there. If it doesn't match, it 'falls through' to progressively\n\t// higher precedence operators, until it eventually matches (or fails to\n\t// match) a 'primary' - a literal or a reference. This way, the abstract syntax\n\t// tree has everything in its proper place, i.e. 2 + 3 * 4 === 14, not 20.\n\treturn getConditional( parser );\n}\n\nfunction flattenExpression ( expression ) {\n\tvar refs, count = 0, stringified;\n\n\textractRefs( expression, refs = [] );\n\tstringified = stringify( expression );\n\n\trefs = refs.map( function ( r ) { return r.indexOf( '...' ) === 0 ? r.substr( 3 ) : r; } );\n\n\treturn {\n\t\tr: refs,\n\t\ts: getVars(stringified)\n\t};\n\n\tfunction getVars(expr) {\n\t\tvar vars = [];\n\t\tfor ( var i = count - 1; i >= 0; i-- ) {\n\t\t\tvars.push( (\"spread$\" + i) );\n\t\t}\n\t\treturn vars.length ? (\"(function(){var \" + (vars.join(',')) + \";return(\" + expr + \");})()\") : expr;\n\t}\n\n\tfunction stringify ( node ) {\n\t\tswitch ( node.t ) {\n\t\t\tcase BOOLEAN_LITERAL:\n\t\t\tcase GLOBAL:\n\t\t\tcase NUMBER_LITERAL:\n\t\t\tcase REGEXP_LITERAL:\n\t\t\t\treturn node.v;\n\n\t\t\tcase STRING_LITERAL:\n\t\t\t\treturn JSON.stringify( String( node.v ) );\n\n\t\t\tcase ARRAY_LITERAL:\n\t\t\t\treturn '[' + ( node.m ? node.m.map( stringify ).join( ',' ) : '' ) + ']';\n\n\t\t\tcase OBJECT_LITERAL:\n\t\t\t\treturn '{' + ( node.m ? node.m.map( stringify ).join( ',' ) : '' ) + '}';\n\n\t\t\tcase KEY_VALUE_PAIR:\n\t\t\t\treturn node.k + ':' + stringify( node.v );\n\n\t\t\tcase PREFIX_OPERATOR:\n\t\t\t\treturn ( node.s === 'typeof' ? 'typeof ' : node.s ) + stringify( node.o );\n\n\t\t\tcase INFIX_OPERATOR:\n\t\t\t\treturn stringify( node.o[0] ) + ( node.s.substr( 0, 2 ) === 'in' ? ' ' + node.s + ' ' : node.s ) + stringify( node.o[1] );\n\n\t\t\tcase INVOCATION:\n\t\t\t\tif ( node.spread ) {\n\t\t\t\t\tvar id = count++;\n\t\t\t\t\treturn (\"(spread$\" + id + \" = \" + (stringify(node.x)) + \").apply(spread$\" + id + \", [].concat(\" + (node.o ? node.o.map( function ( a ) { return a.n && a.n.indexOf( '...' ) === 0 ? stringify( a ) : '[' + stringify(a) + ']'; } ).join( ',' ) : '') + \") )\");\n\t\t\t\t} else {\n\t\t\t\t\treturn stringify( node.x ) + '(' + ( node.o ? node.o.map( stringify ).join( ',' ) : '' ) + ')';\n\t\t\t\t}\n\n\t\t\tcase BRACKETED:\n\t\t\t\treturn '(' + stringify( node.x ) + ')';\n\n\t\t\tcase MEMBER:\n\t\t\t\treturn stringify( node.x ) + stringify( node.r );\n\n\t\t\tcase REFINEMENT:\n\t\t\t\treturn ( node.n ? '.' + node.n : '[' + stringify( node.x ) + ']' );\n\n\t\t\tcase CONDITIONAL:\n\t\t\t\treturn stringify( node.o[0] ) + '?' + stringify( node.o[1] ) + ':' + stringify( node.o[2] );\n\n\t\t\tcase REFERENCE:\n\t\t\t\treturn '_' + refs.indexOf( node.n );\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'Expected legal JavaScript' );\n\t\t}\n\t}\n}\n\n// TODO maybe refactor this?\nfunction extractRefs ( node, refs ) {\n\tvar i, list;\n\n\tif ( node.t === REFERENCE ) {\n\t\tif ( refs.indexOf( node.n ) === -1 ) {\n\t\t\trefs.unshift( node.n );\n\t\t}\n\t}\n\n\tlist = node.o || node.m;\n\tif ( list ) {\n\t\tif ( isObject( list ) ) {\n\t\t\textractRefs( list, refs );\n\t\t} else {\n\t\t\ti = list.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( list[i].n && list[i].n.indexOf('...') === 0 ) {\n\t\t\t\t\tnode.spread = true;\n\t\t\t\t}\n\t\t\t\textractRefs( list[i], refs );\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( node.x ) {\n\t\textractRefs( node.x, refs );\n\t}\n\n\tif ( node.r ) {\n\t\textractRefs( node.r, refs );\n\t}\n\n\tif ( node.v ) {\n\t\textractRefs( node.v, refs );\n\t}\n}\n\n// simple JSON parser, without the restrictions of JSON parse\n// (i.e. having to double-quote keys).\n//\n// If passed a hash of values as the second argument, ${placeholders}\n// will be replaced with those values\n\nvar specials$1 = {\n\t'true': true,\n\t'false': false,\n\t'null': null,\n\tundefined: undefined\n};\n\nvar specialsPattern = new RegExp( '^(?:' + Object.keys( specials$1 ).join( '|' ) + ')' );\nvar numberPattern$1 = /^(?:[+-]?)(?:(?:(?:0|[1-9]\\d*)?\\.\\d+)|(?:(?:0|[1-9]\\d*)\\.)|(?:0|[1-9]\\d*))(?:[eE][+-]?\\d+)?/;\nvar placeholderPattern = /\\$\\{([^\\}]+)\\}/g;\nvar placeholderAtStartPattern = /^\\$\\{([^\\}]+)\\}/;\nvar onlyWhitespace = /^\\s*$/;\n\nvar JsonParser = Parser$1.extend({\n\tinit: function ( str, options ) {\n\t\tthis.values = options.values;\n\t\tthis.allowWhitespace();\n\t},\n\n\tpostProcess: function ( result ) {\n\t\tif ( result.length !== 1 || !onlyWhitespace.test( this.leftover ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn { value: result[0].v };\n\t},\n\n\tconverters: [\n\t\tfunction getPlaceholder ( parser ) {\n\t\t\tif ( !parser.values ) return null;\n\n\t\t\tvar placeholder = parser.matchPattern( placeholderAtStartPattern );\n\n\t\t\tif ( placeholder && ( parser.values.hasOwnProperty( placeholder ) ) ) {\n\t\t\t\treturn { v: parser.values[ placeholder ] };\n\t\t\t}\n\t\t},\n\n\t\tfunction getSpecial ( parser ) {\n\t\t\tvar special = parser.matchPattern( specialsPattern );\n\t\t\tif ( special ) return { v: specials$1[ special ] };\n\t\t},\n\n\t\tfunction getNumber ( parser ) {\n\t\t\tvar number = parser.matchPattern( numberPattern$1 );\n\t\t\tif ( number ) return { v: +number };\n\t\t},\n\n\t\tfunction getString ( parser ) {\n\t\t\tvar stringLiteral = readStringLiteral( parser );\n\t\t\tvar values = parser.values;\n\n\t\t\tif ( stringLiteral && values ) {\n\t\t\t\treturn {\n\t\t\t\t\tv: stringLiteral.v.replace( placeholderPattern, function ( match, $1 ) { return ( $1 in values ? values[ $1 ] : $1 ); } )\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn stringLiteral;\n\t\t},\n\n\t\tfunction getObject ( parser ) {\n\t\t\tif ( !parser.matchString( '{' ) ) return null;\n\n\t\t\tvar result = {};\n\n\t\t\tparser.allowWhitespace();\n\n\t\t\tif ( parser.matchString( '}' ) ) {\n\t\t\t\treturn { v: result };\n\t\t\t}\n\n\t\t\tvar pair;\n\t\t\twhile ( pair = getKeyValuePair( parser ) ) {\n\t\t\t\tresult[ pair.key ] = pair.value;\n\n\t\t\t\tparser.allowWhitespace();\n\n\t\t\t\tif ( parser.matchString( '}' ) ) {\n\t\t\t\t\treturn { v: result };\n\t\t\t\t}\n\n\t\t\t\tif ( !parser.matchString( ',' ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\n\t\tfunction getArray ( parser ) {\n\t\t\tif ( !parser.matchString( '[' ) ) return null;\n\n\t\t\tvar result = [];\n\n\t\t\tparser.allowWhitespace();\n\n\t\t\tif ( parser.matchString( ']' ) ) {\n\t\t\t\treturn { v: result };\n\t\t\t}\n\n\t\t\tvar valueToken;\n\t\t\twhile ( valueToken = parser.read() ) {\n\t\t\t\tresult.push( valueToken.v );\n\n\t\t\t\tparser.allowWhitespace();\n\n\t\t\t\tif ( parser.matchString( ']' ) ) {\n\t\t\t\t\treturn { v: result };\n\t\t\t\t}\n\n\t\t\t\tif ( !parser.matchString( ',' ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tparser.allowWhitespace();\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t]\n});\n\nfunction getKeyValuePair ( parser ) {\n\tparser.allowWhitespace();\n\n\tvar key = readKey( parser );\n\n\tif ( !key ) return null;\n\n\tvar pair = { key: key };\n\n\tparser.allowWhitespace();\n\tif ( !parser.matchString( ':' ) ) {\n\t\treturn null;\n\t}\n\tparser.allowWhitespace();\n\n\tvar valueToken = parser.read();\n\n\tif ( !valueToken ) return null;\n\n\tpair.value = valueToken.v;\n\treturn pair;\n}\n\nvar parseJSON = function ( str, values ) {\n\tvar parser = new JsonParser( str, { values: values });\n\treturn parser.result;\n};\n\nvar methodCallPattern = /^([a-zA-Z_$][a-zA-Z_$0-9]*)\\(.*\\)\\s*$/;\nvar ExpressionParser;\n\nExpressionParser = Parser$1.extend({\n\tconverters: [ readExpression ],\n\tspreadArgs: true\n});\n\n// TODO clean this up, it's shocking\nfunction processDirective ( tokens, parentParser, type ) {\n\tvar result,\n\t\tmatch,\n\t\ttoken,\n\t\tcolonIndex,\n\t\tdirectiveName,\n\t\tdirectiveArgs,\n\t\tparsed;\n\n\tif ( typeof tokens === 'string' ) {\n\t\tif ( type === DECORATOR || type === TRANSITION ) {\n\t\t\tvar parser = new ExpressionParser( (\"[\" + tokens + \"]\") );\n\t\t\treturn { a: flattenExpression( parser.result[0] ) };\n\t\t}\n\n\t\tif ( type === EVENT && ( match = methodCallPattern.exec( tokens ) ) ) {\n\t\t\twarnOnceIfDebug( (\"Unqualified method events are deprecated. Prefix methods with '@this.' to call methods on the current Ractive instance.\") );\n\t\t\ttokens = \"@this.\" + (match[1]) + \"\" + (tokens.substr(match[1].length));\n\t\t}\n\n\t\tif ( type === EVENT && ~tokens.indexOf( '(' ) ) {\n\t\t\tvar parser$1 = new ExpressionParser( '[' + tokens + ']' );\n\t\t\tif ( parser$1.result && parser$1.result[0] ) {\n\t\t\t\tif ( parser$1.remaining().length ) {\n\t\t\t\t\tparentParser.error( (\"Invalid input after event expression '\" + (parser$1.remaining()) + \"'\") );\n\t\t\t\t}\n\t\t\t\treturn { x: flattenExpression( parser$1.result[0] ) };\n\t\t\t}\n\n\t\t\tif ( tokens.indexOf( ':' ) > tokens.indexOf( '(' ) || !~tokens.indexOf( ':' ) ) {\n\t\t\t\tparentParser.error( (\"Invalid input in event expression '\" + tokens + \"'\") );\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tokens.indexOf( ':' ) === -1 ) {\n\t\t\treturn tokens.trim();\n\t\t}\n\n\t\ttokens = [ tokens ];\n\t}\n\n\tresult = {};\n\n\tdirectiveName = [];\n\tdirectiveArgs = [];\n\n\tif ( tokens ) {\n\t\twhile ( tokens.length ) {\n\t\t\ttoken = tokens.shift();\n\n\t\t\tif ( typeof token === 'string' ) {\n\t\t\t\tcolonIndex = token.indexOf( ':' );\n\n\t\t\t\tif ( colonIndex === -1 ) {\n\t\t\t\t\tdirectiveName.push( token );\n\t\t\t\t} else {\n\t\t\t\t\t// is the colon the first character?\n\t\t\t\t\tif ( colonIndex ) {\n\t\t\t\t\t\t// no\n\t\t\t\t\t\tdirectiveName.push( token.substr( 0, colonIndex ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// if there is anything after the colon in this token, treat\n\t\t\t\t\t// it as the first token of the directiveArgs fragment\n\t\t\t\t\tif ( token.length > colonIndex + 1 ) {\n\t\t\t\t\t\tdirectiveArgs[0] = token.substring( colonIndex + 1 );\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tdirectiveName.push( token );\n\t\t\t}\n\t\t}\n\n\t\tdirectiveArgs = directiveArgs.concat( tokens );\n\t}\n\n\tif ( !directiveName.length ) {\n\t\tresult = '';\n\t} else if ( directiveArgs.length || typeof directiveName !== 'string' ) {\n\t\tresult = {\n\t\t\t// TODO is this really necessary? just use the array\n\t\t\tn: ( directiveName.length === 1 && typeof directiveName[0] === 'string' ? directiveName[0] : directiveName )\n\t\t};\n\n\t\tif ( directiveArgs.length === 1 && typeof directiveArgs[0] === 'string' ) {\n\t\t\tparsed = parseJSON( '[' + directiveArgs[0] + ']' );\n\t\t\tresult.a = parsed ? parsed.value : [ directiveArgs[0].trim() ];\n\t\t}\n\n\t\telse {\n\t\t\tresult.d = directiveArgs;\n\t\t}\n\t} else {\n\t\tresult = directiveName;\n\t}\n\n\tif ( directiveArgs.length ) {\n\t\twarnOnceIfDebug( (\"Proxy events with arguments are deprecated. You can fire events with arguments using \\\"@this.fire('eventName', arg1, arg2, ...)\\\".\") );\n\t}\n\n\treturn result;\n}\n\nvar attributeNamePattern = /^[^\\s\"'>\\/=]+/;\nvar onPattern = /^on/;\nvar proxyEventPattern = /^on-([a-zA-Z\\\\*\\\\.$_][a-zA-Z\\\\*\\\\.$_0-9\\-]+)$/;\nvar reservedEventNames = /^(?:change|reset|teardown|update|construct|config|init|render|unrender|detach|insert)$/;\nvar decoratorPattern = /^as-([a-z-A-Z][-a-zA-Z_0-9]*)$/;\nvar transitionPattern = /^([a-zA-Z](?:(?!-in-out)[-a-zA-Z_0-9])*)-(in|out|in-out)$/;\nvar directives = {\n\t\t\t\t   'intro-outro': { t: TRANSITION, v: 't0' },\n\t\t\t\t   intro: { t: TRANSITION, v: 't1' },\n\t\t\t\t   outro: { t: TRANSITION, v: 't2' },\n\t\t\t\t   lazy: { t: BINDING_FLAG, v: 'l' },\n\t\t\t\t   twoway: { t: BINDING_FLAG, v: 't' },\n\t\t\t\t   decorator: { t: DECORATOR }\n\t\t\t\t };\nvar unquotedAttributeValueTextPattern = /^[^\\s\"'=<>`]+/;\n\nfunction readAttribute ( parser ) {\n\tvar attr, name, value, i, nearest, idx;\n\n\tparser.allowWhitespace();\n\n\tname = parser.matchPattern( attributeNamePattern );\n\tif ( !name ) {\n\t\treturn null;\n\t}\n\n\t// check for accidental delimiter consumption e.g. <tag bool{{>attrs}} />\n\tnearest = name.length;\n\tfor ( i = 0; i < parser.tags.length; i++ ) {\n\t\tif ( ~( idx = name.indexOf( parser.tags[ i ].open ) ) ) {\n\t\t\tif ( idx < nearest ) nearest = idx;\n\t\t}\n\t}\n\tif ( nearest < name.length ) {\n\t\tparser.pos -= name.length - nearest;\n\t\tname = name.substr( 0, nearest );\n\t\treturn { n: name };\n\t}\n\n\tattr = { n: name };\n\n\tvalue = readAttributeValue( parser );\n\tif ( value != null ) { // not null/undefined\n\t\tattr.f = value;\n\t}\n\n\treturn attr;\n}\n\nfunction readAttributeValue ( parser ) {\n\tvar start, valueStart, startDepth, value;\n\n\tstart = parser.pos;\n\n\t// next character must be `=`, `/`, `>` or whitespace\n\tif ( !/[=\\/>\\s]/.test( parser.nextChar() ) ) {\n\t\tparser.error( 'Expected `=`, `/`, `>` or whitespace' );\n\t}\n\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( '=' ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\tparser.allowWhitespace();\n\n\tvalueStart = parser.pos;\n\tstartDepth = parser.sectionDepth;\n\n\tvalue = readQuotedAttributeValue( parser, (\"'\") ) ||\n\t\t\treadQuotedAttributeValue( parser, (\"\\\"\") ) ||\n\t\t\treadUnquotedAttributeValue( parser );\n\n\tif ( value === null ) {\n\t\tparser.error( 'Expected valid attribute value' );\n\t}\n\n\tif ( parser.sectionDepth !== startDepth ) {\n\t\tparser.pos = valueStart;\n\t\tparser.error( 'An attribute value must contain as many opening section tags as closing section tags' );\n\t}\n\n\tif ( !value.length ) {\n\t\treturn '';\n\t}\n\n\tif ( value.length === 1 && typeof value[0] === 'string' ) {\n\t\treturn decodeCharacterReferences( value[0] );\n\t}\n\n\treturn value;\n}\n\nfunction readUnquotedAttributeValueToken ( parser ) {\n\tvar start, text, haystack, needles, index;\n\n\tstart = parser.pos;\n\n\ttext = parser.matchPattern( unquotedAttributeValueTextPattern );\n\n\tif ( !text ) {\n\t\treturn null;\n\t}\n\n\thaystack = text;\n\tneedles = parser.tags.map( function ( t ) { return t.open; } ); // TODO refactor... we do this in readText.js as well\n\n\tif ( ( index = getLowestIndex( haystack, needles ) ) !== -1 ) {\n\t\ttext = text.substr( 0, index );\n\t\tparser.pos = start + text.length;\n\t}\n\n\treturn text;\n}\n\nfunction readUnquotedAttributeValue ( parser ) {\n\tvar tokens, token;\n\n\tparser.inAttribute = true;\n\n\ttokens = [];\n\n\ttoken = readMustache( parser ) || readUnquotedAttributeValueToken( parser );\n\twhile ( token ) {\n\t\ttokens.push( token );\n\t\ttoken = readMustache( parser ) || readUnquotedAttributeValueToken( parser );\n\t}\n\n\tif ( !tokens.length ) {\n\t\treturn null;\n\t}\n\n\tparser.inAttribute = false;\n\treturn tokens;\n}\n\nfunction readQuotedAttributeValue ( parser, quoteMark ) {\n\tvar start, tokens, token;\n\n\tstart = parser.pos;\n\n\tif ( !parser.matchString( quoteMark ) ) {\n\t\treturn null;\n\t}\n\n\tparser.inAttribute = quoteMark;\n\n\ttokens = [];\n\n\ttoken = readMustache( parser ) || readQuotedStringToken( parser, quoteMark );\n\twhile ( token !== null ) {\n\t\ttokens.push( token );\n\t\ttoken = readMustache( parser ) || readQuotedStringToken( parser, quoteMark );\n\t}\n\n\tif ( !parser.matchString( quoteMark ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\tparser.inAttribute = false;\n\n\treturn tokens;\n}\n\nfunction readQuotedStringToken ( parser, quoteMark ) {\n\tvar haystack = parser.remaining();\n\n\tvar needles = parser.tags.map( function ( t ) { return t.open; } ); // TODO refactor... we do this in readText.js as well\n\tneedles.push( quoteMark );\n\n\tvar index = getLowestIndex( haystack, needles );\n\n\tif ( index === -1 ) {\n\t\tparser.error( 'Quoted attribute value must have a closing quote' );\n\t}\n\n\tif ( !index ) {\n\t\treturn null;\n\t}\n\n\tparser.pos += index;\n\treturn haystack.substr( 0, index );\n}\n\nfunction readAttributeOrDirective ( parser ) {\n\t\tvar match,\n\t\t\tattribute,\n\t\t    directive;\n\n\t\tattribute = readAttribute( parser );\n\n\t\tif ( !attribute ) return null;\n\n\t\t// intro, outro, decorator\n\t\tif ( directive = directives[ attribute.n ] ) {\n\t\t\tattribute.t = directive.t;\n\t\t\tif ( directive.v ) attribute.v = directive.v;\n\t\t\tdelete attribute.n; // no name necessary\n\n\t\t\tif ( directive.t === TRANSITION || directive.t === DECORATOR ) attribute.f = processDirective( attribute.f, parser );\n\n\t\t\tif ( directive.t === TRANSITION ) {\n\t\t\t\twarnOnceIfDebug( (\"\" + (directive.v === 't0' ? 'intro-outro' : directive.v === 't1' ? 'intro' : 'outro') + \" is deprecated. To specify tranisitions, use the transition name suffixed with '-in', '-out', or '-in-out' as an attribute. Arguments can be specified in the attribute value as a simple list of expressions without mustaches.\") );\n\t\t\t} else if ( directive.t === DECORATOR ) {\n\t\t\t\twarnOnceIfDebug( (\"decorator is deprecated. To specify decorators, use the decorator name prefixed with 'as-' as an attribute. Arguments can be specified in the attribute value as a simple list of expressions without mustaches.\") );\n\t\t\t}\n\t\t}\n\n\t\t// decorators\n\t\telse if ( match = decoratorPattern.exec( attribute.n ) ) {\n\t\t\tdelete attribute.n;\n\t\t\tattribute.t = DECORATOR;\n\t\t\tattribute.f = processDirective( attribute.f, parser, DECORATOR );\n\t\t\tif ( typeof attribute.f === 'object' ) attribute.f.n = match[1];\n\t\t\telse attribute.f = match[1];\n\t\t}\n\n\t\t// transitions\n\t\telse if ( match = transitionPattern.exec( attribute.n ) ) {\n\t\t\tdelete attribute.n;\n\t\t\tattribute.t = TRANSITION;\n\t\t\tattribute.f = processDirective( attribute.f, parser, TRANSITION );\n\t\t\tif ( typeof attribute.f === 'object' ) attribute.f.n = match[1];\n\t\t\telse attribute.f = match[1];\n\t\t\tattribute.v = match[2] === 'in-out' ? 't0' : match[2] === 'in' ? 't1' : 't2';\n\t\t}\n\n\t\t// on-click etc\n\t\telse if ( match = proxyEventPattern.exec( attribute.n ) ) {\n\t\t\tattribute.n = match[1];\n\t\t\tattribute.t = EVENT;\n\t\t\tattribute.f = processDirective( attribute.f, parser, EVENT );\n\n\t\t\tif ( reservedEventNames.test( attribute.f.n || attribute.f ) ) {\n\t\t\t\tparser.pos -= ( attribute.f.n || attribute.f ).length;\n\t\t\t\tparser.error( 'Cannot use reserved event names (change, reset, teardown, update, construct, config, init, render, unrender, detach, insert)' );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif ( parser.sanitizeEventAttributes && onPattern.test( attribute.n ) ) {\n\t\t\t\treturn { exclude: true };\n\t\t\t} else {\n\t\t\t\tattribute.f = attribute.f || ( attribute.f === '' ? '' : 0 );\n\t\t\t\tattribute.t = ATTRIBUTE;\n\t\t\t}\n\t\t}\n\n\t\treturn attribute;\n}\n\nvar delimiterChangeToken = { t: DELIMCHANGE, exclude: true };\n\nfunction readMustache ( parser ) {\n\tvar mustache, i;\n\n\t// If we're inside a <script> or <style> tag, and we're not\n\t// interpolating, bug out\n\tif ( parser.interpolate[ parser.inside ] === false ) {\n\t\treturn null;\n\t}\n\n\tfor ( i = 0; i < parser.tags.length; i += 1 ) {\n\t\tif ( mustache = readMustacheOfType( parser, parser.tags[i] ) ) {\n\t\t\treturn mustache;\n\t\t}\n\t}\n\n\tif ( parser.inTag && !parser.inAttribute ) {\n\t\tmustache = readAttributeOrDirective( parser );\n\t\tif ( mustache ) {\n\t\t\tparser.allowWhitespace();\n\t\t\treturn mustache;\n\t\t}\n\t}\n}\n\nfunction readMustacheOfType ( parser, tag ) {\n\tvar start, mustache, reader, i;\n\n\tstart = parser.pos;\n\n\tif ( parser.matchString( '\\\\' + tag.open ) ) {\n\t\tif ( start === 0 || parser.str[ start - 1 ] !== '\\\\' ) {\n\t\t\treturn tag.open;\n\t\t}\n\t} else if ( !parser.matchString( tag.open ) ) {\n\t\treturn null;\n\t}\n\n\t// delimiter change?\n\tif ( mustache = readDelimiterChange( parser ) ) {\n\t\t// find closing delimiter or abort...\n\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// ...then make the switch\n\t\ttag.open = mustache[0];\n\t\ttag.close = mustache[1];\n\t\tparser.sortMustacheTags();\n\n\t\treturn delimiterChangeToken;\n\t}\n\n\tparser.allowWhitespace();\n\n\t// illegal section closer\n\tif ( parser.matchString( '/' ) ) {\n\t\tparser.pos -= 1;\n\t\tvar rewind = parser.pos;\n\t\tif ( !readNumberLiteral( parser ) ) {\n\t\t\tparser.pos = rewind - ( tag.close.length );\n\t\t\tif ( parser.inAttribute ) {\n\t\t\t\tparser.pos = start;\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tparser.error( 'Attempted to close a section that wasn\\'t open' );\n\t\t\t}\n\t\t} else {\n\t\t\tparser.pos = rewind;\n\t\t}\n\t}\n\n\tfor ( i = 0; i < tag.readers.length; i += 1 ) {\n\t\treader = tag.readers[i];\n\n\t\tif ( mustache = reader( parser, tag ) ) {\n\t\t\tif ( tag.isStatic ) {\n\t\t\t\tmustache.s = true; // TODO make this `1` instead - more compact\n\t\t\t}\n\n\t\t\tif ( parser.includeLinePositions ) {\n\t\t\t\tmustache.p = parser.getLinePos( start );\n\t\t\t}\n\n\t\t\treturn mustache;\n\t\t}\n\t}\n\n\tparser.pos = start;\n\treturn null;\n}\n\nfunction refineExpression ( expression, mustache ) {\n\tvar referenceExpression;\n\n\tif ( expression ) {\n\t\twhile ( expression.t === BRACKETED && expression.x ) {\n\t\t\texpression = expression.x;\n\t\t}\n\n\t\tif ( expression.t === REFERENCE ) {\n\t\t\tmustache.r = expression.n;\n\t\t} else {\n\t\t\tif ( referenceExpression = getReferenceExpression( expression ) ) {\n\t\t\t\tmustache.rx = referenceExpression;\n\t\t\t} else {\n\t\t\t\tmustache.x = flattenExpression( expression );\n\t\t\t}\n\t\t}\n\n\t\treturn mustache;\n\t}\n}\n\n// TODO refactor this! it's bewildering\nfunction getReferenceExpression ( expression ) {\n\tvar members = [], refinement;\n\n\twhile ( expression.t === MEMBER && expression.r.t === REFINEMENT ) {\n\t\trefinement = expression.r;\n\n\t\tif ( refinement.x ) {\n\t\t\tif ( refinement.x.t === REFERENCE ) {\n\t\t\t\tmembers.unshift( refinement.x );\n\t\t\t} else {\n\t\t\t\tmembers.unshift( flattenExpression( refinement.x ) );\n\t\t\t}\n\t\t} else {\n\t\t\tmembers.unshift( refinement.n );\n\t\t}\n\n\t\texpression = expression.x;\n\t}\n\n\tif ( expression.t !== REFERENCE ) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\tr: expression.n,\n\t\tm: members\n\t};\n}\n\nfunction readTriple ( parser, tag ) {\n\tvar expression = readExpression( parser ), triple;\n\n\tif ( !expression ) {\n\t\treturn null;\n\t}\n\n\tif ( !parser.matchString( tag.close ) ) {\n\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t}\n\n\ttriple = { t: TRIPLE };\n\trefineExpression( expression, triple ); // TODO handle this differently - it's mysterious\n\n\treturn triple;\n}\n\nfunction readUnescaped ( parser, tag ) {\n\tvar expression, triple;\n\n\tif ( !parser.matchString( '&' ) ) {\n\t\treturn null;\n\t}\n\n\tparser.allowWhitespace();\n\n\texpression = readExpression( parser );\n\n\tif ( !expression ) {\n\t\treturn null;\n\t}\n\n\tif ( !parser.matchString( tag.close ) ) {\n\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t}\n\n\ttriple = { t: TRIPLE };\n\trefineExpression( expression, triple ); // TODO handle this differently - it's mysterious\n\n\treturn triple;\n}\n\nvar legalAlias = /^(?:[a-zA-Z$_0-9]|\\\\\\.)+(?:(?:(?:[a-zA-Z$_0-9]|\\\\\\.)+)|(?:\\[[0-9]+\\]))*/;\nvar asRE = /^as/i;\n\nfunction readAliases( parser ) {\n\tvar aliases = [], alias, start = parser.pos;\n\n\tparser.allowWhitespace();\n\n\talias = readAlias( parser );\n\n\tif ( alias ) {\n\t\talias.x = refineExpression( alias.x, {} );\n\t\taliases.push( alias );\n\n\t\tparser.allowWhitespace();\n\n\t\twhile ( parser.matchString(',') ) {\n\t\t\talias = readAlias( parser );\n\n\t\t\tif ( !alias ) {\n\t\t\t\tparser.error( 'Expected another alias.' );\n\t\t\t}\n\n\t\t\talias.x = refineExpression( alias.x, {} );\n\t\t\taliases.push( alias );\n\n\t\t\tparser.allowWhitespace();\n\t\t}\n\n\t\treturn aliases;\n\t}\n\n\tparser.pos = start;\n\treturn null;\n}\n\nfunction readAlias( parser ) {\n\tvar expr, alias, start = parser.pos;\n\n\tparser.allowWhitespace();\n\n\texpr = readExpression( parser, [] );\n\n\tif ( !expr ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchPattern( asRE ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\tparser.allowWhitespace();\n\n\talias = parser.matchPattern( legalAlias );\n\n\tif ( !alias ) {\n\t\tparser.error( 'Expected a legal alias name.' );\n\t}\n\n\treturn { n: alias, x: expr };\n}\n\nfunction readPartial ( parser, tag ) {\n\tif ( !parser.matchString( '>' ) ) return null;\n\n\tparser.allowWhitespace();\n\n\t// Partial names can include hyphens, so we can't use readExpression\n\t// blindly. Instead, we use the `relaxedNames` flag to indicate that\n\t// `foo-bar` should be read as a single name, rather than 'subtract\n\t// bar from foo'\n\tparser.relaxedNames = parser.strictRefinement = true;\n\tvar expression = readExpression( parser );\n\tparser.relaxedNames = parser.strictRefinement = false;\n\n\tif ( !expression ) return null;\n\n\tvar partial = { t: PARTIAL };\n\trefineExpression( expression, partial ); // TODO...\n\n\tparser.allowWhitespace();\n\n\t// check for alias context e.g. `{{>foo bar as bat, bip as bop}}` then\n\t// turn it into `{{#with bar as bat, bip as bop}}{{>foo}}{{/with}}`\n\tvar aliases = readAliases( parser );\n\tif ( aliases ) {\n\t\tpartial = {\n\t\t\tt: ALIAS,\n\t\t\tz: aliases,\n\t\t\tf: [ partial ]\n\t\t};\n\t}\n\n\t// otherwise check for literal context e.g. `{{>foo bar}}` then\n\t// turn it into `{{#with bar}}{{>foo}}{{/with}}`\n\telse {\n\t\tvar context = readExpression( parser );\n\t\tif ( context) {\n\t\t\tpartial = {\n\t\t\t\tt: SECTION,\n\t\t\t\tn: SECTION_WITH,\n\t\t\t\tf: [ partial ]\n\t\t\t};\n\n\t\t\trefineExpression( context, partial );\n\t\t}\n\t}\n\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( tag.close ) ) {\n\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t}\n\n\treturn partial;\n}\n\nfunction readComment ( parser, tag ) {\n\tvar index;\n\n\tif ( !parser.matchString( '!' ) ) {\n\t\treturn null;\n\t}\n\n\tindex = parser.remaining().indexOf( tag.close );\n\n\tif ( index !== -1 ) {\n\t\tparser.pos += index + tag.close.length;\n\t\treturn { t: COMMENT };\n\t}\n}\n\nfunction readExpressionOrReference ( parser, expectedFollowers ) {\n\tvar start, expression, i;\n\n\tstart = parser.pos;\n\texpression = readExpression( parser );\n\n\tif ( !expression ) {\n\t\t// valid reference but invalid expression e.g. `{{new}}`?\n\t\tvar ref = parser.matchPattern( /^(\\w+)/ );\n\t\tif ( ref ) {\n\t\t\treturn {\n\t\t\t\tt: REFERENCE,\n\t\t\t\tn: ref\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfor ( i = 0; i < expectedFollowers.length; i += 1 ) {\n\t\tif ( parser.remaining().substr( 0, expectedFollowers[i].length ) === expectedFollowers[i] ) {\n\t\t\treturn expression;\n\t\t}\n\t}\n\n\tparser.pos = start;\n\treturn readReference( parser );\n}\n\nfunction readInterpolator ( parser, tag ) {\n\tvar start, expression, interpolator, err;\n\n\tstart = parser.pos;\n\n\t// TODO would be good for perf if we could do away with the try-catch\n\ttry {\n\t\texpression = readExpressionOrReference( parser, [ tag.close ]);\n\t} catch ( e ) {\n\t\terr = e;\n\t}\n\n\tif ( !expression ) {\n\t\tif ( parser.str.charAt( start ) === '!' ) {\n\t\t\t// special case - comment\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tif ( !parser.matchString( tag.close ) ) {\n\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"' after reference\") );\n\n\t\tif ( !expression ) {\n\t\t\t// special case - comment\n\t\t\tif ( parser.nextChar() === '!' ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tparser.error( (\"Expected expression or legal reference\") );\n\t\t}\n\t}\n\n\tinterpolator = { t: INTERPOLATOR };\n\trefineExpression( expression, interpolator ); // TODO handle this differently - it's mysterious\n\n\treturn interpolator;\n}\n\nvar yieldPattern = /^yield\\s*/;\n\nfunction readYielder ( parser, tag ) {\n\tif ( !parser.matchPattern( yieldPattern ) ) return null;\n\n\tvar name = parser.matchPattern( /^[a-zA-Z_$][a-zA-Z_$0-9\\-]*/ );\n\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( tag.close ) ) {\n\t\tparser.error( (\"expected legal partial name\") );\n\t}\n\n\tvar yielder = { t: YIELDER };\n\tif ( name ) yielder.n = name;\n\n\treturn yielder;\n}\n\nfunction readClosing ( parser, tag ) {\n\tvar start, remaining, index, closing;\n\n\tstart = parser.pos;\n\n\tif ( !parser.matchString( tag.open ) ) {\n\t\treturn null;\n\t}\n\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( '/' ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\tparser.allowWhitespace();\n\n\tremaining = parser.remaining();\n\tindex = remaining.indexOf( tag.close );\n\n\tif ( index !== -1 ) {\n\t\tclosing = {\n\t\t\tt: CLOSING,\n\t\t\tr: remaining.substr( 0, index ).split( ' ' )[0]\n\t\t};\n\n\t\tparser.pos += index;\n\n\t\tif ( !parser.matchString( tag.close ) ) {\n\t\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t\t}\n\n\t\treturn closing;\n\t}\n\n\tparser.pos = start;\n\treturn null;\n}\n\nvar elsePattern = /^\\s*else\\s*/;\n\nfunction readElse ( parser, tag ) {\n\tvar start = parser.pos;\n\n\tif ( !parser.matchString( tag.open ) ) {\n\t\treturn null;\n\t}\n\n\tif ( !parser.matchPattern( elsePattern ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\tif ( !parser.matchString( tag.close ) ) {\n\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t}\n\n\treturn {\n\t\tt: ELSE\n\t};\n}\n\nvar elsePattern$1 = /^\\s*elseif\\s+/;\n\nfunction readElseIf ( parser, tag ) {\n\tvar start = parser.pos;\n\n\tif ( !parser.matchString( tag.open ) ) {\n\t\treturn null;\n\t}\n\n\tif ( !parser.matchPattern( elsePattern$1 ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\tvar expression = readExpression( parser );\n\n\tif ( !parser.matchString( tag.close ) ) {\n\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t}\n\n\treturn {\n\t\tt: ELSEIF,\n\t\tx: expression\n\t};\n}\n\nvar handlebarsBlockCodes = {\n\t'each':    SECTION_EACH,\n\t'if':      SECTION_IF,\n\t'with':    SECTION_IF_WITH,\n\t'unless':  SECTION_UNLESS\n};\n\nvar indexRefPattern = /^\\s*:\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)/;\nvar keyIndexRefPattern = /^\\s*,\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)/;\nvar handlebarsBlockPattern = new RegExp( '^(' + Object.keys( handlebarsBlockCodes ).join( '|' ) + ')\\\\b' );\n\nfunction readSection ( parser, tag ) {\n\tvar start, expression, section, child, children, hasElse, block, unlessBlock, conditions, closed, i, expectedClose, aliasOnly = false;\n\n\tstart = parser.pos;\n\n\tif ( parser.matchString( '^' ) ) {\n\t\tsection = { t: SECTION, f: [], n: SECTION_UNLESS };\n\t} else if ( parser.matchString( '#' ) ) {\n\t\tsection = { t: SECTION, f: [] };\n\n\t\tif ( parser.matchString( 'partial' ) ) {\n\t\t\tparser.pos = start - parser.standardDelimiters[0].length;\n\t\t\tparser.error( 'Partial definitions can only be at the top level of the template, or immediately inside components' );\n\t\t}\n\n\t\tif ( block = parser.matchPattern( handlebarsBlockPattern ) ) {\n\t\t\texpectedClose = block;\n\t\t\tsection.n = handlebarsBlockCodes[ block ];\n\t\t}\n\t} else {\n\t\treturn null;\n\t}\n\n\tparser.allowWhitespace();\n\n\tif ( block === 'with' ) {\n\t\tvar aliases = readAliases( parser );\n\t\tif ( aliases ) {\n\t\t\taliasOnly = true;\n\t\t\tsection.z = aliases;\n\t\t\tsection.t = ALIAS;\n\t\t}\n\t} else if ( block === 'each' ) {\n\t\tvar alias = readAlias( parser );\n\t\tif ( alias ) {\n\t\t\tsection.z = [ { n: alias.n, x: { r: '.' } } ];\n\t\t\texpression = alias.x;\n\t\t}\n\t}\n\n\tif ( !aliasOnly ) {\n\t\tif ( !expression ) expression = readExpression( parser );\n\n\t\tif ( !expression ) {\n\t\t\tparser.error( 'Expected expression' );\n\t\t}\n\n\t\t// optional index and key references\n\t\tif ( i = parser.matchPattern( indexRefPattern ) ) {\n\t\t\tvar extra;\n\n\t\t\tif ( extra = parser.matchPattern( keyIndexRefPattern ) ) {\n\t\t\t\tsection.i = i + ',' + extra;\n\t\t\t} else {\n\t\t\t\tsection.i = i;\n\t\t\t}\n\t\t}\n\t}\n\n\tparser.allowWhitespace();\n\n\tif ( !parser.matchString( tag.close ) ) {\n\t\tparser.error( (\"Expected closing delimiter '\" + (tag.close) + \"'\") );\n\t}\n\n\tparser.sectionDepth += 1;\n\tchildren = section.f;\n\n\tconditions = [];\n\n\tdo {\n\t\tif ( child = readClosing( parser, tag ) ) {\n\t\t\tif ( expectedClose && child.r !== expectedClose ) {\n\t\t\t\tparser.error( (\"Expected \" + (tag.open) + \"/\" + expectedClose + \"\" + (tag.close)) );\n\t\t\t}\n\n\t\t\tparser.sectionDepth -= 1;\n\t\t\tclosed = true;\n\t\t}\n\n\t\telse if ( !aliasOnly && ( child = readElseIf( parser, tag ) ) ) {\n\t\t\tif ( section.n === SECTION_UNLESS ) {\n\t\t\t\tparser.error( '{{else}} not allowed in {{#unless}}' );\n\t\t\t}\n\n\t\t\tif ( hasElse ) {\n\t\t\t\tparser.error( 'illegal {{elseif...}} after {{else}}' );\n\t\t\t}\n\n\t\t\tif ( !unlessBlock ) {\n\t\t\t\tunlessBlock = [];\n\t\t\t}\n\n\t\t\tvar mustache = {\n\t\t\t\tt: SECTION,\n\t\t\t\tn: SECTION_IF,\n\t\t\t\tf: children = []\n\t\t\t};\n\t\t\trefineExpression( child.x, mustache );\n\n\t\t\tunlessBlock.push( mustache );\n\t\t}\n\n\t\telse if ( !aliasOnly && ( child = readElse( parser, tag ) ) ) {\n\t\t\tif ( section.n === SECTION_UNLESS ) {\n\t\t\t\tparser.error( '{{else}} not allowed in {{#unless}}' );\n\t\t\t}\n\n\t\t\tif ( hasElse ) {\n\t\t\t\tparser.error( 'there can only be one {{else}} block, at the end of a section' );\n\t\t\t}\n\n\t\t\thasElse = true;\n\n\t\t\t// use an unless block if there's no elseif\n\t\t\tif ( !unlessBlock ) {\n\t\t\t\tunlessBlock = [];\n\t\t\t}\n\n\t\t\tunlessBlock.push({\n\t\t\t\tt: SECTION,\n\t\t\t\tn: SECTION_UNLESS,\n\t\t\t\tf: children = []\n\t\t\t});\n\t\t}\n\n\t\telse {\n\t\t\tchild = parser.read( READERS );\n\n\t\t\tif ( !child ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchildren.push( child );\n\t\t}\n\t} while ( !closed );\n\n\tif ( unlessBlock ) {\n\t\tsection.l = unlessBlock;\n\t}\n\n\tif ( !aliasOnly ) {\n\t\trefineExpression( expression, section );\n\t}\n\n\t// TODO if a section is empty it should be discarded. Don't do\n\t// that here though - we need to clean everything up first, as\n\t// it may contain removeable whitespace. As a temporary measure,\n\t// to pass the existing tests, remove empty `f` arrays\n\tif ( !section.f.length ) {\n\t\tdelete section.f;\n\t}\n\n\treturn section;\n}\n\nvar OPEN_COMMENT = '<!--';\nvar CLOSE_COMMENT = '-->';\n\nfunction readHtmlComment ( parser ) {\n\tvar start, content, remaining, endIndex, comment;\n\n\tstart = parser.pos;\n\n\tif ( !parser.matchString( OPEN_COMMENT ) ) {\n\t\treturn null;\n\t}\n\n\tremaining = parser.remaining();\n\tendIndex = remaining.indexOf( CLOSE_COMMENT );\n\n\tif ( endIndex === -1 ) {\n\t\tparser.error( 'Illegal HTML - expected closing comment sequence (\\'-->\\')' );\n\t}\n\n\tcontent = remaining.substr( 0, endIndex );\n\tparser.pos += endIndex + 3;\n\n\tcomment = {\n\t\tt: COMMENT,\n\t\tc: content\n\t};\n\n\tif ( parser.includeLinePositions ) {\n\t\tcomment.p = parser.getLinePos( start );\n\t}\n\n\treturn comment;\n}\n\nvar leadingLinebreak = /^[ \\t\\f\\r\\n]*\\r?\\n/;\nvar trailingLinebreak = /\\r?\\n[ \\t\\f\\r\\n]*$/;\n\nvar stripStandalones = function ( items ) {\n\tvar i, current, backOne, backTwo, lastSectionItem;\n\n\tfor ( i=1; i<items.length; i+=1 ) {\n\t\tcurrent = items[i];\n\t\tbackOne = items[i-1];\n\t\tbackTwo = items[i-2];\n\n\t\t// if we're at the end of a [text][comment][text] sequence...\n\t\tif ( isString( current ) && isComment( backOne ) && isString( backTwo ) ) {\n\n\t\t\t// ... and the comment is a standalone (i.e. line breaks either side)...\n\t\t\tif ( trailingLinebreak.test( backTwo ) && leadingLinebreak.test( current ) ) {\n\n\t\t\t\t// ... then we want to remove the whitespace after the first line break\n\t\t\t\titems[i-2] = backTwo.replace( trailingLinebreak, '\\n' );\n\n\t\t\t\t// and the leading line break of the second text token\n\t\t\t\titems[i] = current.replace( leadingLinebreak, '' );\n\t\t\t}\n\t\t}\n\n\t\t// if the current item is a section, and it is preceded by a linebreak, and\n\t\t// its first item is a linebreak...\n\t\tif ( isSection( current ) && isString( backOne ) ) {\n\t\t\tif ( trailingLinebreak.test( backOne ) && isString( current.f[0] ) && leadingLinebreak.test( current.f[0] ) ) {\n\t\t\t\titems[i-1] = backOne.replace( trailingLinebreak, '\\n' );\n\t\t\t\tcurrent.f[0] = current.f[0].replace( leadingLinebreak, '' );\n\t\t\t}\n\t\t}\n\n\t\t// if the last item was a section, and it is followed by a linebreak, and\n\t\t// its last item is a linebreak...\n\t\tif ( isString( current ) && isSection( backOne ) ) {\n\t\t\tlastSectionItem = lastItem( backOne.f );\n\n\t\t\tif ( isString( lastSectionItem ) && trailingLinebreak.test( lastSectionItem ) && leadingLinebreak.test( current ) ) {\n\t\t\t\tbackOne.f[ backOne.f.length - 1 ] = lastSectionItem.replace( trailingLinebreak, '\\n' );\n\t\t\t\titems[i] = current.replace( leadingLinebreak, '' );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn items;\n};\n\nfunction isString ( item ) {\n\treturn typeof item === 'string';\n}\n\nfunction isComment ( item ) {\n\treturn item.t === COMMENT || item.t === DELIMCHANGE;\n}\n\nfunction isSection ( item ) {\n\treturn ( item.t === SECTION || item.t === INVERTED ) && item.f;\n}\n\nvar trimWhitespace = function ( items, leadingPattern, trailingPattern ) {\n\tvar item;\n\n\tif ( leadingPattern ) {\n\t\titem = items[0];\n\t\tif ( typeof item === 'string' ) {\n\t\t\titem = item.replace( leadingPattern, '' );\n\n\t\t\tif ( !item ) {\n\t\t\t\titems.shift();\n\t\t\t} else {\n\t\t\t\titems[0] = item;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( trailingPattern ) {\n\t\titem = lastItem( items );\n\t\tif ( typeof item === 'string' ) {\n\t\t\titem = item.replace( trailingPattern, '' );\n\n\t\t\tif ( !item ) {\n\t\t\t\titems.pop();\n\t\t\t} else {\n\t\t\t\titems[ items.length - 1 ] = item;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar contiguousWhitespace = /[ \\t\\f\\r\\n]+/g;\nvar preserveWhitespaceElements = /^(?:pre|script|style|textarea)$/i;\nvar leadingWhitespace$1 = /^[ \\t\\f\\r\\n]+/;\nvar trailingWhitespace = /[ \\t\\f\\r\\n]+$/;\nvar leadingNewLine = /^(?:\\r\\n|\\r|\\n)/;\nvar trailingNewLine = /(?:\\r\\n|\\r|\\n)$/;\n\nfunction cleanup ( items, stripComments, preserveWhitespace, removeLeadingWhitespace, removeTrailingWhitespace ) {\n\tif ( typeof items === 'string' ) return;\n\n\tvar i,\n\t\titem,\n\t\tpreviousItem,\n\t\tnextItem,\n\t\tpreserveWhitespaceInsideFragment,\n\t\tremoveLeadingWhitespaceInsideFragment,\n\t\tremoveTrailingWhitespaceInsideFragment,\n\t\tkey;\n\n\t// First pass - remove standalones and comments etc\n\tstripStandalones( items );\n\n\ti = items.length;\n\twhile ( i-- ) {\n\t\titem = items[i];\n\n\t\t// Remove delimiter changes, unsafe elements etc\n\t\tif ( item.exclude ) {\n\t\t\titems.splice( i, 1 );\n\t\t}\n\n\t\t// Remove comments, unless we want to keep them\n\t\telse if ( stripComments && item.t === COMMENT ) {\n\t\t\titems.splice( i, 1 );\n\t\t}\n\t}\n\n\t// If necessary, remove leading and trailing whitespace\n\ttrimWhitespace( items, removeLeadingWhitespace ? leadingWhitespace$1 : null, removeTrailingWhitespace ? trailingWhitespace : null );\n\n\ti = items.length;\n\twhile ( i-- ) {\n\t\titem = items[i];\n\n\t\t// Recurse\n\t\tif ( item.f ) {\n\t\t\tvar isPreserveWhitespaceElement = item.t === ELEMENT && preserveWhitespaceElements.test( item.e );\n\t\t\tpreserveWhitespaceInsideFragment = preserveWhitespace || isPreserveWhitespaceElement;\n\n\t\t\tif ( !preserveWhitespace && isPreserveWhitespaceElement ) {\n\t\t\t\ttrimWhitespace( item.f, leadingNewLine, trailingNewLine );\n\t\t\t}\n\n\t\t\tif ( !preserveWhitespaceInsideFragment ) {\n\t\t\t\tpreviousItem = items[ i - 1 ];\n\t\t\t\tnextItem = items[ i + 1 ];\n\n\t\t\t\t// if the previous item was a text item with trailing whitespace,\n\t\t\t\t// remove leading whitespace inside the fragment\n\t\t\t\tif ( !previousItem || ( typeof previousItem === 'string' && trailingWhitespace.test( previousItem ) ) ) {\n\t\t\t\t\tremoveLeadingWhitespaceInsideFragment = true;\n\t\t\t\t}\n\n\t\t\t\t// and vice versa\n\t\t\t\tif ( !nextItem || ( typeof nextItem === 'string' && leadingWhitespace$1.test( nextItem ) ) ) {\n\t\t\t\t\tremoveTrailingWhitespaceInsideFragment = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcleanup( item.f, stripComments, preserveWhitespaceInsideFragment, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespaceInsideFragment );\n\n\t\t\t// clean up name templates (events, decorators, etc)\n\t\t\tif ( isArray( item.f.n ) ) {\n\t\t\t\tcleanup( item.f.n, stripComments, preserveWhitespace, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespace );\n\t\t\t}\n\n\t\t\t// clean up arg templates (events, decorators, etc)\n\t\t\tif ( isArray( item.f.d ) ) {\n\t\t\t\tcleanup( item.f.d, stripComments, preserveWhitespace, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespace );\n\t\t\t}\n\t\t}\n\n\t\t// Split if-else blocks into two (an if, and an unless)\n\t\tif ( item.l ) {\n\t\t\tcleanup( item.l, stripComments, preserveWhitespace, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespaceInsideFragment );\n\n\t\t\titem.l.forEach( function ( s ) { return s.l = 1; } );\n\t\t\titem.l.unshift( i + 1, 0 );\n\t\t\titems.splice.apply( items, item.l );\n\t\t\tdelete item.l; // TODO would be nice if there was a way around this\n\t\t}\n\n\t\t// Clean up element attributes\n\t\tif ( item.a ) {\n\t\t\tfor ( key in item.a ) {\n\t\t\t\tif ( item.a.hasOwnProperty( key ) && typeof item.a[ key ] !== 'string' ) {\n\t\t\t\t\tcleanup( item.a[ key ], stripComments, preserveWhitespace, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespaceInsideFragment );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Clean up conditional attributes\n\t\tif ( item.m ) {\n\t\t\tcleanup( item.m, stripComments, preserveWhitespace, removeLeadingWhitespaceInsideFragment, removeTrailingWhitespaceInsideFragment );\n\t\t\tif ( item.m.length < 1 ) delete item.m;\n\t\t}\n\t}\n\n\t// final pass - fuse text nodes together\n\ti = items.length;\n\twhile ( i-- ) {\n\t\tif ( typeof items[i] === 'string' ) {\n\t\t\tif ( typeof items[i+1] === 'string' ) {\n\t\t\t\titems[i] = items[i] + items[i+1];\n\t\t\t\titems.splice( i + 1, 1 );\n\t\t\t}\n\n\t\t\tif ( !preserveWhitespace ) {\n\t\t\t\titems[i] = items[i].replace( contiguousWhitespace, ' ' );\n\t\t\t}\n\n\t\t\tif ( items[i] === '' ) {\n\t\t\t\titems.splice( i, 1 );\n\t\t\t}\n\t\t}\n\t}\n}\n\nvar closingTagPattern = /^([a-zA-Z]{1,}:?[a-zA-Z0-9\\-]*)\\s*\\>/;\n\nfunction readClosingTag ( parser ) {\n\tvar start, tag;\n\n\tstart = parser.pos;\n\n\t// are we looking at a closing tag?\n\tif ( !parser.matchString( '</' ) ) {\n\t\treturn null;\n\t}\n\n\tif ( tag = parser.matchPattern( closingTagPattern ) ) {\n\t\tif ( parser.inside && tag !== parser.inside ) {\n\t\t\tparser.pos = start;\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tt: CLOSING_TAG,\n\t\t\te: tag\n\t\t};\n\t}\n\n\t// We have an illegal closing tag, report it\n\tparser.pos -= 2;\n\tparser.error( 'Illegal closing tag' );\n}\n\nvar tagNamePattern = /^[a-zA-Z]{1,}:?[a-zA-Z0-9\\-]*/;\nvar validTagNameFollower = /^[\\s\\n\\/>]/;\nvar exclude = { exclude: true };\nvar disallowedContents;\n\n// based on http://developers.whatwg.org/syntax.html#syntax-tag-omission\ndisallowedContents = {\n\tli: [ 'li' ],\n\tdt: [ 'dt', 'dd' ],\n\tdd: [ 'dt', 'dd' ],\n\tp: 'address article aside blockquote div dl fieldset footer form h1 h2 h3 h4 h5 h6 header hgroup hr main menu nav ol p pre section table ul'.split( ' ' ),\n\trt: [ 'rt', 'rp' ],\n\trp: [ 'rt', 'rp' ],\n\toptgroup: [ 'optgroup' ],\n\toption: [ 'option', 'optgroup' ],\n\tthead: [ 'tbody', 'tfoot' ],\n\ttbody: [ 'tbody', 'tfoot' ],\n\ttfoot: [ 'tbody' ],\n\ttr: [ 'tr', 'tbody' ],\n\ttd: [ 'td', 'th', 'tr' ],\n\tth: [ 'td', 'th', 'tr' ]\n};\n\nfunction readElement$1 ( parser ) {\n\tvar start,\n\t\telement,\n\t\tattribute,\n\t\tselfClosing,\n\t\tchildren,\n\t\tpartials,\n\t\thasPartials,\n\t\tchild,\n\t\tclosed,\n\t\tpos,\n\t\tremaining,\n\t\tclosingTag;\n\n\tstart = parser.pos;\n\n\tif ( parser.inside || parser.inAttribute ) {\n\t\treturn null;\n\t}\n\n\tif ( !parser.matchString( '<' ) ) {\n\t\treturn null;\n\t}\n\n\t// if this is a closing tag, abort straight away\n\tif ( parser.nextChar() === '/' ) {\n\t\treturn null;\n\t}\n\n\telement = {};\n\tif ( parser.includeLinePositions ) {\n\t\telement.p = parser.getLinePos( start );\n\t}\n\n\tif ( parser.matchString( '!' ) ) {\n\t\telement.t = DOCTYPE;\n\t\tif ( !parser.matchPattern( /^doctype/i ) ) {\n\t\t\tparser.error( 'Expected DOCTYPE declaration' );\n\t\t}\n\n\t\telement.a = parser.matchPattern( /^(.+?)>/ );\n\t\treturn element;\n\t}\n\n\telement.t = ELEMENT;\n\n\t// element name\n\telement.e = parser.matchPattern( tagNamePattern );\n\tif ( !element.e ) {\n\t\treturn null;\n\t}\n\n\t// next character must be whitespace, closing solidus or '>'\n\tif ( !validTagNameFollower.test( parser.nextChar() ) ) {\n\t\tparser.error( 'Illegal tag name' );\n\t}\n\n\tparser.allowWhitespace();\n\n\tparser.inTag = true;\n\n\t// directives and attributes\n\twhile ( attribute = readMustache( parser ) ) {\n\t\tif ( attribute !== false ) {\n\t\t\tif ( !element.m ) element.m = [];\n\t\t\telement.m.push( attribute );\n\t\t}\n\n\t\tparser.allowWhitespace();\n\t}\n\n\tparser.inTag = false;\n\n\t// allow whitespace before closing solidus\n\tparser.allowWhitespace();\n\n\t// self-closing solidus?\n\tif ( parser.matchString( '/' ) ) {\n\t\tselfClosing = true;\n\t}\n\n\t// closing angle bracket\n\tif ( !parser.matchString( '>' ) ) {\n\t\treturn null;\n\t}\n\n\tvar lowerCaseName = element.e.toLowerCase();\n\tvar preserveWhitespace = parser.preserveWhitespace;\n\n\tif ( !selfClosing && !voidElementNames.test( element.e ) ) {\n\t\tparser.elementStack.push( lowerCaseName );\n\n\t\t// Special case - if we open a script element, further tags should\n\t\t// be ignored unless they're a closing script element\n\t\tif ( lowerCaseName === 'script' || lowerCaseName === 'style' || lowerCaseName === 'textarea' ) {\n\t\t\tparser.inside = lowerCaseName;\n\t\t}\n\n\t\tchildren = [];\n\t\tpartials = create( null );\n\n\t\tdo {\n\t\t\tpos = parser.pos;\n\t\t\tremaining = parser.remaining();\n\n\t\t\tif ( !remaining ) {\n\t\t\t\tparser.error( (\"Missing end \" + (parser.elementStack.length > 1 ? 'tags' : 'tag') + \" (\" + (parser.elementStack.reverse().map( function ( x ) { return (\"</\" + x + \">\"); } ).join( '' )) + \")\") );\n\t\t\t}\n\n\t\t\t// if for example we're in an <li> element, and we see another\n\t\t\t// <li> tag, close the first so they become siblings\n\t\t\tif ( !canContain( lowerCaseName, remaining ) ) {\n\t\t\t\tclosed = true;\n\t\t\t}\n\n\t\t\t// closing tag\n\t\t\telse if ( closingTag = readClosingTag( parser ) ) {\n\t\t\t\tclosed = true;\n\n\t\t\t\tvar closingTagName = closingTag.e.toLowerCase();\n\n\t\t\t\t// if this *isn't* the closing tag for the current element...\n\t\t\t\tif ( closingTagName !== lowerCaseName ) {\n\t\t\t\t\t// rewind parser\n\t\t\t\t\tparser.pos = pos;\n\n\t\t\t\t\t// if it doesn't close a parent tag, error\n\t\t\t\t\tif ( !~parser.elementStack.indexOf( closingTagName ) ) {\n\t\t\t\t\t\tvar errorMessage = 'Unexpected closing tag';\n\n\t\t\t\t\t\t// add additional help for void elements, since component names\n\t\t\t\t\t\t// might clash with them\n\t\t\t\t\t\tif ( voidElementNames.test( closingTagName ) ) {\n\t\t\t\t\t\t\terrorMessage += \" (<\" + closingTagName + \"> is a void element - it cannot contain children)\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparser.error( errorMessage );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// implicit close by closing section tag. TODO clean this up\n\t\t\telse if ( child = readClosing( parser, { open: parser.standardDelimiters[0], close: parser.standardDelimiters[1] } ) ) {\n\t\t\t\tclosed = true;\n\t\t\t\tparser.pos = pos;\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tif ( child = parser.read( PARTIAL_READERS ) ) {\n\t\t\t\t\tif ( partials[ child.n ] ) {\n\t\t\t\t\t\tparser.pos = pos;\n\t\t\t\t\t\tparser.error( 'Duplicate partial definition' );\n\t\t\t\t\t}\n\n\t\t\t\t\tcleanup( child.f, parser.stripComments, preserveWhitespace, !preserveWhitespace, !preserveWhitespace );\n\n\t\t\t\t\tpartials[ child.n ] = child.f;\n\t\t\t\t\thasPartials = true;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tif ( child = parser.read( READERS ) ) {\n\t\t\t\t\t\tchildren.push( child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclosed = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( !closed );\n\n\t\tif ( children.length ) {\n\t\t\telement.f = children;\n\t\t}\n\n\t\tif ( hasPartials ) {\n\t\t\telement.p = partials;\n\t\t}\n\n\t\tparser.elementStack.pop();\n\t}\n\n\tparser.inside = null;\n\n\tif ( parser.sanitizeElements && parser.sanitizeElements.indexOf( lowerCaseName ) !== -1 ) {\n\t\treturn exclude;\n\t}\n\n\treturn element;\n}\n\nfunction canContain ( name, remaining ) {\n\tvar match, disallowed;\n\n\tmatch = /^<([a-zA-Z][a-zA-Z0-9]*)/.exec( remaining );\n\tdisallowed = disallowedContents[ name ];\n\n\tif ( !match || !disallowed ) {\n\t\treturn true;\n\t}\n\n\treturn !~disallowed.indexOf( match[1].toLowerCase() );\n}\n\nfunction readText ( parser ) {\n\tvar index, remaining, disallowed, barrier;\n\n\tremaining = parser.remaining();\n\n\tif ( parser.textOnlyMode ) {\n\t\tdisallowed = parser.tags.map( function ( t ) { return t.open; } );\n\t\tdisallowed = disallowed.concat( parser.tags.map( function ( t ) { return '\\\\' + t.open; } ) );\n\n\t\tindex = getLowestIndex( remaining, disallowed );\n\t} else {\n\t\tbarrier = parser.inside ? '</' + parser.inside : '<';\n\n\t\tif ( parser.inside && !parser.interpolate[ parser.inside ] ) {\n\t\t\tindex = remaining.indexOf( barrier );\n\t\t} else {\n\t\t\tdisallowed = parser.tags.map( function ( t ) { return t.open; } );\n\t\t\tdisallowed = disallowed.concat( parser.tags.map( function ( t ) { return '\\\\' + t.open; } ) );\n\n\t\t\t// http://developers.whatwg.org/syntax.html#syntax-attributes\n\t\t\tif ( parser.inAttribute === true ) {\n\t\t\t\t// we're inside an unquoted attribute value\n\t\t\t\tdisallowed.push( (\"\\\"\"), (\"'\"), (\"=\"), (\"<\"), (\">\"), '`' );\n\t\t\t} else if ( parser.inAttribute ) {\n\t\t\t\t// quoted attribute value\n\t\t\t\tdisallowed.push( parser.inAttribute );\n\t\t\t} else {\n\t\t\t\tdisallowed.push( barrier );\n\t\t\t}\n\n\t\t\tindex = getLowestIndex( remaining, disallowed );\n\t\t}\n\t}\n\n\tif ( !index ) {\n\t\treturn null;\n\t}\n\n\tif ( index === -1 ) {\n\t\tindex = remaining.length;\n\t}\n\n\tparser.pos += index;\n\n\tif ( ( parser.inside && parser.inside !== 'textarea' ) || parser.textOnlyMode ) {\n\t\treturn remaining.substr( 0, index );\n\t} else {\n\t\treturn decodeCharacterReferences( remaining.substr( 0, index ) );\n\t}\n}\n\nvar startPattern = /^<!--\\s*/;\nvar namePattern = /s*>\\s*([a-zA-Z_$][-a-zA-Z_$0-9]*)\\s*/;\nvar finishPattern = /\\s*-->/;\n\nfunction readPartialDefinitionComment$1 ( parser ) {\n\tvar start = parser.pos;\n\tvar open = parser.standardDelimiters[0];\n\tvar close = parser.standardDelimiters[1];\n\n\tif ( !parser.matchPattern( startPattern ) || !parser.matchString( open ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\tvar name = parser.matchPattern( namePattern );\n\n\twarnOnceIfDebug( (\"Inline partial comments are deprecated.\\nUse this...\\n  {{#partial \" + name + \"}} ... {{/partial}}\\n\\n...instead of this:\\n  <!-- {{>\" + name + \"}} --> ... <!-- {{/\" + name + \"}} -->'\") );\n\n\t// make sure the rest of the comment is in the correct place\n\tif ( !parser.matchString( close ) || !parser.matchPattern( finishPattern ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\tvar content = [];\n\tvar closed;\n\n\tvar endPattern = new RegExp('^<!--\\\\s*' + escapeRegExp( open ) + '\\\\s*\\\\/\\\\s*' + name + '\\\\s*' + escapeRegExp( close ) + '\\\\s*-->');\n\n\tdo {\n\t\tif ( parser.matchPattern( endPattern ) ) {\n\t\t\tclosed = true;\n\t\t}\n\n\t\telse {\n\t\t\tvar child = parser.read( READERS );\n\t\t\tif ( !child ) {\n\t\t\t\tparser.error( (\"expected closing comment ('<!-- \" + open + \"/\" + name + \"\" + close + \" -->')\") );\n\t\t\t}\n\n\t\t\tcontent.push( child );\n\t\t}\n\t} while ( !closed );\n\n\treturn {\n\t\tt: INLINE_PARTIAL,\n\t\tf: content,\n\t\tn: name\n\t};\n}\n\nvar partialDefinitionSectionPattern = /^\\s*#\\s*partial\\s+/;\n\nfunction readPartialDefinitionSection ( parser ) {\n\tvar start, name, content, child, closed;\n\n\tstart = parser.pos;\n\n\tvar delimiters = parser.standardDelimiters;\n\n\tif ( !parser.matchString( delimiters[0] ) ) {\n\t\treturn null;\n\t}\n\n\tif ( !parser.matchPattern( partialDefinitionSectionPattern ) ) {\n\t\tparser.pos = start;\n\t\treturn null;\n\t}\n\n\tname = parser.matchPattern( /^[a-zA-Z_$][a-zA-Z_$0-9\\-\\/]*/ );\n\n\tif ( !name ) {\n\t\tparser.error( 'expected legal partial name' );\n\t}\n\n\tparser.allowWhitespace();\n\tif ( !parser.matchString( delimiters[1] ) ) {\n\t\tparser.error( (\"Expected closing delimiter '\" + (delimiters[1]) + \"'\") );\n\t}\n\n\tcontent = [];\n\n\tdo {\n\t\t// TODO clean this up\n\t\tif ( child = readClosing( parser, { open: parser.standardDelimiters[0], close: parser.standardDelimiters[1] }) ) {\n\t\t\tif ( !child.r === 'partial' ) {\n\t\t\t\tparser.error( (\"Expected \" + (delimiters[0]) + \"/partial\" + (delimiters[1])) );\n\t\t\t}\n\n\t\t\tclosed = true;\n\t\t}\n\n\t\telse {\n\t\t\tchild = parser.read( READERS );\n\n\t\t\tif ( !child ) {\n\t\t\t\tparser.error( (\"Expected \" + (delimiters[0]) + \"/partial\" + (delimiters[1])) );\n\t\t\t}\n\n\t\t\tcontent.push( child );\n\t\t}\n\t} while ( !closed );\n\n\treturn {\n\t\tt: INLINE_PARTIAL,\n\t\tn: name,\n\t\tf: content\n\t};\n}\n\nfunction readTemplate ( parser ) {\n\tvar fragment = [];\n\tvar partials = create( null );\n\tvar hasPartials = false;\n\n\tvar preserveWhitespace = parser.preserveWhitespace;\n\n\twhile ( parser.pos < parser.str.length ) {\n\t\tvar pos = parser.pos, item, partial;\n\n\t\tif ( partial = parser.read( PARTIAL_READERS ) ) {\n\t\t\tif ( partials[ partial.n ] ) {\n\t\t\t\tparser.pos = pos;\n\t\t\t\tparser.error( 'Duplicated partial definition' );\n\t\t\t}\n\n\t\t\tcleanup( partial.f, parser.stripComments, preserveWhitespace, !preserveWhitespace, !preserveWhitespace );\n\n\t\t\tpartials[ partial.n ] = partial.f;\n\t\t\thasPartials = true;\n\t\t} else if ( item = parser.read( READERS ) ) {\n\t\t\tfragment.push( item );\n\t\t} else  {\n\t\t\tparser.error( 'Unexpected template content' );\n\t\t}\n\t}\n\n\tvar result = {\n\t\tv: TEMPLATE_VERSION,\n\t\tt: fragment\n\t};\n\n\tif ( hasPartials ) {\n\t\tresult.p = partials;\n\t}\n\n\treturn result;\n}\n\nfunction insertExpressions ( obj, expr ) {\n\n\tObject.keys( obj ).forEach( function ( key ) {\n\t\tif  ( isExpression( key, obj ) ) return addTo( obj, expr );\n\n\t\tvar ref = obj[ key ];\n\t\tif ( hasChildren( ref ) ) insertExpressions( ref, expr );\n \t});\n}\n\nfunction isExpression( key, obj ) {\n\treturn key === 's' && isArray( obj.r );\n}\n\nfunction addTo( obj, expr ) {\n\tvar s = obj.s, r = obj.r;\n\tif ( !expr[ s ] ) expr[ s ] = fromExpression( s, r.length );\n}\n\nfunction hasChildren( ref ) {\n\treturn isArray( ref ) || isObject( ref );\n}\n\n// See https://github.com/ractivejs/template-spec for information\n// about the Ractive template specification\n\nvar STANDARD_READERS = [ readPartial, readUnescaped, readSection, readYielder, readInterpolator, readComment ];\nvar TRIPLE_READERS = [ readTriple ];\nvar STATIC_READERS = [ readUnescaped, readSection, readInterpolator ]; // TODO does it make sense to have a static section?\n\nvar StandardParser;\n\nfunction parse ( template, options ) {\n\treturn new StandardParser( template, options || {} ).result;\n}\n\nparse.computedStrings = function( computed ) {\n\tif ( !computed ) return [];\n\n\tObject.keys( computed ).forEach( function ( key ) {\n\t\tvar value = computed[ key ];\n\t\tif ( typeof value === 'string' ) {\n\t\t\tcomputed[ key ] = fromComputationString( value );\n\t\t}\n\t});\n};\n\n\nvar READERS = [ readMustache, readHtmlComment, readElement$1, readText ];\nvar PARTIAL_READERS = [ readPartialDefinitionComment$1, readPartialDefinitionSection ];\n\nStandardParser = Parser$1.extend({\n\tinit: function ( str, options ) {\n\t\tvar tripleDelimiters = options.tripleDelimiters || [ '{{{', '}}}' ],\n\t\t\tstaticDelimiters = options.staticDelimiters || [ '[[', ']]' ],\n\t\t\tstaticTripleDelimiters = options.staticTripleDelimiters || [ '[[[', ']]]' ];\n\n\t\tthis.standardDelimiters = options.delimiters || [ '{{', '}}' ];\n\n\t\tthis.tags = [\n\t\t\t{ isStatic: false, isTriple: false, open: this.standardDelimiters[0], close: this.standardDelimiters[1], readers: STANDARD_READERS },\n\t\t\t{ isStatic: false, isTriple: true,  open: tripleDelimiters[0],        close: tripleDelimiters[1],        readers: TRIPLE_READERS },\n\t\t\t{ isStatic: true,  isTriple: false, open: staticDelimiters[0],        close: staticDelimiters[1],        readers: STATIC_READERS },\n\t\t\t{ isStatic: true,  isTriple: true,  open: staticTripleDelimiters[0],  close: staticTripleDelimiters[1],  readers: TRIPLE_READERS }\n\t\t];\n\n\t\tthis.sortMustacheTags();\n\n\t\tthis.sectionDepth = 0;\n\t\tthis.elementStack = [];\n\n\t\tthis.interpolate = {\n\t\t\tscript: !options.interpolate || options.interpolate.script !== false,\n\t\t\tstyle: !options.interpolate || options.interpolate.style !== false,\n\t\t\ttextarea: true\n\t\t};\n\n\t\tif ( options.sanitize === true ) {\n\t\t\toptions.sanitize = {\n\t\t\t\t// blacklist from https://code.google.com/p/google-caja/source/browse/trunk/src/com/google/caja/lang/html/html4-elements-whitelist.json\n\t\t\t\telements: 'applet base basefont body frame frameset head html isindex link meta noframes noscript object param script style title'.split( ' ' ),\n\t\t\t\teventAttributes: true\n\t\t\t};\n\t\t}\n\n\t\tthis.stripComments = options.stripComments !== false;\n\t\tthis.preserveWhitespace = options.preserveWhitespace;\n\t\tthis.sanitizeElements = options.sanitize && options.sanitize.elements;\n\t\tthis.sanitizeEventAttributes = options.sanitize && options.sanitize.eventAttributes;\n\t\tthis.includeLinePositions = options.includeLinePositions;\n\t\tthis.textOnlyMode = options.textOnlyMode;\n\t\tthis.csp = options.csp;\n\t},\n\n\tpostProcess: function ( result ) {\n\t\t// special case - empty string\n\t\tif ( !result.length ) {\n\t\t\treturn { t: [], v: TEMPLATE_VERSION };\n\t\t}\n\n\t\tif ( this.sectionDepth > 0 ) {\n\t\t\tthis.error( 'A section was left open' );\n\t\t}\n\n\t\tcleanup( result[0].t, this.stripComments, this.preserveWhitespace, !this.preserveWhitespace, !this.preserveWhitespace );\n\n\t\tif ( this.csp !== false ) {\n\t\t\tvar expr = {};\n\t\t\tinsertExpressions( result[0].t, expr );\n\t\t\tif ( Object.keys( expr ).length ) result[0].e = expr;\n\t\t}\n\n\t\treturn result[0];\n\t},\n\n\tconverters: [\n\t\treadTemplate\n\t],\n\n\tsortMustacheTags: function () {\n\t\t// Sort in order of descending opening delimiter length (longer first),\n\t\t// to protect against opening delimiters being substrings of each other\n\t\tthis.tags.sort( function ( a, b ) {\n\t\t\treturn b.open.length - a.open.length;\n\t\t});\n\t}\n});\n\nvar parseOptions = [\n\t'delimiters',\n\t'tripleDelimiters',\n\t'staticDelimiters',\n\t'staticTripleDelimiters',\n\t'csp',\n\t'interpolate',\n\t'preserveWhitespace',\n\t'sanitize',\n\t'stripComments'\n];\n\nvar TEMPLATE_INSTRUCTIONS = \"Either preparse or use a ractive runtime source that includes the parser. \";\n\nvar COMPUTATION_INSTRUCTIONS = \"Either use:\\n\\n\\tRactive.parse.computedStrings( component.computed )\\n\\nat build time to pre-convert the strings to functions, or use functions instead of strings in computed properties.\";\n\n\nfunction throwNoParse ( method, error, instructions ) {\n\tif ( !method ) {\n\t\tfatal( (\"Missing Ractive.parse - cannot parse \" + error + \". \" + instructions) );\n\t}\n}\n\nfunction createFunction ( body, length ) {\n\tthrowNoParse( fromExpression, 'new expression function', TEMPLATE_INSTRUCTIONS );\n\treturn fromExpression( body, length );\n}\n\nfunction createFunctionFromString ( str, bindTo ) {\n\tthrowNoParse( fromComputationString, 'compution string \"${str}\"', COMPUTATION_INSTRUCTIONS );\n\treturn fromComputationString( str, bindTo );\n}\n\nvar parser = {\n\n\tfromId: function ( id, options ) {\n\t\tif ( !doc ) {\n\t\t\tif ( options && options.noThrow ) { return; }\n\t\t\tthrow new Error( (\"Cannot retrieve template #\" + id + \" as Ractive is not running in a browser.\") );\n\t\t}\n\n\t\tif ( id ) id = id.replace( /^#/, '' );\n\n\t\tvar template;\n\n\t\tif ( !( template = doc.getElementById( id ) )) {\n\t\t\tif ( options && options.noThrow ) { return; }\n\t\t\tthrow new Error( (\"Could not find template element with id #\" + id) );\n\t\t}\n\n\t\tif ( template.tagName.toUpperCase() !== 'SCRIPT' ) {\n\t\t\tif ( options && options.noThrow ) { return; }\n\t\t\tthrow new Error( (\"Template element with id #\" + id + \", must be a <script> element\") );\n\t\t}\n\n\t\treturn ( 'textContent' in template ? template.textContent : template.innerHTML );\n\n\t},\n\n\tisParsed: function ( template) {\n\t\treturn !( typeof template === 'string' );\n\t},\n\n\tgetParseOptions: function ( ractive ) {\n\t\t// Could be Ractive or a Component\n\t\tif ( ractive.defaults ) { ractive = ractive.defaults; }\n\n\t\treturn parseOptions.reduce( function ( val, key ) {\n\t\t\tval[ key ] = ractive[ key ];\n\t\t\treturn val;\n\t\t}, {});\n\t},\n\n\tparse: function ( template, options ) {\n\t\tthrowNoParse( parse, 'template', TEMPLATE_INSTRUCTIONS );\n\t\tvar parsed = parse( template, options );\n\t\taddFunctions( parsed );\n\t\treturn parsed;\n\t},\n\n\tparseFor: function( template, ractive ) {\n\t\treturn this.parse( template, this.getParseOptions( ractive ) );\n\t}\n};\n\nvar templateConfigurator = {\n\tname: 'template',\n\n\textend: function ( Parent, proto, options ) {\n\t\t// only assign if exists\n\t\tif ( 'template' in options ) {\n\t\t\tvar template = options.template;\n\n\t\t\tif ( typeof template === 'function' ) {\n\t\t\t\tproto.template = template;\n\t\t\t} else {\n\t\t\t\tproto.template = parseTemplate( template, proto );\n\t\t\t}\n\t\t}\n\t},\n\n\tinit: function ( Parent, ractive, options ) {\n\t\t// TODO because of prototypal inheritance, we might just be able to use\n\t\t// ractive.template, and not bother passing through the Parent object.\n\t\t// At present that breaks the test mocks' expectations\n\t\tvar template = 'template' in options ? options.template : Parent.prototype.template;\n\t\ttemplate = template || { v: TEMPLATE_VERSION, t: [] };\n\n\t\tif ( typeof template === 'function' ) {\n\t\t\tvar fn = template;\n\t\t\ttemplate = getDynamicTemplate( ractive, fn );\n\n\t\t\tractive._config.template = {\n\t\t\t\tfn: fn,\n\t\t\t\tresult: template\n\t\t\t};\n\t\t}\n\n\t\ttemplate = parseTemplate( template, ractive );\n\n\t\t// TODO the naming of this is confusing - ractive.template refers to [...],\n\t\t// but Component.prototype.template refers to {v:1,t:[],p:[]}...\n\t\t// it's unnecessary, because the developer never needs to access\n\t\t// ractive.template\n\t\tractive.template = template.t;\n\n\t\tif ( template.p ) {\n\t\t\textendPartials( ractive.partials, template.p );\n\t\t}\n\t},\n\n\treset: function ( ractive ) {\n\t\tvar result = resetValue( ractive );\n\n\t\tif ( result ) {\n\t\t\tvar parsed = parseTemplate( result, ractive );\n\n\t\t\tractive.template = parsed.t;\n\t\t\textendPartials( ractive.partials, parsed.p, true );\n\n\t\t\treturn true;\n\t\t}\n\t}\n};\n\nfunction resetValue ( ractive ) {\n\tvar initial = ractive._config.template;\n\n\t// If this isn't a dynamic template, there's nothing to do\n\tif ( !initial || !initial.fn ) {\n\t\treturn;\n\t}\n\n\tvar result = getDynamicTemplate( ractive, initial.fn );\n\n\t// TODO deep equality check to prevent unnecessary re-rendering\n\t// in the case of already-parsed templates\n\tif ( result !== initial.result ) {\n\t\tinitial.result = result;\n\t\treturn result;\n\t}\n}\n\nfunction getDynamicTemplate ( ractive, fn ) {\n\treturn fn.call( ractive, {\n\t\tfromId: parser.fromId,\n\t\tisParsed: parser.isParsed,\n\t\tparse: function ( template, options ) {\n\t\t\tif ( options === void 0 ) options = parser.getParseOptions( ractive );\n\n\t\t\treturn parser.parse( template, options );\n\t\t}\n\t});\n}\n\nfunction parseTemplate ( template, ractive ) {\n\tif ( typeof template === 'string' ) {\n\t\t// parse will validate and add expression functions\n\t\ttemplate = parseAsString( template, ractive );\n\t}\n\telse {\n\t\t// need to validate and add exp for already parsed template\n\t\tvalidate$1( template );\n\t\taddFunctions( template );\n\t}\n\n\treturn template;\n}\n\nfunction parseAsString ( template, ractive ) {\n\t// ID of an element containing the template?\n\tif ( template[0] === '#' ) {\n\t\ttemplate = parser.fromId( template );\n\t}\n\n\treturn parser.parseFor( template, ractive );\n}\n\nfunction validate$1( template ) {\n\n\t// Check that the template even exists\n\tif ( template == undefined ) {\n\t\tthrow new Error( (\"The template cannot be \" + template + \".\") );\n\t}\n\n\t// Check the parsed template has a version at all\n\telse if ( typeof template.v !== 'number' ) {\n\t\tthrow new Error( 'The template parser was passed a non-string template, but the template doesn\\'t have a version.  Make sure you\\'re passing in the template you think you are.' );\n\t}\n\n\t// Check we're using the correct version\n\telse if ( template.v !== TEMPLATE_VERSION ) {\n\t\tthrow new Error( (\"Mismatched template version (expected \" + TEMPLATE_VERSION + \", got \" + (template.v) + \") Please ensure you are using the latest version of Ractive.js in your build process as well as in your app\") );\n\t}\n}\n\nfunction extendPartials ( existingPartials, newPartials, overwrite ) {\n\tif ( !newPartials ) return;\n\n\t// TODO there's an ambiguity here - we need to overwrite in the `reset()`\n\t// case, but not initially...\n\n\tfor ( var key in newPartials ) {\n\t\tif ( overwrite || !existingPartials.hasOwnProperty( key ) ) {\n\t\t\texistingPartials[ key ] = newPartials[ key ];\n\t\t}\n\t}\n}\n\nvar registryNames = [\n\t'adaptors',\n\t'components',\n\t'computed',\n\t'decorators',\n\t'easing',\n\t'events',\n\t'interpolators',\n\t'partials',\n\t'transitions'\n];\n\nvar Registry = function Registry ( name, useDefaults ) {\n\tthis.name = name;\n\tthis.useDefaults = useDefaults;\n};\n\nRegistry.prototype.extend = function extend ( Parent, proto, options ) {\n\tthis.configure(\n\t\tthis.useDefaults ? Parent.defaults : Parent,\n\t\tthis.useDefaults ? proto : proto.constructor,\n\t\toptions );\n};\n\nRegistry.prototype.init = function init () {\n\t// noop\n};\n\nRegistry.prototype.configure = function configure ( Parent, target, options ) {\n\tvar name = this.name;\n\tvar option = options[ name ];\n\n\tvar registry = create( Parent[name] );\n\n\tfor ( var key in option ) {\n\t\tregistry[ key ] = option[ key ];\n\t}\n\n\ttarget[ name ] = registry;\n};\n\nRegistry.prototype.reset = function reset ( ractive ) {\n\tvar registry = ractive[ this.name ];\n\tvar changed = false;\n\n\tObject.keys( registry ).forEach( function ( key ) {\n\t\tvar item = registry[ key ];\n\t\t\t\n\t\tif ( item._fn ) {\n\t\t\tif ( item._fn.isOwner ) {\n\t\t\t\tregistry[key] = item._fn;\n\t\t\t} else {\n\t\t\t\tdelete registry[key];\n\t\t\t}\n\t\t\tchanged = true;\n\t\t}\n\t});\n\n\treturn changed;\n};\n\nvar registries = registryNames.map( function ( name ) { return new Registry( name, name === 'computed' ); } );\n\nfunction wrap ( parent, name, method ) {\n\tif ( !/_super/.test( method ) ) return method;\n\n\tfunction wrapper () {\n\t\tvar superMethod = getSuperMethod( wrapper._parent, name );\n\t\tvar hasSuper = '_super' in this;\n\t\tvar oldSuper = this._super;\n\n\t\tthis._super = superMethod;\n\n\t\tvar result = method.apply( this, arguments );\n\n\t\tif ( hasSuper ) {\n\t\t\tthis._super = oldSuper;\n\t\t} else {\n\t\t\tdelete this._super;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\twrapper._parent = parent;\n\twrapper._method = method;\n\n\treturn wrapper;\n}\n\nfunction getSuperMethod ( parent, name ) {\n\tif ( name in parent ) {\n\t\tvar value = parent[ name ];\n\n\t\treturn typeof value === 'function' ?\n\t\t\tvalue :\n\t\t\tfunction () { return value; };\n\t}\n\n\treturn noop;\n}\n\nfunction getMessage( deprecated, correct, isError ) {\n\treturn \"options.\" + deprecated + \" has been deprecated in favour of options.\" + correct + \".\"\n\t\t+ ( isError ? (\" You cannot specify both options, please use options.\" + correct + \".\") : '' );\n}\n\nfunction deprecateOption ( options, deprecatedOption, correct ) {\n\tif ( deprecatedOption in options ) {\n\t\tif( !( correct in options ) ) {\n\t\t\twarnIfDebug( getMessage( deprecatedOption, correct ) );\n\t\t\toptions[ correct ] = options[ deprecatedOption ];\n\t\t} else {\n\t\t\tthrow new Error( getMessage( deprecatedOption, correct, true ) );\n\t\t}\n\t}\n}\n\nfunction deprecate ( options ) {\n\tdeprecateOption( options, 'beforeInit', 'onconstruct' );\n\tdeprecateOption( options, 'init', 'onrender' );\n\tdeprecateOption( options, 'complete', 'oncomplete' );\n\tdeprecateOption( options, 'eventDefinitions', 'events' );\n\n\t// Using extend with Component instead of options,\n\t// like Human.extend( Spider ) means adaptors as a registry\n\t// gets copied to options. So we have to check if actually an array\n\tif ( isArray( options.adaptors ) ) {\n\t\tdeprecateOption( options, 'adaptors', 'adapt' );\n\t}\n}\n\nvar custom = {\n\tadapt: adaptConfigurator,\n\tcss: cssConfigurator,\n\tdata: dataConfigurator,\n\ttemplate: templateConfigurator\n};\n\nvar defaultKeys = Object.keys( defaults );\n\nvar isStandardKey = makeObj( defaultKeys.filter( function ( key ) { return !custom[ key ]; } ) );\n\n// blacklisted keys that we don't double extend\nvar isBlacklisted = makeObj( defaultKeys.concat( registries.map( function ( r ) { return r.name; } ) ) );\n\nvar order = [].concat(\n\tdefaultKeys.filter( function ( key ) { return !registries[ key ] && !custom[ key ]; } ),\n\tregistries,\n\t//custom.data,\n\tcustom.template,\n\tcustom.css\n);\n\nvar config = {\n\textend: function ( Parent, proto, options ) { return configure$1( 'extend', Parent, proto, options ); },\n\n\tinit: function ( Parent, ractive, options ) { return configure$1( 'init', Parent, ractive, options ); },\n\n\treset: function ( ractive ) {\n\t\treturn order.filter( function ( c ) {\n\t\t\treturn c.reset && c.reset( ractive );\n\t\t}).map( function ( c ) { return c.name; } );\n\t},\n\n\t// this defines the order. TODO this isn't used anywhere in the codebase,\n\t// only in the test suite - should get rid of it\n\torder: order\n};\n\nfunction configure$1 ( method, Parent, target, options ) {\n\tdeprecate( options );\n\n\tfor ( var key in options ) {\n\t\tif ( isStandardKey.hasOwnProperty( key ) ) {\n\t\t\tvar value = options[ key ];\n\n\t\t\t// warn the developer if they passed a function and ignore its value\n\n\t\t\t// NOTE: we allow some functions on \"el\" because we duck type element lists\n\t\t\t// and some libraries or ef'ed-up virtual browsers (phantomJS) return a\n\t\t\t// function object as the result of querySelector methods\n\t\t\tif ( key !== 'el' && typeof value === 'function' ) {\n\t\t\t\twarnIfDebug( (\"\" + key + \" is a Ractive option that does not expect a function and will be ignored\"),\n\t\t\t\t\tmethod === 'init' ? target : null );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget[ key ] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t// disallow combination of `append` and `enhance`\n\tif ( options.append && options.enhance ) {\n\t\tthrow new Error( 'Cannot use append and enhance at the same time' );\n\t}\n\n\tregistries.forEach( function ( registry ) {\n\t\tregistry[ method ]( Parent, target, options );\n\t});\n\n\tadaptConfigurator[ method ]( Parent, target, options );\n\ttemplateConfigurator[ method ]( Parent, target, options );\n\tcssConfigurator[ method ]( Parent, target, options );\n\n\textendOtherMethods( Parent.prototype, target, options );\n}\n\nfunction extendOtherMethods ( parent, target, options ) {\n\tfor ( var key in options ) {\n\t\tif ( !isBlacklisted[ key ] && options.hasOwnProperty( key ) ) {\n\t\t\tvar member = options[ key ];\n\n\t\t\t// if this is a method that overwrites a method, wrap it:\n\t\t\tif ( typeof member === 'function' ) {\n\t\t\t\tmember = wrap( parent, key, member );\n\t\t\t}\n\n\t\t\ttarget[ key ] = member;\n\t\t}\n\t}\n}\n\nfunction makeObj ( array ) {\n\tvar obj = {};\n\tarray.forEach( function ( x ) { return obj[x] = true; } );\n\treturn obj;\n}\n\nvar shouldRerender = [ 'template', 'partials', 'components', 'decorators', 'events' ];\n\nvar completeHook$1 = new Hook( 'complete' );\nvar resetHook = new Hook( 'reset' );\nvar renderHook$1 = new Hook( 'render' );\nvar unrenderHook = new Hook( 'unrender' );\n\nfunction Ractive$reset ( data ) {\n\tdata = data || {};\n\n\tif ( typeof data !== 'object' ) {\n\t\tthrow new Error( 'The reset method takes either no arguments, or an object containing new data' );\n\t}\n\n\t// TEMP need to tidy this up\n\tdata = dataConfigurator.init( this.constructor, this, { data: data });\n\n\tvar promise = runloop.start( this, true );\n\n\t// If the root object is wrapped, try and use the wrapper's reset value\n\tvar wrapper = this.viewmodel.wrapper;\n\tif ( wrapper && wrapper.reset ) {\n\t\tif ( wrapper.reset( data ) === false ) {\n\t\t\t// reset was rejected, we need to replace the object\n\t\t\tthis.viewmodel.set( data );\n\t\t}\n\t} else {\n\t\tthis.viewmodel.set( data );\n\t}\n\n\t// reset config items and track if need to rerender\n\tvar changes = config.reset( this );\n\tvar rerender;\n\n\tvar i = changes.length;\n\twhile ( i-- ) {\n\t\tif ( shouldRerender.indexOf( changes[i] ) > -1 ) {\n\t\t\trerender = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif ( rerender ) {\n\t\tunrenderHook.fire( this );\n\t\tthis.fragment.resetTemplate( this.template );\n\t\trenderHook$1.fire( this );\n\t\tcompleteHook$1.fire( this );\n\t}\n\n\trunloop.end();\n\n\tresetHook.fire( this, data );\n\n\treturn promise;\n}\n\nfunction collect( source, name, attr, dest ) {\n\tsource.forEach( function ( item ) {\n\t\t// queue to rerender if the item is a partial and the current name matches\n\t\tif ( item.type === PARTIAL && ( item.refName ===  name || item.name === name ) ) {\n\t\t\titem.inAttribute = attr;\n\t\t\tdest.push( item );\n\t\t\treturn; // go no further\n\t\t}\n\n\t\t// if it has a fragment, process its items\n\t\tif ( item.fragment ) {\n\t\t\tcollect( item.fragment.iterations || item.fragment.items, name, attr, dest );\n\t\t}\n\n\t\t// or if it is itself a fragment, process its items\n\t\telse if ( isArray( item.items ) ) {\n\t\t\tcollect( item.items, name, attr, dest );\n\t\t}\n\n\t\t// or if it is a component, step in and process its items\n\t\telse if ( item.type === COMPONENT && item.instance ) {\n\t\t\t// ...unless the partial is shadowed\n\t\t\tif ( item.instance.partials[ name ] ) return;\n\t\t\tcollect( item.instance.fragment.items, name, attr, dest );\n\t\t}\n\n\t\t// if the item is an element, process its attributes too\n\t\tif ( item.type === ELEMENT ) {\n\t\t\tif ( isArray( item.attributes ) ) {\n\t\t\t\tcollect( item.attributes, name, true, dest );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction forceResetTemplate$1 ( partial ) {\n\tpartial.forceResetTemplate();\n}\n\nvar resetPartial = function ( name, partial ) {\n\tvar collection = [];\n\tcollect( this.fragment.items, name, false, collection );\n\n\tvar promise = runloop.start( this, true );\n\n\tthis.partials[ name ] = partial;\n\tcollection.forEach( forceResetTemplate$1 );\n\n\trunloop.end();\n\n\treturn promise;\n};\n\nvar Item = function Item ( options ) {\n\tthis.parentFragment = options.parentFragment;\n\tthis.ractive = options.parentFragment.ractive;\n\n\tthis.template = options.template;\n\tthis.index = options.index;\n\tthis.type = options.template.t;\n\n\tthis.dirty = false;\n};\n\nItem.prototype.bubble = function bubble () {\n\tif ( !this.dirty ) {\n\t\tthis.dirty = true;\n\t\tthis.parentFragment.bubble();\n\t}\n};\n\nItem.prototype.destroyed = function destroyed () {};\n\nItem.prototype.find = function find () {\n\treturn null;\n};\n\nItem.prototype.findAll = function findAll () {\n\t// noop\n};\n\nItem.prototype.findComponent = function findComponent () {\n\treturn null;\n};\n\nItem.prototype.findAllComponents = function findAllComponents () {\n\t// noop;\n};\n\nItem.prototype.findNextNode = function findNextNode () {\n\treturn this.parentFragment.findNextNode( this );\n};\n\nItem.prototype.shuffled = function shuffled () {\n\tif ( this.fragment ) this.fragment.shuffled();\n};\n\nItem.prototype.valueOf = function valueOf () {\n\treturn this.toString();\n};\n\nvar ComputationChild = (function (Model$$1) {\n\tfunction ComputationChild () {\n\t\tModel$$1.apply(this, arguments);\n\t}\n\n\tComputationChild.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\tComputationChild.prototype.constructor = ComputationChild;\n\n\tComputationChild.prototype.get = function get ( shouldCapture ) {\n\t\tif ( shouldCapture ) capture( this );\n\n\t\tvar parentValue = this.parent.get();\n\t\treturn parentValue ? parentValue[ this.key ] : undefined;\n\t};\n\n\tComputationChild.prototype.handleChange = function handleChange$1 () {\n\t\tthis.dirty = true;\n\n\t\tthis.deps.forEach( handleChange$1$1 );\n\t\tthis.children.forEach( handleChange$1$1 );\n\t\tthis.clearUnresolveds(); // TODO is this necessary?\n\t};\n\n\tComputationChild.prototype.joinKey = function joinKey ( key ) {\n\t\tif ( key === undefined || key === '' ) return this;\n\n\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\tvar child = new ComputationChild( this, key );\n\t\t\tthis.children.push( child );\n\t\t\tthis.childByKey[ key ] = child;\n\t\t}\n\n\t\treturn this.childByKey[ key ];\n\t};\n\n\treturn ComputationChild;\n}(Model));\n\nfunction createResolver ( proxy, ref, index ) {\n\tvar resolver = proxy.fragment.resolve( ref, function ( model ) {\n\t\tremoveFromArray( proxy.resolvers, resolver );\n\t\tproxy.models[ index ] = model;\n\t\tproxy.bubble();\n\t});\n\n\tproxy.resolvers.push( resolver );\n}\n\nvar ExpressionProxy = (function (Model$$1) {\n\tfunction ExpressionProxy ( fragment, template ) {\n\t\tvar this$1 = this;\n\n\t\tModel$$1.call( this, fragment.ractive.viewmodel, null );\n\n\t\tthis.fragment = fragment;\n\t\tthis.template = template;\n\n\t\tthis.isReadonly = true;\n\t\tthis.dirty = true;\n\n\t\tthis.fn = getFunction( template.s, template.r.length );\n\n\t\tthis.resolvers = [];\n\t\tthis.models = this.template.r.map( function ( ref, index ) {\n\t\t\tvar model = resolveReference( this$1.fragment, ref );\n\n\t\t\tif ( !model ) {\n\t\t\t\tcreateResolver( this$1, ref, index );\n\t\t\t}\n\n\t\t\treturn model;\n\t\t});\n\n\t\tthis.shuffle = undefined;\n\n\t\tthis.bubble();\n\t}\n\n\tExpressionProxy.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\tExpressionProxy.prototype.constructor = ExpressionProxy;\n\n\tExpressionProxy.prototype.bubble = function bubble ( actuallyChanged ) {\n\t\t// refresh the keypath\n\t\tif ( actuallyChanged === void 0 ) actuallyChanged = true;\n\n\t\tif ( this.registered ) delete this.root.expressions[ this.keypath ];\n\t\tthis.keypath = undefined;\n\n\t\tif ( actuallyChanged ) {\n\t\t\tthis.dirty = true;\n\t\t\tthis.handleChange();\n\t\t}\n\t};\n\n\tExpressionProxy.prototype.get = function get ( shouldCapture ) {\n\t\tif ( shouldCapture ) capture( this );\n\n\t\tif ( this.dirty ) {\n\t\t\tthis.dirty = false;\n\t\t\tthis.value = this.getValue();\n\t\t\tthis.adapt();\n\t\t}\n\n\t\treturn shouldCapture && this.wrapper ? this.wrapper.value : this.value;\n\t};\n\n\tExpressionProxy.prototype.getKeypath = function getKeypath () {\n\t\tvar this$1 = this;\n\n\t\tif ( !this.template ) return '@undefined';\n\t\tif ( !this.keypath ) {\n\t\t\tthis.keypath = '@' + this.template.s.replace( /_(\\d+)/g, function ( match, i ) {\n\t\t\t\tif ( i >= this$1.models.length ) return match;\n\n\t\t\t\tvar model = this$1.models[i];\n\t\t\t\treturn model ? model.getKeypath() : '@undefined';\n\t\t\t});\n\n\t\t\tthis.root.expressions[ this.keypath ] = this;\n\t\t\tthis.registered = true;\n\t\t}\n\n\t\treturn this.keypath;\n\t};\n\n\tExpressionProxy.prototype.getValue = function getValue () {\n\t\tvar this$1 = this;\n\n\t\tstartCapturing();\n\t\tvar result;\n\n\t\ttry {\n\t\t\tvar params = this.models.map( function ( m ) { return m ? m.get( true ) : undefined; } );\n\t\t\tresult = this.fn.apply( this.fragment.ractive, params );\n\t\t} catch ( err ) {\n\t\t\twarnIfDebug( (\"Failed to compute \" + (this.getKeypath()) + \": \" + (err.message || err)) );\n\t\t}\n\n\t\tvar dependencies = stopCapturing();\n\t\tif ( this.dependencies ) this.dependencies.forEach( function ( d ) { return d.unregister( this$1 ); } );\n\t\tthis.dependencies = dependencies;\n\t\tthis.dependencies.forEach( function ( d ) { return d.register( this$1 ); } );\n\n\t\treturn result;\n\t};\n\n\tExpressionProxy.prototype.handleChange = function handleChange$1 () {\n\t\tthis.dirty = true;\n\n\t\tthis.links.forEach( marked );\n\t\tthis.deps.forEach( handleChange$1$1 );\n\t\tthis.children.forEach( handleChange$1$1 );\n\n\t\tthis.clearUnresolveds();\n\t};\n\n\tExpressionProxy.prototype.joinKey = function joinKey ( key ) {\n\t\tif ( key === undefined || key === '' ) return this;\n\n\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\tvar child = new ComputationChild( this, key );\n\t\t\tthis.children.push( child );\n\t\t\tthis.childByKey[ key ] = child;\n\t\t}\n\n\t\treturn this.childByKey[ key ];\n\t};\n\n\tExpressionProxy.prototype.mark = function mark () {\n\t\tthis.handleChange();\n\t};\n\n\tExpressionProxy.prototype.rebinding = function rebinding ( next, previous, safe ) {\n\t\tvar idx = this.models.indexOf( previous );\n\n\t\tif ( ~idx ) {\n\t\t\tnext = rebindMatch( this.template.r[idx], next, previous );\n\t\t\tif ( next !== previous ) {\n\t\t\t\tprevious.unregister( this );\n\t\t\t\tthis.models.splice( idx, 1, next );\n\t\t\t\t// TODO: set up a resolver if there is no next?\n\t\t\t\tif ( next ) next.addShuffleRegister( this, 'mark' );\n\t\t\t}\n\t\t}\n\t\tthis.bubble( !safe );\n\t};\n\n\tExpressionProxy.prototype.retrieve = function retrieve () {\n\t\treturn this.get();\n\t};\n\n\tExpressionProxy.prototype.teardown = function teardown () {\n\t\tvar this$1 = this;\n\n\t\tthis.unbind();\n\t\tthis.fragment = undefined;\n\t\tif ( this.dependencies ) this.dependencies.forEach( function ( d ) { return d.unregister( this$1 ); } );\n\t\tModel$$1.prototype.teardown.call(this);\n\t};\n\n\tExpressionProxy.prototype.unregister = function unregister( dep ) {\n\t\tModel$$1.prototype.unregister.call( this, dep );\n\t\tif ( !this.deps.length ) this.teardown();\n\t};\n\n\tExpressionProxy.prototype.unbind = function unbind$1 () {\n\t\tthis.resolvers.forEach( unbind$1$1 );\n\t};\n\n\treturn ExpressionProxy;\n}(Model));\n\nvar ReferenceExpressionChild = (function (Model$$1) {\n\tfunction ReferenceExpressionChild ( parent, key ) {\n\t\tModel$$1.call ( this, parent, key );\n\t}\n\n\tReferenceExpressionChild.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\tReferenceExpressionChild.prototype.constructor = ReferenceExpressionChild;\n\n\tReferenceExpressionChild.prototype.applyValue = function applyValue ( value ) {\n\t\tif ( isEqual( value, this.value ) ) return;\n\n\t\tvar parent = this.parent, keys = [ this.key ];\n\t\twhile ( parent ) {\n\t\t\tif ( parent.base ) {\n\t\t\t\tvar target = parent.model.joinAll( keys );\n\t\t\t\ttarget.applyValue( value );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tkeys.unshift( parent.key );\n\n\t\t\tparent = parent.parent;\n\t\t}\n\t};\n\n\tReferenceExpressionChild.prototype.joinKey = function joinKey ( key ) {\n\t\tif ( key === undefined || key === '' ) return this;\n\n\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\tvar child = new ReferenceExpressionChild( this, key );\n\t\t\tthis.children.push( child );\n\t\t\tthis.childByKey[ key ] = child;\n\t\t}\n\n\t\treturn this.childByKey[ key ];\n\t};\n\n\tReferenceExpressionChild.prototype.retrieve = function retrieve () {\n\t\tvar parent = this.parent.get();\n\t\treturn parent && this.key in parent ? parent[ this.key ] : undefined;\n\t};\n\n\treturn ReferenceExpressionChild;\n}(Model));\n\nvar ReferenceExpressionProxy = (function (Model$$1) {\n\tfunction ReferenceExpressionProxy ( fragment, template ) {\n\t\tvar this$1 = this;\n\n\t\tModel$$1.call( this, null, null );\n\t\tthis.dirty = true;\n\t\tthis.root = fragment.ractive.viewmodel;\n\t\tthis.template = template;\n\n\t\tthis.resolvers = [];\n\n\t\tthis.base = resolve$3( fragment, template );\n\t\tvar baseResolver;\n\n\t\tif ( !this.base ) {\n\t\t\tbaseResolver = fragment.resolve( template.r, function ( model ) {\n\t\t\t\tthis$1.base = model;\n\t\t\t\tthis$1.bubble();\n\n\t\t\t\tremoveFromArray( this$1.resolvers, baseResolver );\n\t\t\t});\n\n\t\t\tthis.resolvers.push( baseResolver );\n\t\t}\n\n\t\tvar intermediary = this.intermediary = {\n\t\t\thandleChange: function () { return this$1.handleChange(); },\n\t\t\trebinding: function ( next, previous ) {\n\t\t\t\tif ( previous === this$1.base ) {\n\t\t\t\t\tnext = rebindMatch( template, next, previous );\n\t\t\t\t\tif ( next !== this$1.base ) {\n\t\t\t\t\t\tthis$1.base.unregister( intermediary );\n\t\t\t\t\t\tthis$1.base = next;\n\t\t\t\t\t\t// TODO: if there is no next, set up a resolver?\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar idx = this$1.members.indexOf( previous );\n\t\t\t\t\tif ( ~idx ) {\n\t\t\t\t\t\t// only direct references will rebind... expressions handle themselves\n\t\t\t\t\t\tnext = rebindMatch( template.m[idx].n, next, previous );\n\t\t\t\t\t\tif ( next !== this$1.members[idx] ) {\n\t\t\t\t\t\t\tthis$1.members.splice( idx, 1, next );\n\t\t\t\t\t\t\t// TODO: if there is no next, set up a resolver?\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( next !== previous ) previous.unregister( intermediary );\n\t\t\t\tif ( next ) next.addShuffleTask( function () { return next.register( intermediary ); } );\n\n\t\t\t\tthis$1.bubble();\n\t\t\t}\n\t\t};\n\n\t\tthis.members = template.m.map( function ( template, i ) {\n\t\t\tif ( typeof template === 'string' ) {\n\t\t\t\treturn { get: function () { return template; } };\n\t\t\t}\n\n\t\t\tvar model;\n\t\t\tvar resolver;\n\n\t\t\tif ( template.t === REFERENCE ) {\n\t\t\t\tmodel = resolveReference( fragment, template.n );\n\n\t\t\t\tif ( model ) {\n\t\t\t\t\tmodel.register( intermediary );\n\t\t\t\t} else {\n\t\t\t\t\tresolver = fragment.resolve( template.n, function ( model ) {\n\t\t\t\t\t\tthis$1.members[i] = model;\n\n\t\t\t\t\t\tmodel.register( intermediary );\n\t\t\t\t\t\tthis$1.handleChange();\n\n\t\t\t\t\t\tremoveFromArray( this$1.resolvers, resolver );\n\t\t\t\t\t});\n\n\t\t\t\t\tthis$1.resolvers.push( resolver );\n\t\t\t\t}\n\n\t\t\t\treturn model;\n\t\t\t}\n\n\t\t\tmodel = new ExpressionProxy( fragment, template );\n\t\t\tmodel.register( intermediary );\n\t\t\treturn model;\n\t\t});\n\n\t\tthis.isUnresolved = true;\n\t\tthis.bubble();\n\t}\n\n\tReferenceExpressionProxy.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\tReferenceExpressionProxy.prototype.constructor = ReferenceExpressionProxy;\n\n\tReferenceExpressionProxy.prototype.bubble = function bubble () {\n\t\tif ( !this.base ) return;\n\t\tif ( !this.dirty ) this.handleChange();\n\t};\n\n\tReferenceExpressionProxy.prototype.forceResolution = function forceResolution () {\n\t\tthis.resolvers.forEach( function ( resolver ) { return resolver.forceResolution(); } );\n\t\tthis.dirty = true;\n\t\tthis.bubble();\n\t};\n\n\tReferenceExpressionProxy.prototype.get = function get ( shouldCapture ) {\n\t\tvar this$1 = this;\n\n\t\tif ( this.dirty ) {\n\t\t\tthis.bubble();\n\n\t\t\tvar i = this.members.length, resolved = true;\n\t\t\twhile ( resolved && i-- ) {\n\t\t\t\tif ( !this$1.members[i] ) resolved = false;\n\t\t\t}\n\n\t\t\tif ( this.base && resolved ) {\n\t\t\t\tvar keys = this.members.map( function ( m ) { return escapeKey( String( m.get() ) ); } );\n\t\t\t\tvar model = this.base.joinAll( keys );\n\n\t\t\t\tif ( model !== this.model ) {\n\t\t\t\t\tif ( this.model ) {\n\t\t\t\t\t\tthis.model.unregister( this );\n\t\t\t\t\t\tthis.model.unregisterTwowayBinding( this );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model = model;\n\t\t\t\t\tthis.parent = model.parent;\n\t\t\t\t\tthis.model.register( this );\n\t\t\t\t\tthis.model.registerTwowayBinding( this );\n\n\t\t\t\t\tif ( this.keypathModel ) this.keypathModel.handleChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.value = this.model ? this.model.get( shouldCapture ) : undefined;\n\t\t\tthis.dirty = false;\n\t\t\tthis.mark();\n\t\t\treturn this.value;\n\t\t} else {\n\t\t\treturn this.model ? this.model.get( shouldCapture ) : undefined;\n\t\t}\n\t};\n\n\t// indirect two-way bindings\n\tReferenceExpressionProxy.prototype.getValue = function getValue () {\n\t\tvar this$1 = this;\n\n\t\tthis.value = this.model ? this.model.get() : undefined;\n\n\t\tvar i = this.bindings.length;\n\t\twhile ( i-- ) {\n\t\t\tvar value = this$1.bindings[i].getValue();\n\t\t\tif ( value !== this$1.value ) return value;\n\t\t}\n\n\t\t// check one-way bindings\n\t\tvar oneway = findBoundValue( this.deps );\n\t\tif ( oneway ) return oneway.value;\n\n\t\treturn this.value;\n\t};\n\n\tReferenceExpressionProxy.prototype.getKeypath = function getKeypath () {\n\t\treturn this.model ? this.model.getKeypath() : '@undefined';\n\t};\n\n\tReferenceExpressionProxy.prototype.handleChange = function handleChange$1 () {\n\t\tthis.dirty = true;\n\t\tthis.mark();\n\t};\n\n\tReferenceExpressionProxy.prototype.joinKey = function joinKey ( key ) {\n\t\tif ( key === undefined || key === '' ) return this;\n\n\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\tvar child = new ReferenceExpressionChild( this, key );\n\t\t\tthis.children.push( child );\n\t\t\tthis.childByKey[ key ] = child;\n\t\t}\n\n\t\treturn this.childByKey[ key ];\n\t};\n\n\tReferenceExpressionProxy.prototype.mark = function mark$1 () {\n\t\tif ( this.dirty ) {\n\t\t\tthis.deps.forEach( handleChange$1$1 );\n\t\t}\n\n\t\tthis.links.forEach( marked );\n\t\tthis.children.forEach( mark$1$1 );\n\t\tthis.clearUnresolveds();\n\t};\n\n\tReferenceExpressionProxy.prototype.retrieve = function retrieve () {\n\t\treturn this.value;\n\t};\n\n\tReferenceExpressionProxy.prototype.rebinding = function rebinding () { }; // NOOP\n\n\tReferenceExpressionProxy.prototype.set = function set ( value ) {\n\t\tif ( !this.model ) throw new Error( 'Unresolved reference expression. This should not happen!' );\n\t\tthis.model.set( value );\n\t};\n\n\tReferenceExpressionProxy.prototype.unbind = function unbind$1 () {\n\t\tthis.resolvers.forEach( unbind$1$1 );\n\t\tif ( this.model ) {\n\t\t\tthis.model.unregister( this );\n\t\t\tthis.model.unregisterTwowayBinding( this );\n\t\t}\n\t};\n\n\treturn ReferenceExpressionProxy;\n}(Model));\n\nfunction resolve$3 ( fragment, template ) {\n\tif ( template.r ) {\n\t\treturn resolveReference( fragment, template.r );\n\t}\n\n\telse if ( template.x ) {\n\t\treturn new ExpressionProxy( fragment, template.x );\n\t}\n\n\telse if ( template.rx ) {\n\t\treturn new ReferenceExpressionProxy( fragment, template.rx );\n\t}\n}\n\nfunction resolveAliases( section ) {\n\tif ( section.template.z ) {\n\t\tsection.aliases = {};\n\n\t\tvar refs = section.template.z;\n\t\tfor ( var i = 0; i < refs.length; i++ ) {\n\t\t\tsection.aliases[ refs[i].n ] = resolve$3( section.parentFragment, refs[i].x );\n\t\t}\n\t}\n}\n\nvar Alias = (function (Item$$1) {\n\tfunction Alias ( options ) {\n\t\tItem$$1.call( this, options );\n\n\t\tthis.fragment = null;\n\t}\n\n\tAlias.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\tAlias.prototype.constructor = Alias;\n\n\tAlias.prototype.bind = function bind () {\n\t\tresolveAliases( this );\n\n\t\tthis.fragment = new Fragment({\n\t\t\towner: this,\n\t\t\ttemplate: this.template.f\n\t\t}).bind();\n\t};\n\n\tAlias.prototype.detach = function detach () {\n\t\treturn this.fragment ? this.fragment.detach() : createDocumentFragment();\n\t};\n\n\tAlias.prototype.find = function find ( selector ) {\n\t\tif ( this.fragment ) {\n\t\t\treturn this.fragment.find( selector );\n\t\t}\n\t};\n\n\tAlias.prototype.findAll = function findAll ( selector, query ) {\n\t\tif ( this.fragment ) {\n\t\t\tthis.fragment.findAll( selector, query );\n\t\t}\n\t};\n\n\tAlias.prototype.findComponent = function findComponent ( name ) {\n\t\tif ( this.fragment ) {\n\t\t\treturn this.fragment.findComponent( name );\n\t\t}\n\t};\n\n\tAlias.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\tif ( this.fragment ) {\n\t\t\tthis.fragment.findAllComponents( name, query );\n\t\t}\n\t};\n\n\tAlias.prototype.firstNode = function firstNode ( skipParent ) {\n\t\treturn this.fragment && this.fragment.firstNode( skipParent );\n\t};\n\n\tAlias.prototype.rebinding = function rebinding () {\n\t\tvar this$1 = this;\n\n\t\tif ( this.locked ) return;\n\t\tthis.locked = true;\n\t\trunloop.scheduleTask( function () {\n\t\t\tthis$1.locked = false;\n\t\t\tresolveAliases( this$1 );\n\t\t});\n\t};\n\n\tAlias.prototype.render = function render ( target ) {\n\t\tthis.rendered = true;\n\t\tif ( this.fragment ) this.fragment.render( target );\n\t};\n\n\tAlias.prototype.toString = function toString ( escape ) {\n\t\treturn this.fragment ? this.fragment.toString( escape ) : '';\n\t};\n\n\tAlias.prototype.unbind = function unbind () {\n\t\tthis.aliases = {};\n\t\tif ( this.fragment ) this.fragment.unbind();\n\t};\n\n\tAlias.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\tif ( this.rendered && this.fragment ) this.fragment.unrender( shouldDestroy );\n\t\tthis.rendered = false;\n\t};\n\n\tAlias.prototype.update = function update () {\n\t\tif ( this.dirty ) {\n\t\t\tthis.dirty = false;\n\t\t\tthis.fragment.update();\n\t\t}\n\t};\n\n\treturn Alias;\n}(Item));\n\nfunction findElement( start, orComponent ) {\n\tif ( orComponent === void 0 ) orComponent = true;\n\n\twhile ( start && start.type !== ELEMENT && ( !orComponent || start.type !== COMPONENT ) ) {\n\t\tif ( start.owner ) start = start.owner;\n\t\telse if ( start.component ) start = start.component.parentFragment;\n\t\telse if ( start.parent ) start = start.parent;\n\t\telse if ( start.parentFragment ) start = start.parentFragment;\n\t\telse start = undefined;\n\t}\n\n\treturn start;\n}\n\nvar camelCase = function ( hyphenatedStr ) {\n\treturn hyphenatedStr.replace( /-([a-zA-Z])/g, function ( match, $1 ) {\n\t\treturn $1.toUpperCase();\n\t});\n};\n\nvar space = /\\s+/;\nvar specials$2 = { 'float': 'cssFloat' };\nvar remove$1 = /\\/\\*(?:[\\s\\S]*?)\\*\\//g;\nvar escape = /url\\(\\s*(['\"])(?:\\\\[\\s\\S]|(?!\\1).)*\\1\\s*\\)|url\\((?:\\\\[\\s\\S]|[^)])*\\)|(['\"])(?:\\\\[\\s\\S]|(?!\\1).)*\\2/gi;\nvar value = /\\0(\\d+)/g;\n\nfunction readStyle ( css ) {\n    var values = [];\n\n    if ( typeof css !== 'string' ) return {};\n\n    return css.replace( escape, function ( match ) { return (\"\\u0000\" + (values.push( match ) - 1)); })\n        .replace( remove$1, '' )\n        .split( ';' )\n        .filter( function ( rule ) { return !!rule.trim(); } )\n        .map( function ( rule ) { return rule.replace( value, function ( match, n ) { return values[ n ]; } ); } )\n        .reduce(function ( rules, rule ) {\n            var i = rule.indexOf(':');\n            var name = camelCase( rule.substr( 0, i ).trim() );\n            rules[ specials$2[ name ] || name ] = rule.substr( i + 1 ).trim();\n            return rules;\n        }, {});\n}\n\nfunction readClass ( str ) {\n  var list = str.split( space );\n\n  // remove any empty entries\n  var i = list.length;\n  while ( i-- ) {\n    if ( !list[i] ) list.splice( i, 1 );\n  }\n\n  return list;\n}\n\nvar textTypes = [ undefined, 'text', 'search', 'url', 'email', 'hidden', 'password', 'search', 'reset', 'submit' ];\n\nfunction getUpdateDelegate ( attribute ) {\n\tvar element = attribute.element, name = attribute.name;\n\n\tif ( name === 'id' ) return updateId;\n\n\tif ( name === 'value' ) {\n\t\tif ( attribute.interpolator ) attribute.interpolator.bound = true;\n\n\t\t// special case - selects\n\t\tif ( element.name === 'select' && name === 'value' ) {\n\t\t\treturn element.getAttribute( 'multiple' ) ? updateMultipleSelectValue : updateSelectValue;\n\t\t}\n\n\t\tif ( element.name === 'textarea' ) return updateStringValue;\n\n\t\t// special case - contenteditable\n\t\tif ( element.getAttribute( 'contenteditable' ) != null ) return updateContentEditableValue;\n\n\t\t// special case - <input>\n\t\tif ( element.name === 'input' ) {\n\t\t\tvar type = element.getAttribute( 'type' );\n\n\t\t\t// type='file' value='{{fileList}}'>\n\t\t\tif ( type === 'file' ) return noop; // read-only\n\n\t\t\t// type='radio' name='{{twoway}}'\n\t\t\tif ( type === 'radio' && element.binding && element.binding.attribute.name === 'name' ) return updateRadioValue;\n\n\t\t\tif ( ~textTypes.indexOf( type ) ) return updateStringValue;\n\t\t}\n\n\t\treturn updateValue;\n\t}\n\n\tvar node = element.node;\n\n\t// special case - <input type='radio' name='{{twoway}}' value='foo'>\n\tif ( attribute.isTwoway && name === 'name' ) {\n\t\tif ( node.type === 'radio' ) return updateRadioName;\n\t\tif ( node.type === 'checkbox' ) return updateCheckboxName;\n\t}\n\n\tif ( name === 'style' ) return updateStyleAttribute;\n\n\tif ( name.indexOf( 'style-' ) === 0 ) return updateInlineStyle;\n\n\t// special case - class names. IE fucks things up, again\n\tif ( name === 'class' && ( !node.namespaceURI || node.namespaceURI === html ) ) return updateClassName;\n\n\tif ( name.indexOf( 'class-' ) === 0 ) return updateInlineClass;\n\n\tif ( attribute.isBoolean ) {\n\t\tvar type$1 = element.getAttribute( 'type' );\n\t\tif ( attribute.interpolator && name === 'checked' && ( type$1 === 'checkbox' || type$1 === 'radio' ) ) attribute.interpolator.bound = true;\n\t\treturn updateBoolean;\n\t}\n\n\tif ( attribute.namespace && attribute.namespace !== attribute.node.namespaceURI ) return updateNamespacedAttribute;\n\n\treturn updateAttribute;\n}\n\nfunction updateId ( reset ) {\n\tvar ref = this, node = ref.node;\n\tvar value = this.getValue();\n\n\t// remove the mapping to this node if it hasn't already been replaced\n\tif ( this.ractive.nodes[ node.id ] === node ) delete this.ractive.nodes[ node.id ];\n\tif ( reset ) return node.removeAttribute( 'id' );\n\n\tthis.ractive.nodes[ value ] = node;\n\n\tnode.id = value;\n}\n\nfunction updateMultipleSelectValue ( reset ) {\n\tvar value = this.getValue();\n\n\tif ( !isArray( value ) ) value = [ value ];\n\n\tvar options = this.node.options;\n\tvar i = options.length;\n\n\tif ( reset ) {\n\t\twhile ( i-- ) options[i].selected = false;\n\t} else {\n\t\twhile ( i-- ) {\n\t\t\tvar option = options[i];\n\t\t\tvar optionValue = option._ractive ?\n\t\t\t\toption._ractive.value :\n\t\t\t\toption.value; // options inserted via a triple don't have _ractive\n\n\t\t\toption.selected = arrayContains( value, optionValue );\n\t\t}\n\t}\n}\n\nfunction updateSelectValue ( reset ) {\n\tvar value = this.getValue();\n\n\tif ( !this.locked ) { // TODO is locked still a thing?\n\t\tthis.node._ractive.value = value;\n\n\t\tvar options = this.node.options;\n\t\tvar i = options.length;\n\t\tvar wasSelected = false;\n\n\t\tif ( reset ) {\n\t\t\twhile ( i-- ) options[i].selected = false;\n\t\t} else {\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar option = options[i];\n\t\t\t\tvar optionValue = option._ractive ?\n\t\t\t\t\toption._ractive.value :\n\t\t\t\t\toption.value; // options inserted via a triple don't have _ractive\n\t\t\t\tif ( option.disabled && option.selected ) wasSelected = true;\n\n\t\t\t\tif ( optionValue == value ) { // double equals as we may be comparing numbers with strings\n\t\t\t\t\toption.selected = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( !wasSelected ) this.node.selectedIndex = -1;\n\t}\n}\n\n\nfunction updateContentEditableValue ( reset ) {\n\tvar value = this.getValue();\n\n\tif ( !this.locked ) {\n\t\tif ( reset ) this.node.innerHTML = '';\n\t\telse this.node.innerHTML = value === undefined ? '' : value;\n\t}\n}\n\nfunction updateRadioValue ( reset ) {\n\tvar node = this.node;\n\tvar wasChecked = node.checked;\n\n\tvar value = this.getValue();\n\n\tif ( reset ) return node.checked = false;\n\n\t//node.value = this.element.getAttribute( 'value' );\n\tnode.value = this.node._ractive.value = value;\n\tnode.checked = value === this.element.getAttribute( 'name' );\n\n\t// This is a special case - if the input was checked, and the value\n\t// changed so that it's no longer checked, the twoway binding is\n\t// most likely out of date. To fix it we have to jump through some\n\t// hoops... this is a little kludgy but it works\n\tif ( wasChecked && !node.checked && this.element.binding && this.element.binding.rendered ) {\n\t\tthis.element.binding.group.model.set( this.element.binding.group.getValue() );\n\t}\n}\n\nfunction updateValue ( reset ) {\n\tif ( !this.locked ) {\n\t\tif ( reset ) {\n\t\t\tthis.node.removeAttribute( 'value' );\n\t\t\tthis.node.value = this.node._ractive.value = null;\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = this.getValue();\n\n\t\tthis.node.value = this.node._ractive.value = value;\n\t\tthis.node.setAttribute( 'value', value );\n\t}\n}\n\nfunction updateStringValue ( reset ) {\n\tif ( !this.locked ) {\n\t\tif ( reset ) {\n\t\t\tthis.node._ractive.value = '';\n\t\t\tthis.node.removeAttribute( 'value' );\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = this.getValue();\n\n\t\tthis.node._ractive.value = value;\n\n\t\tthis.node.value = safeToStringValue( value );\n\t\tthis.node.setAttribute( 'value', safeToStringValue( value ) );\n\t}\n}\n\nfunction updateRadioName ( reset ) {\n\tif ( reset ) this.node.checked = false;\n\telse this.node.checked = ( this.getValue() == this.node._ractive.value );\n}\n\nfunction updateCheckboxName ( reset ) {\n\tvar ref = this, element = ref.element, node = ref.node;\n\tvar binding = element.binding;\n\n\tvar value = this.getValue();\n\tvar valueAttribute = element.getAttribute( 'value' );\n\n\tif ( reset ) {\n\t\t// TODO: WAT?\n\t}\n\n\tif ( !isArray( value ) ) {\n\t\tbinding.isChecked = node.checked = ( value == valueAttribute );\n\t} else {\n\t\tvar i = value.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( valueAttribute == value[i] ) {\n\t\t\t\tbinding.isChecked = node.checked = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tbinding.isChecked = node.checked = false;\n\t}\n}\n\nfunction updateStyleAttribute ( reset ) {\n\tvar props = reset ? {} : readStyle( this.getValue() || '' );\n\tvar style = this.node.style;\n\tvar keys = Object.keys( props );\n\tvar prev = this.previous || [];\n\n\tvar i = 0;\n\twhile ( i < keys.length ) {\n\t\tif ( keys[i] in style ) style[ keys[i] ] = props[ keys[i] ];\n\t\ti++;\n\t}\n\n\t// remove now-missing attrs\n\ti = prev.length;\n\twhile ( i-- ) {\n\t\tif ( !~keys.indexOf( prev[i] ) && prev[i] in style ) style[ prev[i] ] = '';\n\t}\n\n\tthis.previous = keys;\n}\n\nfunction updateInlineStyle ( reset ) {\n\tif ( !this.styleName ) {\n\t\tthis.styleName = camelize( this.name.substr( 6 ) );\n\t}\n\n\tthis.node.style[ this.styleName ] = reset ? '' : this.getValue();\n}\n\nfunction updateClassName ( reset ) {\n\tvar value = reset ? [] : readClass( safeToStringValue( this.getValue() ) );\n\tvar attr = readClass( this.node.className );\n\tvar prev = this.previous || attr.slice( 0 );\n\n\tvar i = 0;\n\twhile ( i < value.length ) {\n\t\tif ( !~attr.indexOf( value[i] ) ) attr.push( value[i] );\n\t\ti++;\n\t}\n\n\t// remove now-missing classes\n\ti = prev.length;\n\twhile ( i-- ) {\n\t\tif ( !~value.indexOf( prev[i] ) ) {\n\t\t\tvar idx = attr.indexOf( prev[i] );\n\t\t\tif ( ~idx ) attr.splice( idx, 1 );\n\t\t}\n\t}\n\n\tvar className = attr.join( ' ' );\n\n\tif ( className !== this.node.className ) {\n\t\tthis.node.className = className;\n\t}\n\n\tthis.previous = value;\n}\n\nfunction updateInlineClass ( reset ) {\n\tvar name = this.name.substr( 6 );\n\tvar attr = readClass( this.node.className );\n\tvar value = reset ? false : this.getValue();\n\n\tif ( !this.inlineClass ) this.inlineClass = name;\n\n\tif ( value && !~attr.indexOf( name ) ) attr.push( name );\n\telse if ( !value && ~attr.indexOf( name ) ) attr.splice( attr.indexOf( name ), 1 );\n\n\tthis.node.className = attr.join( ' ' );\n}\n\nfunction updateBoolean ( reset ) {\n\t// with two-way binding, only update if the change wasn't initiated by the user\n\t// otherwise the cursor will often be sent to the wrong place\n\tif ( !this.locked ) {\n\t\tif ( reset ) {\n\t\t\tif ( this.useProperty ) this.node[ this.propertyName ] = false;\n\t\t\tthis.node.removeAttribute( this.propertyName );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.useProperty ) {\n\t\t\tthis.node[ this.propertyName ] = this.getValue();\n\t\t} else {\n\t\t\tif ( this.getValue() ) {\n\t\t\t\tthis.node.setAttribute( this.propertyName, '' );\n\t\t\t} else {\n\t\t\t\tthis.node.removeAttribute( this.propertyName );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction updateAttribute ( reset ) {\n\tif ( reset ) this.node.removeAttribute( this.name );\n\telse this.node.setAttribute( this.name, safeToStringValue( this.getString() ) );\n}\n\nfunction updateNamespacedAttribute ( reset ) {\n\tif ( reset ) this.node.removeAttributeNS( this.namespace, this.name.slice( this.name.indexOf( ':' ) + 1 ) );\n\telse this.node.setAttributeNS( this.namespace, this.name.slice( this.name.indexOf( ':' ) + 1 ), safeToStringValue( this.getString() ) );\n}\n\nvar propertyNames = {\n\t'accept-charset': 'acceptCharset',\n\taccesskey: 'accessKey',\n\tbgcolor: 'bgColor',\n\t'class': 'className',\n\tcodebase: 'codeBase',\n\tcolspan: 'colSpan',\n\tcontenteditable: 'contentEditable',\n\tdatetime: 'dateTime',\n\tdirname: 'dirName',\n\t'for': 'htmlFor',\n\t'http-equiv': 'httpEquiv',\n\tismap: 'isMap',\n\tmaxlength: 'maxLength',\n\tnovalidate: 'noValidate',\n\tpubdate: 'pubDate',\n\treadonly: 'readOnly',\n\trowspan: 'rowSpan',\n\ttabindex: 'tabIndex',\n\tusemap: 'useMap'\n};\n\nfunction lookupNamespace ( node, prefix ) {\n\tvar qualified = \"xmlns:\" + prefix;\n\n\twhile ( node ) {\n\t\tif ( node.hasAttribute && node.hasAttribute( qualified ) ) return node.getAttribute( qualified );\n\t\tnode = node.parentNode;\n\t}\n\n\treturn namespaces[ prefix ];\n}\n\nvar Attribute = (function (Item$$1) {\n\tfunction Attribute ( options ) {\n\t\tItem$$1.call( this, options );\n\n\t\tthis.name = options.template.n;\n\t\tthis.namespace = null;\n\n\t\tthis.owner = options.owner || options.parentFragment.owner || options.element || findElement( options.parentFragment );\n\t\tthis.element = options.element || (this.owner.attributeByName ? this.owner : findElement( options.parentFragment ) );\n\t\tthis.parentFragment = options.parentFragment; // shared\n\t\tthis.ractive = this.parentFragment.ractive;\n\n\t\tthis.rendered = false;\n\t\tthis.updateDelegate = null;\n\t\tthis.fragment = null;\n\n\t\tthis.element.attributeByName[ this.name ] = this;\n\n\t\tif ( !isArray( options.template.f ) ) {\n\t\t\tthis.value = options.template.f;\n\t\t\tif ( this.value === 0 ) {\n\t\t\t\tthis.value = '';\n\t\t\t}\n\t\t} else {\n\t\t\tthis.fragment = new Fragment({\n\t\t\t\towner: this,\n\t\t\t\ttemplate: options.template.f\n\t\t\t});\n\t\t}\n\n\t\tthis.interpolator = this.fragment &&\n\t\t\tthis.fragment.items.length === 1 &&\n\t\t\tthis.fragment.items[0].type === INTERPOLATOR &&\n\t\t\tthis.fragment.items[0];\n\n\t\tif ( this.interpolator ) this.interpolator.owner = this;\n\t}\n\n\tAttribute.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\tAttribute.prototype.constructor = Attribute;\n\n\tAttribute.prototype.bind = function bind () {\n\t\tif ( this.fragment ) {\n\t\t\tthis.fragment.bind();\n\t\t}\n\t};\n\n\tAttribute.prototype.bubble = function bubble () {\n\t\tif ( !this.dirty ) {\n\t\t\tthis.parentFragment.bubble();\n\t\t\tthis.element.bubble();\n\t\t\tthis.dirty = true;\n\t\t}\n\t};\n\n\tAttribute.prototype.destroyed = function destroyed () {\n\t\tthis.updateDelegate( true );\n\t};\n\n\tAttribute.prototype.getString = function getString () {\n\t\treturn this.fragment ?\n\t\t\tthis.fragment.toString() :\n\t\t\tthis.value != null ? '' + this.value : '';\n\t};\n\n\t// TODO could getValue ever be called for a static attribute,\n\t// or can we assume that this.fragment exists?\n\tAttribute.prototype.getValue = function getValue () {\n\t\treturn this.fragment ? this.fragment.valueOf() : booleanAttributes.test( this.name ) ? true : this.value;\n\t};\n\n\tAttribute.prototype.render = function render () {\n\t\tvar node = this.element.node;\n\t\tthis.node = node;\n\n\t\t// should we use direct property access, or setAttribute?\n\t\tif ( !node.namespaceURI || node.namespaceURI === namespaces.html ) {\n\t\t\tthis.propertyName = propertyNames[ this.name ] || this.name;\n\n\t\t\tif ( node[ this.propertyName ] !== undefined ) {\n\t\t\t\tthis.useProperty = true;\n\t\t\t}\n\n\t\t\t// is attribute a boolean attribute or 'value'? If so we're better off doing e.g.\n\t\t\t// node.selected = true rather than node.setAttribute( 'selected', '' )\n\t\t\tif ( booleanAttributes.test( this.name ) || this.isTwoway ) {\n\t\t\t\tthis.isBoolean = true;\n\t\t\t}\n\n\t\t\tif ( this.propertyName === 'value' ) {\n\t\t\t\tnode._ractive.value = this.value;\n\t\t\t}\n\t\t}\n\n\t\tif ( node.namespaceURI ) {\n\t\t\tvar index = this.name.indexOf( ':' );\n\t\t\tif ( index !== -1 ) {\n\t\t\t\tthis.namespace = lookupNamespace( node, this.name.slice( 0, index ) );\n\t\t\t} else {\n\t\t\t\tthis.namespace = node.namespaceURI;\n\t\t\t}\n\t\t}\n\n\t\tthis.rendered = true;\n\t\tthis.updateDelegate = getUpdateDelegate( this );\n\t\tthis.updateDelegate();\n\t};\n\n\tAttribute.prototype.toString = function toString () {\n\t\tvar value = this.getValue();\n\n\t\t// Special case - select and textarea values (should not be stringified)\n\t\tif ( this.name === 'value' && ( this.element.getAttribute( 'contenteditable' ) !== undefined || ( this.element.name === 'select' || this.element.name === 'textarea' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Special case – bound radio `name` attributes\n\t\tif ( this.name === 'name' && this.element.name === 'input' && this.interpolator && this.element.getAttribute( 'type' ) === 'radio' ) {\n\t\t\treturn (\"name=\\\"{{\" + (this.interpolator.model.getKeypath()) + \"}}\\\"\");\n\t\t}\n\n\t\t// Special case - style and class attributes and directives\n\t\tif ( this.owner === this.element && ( this.name === 'style' || this.name === 'class' || this.styleName || this.inlineClass ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( booleanAttributes.test( this.name ) ) return value ? this.name : '';\n\t\tif ( value == null ) return '';\n\n\t\tvar str = safeAttributeString( this.getString() );\n\t\treturn str ?\n\t\t\t(\"\" + (this.name) + \"=\\\"\" + str + \"\\\"\") :\n\t\t\tthis.name;\n\t};\n\n\tAttribute.prototype.unbind = function unbind () {\n\t\tif ( this.fragment ) this.fragment.unbind();\n\t};\n\n\tAttribute.prototype.unrender = function unrender () {\n\t\tthis.updateDelegate( true );\n\n\t\tthis.rendered = false;\n\t};\n\n\tAttribute.prototype.update = function update () {\n\t\tif ( this.dirty ) {\n\t\t\tthis.dirty = false;\n\t\t\tif ( this.fragment ) this.fragment.update();\n\t\t\tif ( this.rendered ) this.updateDelegate();\n\t\t\tif ( this.isTwoway && !this.locked ) {\n\t\t\t\tthis.interpolator.twowayBinding.lastVal( true, this.interpolator.model.get() );\n\t\t\t}\n\t\t}\n\t};\n\n\treturn Attribute;\n}(Item));\n\nvar BindingFlag = (function (Item$$1) {\n\tfunction BindingFlag ( options ) {\n\t\tItem$$1.call( this, options );\n\n\t\tthis.owner = options.owner || options.parentFragment.owner || findElement( options.parentFragment );\n\t\tthis.element = this.owner.attributeByName ? this.owner : findElement( options.parentFragment );\n\t\tthis.flag = options.template.v === 'l' ? 'lazy' : 'twoway';\n\n\t\tif ( this.element.type === ELEMENT ) {\n\t\t\tif ( isArray( options.template.f ) ) {\n\t\t\t\tthis.fragment = new Fragment({\n\t\t\t\t\towner: this,\n\t\t\t\t\ttemplate: options.template.f\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.interpolator = this.fragment &&\n\t\t\t\t\t\t\t\tthis.fragment.items.length === 1 &&\n\t\t\t\t\t\t\t\tthis.fragment.items[0].type === INTERPOLATOR &&\n\t\t\t\t\t\t\t\tthis.fragment.items[0];\n\t\t}\n\t}\n\n\tBindingFlag.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\tBindingFlag.prototype.constructor = BindingFlag;\n\n\tBindingFlag.prototype.bind = function bind () {\n\t\tif ( this.fragment ) this.fragment.bind();\n\t\tset$3( this, this.getValue(), true );\n\t};\n\n\tBindingFlag.prototype.bubble = function bubble () {\n\t\tif ( !this.dirty ) {\n\t\t\tthis.element.bubble();\n\t\t\tthis.dirty = true;\n\t\t}\n\t};\n\n\tBindingFlag.prototype.getValue = function getValue () {\n\t\tif ( this.fragment ) return this.fragment.valueOf();\n\t\telse if ( 'value' in this ) return this.value;\n\t\telse if ( 'f' in this.template ) return this.template.f;\n\t\telse return true;\n\t};\n\n\tBindingFlag.prototype.render = function render () {\n\t\tset$3( this, this.getValue(), true );\n\t};\n\n\tBindingFlag.prototype.toString = function toString () { return ''; };\n\n\tBindingFlag.prototype.unbind = function unbind () {\n\t\tif ( this.fragment ) this.fragment.unbind();\n\n\t\tdelete this.element[ this.flag ];\n\t};\n\n\tBindingFlag.prototype.unrender = function unrender () {\n\t\tif ( this.element.rendered ) this.element.recreateTwowayBinding();\n\t};\n\n\tBindingFlag.prototype.update = function update () {\n\t\tif ( this.dirty ) {\n\t\t\tif ( this.fragment ) this.fragment.update();\n\t\t\tset$3( this, this.getValue(), true );\n\t\t}\n\t};\n\n\treturn BindingFlag;\n}(Item));\n\nfunction set$3 ( flag, value, update ) {\n\tif ( value === 0 ) {\n\t\tflag.value = true;\n\t} else if ( value === 'true' ) {\n\t\tflag.value = true;\n\t} else if ( value === 'false' || value === '0' ) {\n\t\tflag.value = false;\n\t} else {\n\t\tflag.value = value;\n\t}\n\n\tvar current = flag.element[ flag.flag ];\n\tflag.element[ flag.flag ] = flag.value;\n\tif ( update && !flag.element.attributes.binding && current !== flag.value ) {\n\t\tflag.element.recreateTwowayBinding();\n\t}\n\n\treturn flag.value;\n}\n\nvar div$1 = doc ? createElement( 'div' ) : null;\n\nvar attributes = false;\nfunction inAttributes() { return attributes; }\nfunction doInAttributes( fn ) {\n\tattributes = true;\n\tfn();\n\tattributes = false;\n}\n\nvar ConditionalAttribute = (function (Item$$1) {\n\tfunction ConditionalAttribute ( options ) {\n\t\tItem$$1.call( this, options );\n\n\t\tthis.attributes = [];\n\n\t\tthis.owner = options.owner;\n\n\t\tthis.fragment = new Fragment({\n\t\t\tractive: this.ractive,\n\t\t\towner: this,\n\t\t\ttemplate: this.template\n\t\t});\n\t\t// this fragment can't participate in node-y things\n\t\tthis.fragment.findNextNode = noop;\n\n\t\tthis.dirty = false;\n\t}\n\n\tConditionalAttribute.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\tConditionalAttribute.prototype.constructor = ConditionalAttribute;\n\n\tConditionalAttribute.prototype.bind = function bind () {\n\t\tthis.fragment.bind();\n\t};\n\n\tConditionalAttribute.prototype.bubble = function bubble () {\n\t\tif ( !this.dirty ) {\n\t\t\tthis.dirty = true;\n\t\t\tthis.owner.bubble();\n\t\t}\n\t};\n\n\tConditionalAttribute.prototype.render = function render () {\n\t\tthis.node = this.owner.node;\n\t\tif ( this.node ) {\n\t\t\tthis.isSvg = this.node.namespaceURI === svg$1;\n\t\t}\n\n\t\tattributes = true;\n\t\tif ( !this.rendered ) this.fragment.render();\n\t\tattributes = false;\n\n\t\tthis.rendered = true;\n\t\tthis.dirty = true; // TODO this seems hacky, but necessary for tests to pass in browser AND node.js\n\t\tthis.update();\n\t};\n\n\tConditionalAttribute.prototype.toString = function toString () {\n\t\treturn this.fragment.toString();\n\t};\n\n\tConditionalAttribute.prototype.unbind = function unbind () {\n\t\tthis.fragment.unbind();\n\t};\n\n\tConditionalAttribute.prototype.unrender = function unrender () {\n\t\tthis.rendered = false;\n\t\tthis.fragment.unrender();\n\t};\n\n\tConditionalAttribute.prototype.update = function update () {\n\t\tvar this$1 = this;\n\n\t\tvar str;\n\t\tvar attrs;\n\n\t\tif ( this.dirty ) {\n\t\t\tthis.dirty = false;\n\n\t\t\tattributes = true;\n\t\t\tthis.fragment.update();\n\t\t\tattributes = false;\n\n\t\t\tif ( this.rendered && this.node ) {\n\t\t\t\tstr = this.fragment.toString();\n\t\t\t\tattrs = parseAttributes( str, this.isSvg );\n\n\t\t\t\t// any attributes that previously existed but no longer do\n\t\t\t\t// must be removed\n\t\t\t\tthis.attributes.filter( function ( a ) { return notIn( attrs, a ); } ).forEach( function ( a ) {\n\t\t\t\t\tthis$1.node.removeAttribute( a.name );\n\t\t\t\t});\n\n\t\t\t\tattrs.forEach( function ( a ) {\n\t\t\t\t\tthis$1.node.setAttribute( a.name, a.value );\n\t\t\t\t});\n\n\t\t\t\tthis.attributes = attrs;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn ConditionalAttribute;\n}(Item));\n\nfunction parseAttributes ( str, isSvg ) {\n\tvar tagName = isSvg ? 'svg' : 'div';\n\treturn str\n\t\t? (div$1.innerHTML = \"<\" + tagName + \" \" + str + \"></\" + tagName + \">\") &&\n\t\t\ttoArray(div$1.childNodes[0].attributes)\n\t\t: [];\n}\n\nfunction notIn ( haystack, needle ) {\n\tvar i = haystack.length;\n\n\twhile ( i-- ) {\n\t\tif ( haystack[i].name === needle.name ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nvar processWrapper = function ( wrapper, array, methodName, newIndices ) {\n\tvar __model = wrapper.__model;\n\n\tif ( newIndices ) {\n\t\t__model.shuffle( newIndices );\n\t} else {\n\t\t// If this is a sort or reverse, we just do root.set()...\n\t\t// TODO use merge logic?\n\t\t//root.viewmodel.mark( keypath );\n\t}\n};\n\nvar mutatorMethods = [ 'pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift' ];\nvar patchedArrayProto = [];\n\nmutatorMethods.forEach( function ( methodName ) {\n\tvar method = function () {\n\t\tvar this$1 = this;\n\t\tvar args = [], len = arguments.length;\n\t\twhile ( len-- ) args[ len ] = arguments[ len ];\n\n\t\tvar newIndices = getNewIndices( this.length, methodName, args );\n\n\t\t// lock any magic array wrappers, so that things don't get fudged\n\t\tthis._ractive.wrappers.forEach( function ( r ) { if ( r.magic ) r.magic.locked = true; } );\n\n\t\t// apply the underlying method\n\t\tvar result = Array.prototype[ methodName ].apply( this, arguments );\n\n\t\t// trigger changes\n\t\trunloop.start();\n\n\t\tthis._ractive.setting = true;\n\t\tvar i = this._ractive.wrappers.length;\n\t\twhile ( i-- ) {\n\t\t\tprocessWrapper( this$1._ractive.wrappers[i], this$1, methodName, newIndices );\n\t\t}\n\n\t\trunloop.end();\n\n\t\tthis._ractive.setting = false;\n\n\t\t// unlock the magic arrays... magic... bah\n\t\tthis._ractive.wrappers.forEach( function ( r ) { if ( r.magic ) r.magic.locked = false; } );\n\n\t\treturn result;\n\t};\n\n\tdefineProperty( patchedArrayProto, methodName, {\n\t\tvalue: method\n\t});\n});\n\nvar patchArrayMethods;\nvar unpatchArrayMethods;\n\n// can we use prototype chain injection?\n// http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/#wrappers_prototype_chain_injection\nif ( ({}).__proto__ ) {\n\t// yes, we can\n\tpatchArrayMethods = function ( array ) { return array.__proto__ = patchedArrayProto; };\n\tunpatchArrayMethods = function ( array ) { return array.__proto__ = Array.prototype; };\n}\n\nelse {\n\t// no, we can't\n\tpatchArrayMethods = function ( array ) {\n\t\tvar i = mutatorMethods.length;\n\t\twhile ( i-- ) {\n\t\t\tvar methodName = mutatorMethods[i];\n\t\t\tdefineProperty( array, methodName, {\n\t\t\t\tvalue: patchedArrayProto[ methodName ],\n\t\t\t\tconfigurable: true\n\t\t\t});\n\t\t}\n\t};\n\n\tunpatchArrayMethods = function ( array ) {\n\t\tvar i = mutatorMethods.length;\n\t\twhile ( i-- ) {\n\t\t\tdelete array[ mutatorMethods[i] ];\n\t\t}\n\t};\n}\n\npatchArrayMethods.unpatch = unpatchArrayMethods; // TODO export separately?\nvar patch = patchArrayMethods;\n\nvar errorMessage$1 = 'Something went wrong in a rather interesting way';\n\nvar arrayAdaptor = {\n\tfilter: function ( object ) {\n\t\t// wrap the array if a) b) it's an array, and b) either it hasn't been wrapped already,\n\t\t// or the array didn't trigger the get() itself\n\t\treturn isArray( object ) && ( !object._ractive || !object._ractive.setting );\n\t},\n\twrap: function ( ractive, array, keypath ) {\n\t\treturn new ArrayWrapper( ractive, array, keypath );\n\t}\n};\n\nvar ArrayWrapper = function ArrayWrapper ( ractive, array ) {\n\tthis.root = ractive;\n\tthis.value = array;\n\tthis.__model = null; // filled in later\n\n\t// if this array hasn't already been ractified, ractify it\n\tif ( !array._ractive ) {\n\t\t// define a non-enumerable _ractive property to store the wrappers\n\t\tdefineProperty( array, '_ractive', {\n\t\t\tvalue: {\n\t\t\t\twrappers: [],\n\t\t\t\tinstances: [],\n\t\t\t\tsetting: false\n\t\t\t},\n\t\t\tconfigurable: true\n\t\t});\n\n\t\tpatch( array );\n\t}\n\n\t// store the ractive instance, so we can handle transitions later\n\tif ( !array._ractive.instances[ ractive._guid ] ) {\n\t\tarray._ractive.instances[ ractive._guid ] = 0;\n\t\tarray._ractive.instances.push( ractive );\n\t}\n\n\tarray._ractive.instances[ ractive._guid ] += 1;\n\tarray._ractive.wrappers.push( this );\n};\n\nArrayWrapper.prototype.get = function get () {\n\treturn this.value;\n};\n\nArrayWrapper.prototype.reset = function reset ( value ) {\n\treturn this.value === value;\n};\n\nArrayWrapper.prototype.teardown = function teardown () {\n\tvar array, storage, wrappers, instances, index;\n\n\tarray = this.value;\n\tstorage = array._ractive;\n\twrappers = storage.wrappers;\n\tinstances = storage.instances;\n\n\t// if teardown() was invoked because we're clearing the cache as a result of\n\t// a change that the array itself triggered, we can save ourselves the teardown\n\t// and immediate setup\n\tif ( storage.setting ) {\n\t\treturn false; // so that we don't remove it from cached wrappers\n\t}\n\n\tindex = wrappers.indexOf( this );\n\tif ( index === -1 ) {\n\t\tthrow new Error( errorMessage$1 );\n\t}\n\n\twrappers.splice( index, 1 );\n\n\t// if nothing else depends on this array, we can revert it to its\n\t// natural state\n\tif ( !wrappers.length ) {\n\t\tdelete array._ractive;\n\t\tpatch.unpatch( this.value );\n\t}\n\n\telse {\n\t\t// remove ractive instance if possible\n\t\tinstances[ this.root._guid ] -= 1;\n\t\tif ( !instances[ this.root._guid ] ) {\n\t\t\tindex = instances.indexOf( this.root );\n\n\t\t\tif ( index === -1 ) {\n\t\t\t\tthrow new Error( errorMessage$1 );\n\t\t\t}\n\n\t\t\tinstances.splice( index, 1 );\n\t\t}\n\t}\n};\n\nvar magicAdaptor;\n\ntry {\n\tObject.defineProperty({}, 'test', { get: function() {}, set: function() {} });\n\n\tmagicAdaptor = {\n\t\tfilter: function ( value ) {\n\t\t\treturn value && typeof value === 'object';\n\t\t},\n\t\twrap: function ( ractive, value, keypath ) {\n\t\t\treturn new MagicWrapper( ractive, value, keypath );\n\t\t}\n\t};\n} catch ( err ) {\n\tmagicAdaptor = false;\n}\n\nvar magicAdaptor$1 = magicAdaptor;\n\nfunction createOrWrapDescriptor ( originalDescriptor, ractive, keypath, wrapper ) {\n\tif ( originalDescriptor.set && originalDescriptor.set.__magic ) {\n\t\toriginalDescriptor.set.__magic.dependants.push({ ractive: ractive, keypath: keypath });\n\t\treturn originalDescriptor;\n\t}\n\n\tvar setting;\n\n\tvar dependants = [{ ractive: ractive, keypath: keypath }];\n\n\tvar descriptor = {\n\t\tget: function () {\n\t\t\treturn 'value' in originalDescriptor ? originalDescriptor.value : originalDescriptor.get.call( this );\n\t\t},\n\t\tset: function (value) {\n\t\t\tif ( setting ) return;\n\n\t\t\tif ( 'value' in originalDescriptor ) {\n\t\t\t\toriginalDescriptor.value = value;\n\t\t\t} else {\n\t\t\t\toriginalDescriptor.set.call( this, value );\n\t\t\t}\n\n\t\t\tif ( wrapper.locked ) return;\n\t\t\tsetting = true;\n\t\t\tdependants.forEach( function (ref) {\n\t\t\t\tvar ractive = ref.ractive;\n\t\t\t\tvar keypath = ref.keypath;\n\n\t\t\t\tractive.set( keypath, value );\n\t\t\t});\n\t\t\tsetting = false;\n\t\t},\n\t\tenumerable: true\n\t};\n\n\tdescriptor.set.__magic = { dependants: dependants, originalDescriptor: originalDescriptor };\n\n\treturn descriptor;\n}\n\nfunction revert ( descriptor, ractive, keypath ) {\n\tif ( !descriptor.set || !descriptor.set.__magic ) return true;\n\n\tvar dependants = descriptor.set.__magic;\n\tvar i = dependants.length;\n\twhile ( i-- ) {\n\t\tvar dependant = dependants[i];\n\t\tif ( dependant.ractive === ractive && dependant.keypath === keypath ) {\n\t\t\tdependants.splice( i, 1 );\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nvar MagicWrapper = function MagicWrapper ( ractive, value, keypath ) {\n\tvar this$1 = this;\n\n\t\tthis.ractive = ractive;\n\tthis.value = value;\n\tthis.keypath = keypath;\n\n\tthis.originalDescriptors = {};\n\n\t// wrap all properties with getters\n\tObject.keys( value ).forEach( function ( key ) {\n\t\tvar originalDescriptor = Object.getOwnPropertyDescriptor( this$1.value, key );\n\t\tthis$1.originalDescriptors[ key ] = originalDescriptor;\n\n\t\tvar childKeypath = keypath ? (\"\" + keypath + \".\" + (escapeKey( key ))) : escapeKey( key );\n\n\t\tvar descriptor = createOrWrapDescriptor( originalDescriptor, ractive, childKeypath, this$1 );\n\n\n\n\t\tObject.defineProperty( this$1.value, key, descriptor );\n\t});\n};\n\nMagicWrapper.prototype.get = function get () {\n\treturn this.value;\n};\n\nMagicWrapper.prototype.reset = function reset ( value ) {\n\treturn this.value === value;\n};\n\nMagicWrapper.prototype.set = function set ( key, value ) {\n\tthis.value[ key ] = value;\n};\n\nMagicWrapper.prototype.teardown = function teardown () {\n\tvar this$1 = this;\n\n\t\tObject.keys( this.value ).forEach( function ( key ) {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor( this$1.value, key );\n\t\tif ( !descriptor.set || !descriptor.set.__magic ) return;\n\n\t\trevert( descriptor );\n\n\t\tif ( descriptor.set.__magic.dependants.length === 1 ) {\n\t\t\tObject.defineProperty( this$1.value, key, descriptor.set.__magic.originalDescriptor );\n\t\t}\n\t});\n};\n\nvar MagicArrayWrapper = function MagicArrayWrapper ( ractive, array, keypath ) {\n\tthis.value = array;\n\n\tthis.magic = true;\n\n\tthis.magicWrapper = magicAdaptor$1.wrap( ractive, array, keypath );\n\tthis.arrayWrapper = arrayAdaptor.wrap( ractive, array, keypath );\n\tthis.arrayWrapper.magic = this.magicWrapper;\n\n\t// ugh, this really is a terrible hack\n\tObject.defineProperty( this, '__model', {\n\t\tget: function () {\n\t\t\treturn this.arrayWrapper.__model;\n\t\t},\n\t\tset: function ( model ) {\n\t\t\tthis.arrayWrapper.__model = model;\n\t\t}\n\t});\n};\n\nMagicArrayWrapper.prototype.get = function get () {\n\treturn this.value;\n};\n\nMagicArrayWrapper.prototype.teardown = function teardown () {\n\tthis.arrayWrapper.teardown();\n\tthis.magicWrapper.teardown();\n};\n\nMagicArrayWrapper.prototype.reset = function reset ( value ) {\n\treturn this.arrayWrapper.reset( value ) && this.magicWrapper.reset( value );\n};\n\nvar magicArrayAdaptor = {\n\tfilter: function ( object, keypath, ractive ) {\n\t\treturn magicAdaptor$1.filter( object, keypath, ractive ) && arrayAdaptor.filter( object );\n\t},\n\n\twrap: function ( ractive, array, keypath ) {\n\t\treturn new MagicArrayWrapper( ractive, array, keypath );\n\t}\n};\n\n/* global console */\n\n// TODO this is probably a bit anal, maybe we should leave it out\nfunction prettify ( fnBody ) {\n\tvar lines = fnBody\n\t\t.replace( /^\\t+/gm, function ( tabs ) { return tabs.split( '\\t' ).join( '  ' ); } )\n\t\t.split( '\\n' );\n\n\tvar minIndent = lines.length < 2 ? 0 :\n\t\tlines.slice( 1 ).reduce( function ( prev, line ) {\n\t\t\treturn Math.min( prev, /^\\s*/.exec( line )[0].length );\n\t\t}, Infinity );\n\n\treturn lines.map( function ( line, i ) {\n\t\treturn '    ' + ( i ? line.substring( minIndent ) : line );\n\t}).join( '\\n' );\n}\n\n// Ditto. This function truncates the stack to only include app code\nfunction truncateStack ( stack ) {\n\tif ( !stack ) return '';\n\n\tvar lines = stack.split( '\\n' );\n\tvar name = Computation.name + '.getValue';\n\n\tvar truncated = [];\n\n\tvar len = lines.length;\n\tfor ( var i = 1; i < len; i += 1 ) {\n\t\tvar line = lines[i];\n\n\t\tif ( ~line.indexOf( name ) ) {\n\t\t\treturn truncated.join( '\\n' );\n\t\t} else {\n\t\t\ttruncated.push( line );\n\t\t}\n\t}\n}\n\nvar Computation = (function (Model$$1) {\n\tfunction Computation ( viewmodel, signature, key ) {\n\t\tModel$$1.call( this, null, null );\n\n\t\tthis.root = this.parent = viewmodel;\n\t\tthis.signature = signature;\n\n\t\tthis.key = key; // not actually used, but helps with debugging\n\t\tthis.isExpression = key && key[0] === '@';\n\n\t\tthis.isReadonly = !this.signature.setter;\n\n\t\tthis.context = viewmodel.computationContext;\n\n\t\tthis.dependencies = [];\n\n\t\tthis.children = [];\n\t\tthis.childByKey = {};\n\n\t\tthis.deps = [];\n\n\t\tthis.dirty = true;\n\n\t\t// TODO: is there a less hackish way to do this?\n\t\tthis.shuffle = undefined;\n\t}\n\n\tComputation.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\tComputation.prototype.constructor = Computation;\n\n\tComputation.prototype.get = function get ( shouldCapture ) {\n\t\tif ( shouldCapture ) capture( this );\n\n\t\tif ( this.dirty ) {\n\t\t\tthis.dirty = false;\n\t\t\tthis.value = this.getValue();\n\t\t\tthis.adapt();\n\t\t}\n\n\t\t// if capturing, this value needs to be unwrapped because it's for external use\n\t\treturn shouldCapture && this.wrapper ? this.wrapper.value : this.value;\n\t};\n\n\tComputation.prototype.getValue = function getValue () {\n\t\tstartCapturing();\n\t\tvar result;\n\n\t\ttry {\n\t\t\tresult = this.signature.getter.call( this.context );\n\t\t} catch ( err ) {\n\t\t\twarnIfDebug( (\"Failed to compute \" + (this.getKeypath()) + \": \" + (err.message || err)) );\n\n\t\t\t// TODO this is all well and good in Chrome, but...\n\t\t\t// ...also, should encapsulate this stuff better, and only\n\t\t\t// show it if Ractive.DEBUG\n\t\t\tif ( hasConsole ) {\n\t\t\t\tif ( console.groupCollapsed ) console.groupCollapsed( '%cshow details', 'color: rgb(82, 140, 224); font-weight: normal; text-decoration: underline;' );\n\t\t\t\tvar functionBody = prettify( this.signature.getterString );\n\t\t\t\tvar stack = this.signature.getterUseStack ? '\\n\\n' + truncateStack( err.stack ) : '';\n\t\t\t\tconsole.error( (\"\" + (err.name) + \": \" + (err.message) + \"\\n\\n\" + functionBody + \"\" + stack) );\n\t\t\t\tif ( console.groupCollapsed ) console.groupEnd();\n\t\t\t}\n\t\t}\n\n\t\tvar dependencies = stopCapturing();\n\t\tthis.setDependencies( dependencies );\n\n\t\treturn result;\n\t};\n\n\tComputation.prototype.handleChange = function handleChange$1 () {\n\t\tthis.dirty = true;\n\n\t\tthis.links.forEach( marked );\n\t\tthis.deps.forEach( handleChange$1$1 );\n\t\tthis.children.forEach( handleChange$1$1 );\n\t\tthis.clearUnresolveds(); // TODO same question as on Model - necessary for primitives?\n\t};\n\n\tComputation.prototype.joinKey = function joinKey ( key ) {\n\t\tif ( key === undefined || key === '' ) return this;\n\n\t\tif ( !this.childByKey.hasOwnProperty( key ) ) {\n\t\t\tvar child = new ComputationChild( this, key );\n\t\t\tthis.children.push( child );\n\t\t\tthis.childByKey[ key ] = child;\n\t\t}\n\n\t\treturn this.childByKey[ key ];\n\t};\n\n\tComputation.prototype.mark = function mark () {\n\t\tthis.handleChange();\n\t};\n\n\tComputation.prototype.rebinding = function rebinding ( next, previous ) {\n\t\t// computations will grab all of their deps again automagically\n\t\tif ( next !== previous ) this.handleChange();\n\t};\n\n\tComputation.prototype.set = function set ( value ) {\n\t\tif ( !this.signature.setter ) {\n\t\t\tthrow new Error( (\"Cannot set read-only computed value '\" + (this.key) + \"'\") );\n\t\t}\n\n\t\tthis.signature.setter( value );\n\t};\n\n\tComputation.prototype.setDependencies = function setDependencies ( dependencies ) {\n\t\t// unregister any soft dependencies we no longer have\n\t\tvar this$1 = this;\n\n\t\tvar i = this.dependencies.length;\n\t\twhile ( i-- ) {\n\t\t\tvar model = this$1.dependencies[i];\n\t\t\tif ( !~dependencies.indexOf( model ) ) model.unregister( this$1 );\n\t\t}\n\n\t\t// and add any new ones\n\t\ti = dependencies.length;\n\t\twhile ( i-- ) {\n\t\t\tvar model$1 = dependencies[i];\n\t\t\tif ( !~this$1.dependencies.indexOf( model$1 ) ) model$1.register( this$1 );\n\t\t}\n\n\t\tthis.dependencies = dependencies;\n\t};\n\n\tComputation.prototype.teardown = function teardown () {\n\t\tvar this$1 = this;\n\n\t\tvar i = this.dependencies.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( this$1.dependencies[i] ) this$1.dependencies[i].unregister( this$1 );\n\t\t}\n\t\tif ( this.root.computations[this.key] === this ) delete this.root.computations[this.key];\n\t\tModel$$1.prototype.teardown.call(this);\n\t};\n\n\tComputation.prototype.unregister = function unregister ( dependent ) {\n\t\tModel$$1.prototype.unregister.call( this, dependent );\n\t\t// tear down expressions with no deps, because they will be replaced when needed\n\t\tif ( this.isExpression && this.deps.length === 0 ) this.teardown();\n\t};\n\n\treturn Computation;\n}(Model));\n\nvar RactiveModel = (function (Model$$1) {\n\tfunction RactiveModel ( ractive ) {\n\t\tModel$$1.call( this, null, '' );\n\t\tthis.value = ractive;\n\t\tthis.isRoot = true;\n\t\tthis.root = this;\n\t\tthis.adaptors = [];\n\t\tthis.ractive = ractive;\n\t\tthis.changes = {};\n\t}\n\n\tRactiveModel.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\tRactiveModel.prototype.constructor = RactiveModel;\n\n\tRactiveModel.prototype.getKeypath = function getKeypath() {\n\t\treturn '@this';\n\t};\n\n\treturn RactiveModel;\n}(Model));\n\nvar hasProp$1 = Object.prototype.hasOwnProperty;\n\nvar RootModel = (function (Model$$1) {\n\tfunction RootModel ( options ) {\n\t\tModel$$1.call( this, null, null );\n\n\t\t// TODO deprecate this\n\t\tthis.changes = {};\n\n\t\tthis.isRoot = true;\n\t\tthis.root = this;\n\t\tthis.ractive = options.ractive; // TODO sever this link\n\n\t\tthis.value = options.data;\n\t\tthis.adaptors = options.adapt;\n\t\tthis.adapt();\n\n\t\tthis.computationContext = options.ractive;\n\t\tthis.computations = {};\n\n\t\t// TODO this is only for deprecation of using expression keypaths\n\t\tthis.expressions = {};\n\t}\n\n\tRootModel.prototype = Object.create( Model$$1 && Model$$1.prototype );\n\tRootModel.prototype.constructor = RootModel;\n\n\tRootModel.prototype.applyChanges = function applyChanges () {\n\t\tthis._changeHash = {};\n\t\tthis.flush();\n\n\t\treturn this._changeHash;\n\t};\n\n\tRootModel.prototype.compute = function compute ( key, signature ) {\n\t\tvar computation = new Computation( this, signature, key );\n\t\tthis.computations[ key ] = computation;\n\n\t\treturn computation;\n\t};\n\n\tRootModel.prototype.createLink = function createLink ( keypath, target, targetPath ) {\n\t\tvar this$1 = this;\n\n\t\tvar keys = splitKeypath( keypath );\n\n\t\tvar model = this;\n\t\twhile ( keys.length ) {\n\t\t\tvar key = keys.shift();\n\t\t\tmodel = this$1.childByKey[ key ] || this$1.joinKey( key );\n\t\t}\n\n\t\treturn model.link( target, targetPath );\n\t};\n\n\tRootModel.prototype.get = function get ( shouldCapture, options ) {\n\t\tvar this$1 = this;\n\n\t\tif ( shouldCapture ) capture( this );\n\n\t\tif ( !options || options.virtual !== false ) {\n\t\t\tvar result = this.getVirtual();\n\t\t\tvar keys = Object.keys( this.computations );\n\t\t\tvar i = keys.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar computation = this$1.computations[ keys[i] ];\n\t\t\t\t// exclude template expressions\n\t\t\t\tif ( !computation.isExpression ) {\n\t\t\t\t\tresult[ keys[i] ] = computation.get();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn this.value;\n\t\t}\n\t};\n\n\tRootModel.prototype.getKeypath = function getKeypath () {\n\t\treturn '';\n\t};\n\n\tRootModel.prototype.getRactiveModel = function getRactiveModel() {\n\t\treturn this.ractiveModel || ( this.ractiveModel = new RactiveModel( this.ractive ) );\n\t};\n\n\tRootModel.prototype.getValueChildren = function getValueChildren () {\n\t\tvar children = Model$$1.prototype.getValueChildren.call( this, this.value );\n\n\t\tthis.children.forEach( function ( child ) {\n\t\t\tif ( child._link ) {\n\t\t\t\tvar idx = children.indexOf( child );\n\t\t\t\tif ( ~idx ) children.splice( idx, 1, child._link );\n\t\t\t\telse children.push( child._link );\n\t\t\t}\n\t\t});\n\n\t\tfor ( var k in this.computations ) {\n\t\t\tchildren.push( this.computations[k] );\n\t\t}\n\n\t\treturn children;\n\t};\n\n\tRootModel.prototype.handleChange = function handleChange$1 () {\n\t\tthis.deps.forEach( handleChange$1$1 );\n\t};\n\n\tRootModel.prototype.has = function has ( key ) {\n\t\tvar value = this.value;\n\n\t\tkey = unescapeKey( key );\n\t\tif ( hasProp$1.call( value, key ) ) return true;\n\n\t\t// mappings/links and computations\n\t\tif ( key in this.computations || this.childByKey[key] && this.childByKey[key]._link ) return true;\n\t\t// TODO remove this after deprecation is done\n\t\tif ( key in this.expressions ) return true;\n\n\t\t// We climb up the constructor chain to find if one of them contains the key\n\t\tvar constructor = value.constructor;\n\t\twhile ( constructor !== Function && constructor !== Array && constructor !== Object ) {\n\t\t\tif ( hasProp$1.call( constructor.prototype, key ) ) return true;\n\t\t\tconstructor = constructor.constructor;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tRootModel.prototype.joinKey = function joinKey ( key, opts ) {\n\t\tif ( key === '@global' ) return GlobalModel$1;\n\t\tif ( key === '@this' ) return this.getRactiveModel();\n\n\t\tif ( this.expressions.hasOwnProperty( key ) ) {\n\t\t\twarnIfDebug( (\"Accessing expression keypaths (\" + (key.substr(1)) + \") from the instance is deprecated. You can used a getNodeInfo or event object to access keypaths with expression context.\") );\n\t\t\treturn this.expressions[ key ];\n\t\t}\n\n\t\treturn this.computations.hasOwnProperty( key ) ? this.computations[ key ] :\n\t\t       Model$$1.prototype.joinKey.call( this, key, opts );\n\t};\n\n\tRootModel.prototype.map = function map ( localKey, origin ) {\n\t\tvar local = this.joinKey( localKey );\n\t\tlocal.link( origin );\n\t};\n\n\tRootModel.prototype.rebinding = function rebinding () {\n\t};\n\n\tRootModel.prototype.set = function set ( value ) {\n\t\t// TODO wrapping root node is a baaaad idea. We should prevent this\n\t\tvar wrapper = this.wrapper;\n\t\tif ( wrapper ) {\n\t\t\tvar shouldTeardown = !wrapper.reset || wrapper.reset( value ) === false;\n\n\t\t\tif ( shouldTeardown ) {\n\t\t\t\twrapper.teardown();\n\t\t\t\tthis.wrapper = null;\n\t\t\t\tthis.value = value;\n\t\t\t\tthis.adapt();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.value = value;\n\t\t\tthis.adapt();\n\t\t}\n\n\t\tthis.deps.forEach( handleChange$1$1 );\n\t\tthis.children.forEach( mark$1$1 );\n\t\tthis.clearUnresolveds(); // TODO do we need to do this with primitive values? if not, what about e.g. unresolved `length` property of null -> string?\n\t};\n\n\tRootModel.prototype.retrieve = function retrieve () {\n\t\treturn this.value;\n\t};\n\n\tRootModel.prototype.update = function update () {\n\t\t// noop\n\t};\n\n\treturn RootModel;\n}(Model));\n\nfunction getComputationSignature ( ractive, key, signature ) {\n\tvar getter;\n\tvar setter;\n\n\t// useful for debugging\n\tvar getterString;\n\tvar getterUseStack;\n\tvar setterString;\n\n\tif ( typeof signature === 'function' ) {\n\t\tgetter = bind$1$1( signature, ractive );\n\t\tgetterString = signature.toString();\n\t\tgetterUseStack = true;\n\t}\n\n\tif ( typeof signature === 'string' ) {\n\t\tgetter = createFunctionFromString( signature, ractive );\n\t\tgetterString = signature;\n\t}\n\n\tif ( typeof signature === 'object' ) {\n\t\tif ( typeof signature.get === 'string' ) {\n\t\t\tgetter = createFunctionFromString( signature.get, ractive );\n\t\t\tgetterString = signature.get;\n\t\t} else if ( typeof signature.get === 'function' ) {\n\t\t\tgetter = bind$1$1( signature.get, ractive );\n\t\t\tgetterString = signature.get.toString();\n\t\t\tgetterUseStack = true;\n\t\t} else {\n\t\t\tfatal( '`%s` computation must have a `get()` method', key );\n\t\t}\n\n\t\tif ( typeof signature.set === 'function' ) {\n\t\t\tsetter = bind$1$1( signature.set, ractive );\n\t\t\tsetterString = signature.set.toString();\n\t\t}\n\t}\n\n\treturn {\n\t\tgetter: getter,\n\t\tsetter: setter,\n\t\tgetterString: getterString,\n\t\tsetterString: setterString,\n\t\tgetterUseStack: getterUseStack\n\t};\n}\n\nvar constructHook = new Hook( 'construct' );\n\nvar registryNames$1 = [\n\t'adaptors',\n\t'components',\n\t'decorators',\n\t'easing',\n\t'events',\n\t'interpolators',\n\t'partials',\n\t'transitions'\n];\n\nvar uid = 0;\n\nfunction construct ( ractive, options ) {\n\tif ( Ractive.DEBUG ) welcome();\n\n\tinitialiseProperties( ractive );\n\n\t// TODO remove this, eventually\n\tdefineProperty( ractive, 'data', { get: deprecateRactiveData });\n\n\t// TODO don't allow `onconstruct` with `new Ractive()`, there's no need for it\n\tconstructHook.fire( ractive, options );\n\n\t// Add registries\n\tregistryNames$1.forEach( function ( name ) {\n\t\tractive[ name ] = extend$1( create( ractive.constructor[ name ] || null ), options[ name ] );\n\t});\n\n\t// Create a viewmodel\n\tvar viewmodel = new RootModel({\n\t\tadapt: getAdaptors( ractive, ractive.adapt, options ),\n\t\tdata: dataConfigurator.init( ractive.constructor, ractive, options ),\n\t\tractive: ractive\n\t});\n\n\tractive.viewmodel = viewmodel;\n\n\t// Add computed properties\n\tvar computed = extend$1( create( ractive.constructor.prototype.computed ), options.computed );\n\n\tfor ( var key in computed ) {\n\t\tvar signature = getComputationSignature( ractive, key, computed[ key ] );\n\t\tviewmodel.compute( key, signature );\n\t}\n}\n\nfunction combine$2 ( a, b ) {\n\tvar c = a.slice();\n\tvar i = b.length;\n\n\twhile ( i-- ) {\n\t\tif ( !~c.indexOf( b[i] ) ) {\n\t\t\tc.push( b[i] );\n\t\t}\n\t}\n\n\treturn c;\n}\n\nfunction getAdaptors ( ractive, protoAdapt, options ) {\n\tprotoAdapt = protoAdapt.map( lookup );\n\tvar adapt = ensureArray( options.adapt ).map( lookup );\n\n\tadapt = combine$2( protoAdapt, adapt );\n\n\tvar magic$$1 = 'magic' in options ? options.magic : ractive.magic;\n\tvar modifyArrays = 'modifyArrays' in options ? options.modifyArrays : ractive.modifyArrays;\n\n\tif ( magic$$1 ) {\n\t\tif ( !magic ) {\n\t\t\tthrow new Error( 'Getters and setters (magic mode) are not supported in this browser' );\n\t\t}\n\n\t\tif ( modifyArrays ) {\n\t\t\tadapt.push( magicArrayAdaptor );\n\t\t}\n\n\t\tadapt.push( magicAdaptor$1 );\n\t}\n\n\tif ( modifyArrays ) {\n\t\tadapt.push( arrayAdaptor );\n\t}\n\n\treturn adapt;\n\n\n\tfunction lookup ( adaptor ) {\n\t\tif ( typeof adaptor === 'string' ) {\n\t\t\tadaptor = findInViewHierarchy( 'adaptors', ractive, adaptor );\n\n\t\t\tif ( !adaptor ) {\n\t\t\t\tfatal( missingPlugin( adaptor, 'adaptor' ) );\n\t\t\t}\n\t\t}\n\n\t\treturn adaptor;\n\t}\n}\n\nfunction initialiseProperties ( ractive ) {\n\t// Generate a unique identifier, for places where you'd use a weak map if it\n\t// existed\n\tractive._guid = 'r-' + uid++;\n\n\t// events\n\tractive._subs = create( null );\n\n\t// storage for item configuration from instantiation to reset,\n\t// like dynamic functions or original values\n\tractive._config = {};\n\n\t// nodes registry\n\tractive.nodes = {};\n\n\t// events\n\tractive.event = null;\n\tractive._eventQueue = [];\n\n\t// live queries\n\tractive._liveQueries = [];\n\tractive._liveComponentQueries = [];\n\n\t// observers\n\tractive._observers = [];\n\n\tif(!ractive.component){\n\t\tractive.root = ractive;\n\t\tractive.parent = ractive.container = null; // TODO container still applicable?\n\t}\n\n}\n\nfunction deprecateRactiveData () {\n\tthrow new Error( 'Using `ractive.data` is no longer supported - you must use the `ractive.get()` API instead' );\n}\n\nfunction getChildQueue ( queue, ractive ) {\n\treturn queue[ ractive._guid ] || ( queue[ ractive._guid ] = [] );\n}\n\nfunction fire$1 ( hookQueue, ractive ) {\n\tvar childQueue = getChildQueue( hookQueue.queue, ractive );\n\n\thookQueue.hook.fire( ractive );\n\n\t// queue is \"live\" because components can end up being\n\t// added while hooks fire on parents that modify data values.\n\twhile ( childQueue.length ) {\n\t\tfire$1( hookQueue, childQueue.shift() );\n\t}\n\n\tdelete hookQueue.queue[ ractive._guid ];\n}\n\nvar HookQueue = function HookQueue ( event ) {\n\tthis.hook = new Hook( event );\n\tthis.inProcess = {};\n\tthis.queue = {};\n};\n\nHookQueue.prototype.begin = function begin ( ractive ) {\n\tthis.inProcess[ ractive._guid ] = true;\n};\n\nHookQueue.prototype.end = function end ( ractive ) {\n\tvar parent = ractive.parent;\n\n\t// If this is *isn't* a child of a component that's in process,\n\t// it should call methods or fire at this point\n\tif ( !parent || !this.inProcess[ parent._guid ] ) {\n\t\tfire$1( this, ractive );\n\t}\n\t// elsewise, handoff to parent to fire when ready\n\telse {\n\t\tgetChildQueue( this.queue, parent ).push( ractive );\n\t}\n\n\tdelete this.inProcess[ ractive._guid ];\n};\n\nvar configHook = new Hook( 'config' );\nvar initHook = new HookQueue( 'init' );\n\nfunction initialise ( ractive, userOptions, options ) {\n\tObject.keys( ractive.viewmodel.computations ).forEach( function ( key ) {\n\t\tvar computation = ractive.viewmodel.computations[ key ];\n\n\t\tif ( ractive.viewmodel.value.hasOwnProperty( key ) ) {\n\t\t\tcomputation.set( ractive.viewmodel.value[ key ] );\n\t\t}\n\t});\n\n\t// init config from Parent and options\n\tconfig.init( ractive.constructor, ractive, userOptions );\n\n\tconfigHook.fire( ractive );\n\tinitHook.begin( ractive );\n\n\tvar fragment;\n\n\t// Render virtual DOM\n\tif ( ractive.template ) {\n\t\tvar cssIds;\n\n\t\tif ( options.cssIds || ractive.cssId ) {\n\t\t\tcssIds = options.cssIds ? options.cssIds.slice() : [];\n\n\t\t\tif ( ractive.cssId ) {\n\t\t\t\tcssIds.push( ractive.cssId );\n\t\t\t}\n\t\t}\n\n\t\tractive.fragment = fragment = new Fragment({\n\t\t\towner: ractive,\n\t\t\ttemplate: ractive.template,\n\t\t\tcssIds: cssIds\n\t\t}).bind( ractive.viewmodel );\n\t}\n\n\tinitHook.end( ractive );\n\n\tif ( fragment ) {\n\t\t// render automatically ( if `el` is specified )\n\t\tvar el = getElement( ractive.el );\n\t\tif ( el ) {\n\t\t\tvar promise = ractive.render( el, ractive.append );\n\n\t\t\tif ( Ractive.DEBUG_PROMISES ) {\n\t\t\t\tpromise['catch']( function ( err ) {\n\t\t\t\t\twarnOnceIfDebug( 'Promise debugging is enabled, to help solve errors that happen asynchronously. Some browsers will log unhandled promise rejections, in which case you can safely disable promise debugging:\\n  Ractive.DEBUG_PROMISES = false;' );\n\t\t\t\t\twarnIfDebug( 'An error happened during rendering', { ractive: ractive });\n\t\t\t\t\tlogIfDebug( err );\n\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nvar DOMEvent = function DOMEvent ( name, owner ) {\n\tif ( name.indexOf( '*' ) !== -1 ) {\n\t\tfatal( (\"Only component proxy-events may contain \\\"*\\\" wildcards, <\" + (owner.name) + \" on-\" + name + \"=\\\"...\\\"/> is not valid\") );\n\t}\n\n\tthis.name = name;\n\tthis.owner = owner;\n\tthis.node = null;\n\tthis.handler = null;\n};\n\nDOMEvent.prototype.listen = function listen ( directive ) {\n\tvar node = this.node = this.owner.node;\n\tvar name = this.name;\n\n\tif ( !( (\"on\" + name) in node ) ) {\n\t\twarnOnce( missingPlugin( name, 'events' ) );\n\t\t}\n\n\t\tnode.addEventListener( name, this.handler = function( event ) {\n\t\tdirective.fire({\n\t\t\t\tnode: node,\n\t\t\toriginal: event\n\t\t\t});\n\t\t}, false );\n};\n\nDOMEvent.prototype.unlisten = function unlisten () {\n\tthis.node.removeEventListener( this.name, this.handler, false );\n};\n\nvar CustomEvent = function CustomEvent ( eventPlugin, owner ) {\n\tthis.eventPlugin = eventPlugin;\n\tthis.owner = owner;\n\tthis.handler = null;\n};\n\nCustomEvent.prototype.listen = function listen ( directive ) {\n\tvar node = this.owner.node;\n\n\tthis.handler = this.eventPlugin( node, function ( event ) {\n\t\tif ( event === void 0 ) event = {};\n\n\t\t\tevent.node = event.node || node;\n\t\tdirective.fire( event );\n\t});\n};\n\nCustomEvent.prototype.unlisten = function unlisten () {\n\tthis.handler.teardown();\n};\n\nvar RactiveEvent = function RactiveEvent ( ractive, name ) {\n\tthis.ractive = ractive;\n\tthis.name = name;\n\tthis.handler = null;\n};\n\nRactiveEvent.prototype.listen = function listen ( directive ) {\n\tvar ractive = this.ractive;\n\n\tthis.handler = ractive.on( this.name, function () {\n\t\tvar event;\n\n\t\t// semi-weak test, but what else? tag the event obj ._isEvent ?\n\t\tif ( arguments.length && arguments[0] && arguments[0].node ) {\n\t\t\tevent = Array.prototype.shift.call( arguments );\n\t\t\tevent.component = ractive;\n\t\t}\n\n\t\tvar args = Array.prototype.slice.call( arguments );\n\t\tdirective.fire( event, args );\n\n\t\t// cancel bubbling\n\t\treturn false;\n\t});\n};\n\nRactiveEvent.prototype.unlisten = function unlisten () {\n\tthis.handler.cancel();\n};\n\nvar specialPattern = /^(event|arguments)(\\..+)?$/;\nvar dollarArgsPattern = /^\\$(\\d+)(\\..+)?$/;\n\nvar EventDirective = function EventDirective ( options ) {\n\tvar this$1 = this;\n\n\t\tthis.owner = options.owner || options.parentFragment.owner || findElement( options.parentFragment );\n\tthis.element = this.owner.attributeByName ? this.owner : findElement( options.parentFragment );\n\tthis.template = options.template;\n\tthis.parentFragment = options.parentFragment;\n\tthis.ractive = options.parentFragment.ractive;\n\n\tthis.events = [];\n\n\tif ( this.element.type === COMPONENT ) {\n\t\tthis.template.n.split( '-' ).forEach( function ( n ) {\n\t\t\tthis$1.events.push( new RactiveEvent( this$1.element.instance, n ) );\n\t\t});\n\t} else {\n\t\tthis.template.n.split( '-' ).forEach( function ( n ) {\n\t\t\tvar fn = findInViewHierarchy( 'events', this$1.ractive, n );\n\t\t\t// we need to pass in \"this\" in order to get\n\t\t\t// access to node when it is created.\n\t\t\tthis$1.events.push(fn ? new CustomEvent( fn, this$1.element ) : new DOMEvent( n, this$1.element ));\n\t\t});\n\t}\n\n\tthis.context = null;\n\n\t// method calls\n\tthis.resolvers = null;\n\tthis.models = null;\n\n\t// handler directive\n\tthis.action = null;\n\tthis.args = null;\n};\n\nEventDirective.prototype.bind = function bind () {\n\tvar this$1 = this;\n\n\t\tthis.context = this.parentFragment.findContext();\n\n\tvar template = this.template.f;\n\n\tif ( template.x ) {\n\t\tthis.fn = getFunction( template.x.s, template.x.r.length );\n\t\tthis.resolvers = [];\n\t\tthis.models = template.x.r.map( function ( ref, i ) {\n\t\t\tvar specialMatch = specialPattern.exec( ref );\n\t\t\tif ( specialMatch ) {\n\t\t\t\t// on-click=\"foo(event.node)\"\n\t\t\t\treturn {\n\t\t\t\t\tspecial: specialMatch[1],\n\t\t\t\t\tkeys: specialMatch[2] ? splitKeypath( specialMatch[2].substr(1) ) : []\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar dollarMatch = dollarArgsPattern.exec( ref );\n\t\t\tif ( dollarMatch ) {\n\t\t\t\t// on-click=\"foo($1)\"\n\t\t\t\treturn {\n\t\t\t\t\tspecial: 'arguments',\n\t\t\t\t\tkeys: [ dollarMatch[1] - 1 ].concat( dollarMatch[2] ? splitKeypath( dollarMatch[2].substr( 1 ) ) : [] )\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar resolver;\n\n\t\t\tvar model = resolveReference( this$1.parentFragment, ref );\n\t\t\tif ( !model ) {\n\t\t\t\tresolver = this$1.parentFragment.resolve( ref, function ( model ) {\n\t\t\t\t\tthis$1.models[i] = model;\n\t\t\t\t\tremoveFromArray( this$1.resolvers, resolver );\n\t\t\t\t\tmodel.register( this$1 );\n\t\t\t\t});\n\n\t\t\t\tthis$1.resolvers.push( resolver );\n\t\t\t} else model.register( this$1 );\n\n\t\t\treturn model;\n\t\t});\n\t}\n\n\telse {\n\t\t// TODO deprecate this style of directive\n\t\tthis.action = typeof template === 'string' ? // on-click='foo'\n\t\t\ttemplate :\n\t\t\ttypeof template.n === 'string' ? // on-click='{{dynamic}}'\n\t\t\t\ttemplate.n :\n\t\t\t\tnew Fragment({\n\t\t\t\t\towner: this,\n\t\t\t\t\ttemplate: template.n\n\t\t\t\t});\n\n\t\tthis.args = template.a ? // static arguments\n\t\t\t( typeof template.a === 'string' ? [ template.a ] : template.a ) :\n\t\t\ttemplate.d ? // dynamic arguments\n\t\t\t\tnew Fragment({\n\t\t\t\t\towner: this,\n\t\t\t\t\ttemplate: template.d\n\t\t\t\t}) :\n\t\t\t\t[]; // no arguments\n\t}\n\n\tif ( this.action && typeof this.action !== 'string' ) this.action.bind();\n\tif ( this.args && template.d ) this.args.bind();\n};\n\nEventDirective.prototype.bubble = function bubble () {\n\tif ( !this.dirty ) {\n\t\tthis.dirty = true;\n\t\tthis.owner.bubble();\n\t}\n};\n\nEventDirective.prototype.destroyed = function destroyed () {\n\tthis.events.forEach( function ( e ) { return e.unlisten(); } );\n};\n\nEventDirective.prototype.fire = function fire ( event, passedArgs ) {\n\n\t// augment event object\n\tif ( passedArgs === void 0 ) passedArgs = [];\n\n\t\tif ( event && !event.hasOwnProperty( '_element' ) ) {\n\t\t   addHelpers( event, this.owner );\n\t}\n\n\tif ( this.fn ) {\n\t\tvar values = [];\n\n\t\tif ( event ) passedArgs.unshift( event );\n\n\t\tif ( this.models ) {\n\t\t\tthis.models.forEach( function ( model ) {\n\t\t\t\tif ( !model ) return values.push( undefined );\n\n\t\t\t\tif ( model.special ) {\n\t\t\t\t\tvar obj = model.special === 'event' ? event : passedArgs;\n\t\t\t\t\tvar keys = model.keys.slice();\n\n\t\t\t\t\twhile ( keys.length ) obj = obj[ keys.shift() ];\n\t\t\t\t\treturn values.push( obj );\n\t\t\t\t}\n\n\t\t\t\tif ( model.wrapper ) {\n\t\t\t\t\treturn values.push( model.wrapper.value );\n\t\t\t\t}\n\n\t\t\t\tvalues.push( model.get() );\n\t\t\t});\n\t\t}\n\n\t\t// make event available as `this.event`\n\t\tvar ractive = this.ractive;\n\t\tvar oldEvent = ractive.event;\n\n\t\tractive.event = event;\n\t\tvar result = this.fn.apply( ractive, values ).pop();\n\n\t\t// Auto prevent and stop if return is explicitly false\n\t\tvar original;\n\t\tif ( result === false && ( original = event.original ) ) {\n\t\t\toriginal.preventDefault && original.preventDefault();\n\t\t\toriginal.stopPropagation && original.stopPropagation();\n\t\t}\n\n\t\tractive.event = oldEvent;\n\t}\n\n\telse {\n\t\tvar action = this.action.toString();\n\t\tvar args = this.template.f.d ? this.args.getArgsList() : this.args;\n\n\t\tif ( passedArgs.length ) args = args.concat( passedArgs );\n\n\t\tif ( event ) event.name = action;\n\n\t\tfireEvent( this.ractive, action, {\n\t\t\tevent: event,\n\t\t\targs: args\n\t\t});\n\t}\n};\n\nEventDirective.prototype.handleChange = function handleChange () {};\n\nEventDirective.prototype.rebinding = function rebinding ( next, previous ) {\n\tvar this$1 = this;\n\n\t\tif ( !this.models ) return;\n\tvar idx = this.models.indexOf( previous );\n\n\tif ( ~idx ) {\n\t\tthis.models.splice( idx, 1, next );\n\t\tprevious.unregister( this );\n\t\tif ( next ) next.addShuffleTask( function () { return next.register( this$1 ); } );\n\t}\n};\n\nEventDirective.prototype.render = function render () {\n\t// render events after everything else, so they fire after bindings\n\tvar this$1 = this;\n\n\t\trunloop.scheduleTask( function () { return this$1.events.forEach( function ( e ) { return e.listen( this$1 ); }, true ); } );\n};\n\nEventDirective.prototype.toString = function toString() { return ''; };\n\nEventDirective.prototype.unbind = function unbind$1 () {\n\tvar this$1 = this;\n\n\t\tvar template = this.template.f;\n\n\tif ( template.m ) {\n\t\tif ( this.resolvers ) this.resolvers.forEach( unbind$1$1 );\n\t\tthis.resolvers = [];\n\n\t\tif ( this.models ) this.models.forEach( function ( m ) {\n\t\t\tif ( m.unregister ) m.unregister( this$1 );\n\t\t});\n\t\tthis.models = null;\n\t}\n\n\telse {\n\t\t// TODO this is brittle and non-explicit, fix it\n\t\tif ( this.action && this.action.unbind ) this.action.unbind();\n\t\tif ( this.args && this.args.unbind ) this.args.unbind();\n\t}\n};\n\nEventDirective.prototype.unrender = function unrender () {\n\tthis.events.forEach( function ( e ) { return e.unlisten(); } );\n};\n\nEventDirective.prototype.update = function update () {\n\tif ( this.method || !this.dirty ) return; // nothing to do\n\n\tthis.dirty = false;\n\n\t// ugh legacy\n\tif ( this.action && this.action.update ) this.action.update();\n\tif ( this.args && this.args.update ) this.args.update();\n};\n\n// TODO it's unfortunate that this has to run every time a\n// component is rendered... is there a better way?\nfunction updateLiveQueries ( component ) {\n\t// Does this need to be added to any live queries?\n\tvar instance = component.ractive;\n\n\tdo {\n\t\tvar liveQueries = instance._liveComponentQueries;\n\n\t\tvar i = liveQueries.length;\n\t\twhile ( i-- ) {\n\t\t\tvar name = liveQueries[i];\n\t\t\tvar query = liveQueries[ (\"_\" + name) ];\n\n\t\t\tif ( query.test( component ) ) {\n\t\t\t\tquery.add( component.instance );\n\t\t\t\t// keep register of applicable selectors, for when we teardown\n\t\t\t\tcomponent.liveQueries.push( query );\n\t\t\t}\n\t\t}\n\t} while ( instance = instance.parent );\n}\n\nfunction removeFromLiveComponentQueries ( component ) {\n\tvar instance = component.ractive;\n\n\twhile ( instance ) {\n\t\tvar query = instance._liveComponentQueries[ (\"_\" + (component.name)) ];\n\t\tif ( query ) query.remove( component );\n\n\t\tinstance = instance.parent;\n\t}\n}\n\nfunction makeDirty$1 ( query ) {\n\tquery.makeDirty();\n}\n\nvar teardownHook = new Hook( 'teardown' );\n\nvar Component = (function (Item$$1) {\n\tfunction Component ( options, ComponentConstructor ) {\n\t\tvar this$1 = this;\n\n\t\tItem$$1.call( this, options );\n\t\tthis.type = COMPONENT; // override ELEMENT from super\n\n\t\tvar instance = create( ComponentConstructor.prototype );\n\n\t\tthis.instance = instance;\n\t\tthis.name = options.template.e;\n\t\tthis.parentFragment = options.parentFragment;\n\n\t\tthis.liveQueries = [];\n\n\t\tif ( instance.el ) {\n\t\t\twarnIfDebug( (\"The <\" + (this.name) + \"> component has a default 'el' property; it has been disregarded\") );\n\t\t}\n\n\t\tvar partials = options.template.p || {};\n\t\tif ( !( 'content' in partials ) ) partials.content = options.template.f || [];\n\t\tthis._partials = partials; // TEMP\n\n\t\tthis.yielders = {};\n\n\t\t// find container\n\t\tvar fragment = options.parentFragment;\n\t\tvar container;\n\t\twhile ( fragment ) {\n\t\t\tif ( fragment.owner.type === YIELDER ) {\n\t\t\t\tcontainer = fragment.owner.container;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfragment = fragment.parent;\n\t\t}\n\n\t\t// add component-instance-specific properties\n\t\tinstance.parent = this.parentFragment.ractive;\n\t\tinstance.container = container || null;\n\t\tinstance.root = instance.parent.root;\n\t\tinstance.component = this;\n\n\t\tconstruct( this.instance, { partials: partials });\n\n\t\t// for hackability, this could be an open option\n\t\t// for any ractive instance, but for now, just\n\t\t// for components and just for ractive...\n\t\tinstance._inlinePartials = partials;\n\n\t\tthis.attributeByName = {};\n\n\t\tthis.attributes = [];\n\t\tvar leftovers = [];\n\t\t( this.template.m || [] ).forEach( function ( template ) {\n\t\t\tswitch ( template.t ) {\n\t\t\t\tcase ATTRIBUTE:\n\t\t\t\tcase EVENT:\n\t\t\t\tcase TRANSITION:\n\t\t\t\t\tthis$1.attributes.push( createItem({\n\t\t\t\t\t\towner: this$1,\n\t\t\t\t\t\tparentFragment: this$1.parentFragment,\n\t\t\t\t\t\ttemplate: template\n\t\t\t\t\t}) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase BINDING_FLAG:\n\t\t\t\tcase DECORATOR:\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tleftovers.push( template );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tthis.attributes.push( new ConditionalAttribute({\n\t\t\towner: this,\n\t\t\tparentFragment: this.parentFragment,\n\t\t\ttemplate: leftovers\n\t\t}) );\n\n\t\tthis.eventHandlers = [];\n\t\tif ( this.template.v ) this.setupEvents();\n\t}\n\n\tComponent.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\tComponent.prototype.constructor = Component;\n\n\tComponent.prototype.bind = function bind$1 () {\n\t\tthis.attributes.forEach( bind$2 );\n\n\t\tinitialise( this.instance, {\n\t\t\tpartials: this._partials\n\t\t}, {\n\t\t\tcssIds: this.parentFragment.cssIds\n\t\t});\n\n\t\tthis.eventHandlers.forEach( bind$2 );\n\n\t\tthis.bound = true;\n\t};\n\n\tComponent.prototype.bubble = function bubble () {\n\t\tif ( !this.dirty ) {\n\t\t\tthis.dirty = true;\n\t\t\tthis.parentFragment.bubble();\n\t\t}\n\t};\n\n\tComponent.prototype.checkYielders = function checkYielders () {\n\t\tvar this$1 = this;\n\n\t\tObject.keys( this.yielders ).forEach( function ( name ) {\n\t\t\tif ( this$1.yielders[ name ].length > 1 ) {\n\t\t\t\trunloop.end();\n\t\t\t\tthrow new Error( (\"A component template can only have one {{yield\" + (name ? ' ' + name : '') + \"}} declaration at a time\") );\n\t\t\t}\n\t\t});\n\t};\n\n\tComponent.prototype.destroyed = function destroyed () {\n\t\tif ( this.instance.fragment ) this.instance.fragment.destroyed();\n\t};\n\n\tComponent.prototype.detach = function detach () {\n\t\treturn this.instance.fragment.detach();\n\t};\n\n\tComponent.prototype.find = function find ( selector ) {\n\t\treturn this.instance.fragment.find( selector );\n\t};\n\n\tComponent.prototype.findAll = function findAll ( selector, query ) {\n\t\tthis.instance.fragment.findAll( selector, query );\n\t};\n\n\tComponent.prototype.findComponent = function findComponent ( name ) {\n\t\tif ( !name || this.name === name ) return this.instance;\n\n\t\tif ( this.instance.fragment ) {\n\t\t\treturn this.instance.fragment.findComponent( name );\n\t\t}\n\t};\n\n\tComponent.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\tif ( query.test( this ) ) {\n\t\t\tquery.add( this.instance );\n\n\t\t\tif ( query.live ) {\n\t\t\t\tthis.liveQueries.push( query );\n\t\t\t}\n\t\t}\n\n\t\tthis.instance.fragment.findAllComponents( name, query );\n\t};\n\n\tComponent.prototype.firstNode = function firstNode ( skipParent ) {\n\t\treturn this.instance.fragment.firstNode( skipParent );\n\t};\n\n\tComponent.prototype.render = function render$1 ( target, occupants ) {\n\t\trender$2( this.instance, target, null, occupants );\n\n\t\tthis.checkYielders();\n\t\tthis.attributes.forEach( render$1$1 );\n\t\tthis.eventHandlers.forEach( render$1$1 );\n\t\tupdateLiveQueries( this );\n\n\t\tthis.rendered = true;\n\t};\n\n\tComponent.prototype.setupEvents = function setupEvents () {\n\t\tvar this$1 = this;\n\n\t\tvar handlers = this.eventHandlers;\n\n\t\tObject.keys( this.template.v ).forEach( function ( key ) {\n\t\t\tvar eventNames = key.split( '-' );\n\t\t\tvar template = this$1.template.v[ key ];\n\n\t\t\teventNames.forEach( function ( eventName ) {\n\t\t\t\tvar event = new RactiveEvent( this$1.instance, eventName );\n\t\t\t\thandlers.push( new EventDirective( this$1, event, template ) );\n\t\t\t});\n\t\t});\n\t};\n\n\tComponent.prototype.shuffled = function shuffled () {\n\t\tthis.liveQueries.forEach( makeDirty$1 );\n\t\tItem$$1.prototype.shuffled.call(this);\n\t};\n\n\tComponent.prototype.toString = function toString () {\n\t\treturn this.instance.toHTML();\n\t};\n\n\tComponent.prototype.unbind = function unbind$1 () {\n\t\tthis.bound = false;\n\n\t\tthis.attributes.forEach( unbind$1$1 );\n\n\t\tvar instance = this.instance;\n\t\tinstance.viewmodel.teardown();\n\t\tinstance.fragment.unbind();\n\t\tinstance._observers.forEach( cancel$1 );\n\n\t\tremoveFromLiveComponentQueries( this );\n\n\t\tif ( instance.fragment.rendered && instance.el.__ractive_instances__ ) {\n\t\t\tremoveFromArray( instance.el.__ractive_instances__, instance );\n\t\t}\n\n\t\tteardownHook.fire( instance );\n\t};\n\n\tComponent.prototype.unrender = function unrender$1 ( shouldDestroy ) {\n\t\tvar this$1 = this;\n\n\t\tthis.rendered = false;\n\n\t\tthis.shouldDestroy = shouldDestroy;\n\t\tthis.instance.unrender();\n\t\tthis.attributes.forEach( unrender$1$1 );\n\t\tthis.eventHandlers.forEach( unrender$1$1 );\n\t\tthis.liveQueries.forEach( function ( query ) { return query.remove( this$1.instance ); } );\n\t};\n\n\tComponent.prototype.update = function update$1 () {\n\t\tthis.dirty = false;\n\t\tthis.instance.fragment.update();\n\t\tthis.checkYielders();\n\t\tthis.attributes.forEach( update$1$1 );\n\t\tthis.eventHandlers.forEach( update$1$1 );\n\t};\n\n\treturn Component;\n}(Item));\n\nvar missingDecorator = {\n\tupdate: noop,\n\tteardown: noop\n};\n\nvar Decorator = function Decorator ( options ) {\n\tthis.owner = options.owner || options.parentFragment.owner || findElement( options.parentFragment );\n\tthis.element = this.owner.attributeByName ? this.owner : findElement( options.parentFragment );\n\tthis.parentFragment = this.owner.parentFragment;\n\tthis.ractive = this.owner.ractive;\n\tvar template = this.template = options.template;\n\n\tthis.dynamicName = typeof template.f.n === 'object';\n\tthis.dynamicArgs = !!template.f.d;\n\n\tif ( this.dynamicName ) {\n\t\tthis.nameFragment = new Fragment({\n\t\t\towner: this,\n\t\t\ttemplate: template.f.n\n\t\t});\n\t} else {\n\t\tthis.name = template.f.n || template.f;\n\t}\n\n\tif ( this.dynamicArgs ) {\n\t\tthis.argsFragment = new Fragment({\n\t\t\towner: this,\n\t\t\ttemplate: template.f.d\n\t\t});\n\t} else {\n\t\tif ( template.f.a && template.f.a.s ) {\n\t\t\tthis.args = [];\n\t\t} else {\n\t\t\tthis.args = template.f.a || [];\n\t\t}\n\t}\n\n\tthis.node = null;\n\tthis.intermediary = null;\n\n\tthis.element.decorators.push( this );\n};\n\nDecorator.prototype.bind = function bind () {\n\tvar this$1 = this;\n\n\t\tif ( this.dynamicName ) {\n\t\tthis.nameFragment.bind();\n\t\tthis.name = this.nameFragment.toString();\n\t}\n\n\tif ( this.dynamicArgs ) this.argsFragment.bind();\n\n\t// TODO: dry this up once deprecation is done\n\tif ( this.template.f.a && this.template.f.a.s ) {\n\t\tthis.resolvers = [];\n\t\tthis.models = this.template.f.a.r.map( function ( ref, i ) {\n\t\t\tvar resolver;\n\t\t\tvar model = resolveReference( this$1.parentFragment, ref );\n\t\t\tif ( !model ) {\n\t\t\t\tresolver = this$1.parentFragment.resolve( ref, function ( model ) {\n\t\t\t\t\tthis$1.models[i] = model;\n\t\t\t\t\tremoveFromArray( this$1.resolvers, resolver );\n\t\t\t\t\tmodel.register( this$1 );\n\t\t\t\t});\n\n\t\t\t\tthis$1.resolvers.push( resolver );\n\t\t\t} else model.register( this$1 );\n\n\t\t\treturn model;\n\t\t});\n\t\tthis.argsFn = getFunction( this.template.f.a.s, this.template.f.a.r.length );\n\t}\n};\n\nDecorator.prototype.bubble = function bubble () {\n\tif ( !this.dirty ) {\n\t\tthis.dirty = true;\n\t\tthis.owner.bubble();\n\t}\n};\n\nDecorator.prototype.destroyed = function destroyed () {\n\tif ( this.intermediary ) this.intermediary.teardown();\n};\n\nDecorator.prototype.handleChange = function handleChange () { this.bubble(); };\n\nDecorator.prototype.rebinding = function rebinding ( next, previous, safe ) {\n\tvar idx = this.models.indexOf( previous );\n\tif ( !~idx ) return;\n\n\tnext = rebindMatch( this.template.f.a.r[ idx ], next, previous );\n\tif ( next === previous ) return;\n\n\tprevious.unregister( this );\n\tthis.models.splice( idx, 1, next );\n\tif ( next ) next.addShuffleRegister( this, 'mark' );\n\n\tif ( !safe ) this.bubble();\n};\n\nDecorator.prototype.render = function render () {\n\tvar this$1 = this;\n\n\t\trunloop.scheduleTask( function () {\n\t\tvar fn = findInViewHierarchy( 'decorators', this$1.ractive, this$1.name );\n\n\t\tif ( !fn ) {\n\t\t\twarnOnce( missingPlugin( this$1.name, 'decorator' ) );\n\t\t\tthis$1.intermediary = missingDecorator;\n\t\t\treturn;\n\t\t}\n\n\t\tthis$1.node = this$1.element.node;\n\n\t\tvar args;\n\t\tif ( this$1.argsFn ) {\n\t\t\targs = this$1.models.map( function ( model ) {\n\t\t\t\tif ( !model ) return undefined;\n\n\t\t\t\treturn model.get();\n\t\t\t});\n\t\t\targs = this$1.argsFn.apply( this$1.ractive, args );\n\t\t} else {\n\t\t\targs = this$1.dynamicArgs ? this$1.argsFragment.getArgsList() : this$1.args;\n\t\t}\n\n\t\tthis$1.intermediary = fn.apply( this$1.ractive, [ this$1.node ].concat( args ) );\n\n\t\tif ( !this$1.intermediary || !this$1.intermediary.teardown ) {\n\t\t\tthrow new Error( (\"The '\" + (this$1.name) + \"' decorator must return an object with a teardown method\") );\n\t\t}\n\t}, true );\n\tthis.rendered = true;\n};\n\nDecorator.prototype.toString = function toString () { return ''; };\n\nDecorator.prototype.unbind = function unbind$1 () {\n\tvar this$1 = this;\n\n\t\tif ( this.dynamicName ) this.nameFragment.unbind();\n\tif ( this.dynamicArgs ) this.argsFragment.unbind();\n\tif ( this.resolvers ) this.resolvers.forEach( unbind$1$1 );\n\tif ( this.models ) this.models.forEach( function ( m ) {\n\t\tif ( m ) m.unregister( this$1 );\n\t});\n};\n\nDecorator.prototype.unrender = function unrender ( shouldDestroy ) {\n\tif ( ( !shouldDestroy || this.element.rendered ) && this.intermediary ) this.intermediary.teardown();\n\tthis.rendered = false;\n};\n\nDecorator.prototype.update = function update () {\n\tif ( !this.dirty ) return;\n\n\tthis.dirty = false;\n\n\tvar nameChanged = false;\n\n\tif ( this.dynamicName && this.nameFragment.dirty ) {\n\t\tvar name = this.nameFragment.toString();\n\t\tnameChanged = name !== this.name;\n\t\tthis.name = name;\n\t}\n\n\tif ( this.intermediary ) {\n\t\tif ( nameChanged || !this.intermediary.update ) {\n\t\t\tthis.unrender();\n\t\t\tthis.render();\n\t\t}\n\t\telse {\n\t\t\tif ( this.dynamicArgs ) {\n\t\t\t\tif ( this.argsFragment.dirty ) {\n\t\t\t\t\tvar args = this.argsFragment.getArgsList();\n\t\t\t\t\tthis.intermediary.update.apply( this.ractive, args );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( this.argsFn ) {\n\t\t\t\tvar args$1 = this.models.map( function ( model ) {\n\t\t\t\t\tif ( !model ) return undefined;\n\n\t\t\t\t\treturn model.get();\n\t\t\t\t});\n\t\t\t\tthis.intermediary.update.apply( this.ractive, this.argsFn.apply( this.ractive, args$1 ) );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.intermediary.update.apply( this.ractive, this.args );\n\t\t\t}\n\t\t}\n\t}\n\n\t// need to run these for unrender/render cases\n\t// so can't just be in conditional if above\n\n\tif ( this.dynamicName && this.nameFragment.dirty ) {\n\t\tthis.nameFragment.update();\n\t}\n\n\tif ( this.dynamicArgs && this.argsFragment.dirty ) {\n\t\tthis.argsFragment.update();\n\t}\n};\n\nvar Doctype = (function (Item$$1) {\n\tfunction Doctype () {\n\t\tItem$$1.apply(this, arguments);\n\t}\n\n\tDoctype.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\tDoctype.prototype.constructor = Doctype;\n\n\tDoctype.prototype.bind = function bind () {\n\t\t// noop\n\t};\n\n\tDoctype.prototype.render = function render () {\n\t\t// noop\n\t};\n\n\tDoctype.prototype.teardown = function teardown () {\n\t\t// noop\n\t};\n\n\tDoctype.prototype.toString = function toString () {\n\t\treturn '<!DOCTYPE' + this.template.a + '>';\n\t};\n\n\tDoctype.prototype.unbind = function unbind () {\n\t\t// noop\n\t};\n\n\tDoctype.prototype.unrender = function unrender () {\n\t\t// noop\n\t};\n\n\treturn Doctype;\n}(Item));\n\nfunction updateLiveQueries$1 ( element ) {\n\t// Does this need to be added to any live queries?\n\tvar node = element.node;\n\tvar instance = element.ractive;\n\n\tdo {\n\t\tvar liveQueries = instance._liveQueries;\n\n\t\tvar i = liveQueries.length;\n\t\twhile ( i-- ) {\n\t\t\tvar selector = liveQueries[i];\n\t\t\tvar query = liveQueries[ (\"_\" + selector) ];\n\n\t\t\tif ( query.test( node ) ) {\n\t\t\t\tquery.add( node );\n\t\t\t\t// keep register of applicable selectors, for when we teardown\n\t\t\t\telement.liveQueries.push( query );\n\t\t\t}\n\t\t}\n\t} while ( instance = instance.parent );\n}\n\n// TODO element.parent currently undefined\nfunction findParentForm ( element ) {\n\twhile ( element = element.parent ) {\n\t\tif ( element.name === 'form' ) {\n\t\t\treturn element;\n\t\t}\n\t}\n}\n\nfunction warnAboutAmbiguity ( description, ractive ) {\n\twarnOnceIfDebug( (\"The \" + description + \" being used for two-way binding is ambiguous, and may cause unexpected results. Consider initialising your data to eliminate the ambiguity\"), { ractive: ractive });\n}\n\nvar Binding = function Binding ( element, name ) {\n\tif ( name === void 0 ) name = 'value';\n\n\t\tthis.element = element;\n\tthis.ractive = element.ractive;\n\tthis.attribute = element.attributeByName[ name ];\n\n\tvar interpolator = this.attribute.interpolator;\n\tinterpolator.twowayBinding = this;\n\n\tvar model = interpolator.model;\n\n\t// not bound?\n\tif ( !model ) {\n\t\t// try to force resolution\n\t\tinterpolator.resolver.forceResolution();\n\t\tmodel = interpolator.model;\n\n\t\twarnAboutAmbiguity( (\"'\" + (interpolator.template.r) + \"' reference\"), this.ractive );\n\t}\n\n\telse if ( model.isUnresolved ) {\n\t\t// reference expressions (e.g. foo[bar])\n\t\tmodel.forceResolution();\n\t\twarnAboutAmbiguity( 'expression', this.ractive );\n\t}\n\n\t// TODO include index/key/keypath refs as read-only\n\telse if ( model.isReadonly ) {\n\t\tvar keypath = model.getKeypath().replace( /^@/, '' );\n\t\t\twarnOnceIfDebug( (\"Cannot use two-way binding on <\" + (element.name) + \"> element: \" + keypath + \" is read-only. To suppress this warning use <\" + (element.name) + \" twoway='false'...>\"), { ractive: this.ractive });\n\t\treturn false;\n\t}\n\n\tthis.attribute.isTwoway = true;\n\tthis.model = model;\n\n\t// initialise value, if it's undefined\n\tvar value = model.get();\n\tthis.wasUndefined = value === undefined;\n\n\tif ( value === undefined && this.getInitialValue ) {\n\t\tvalue = this.getInitialValue();\n\t\tmodel.set( value );\n\t}\n\n\tvar parentForm = findParentForm( element );\n\tif ( parentForm ) {\n\t\tthis.resetValue = value;\n\t\tparentForm.formBindings.push( this );\n\t}\n};\n\nBinding.prototype.bind = function bind () {\n\tthis.model.registerTwowayBinding( this );\n};\n\nBinding.prototype.handleChange = function handleChange () {\n\tvar this$1 = this;\n\n\t\tvar value = this.getValue();\n\tif ( this.lastVal() === value ) return;\n\n\trunloop.start( this.root );\n\tthis.attribute.locked = true;\n\tthis.model.set( value );\n\tthis.lastVal( true, value );\n\n\t// if the value changes before observers fire, unlock to be updatable cause something weird and potentially freezy is up\n\tif ( this.model.get() !== value ) this.attribute.locked = false;\n\telse runloop.scheduleTask( function () { return this$1.attribute.locked = false; } );\n\n\trunloop.end();\n};\n\nBinding.prototype.lastVal = function lastVal ( setting, value ) {\n\tif ( setting ) this.lastValue = value;\n\telse return this.lastValue;\n};\n\nBinding.prototype.rebinding = function rebinding ( next, previous ) {\n\tvar this$1 = this;\n\n\t\tif ( this.model && this.model === previous ) previous.unregisterTwowayBinding( this );\n\tif ( next ) {\n\t\tthis.model = next;\n\t\trunloop.scheduleTask( function () { return next.registerTwowayBinding( this$1 ); } );\n\t}\n   };\n\nBinding.prototype.render = function render () {\n\tthis.node = this.element.node;\n\tthis.node._ractive.binding = this;\n\tthis.rendered = true; // TODO is this used anywhere?\n};\n\nBinding.prototype.setFromNode = function setFromNode ( node ) {\n\tthis.model.set( node.value );\n};\n\nBinding.prototype.unbind = function unbind () {\n\tthis.model.unregisterTwowayBinding( this );\n};\n\nBinding.prototype.unrender = function unrender () {\n\t// noop?\n};\n\n// This is the handler for DOM events that would lead to a change in the model\n// (i.e. change, sometimes, input, and occasionally click and keyup)\nfunction handleDomEvent () {\n\tthis._ractive.binding.handleChange();\n}\n\nvar CheckboxBinding = (function (Binding$$1) {\n\tfunction CheckboxBinding ( element ) {\n\t\tBinding$$1.call( this, element, 'checked' );\n\t}\n\n\tCheckboxBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\tCheckboxBinding.prototype.constructor = CheckboxBinding;\n\n\tCheckboxBinding.prototype.render = function render () {\n\t\tBinding$$1.prototype.render.call(this);\n\n\t\tthis.node.addEventListener( 'change', handleDomEvent, false );\n\n\t\tif ( this.node.attachEvent ) {\n\t\t\tthis.node.addEventListener( 'click', handleDomEvent, false );\n\t\t}\n\t};\n\n\tCheckboxBinding.prototype.unrender = function unrender () {\n\t\tthis.node.removeEventListener( 'change', handleDomEvent, false );\n\t\tthis.node.removeEventListener( 'click', handleDomEvent, false );\n\t};\n\n\tCheckboxBinding.prototype.getInitialValue = function getInitialValue () {\n\t\treturn !!this.element.getAttribute( 'checked' );\n\t};\n\n\tCheckboxBinding.prototype.getValue = function getValue () {\n\t\treturn this.node.checked;\n\t};\n\n\tCheckboxBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\tthis.model.set( node.checked );\n\t};\n\n\treturn CheckboxBinding;\n}(Binding));\n\nfunction getBindingGroup ( group, model, getValue ) {\n\tvar hash = \"\" + group + \"-bindingGroup\";\n\treturn model[hash] || ( model[ hash ] = new BindingGroup( hash, model, getValue ) );\n}\n\nvar BindingGroup = function BindingGroup ( hash, model, getValue ) {\n\tvar this$1 = this;\n\n\t\tthis.model = model;\n\tthis.hash = hash;\n\tthis.getValue = function () {\n\t\tthis$1.value = getValue.call(this$1);\n\t\treturn this$1.value;\n\t};\n\n\tthis.bindings = [];\n};\n\nBindingGroup.prototype.add = function add ( binding ) {\n\tthis.bindings.push( binding );\n};\n\nBindingGroup.prototype.bind = function bind () {\n\tthis.value = this.model.get();\n\tthis.model.registerTwowayBinding( this );\n\tthis.bound = true;\n};\n\nBindingGroup.prototype.remove = function remove ( binding ) {\n\tremoveFromArray( this.bindings, binding );\n\tif ( !this.bindings.length ) {\n\t\tthis.unbind();\n\t}\n};\n\nBindingGroup.prototype.unbind = function unbind () {\n\tthis.model.unregisterTwowayBinding( this );\n\tthis.bound = false;\n\tdelete this.model[this.hash];\n};\n\nvar push$2 = [].push;\n\nfunction getValue$1$1() {\n\tvar all = this.bindings.filter(function ( b ) { return b.node && b.node.checked; }).map(function ( b ) { return b.element.getAttribute( 'value' ); });\n\tvar res = [];\n\tall.forEach(function ( v ) { if ( !arrayContains( res, v ) ) res.push( v ); });\n\treturn res;\n}\n\nvar CheckboxNameBinding = (function (Binding$$1) {\n\tfunction CheckboxNameBinding ( element ) {\n\t\tBinding$$1.call( this, element, 'name' );\n\n\t\tthis.checkboxName = true; // so that ractive.updateModel() knows what to do with this\n\n\t\t// Each input has a reference to an array containing it and its\n\t\t// group, as two-way binding depends on being able to ascertain\n\t\t// the status of all inputs within the group\n\t\tthis.group = getBindingGroup( 'checkboxes', this.model, getValue$1$1 );\n\t\tthis.group.add( this );\n\n\t\tif ( this.noInitialValue ) {\n\t\t\tthis.group.noInitialValue = true;\n\t\t}\n\n\t\t// If no initial value was set, and this input is checked, we\n\t\t// update the model\n\t\tif ( this.group.noInitialValue && this.element.getAttribute( 'checked' ) ) {\n\t\t\tvar existingValue = this.model.get();\n\t\t\tvar bindingValue = this.element.getAttribute( 'value' );\n\n\t\t\tif ( !arrayContains( existingValue, bindingValue ) ) {\n\t\t\t\tpush$2.call( existingValue, bindingValue ); // to avoid triggering runloop with array adaptor\n\t\t\t}\n\t\t}\n\t}\n\n\tCheckboxNameBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\tCheckboxNameBinding.prototype.constructor = CheckboxNameBinding;\n\n\tCheckboxNameBinding.prototype.bind = function bind () {\n\t\tif ( !this.group.bound ) {\n\t\t\tthis.group.bind();\n\t\t}\n\t};\n\n\tCheckboxNameBinding.prototype.changed = function changed () {\n\t\tvar wasChecked = !!this.isChecked;\n\t\tthis.isChecked = this.node.checked;\n\t\treturn this.isChecked === wasChecked;\n\t};\n\n\tCheckboxNameBinding.prototype.getInitialValue = function getInitialValue () {\n\t\t// This only gets called once per group (of inputs that\n\t\t// share a name), because it only gets called if there\n\t\t// isn't an initial value. By the same token, we can make\n\t\t// a note of that fact that there was no initial value,\n\t\t// and populate it using any `checked` attributes that\n\t\t// exist (which users should avoid, but which we should\n\t\t// support anyway to avoid breaking expectations)\n\t\tthis.noInitialValue = true; // TODO are noInitialValue and wasUndefined the same thing?\n\t\treturn [];\n\t};\n\n\tCheckboxNameBinding.prototype.getValue = function getValue$1 () {\n\t\treturn this.group.value;\n\t};\n\n\tCheckboxNameBinding.prototype.handleChange = function handleChange () {\n\t\tthis.isChecked = this.element.node.checked;\n\t\tthis.group.value = this.model.get();\n\t\tvar value = this.element.getAttribute( 'value' );\n\t\tif ( this.isChecked && !arrayContains( this.group.value, value ) ) {\n\t\t\tthis.group.value.push( value );\n\t\t} else if ( !this.isChecked && arrayContains( this.group.value, value ) ) {\n\t\t\tremoveFromArray( this.group.value, value );\n\t\t}\n\t\t// make sure super knows there's a change\n\t\tthis.lastValue = null;\n\t\tBinding$$1.prototype.handleChange.call(this);\n\t};\n\n\tCheckboxNameBinding.prototype.render = function render () {\n\t\tBinding$$1.prototype.render.call(this);\n\n\t\tvar node = this.node;\n\n\t\tvar existingValue = this.model.get();\n\t\tvar bindingValue = this.element.getAttribute( 'value' );\n\n\t\tif ( isArray( existingValue ) ) {\n\t\t\tthis.isChecked = arrayContains( existingValue, bindingValue );\n\t\t} else {\n\t\t\tthis.isChecked = existingValue == bindingValue;\n\t\t}\n\n\t\tnode.name = '{{' + this.model.getKeypath() + '}}';\n\t\tnode.checked = this.isChecked;\n\n\t\tnode.addEventListener( 'change', handleDomEvent, false );\n\n\t\t// in case of IE emergency, bind to click event as well\n\t\tif ( node.attachEvent ) {\n\t\t\tnode.addEventListener( 'click', handleDomEvent, false );\n\t\t}\n\t};\n\n\tCheckboxNameBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\tthis.group.bindings.forEach( function ( binding ) { return binding.wasUndefined = true; } );\n\n\t\tif ( node.checked ) {\n\t\t\tvar valueSoFar = this.group.getValue();\n\t\t\tvalueSoFar.push( this.element.getAttribute( 'value' ) );\n\n\t\t\tthis.group.model.set( valueSoFar );\n\t\t}\n\t};\n\n\tCheckboxNameBinding.prototype.unbind = function unbind () {\n\t\tthis.group.remove( this );\n\t};\n\n\tCheckboxNameBinding.prototype.unrender = function unrender () {\n\t\tvar node = this.element.node;\n\n\t\tnode.removeEventListener( 'change', handleDomEvent, false );\n\t\tnode.removeEventListener( 'click', handleDomEvent, false );\n\t};\n\n\treturn CheckboxNameBinding;\n}(Binding));\n\nvar ContentEditableBinding = (function (Binding$$1) {\n\tfunction ContentEditableBinding () {\n\t\tBinding$$1.apply(this, arguments);\n\t}\n\n\tContentEditableBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\tContentEditableBinding.prototype.constructor = ContentEditableBinding;\n\n\tContentEditableBinding.prototype.getInitialValue = function getInitialValue () {\n\t\treturn this.element.fragment ? this.element.fragment.toString() : '';\n\t};\n\n\tContentEditableBinding.prototype.getValue = function getValue () {\n\t\treturn this.element.node.innerHTML;\n\t};\n\n\tContentEditableBinding.prototype.render = function render () {\n\t\tBinding$$1.prototype.render.call(this);\n\n\t\tvar node = this.node;\n\n\t\tnode.addEventListener( 'change', handleDomEvent, false );\n\t\tnode.addEventListener( 'blur', handleDomEvent, false );\n\n\t\tif ( !this.ractive.lazy ) {\n\t\t\tnode.addEventListener( 'input', handleDomEvent, false );\n\n\t\t\tif ( node.attachEvent ) {\n\t\t\t\tnode.addEventListener( 'keyup', handleDomEvent, false );\n\t\t\t}\n\t\t}\n\t};\n\n\tContentEditableBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\tthis.model.set( node.innerHTML );\n\t};\n\n\tContentEditableBinding.prototype.unrender = function unrender () {\n\t\tvar node = this.node;\n\n\t\tnode.removeEventListener( 'blur', handleDomEvent, false );\n\t\tnode.removeEventListener( 'change', handleDomEvent, false );\n\t\tnode.removeEventListener( 'input', handleDomEvent, false );\n\t\tnode.removeEventListener( 'keyup', handleDomEvent, false );\n\t};\n\n\treturn ContentEditableBinding;\n}(Binding));\n\nfunction handleBlur () {\n\thandleDomEvent.call( this );\n\n\tvar value = this._ractive.binding.model.get();\n\tthis.value = value == undefined ? '' : value;\n}\n\nfunction handleDelay ( delay ) {\n\tvar timeout;\n\n\treturn function () {\n\t\tvar this$1 = this;\n\n\t\tif ( timeout ) clearTimeout( timeout );\n\n\t\ttimeout = setTimeout( function () {\n\t\t\tvar binding = this$1._ractive.binding;\n\t\t\tif ( binding.rendered ) handleDomEvent.call( this$1 );\n\t\t\ttimeout = null;\n\t\t}, delay );\n\t};\n}\n\nvar GenericBinding = (function (Binding$$1) {\n\tfunction GenericBinding () {\n\t\tBinding$$1.apply(this, arguments);\n\t}\n\n\tGenericBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\tGenericBinding.prototype.constructor = GenericBinding;\n\n\tGenericBinding.prototype.getInitialValue = function getInitialValue () {\n\t\treturn '';\n\t};\n\n\tGenericBinding.prototype.getValue = function getValue () {\n\t\treturn this.node.value;\n\t};\n\n\tGenericBinding.prototype.render = function render () {\n\t\tBinding$$1.prototype.render.call(this);\n\n\t\t// any lazy setting for this element overrides the root\n\t\t// if the value is a number, it's a timeout\n\t\tvar lazy = this.ractive.lazy;\n\t\tvar timeout = false;\n\n\t\tif ( 'lazy' in this.element ) {\n\t\t\tlazy = this.element.lazy;\n\t\t}\n\n\t\tif ( isNumeric( lazy ) ) {\n\t\t\ttimeout = +lazy;\n\t\t\tlazy = false;\n\t\t}\n\n\t\tthis.handler = timeout ? handleDelay( timeout ) : handleDomEvent;\n\n\t\tvar node = this.node;\n\n\t\tnode.addEventListener( 'change', handleDomEvent, false );\n\n\t\tif ( !lazy ) {\n\t\t\tnode.addEventListener( 'input', this.handler, false );\n\n\t\t\tif ( node.attachEvent ) {\n\t\t\t\tnode.addEventListener( 'keyup', this.handler, false );\n\t\t\t}\n\t\t}\n\n\t\tnode.addEventListener( 'blur', handleBlur, false );\n\t};\n\n\tGenericBinding.prototype.unrender = function unrender () {\n\t\tvar node = this.element.node;\n\t\tthis.rendered = false;\n\n\t\tnode.removeEventListener( 'change', handleDomEvent, false );\n\t\tnode.removeEventListener( 'input', this.handler, false );\n\t\tnode.removeEventListener( 'keyup', this.handler, false );\n\t\tnode.removeEventListener( 'blur', handleBlur, false );\n\t};\n\n\treturn GenericBinding;\n}(Binding));\n\nfunction getSelectedOptions ( select ) {\n    return select.selectedOptions\n\t\t? toArray( select.selectedOptions )\n\t\t: select.options\n\t\t\t? toArray( select.options ).filter( function ( option ) { return option.selected; } )\n\t\t\t: [];\n}\n\nvar MultipleSelectBinding = (function (Binding$$1) {\n\tfunction MultipleSelectBinding () {\n\t\tBinding$$1.apply(this, arguments);\n\t}\n\n\tMultipleSelectBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\tMultipleSelectBinding.prototype.constructor = MultipleSelectBinding;\n\n\tMultipleSelectBinding.prototype.forceUpdate = function forceUpdate () {\n\t\tvar this$1 = this;\n\n\t\tvar value = this.getValue();\n\n\t\tif ( value !== undefined ) {\n\t\t\tthis.attribute.locked = true;\n\t\t\trunloop.scheduleTask( function () { return this$1.attribute.locked = false; } );\n\t\t\tthis.model.set( value );\n\t\t}\n\t};\n\n\tMultipleSelectBinding.prototype.getInitialValue = function getInitialValue () {\n\t\treturn this.element.options\n\t\t\t.filter( function ( option ) { return option.getAttribute( 'selected' ); } )\n\t\t\t.map( function ( option ) { return option.getAttribute( 'value' ); } );\n\t};\n\n\tMultipleSelectBinding.prototype.getValue = function getValue () {\n\t\tvar options = this.element.node.options;\n\t\tvar len = options.length;\n\n\t\tvar selectedValues = [];\n\n\t\tfor ( var i = 0; i < len; i += 1 ) {\n\t\t\tvar option = options[i];\n\n\t\t\tif ( option.selected ) {\n\t\t\t\tvar optionValue = option._ractive ? option._ractive.value : option.value;\n\t\t\t\tselectedValues.push( optionValue );\n\t\t\t}\n\t\t}\n\n\t\treturn selectedValues;\n\t};\n\n\tMultipleSelectBinding.prototype.handleChange = function handleChange () {\n\t\tvar attribute = this.attribute;\n\t\tvar previousValue = attribute.getValue();\n\n\t\tvar value = this.getValue();\n\n\t\tif ( previousValue === undefined || !arrayContentsMatch( value, previousValue ) ) {\n\t\t\tBinding$$1.prototype.handleChange.call(this);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tMultipleSelectBinding.prototype.render = function render () {\n\t\tBinding$$1.prototype.render.call(this);\n\n\t\tthis.node.addEventListener( 'change', handleDomEvent, false );\n\n\t\tif ( this.model.get() === undefined ) {\n\t\t\t// get value from DOM, if possible\n\t\t\tthis.handleChange();\n\t\t}\n\t};\n\n\tMultipleSelectBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\tvar selectedOptions = getSelectedOptions( node );\n\t\tvar i = selectedOptions.length;\n\t\tvar result = new Array( i );\n\n\t\twhile ( i-- ) {\n\t\t\tvar option = selectedOptions[i];\n\t\t\tresult[i] = option._ractive ? option._ractive.value : option.value;\n\t\t}\n\n\t\tthis.model.set( result );\n\t};\n\n\tMultipleSelectBinding.prototype.setValue = function setValue () {\n\t\tthrow new Error( 'TODO not implemented yet' );\n\t};\n\n\tMultipleSelectBinding.prototype.unrender = function unrender () {\n\t\tthis.node.removeEventListener( 'change', handleDomEvent, false );\n\t};\n\n\tMultipleSelectBinding.prototype.updateModel = function updateModel () {\n\t\tif ( this.attribute.value === undefined || !this.attribute.value.length ) {\n\t\t\tthis.keypath.set( this.initialValue );\n\t\t}\n\t};\n\n\treturn MultipleSelectBinding;\n}(Binding));\n\nvar NumericBinding = (function (GenericBinding$$1) {\n\tfunction NumericBinding () {\n\t\tGenericBinding$$1.apply(this, arguments);\n\t}\n\n\tNumericBinding.prototype = Object.create( GenericBinding$$1 && GenericBinding$$1.prototype );\n\tNumericBinding.prototype.constructor = NumericBinding;\n\n\tNumericBinding.prototype.getInitialValue = function getInitialValue () {\n\t\treturn undefined;\n\t};\n\n\tNumericBinding.prototype.getValue = function getValue () {\n\t\tvar value = parseFloat( this.node.value );\n\t\treturn isNaN( value ) ? undefined : value;\n\t};\n\n\tNumericBinding.prototype.setFromNode = function setFromNode( node ) {\n\t\tvar value = parseFloat( node.value );\n\t\tif ( !isNaN( value ) ) this.model.set( value );\n\t};\n\n\treturn NumericBinding;\n}(GenericBinding));\n\nvar siblings = {};\n\nfunction getSiblings ( hash ) {\n\treturn siblings[ hash ] || ( siblings[ hash ] = [] );\n}\n\nvar RadioBinding = (function (Binding$$1) {\n\tfunction RadioBinding ( element ) {\n\t\tBinding$$1.call( this, element, 'checked' );\n\n\t\tthis.siblings = getSiblings( this.ractive._guid + this.element.getAttribute( 'name' ) );\n\t\tthis.siblings.push( this );\n\t}\n\n\tRadioBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\tRadioBinding.prototype.constructor = RadioBinding;\n\n\tRadioBinding.prototype.getValue = function getValue () {\n\t\treturn this.node.checked;\n\t};\n\n\tRadioBinding.prototype.handleChange = function handleChange () {\n\t\trunloop.start( this.root );\n\n\t\tthis.siblings.forEach( function ( binding ) {\n\t\t\tbinding.model.set( binding.getValue() );\n\t\t});\n\n\t\trunloop.end();\n\t};\n\n\tRadioBinding.prototype.render = function render () {\n\t\tBinding$$1.prototype.render.call(this);\n\n\t\tthis.node.addEventListener( 'change', handleDomEvent, false );\n\n\t\tif ( this.node.attachEvent ) {\n\t\t\tthis.node.addEventListener( 'click', handleDomEvent, false );\n\t\t}\n\t};\n\n\tRadioBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\tthis.model.set( node.checked );\n\t};\n\n\tRadioBinding.prototype.unbind = function unbind () {\n\t\tremoveFromArray( this.siblings, this );\n\t};\n\n\tRadioBinding.prototype.unrender = function unrender () {\n\t\tthis.node.removeEventListener( 'change', handleDomEvent, false );\n\t\tthis.node.removeEventListener( 'click', handleDomEvent, false );\n\t};\n\n\treturn RadioBinding;\n}(Binding));\n\nfunction getValue$2() {\n\tvar checked = this.bindings.filter( function ( b ) { return b.node.checked; } );\n\tif ( checked.length > 0 ) {\n\t\treturn checked[0].element.getAttribute( 'value' );\n\t}\n}\n\nvar RadioNameBinding = (function (Binding$$1) {\n\tfunction RadioNameBinding ( element ) {\n\t\tBinding$$1.call( this, element, 'name' );\n\n\t\tthis.group = getBindingGroup( 'radioname', this.model, getValue$2 );\n\t\tthis.group.add( this );\n\n\t\tif ( element.checked ) {\n\t\t\tthis.group.value = this.getValue();\n\t\t}\n\t}\n\n\tRadioNameBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\tRadioNameBinding.prototype.constructor = RadioNameBinding;\n\n\tRadioNameBinding.prototype.bind = function bind () {\n\t\tvar this$1 = this;\n\n\t\tif ( !this.group.bound ) {\n\t\t\tthis.group.bind();\n\t\t}\n\n\t\t// update name keypath when necessary\n\t\tthis.nameAttributeBinding = {\n\t\t\thandleChange: function () { return this$1.node.name = \"{{\" + (this$1.model.getKeypath()) + \"}}\"; }\n\t\t};\n\n\t\tthis.model.getKeypathModel().register( this.nameAttributeBinding );\n\t};\n\n\tRadioNameBinding.prototype.getInitialValue = function getInitialValue () {\n\t\tif ( this.element.getAttribute( 'checked' ) ) {\n\t\t\treturn this.element.getAttribute( 'value' );\n\t\t}\n\t};\n\n\tRadioNameBinding.prototype.getValue = function getValue$1 () {\n\t\treturn this.element.getAttribute( 'value' );\n\t};\n\n\tRadioNameBinding.prototype.handleChange = function handleChange () {\n\t\t// If this <input> is the one that's checked, then the value of its\n\t\t// `name` model gets set to its value\n\t\tif ( this.node.checked ) {\n\t\t\tthis.group.value = this.getValue();\n\t\t\tBinding$$1.prototype.handleChange.call(this);\n\t\t}\n\t};\n\n\tRadioNameBinding.prototype.lastVal = function lastVal ( setting, value ) {\n\t\tif ( setting ) this.group.lastValue = value;\n\t\telse return this.group.lastValue;\n\t};\n\n\tRadioNameBinding.prototype.render = function render () {\n\t\tBinding$$1.prototype.render.call(this);\n\n\t\tvar node = this.node;\n\n\t\tnode.name = \"{{\" + (this.model.getKeypath()) + \"}}\";\n\t\tnode.checked = this.model.get() == this.element.getAttribute( 'value' );\n\n\t\tnode.addEventListener( 'change', handleDomEvent, false );\n\n\t\tif ( node.attachEvent ) {\n\t\t\tnode.addEventListener( 'click', handleDomEvent, false );\n\t\t}\n\t};\n\n\tRadioNameBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\tif ( node.checked ) {\n\t\t\tthis.group.model.set( this.element.getAttribute( 'value' ) );\n\t\t}\n\t};\n\n\tRadioNameBinding.prototype.unbind = function unbind () {\n\t\tthis.group.remove( this );\n\n\t\tthis.model.getKeypathModel().unregister( this.nameAttributeBinding );\n\t};\n\n\tRadioNameBinding.prototype.unrender = function unrender () {\n\t\tvar node = this.node;\n\n\t\tnode.removeEventListener( 'change', handleDomEvent, false );\n\t\tnode.removeEventListener( 'click', handleDomEvent, false );\n\t};\n\n\treturn RadioNameBinding;\n}(Binding));\n\nvar SingleSelectBinding = (function (Binding$$1) {\n\tfunction SingleSelectBinding () {\n\t\tBinding$$1.apply(this, arguments);\n\t}\n\n\tSingleSelectBinding.prototype = Object.create( Binding$$1 && Binding$$1.prototype );\n\tSingleSelectBinding.prototype.constructor = SingleSelectBinding;\n\n\tSingleSelectBinding.prototype.forceUpdate = function forceUpdate () {\n\t\tvar this$1 = this;\n\n\t\tvar value = this.getValue();\n\n\t\tif ( value !== undefined ) {\n\t\t\tthis.attribute.locked = true;\n\t\t\trunloop.scheduleTask( function () { return this$1.attribute.locked = false; } );\n\t\t\tthis.model.set( value );\n\t\t}\n\t};\n\n\tSingleSelectBinding.prototype.getInitialValue = function getInitialValue () {\n\t\tif ( this.element.getAttribute( 'value' ) !== undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar options = this.element.options;\n\t\tvar len = options.length;\n\n\t\tif ( !len ) return;\n\n\t\tvar value;\n\t\tvar optionWasSelected;\n\t\tvar i = len;\n\n\t\t// take the final selected option...\n\t\twhile ( i-- ) {\n\t\t\tvar option = options[i];\n\n\t\t\tif ( option.getAttribute( 'selected' ) ) {\n\t\t\t\tif ( !option.getAttribute( 'disabled' ) ) {\n\t\t\t\t\tvalue = option.getAttribute( 'value' );\n\t\t\t\t}\n\n\t\t\t\toptionWasSelected = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// or the first non-disabled option, if none are selected\n\t\tif ( !optionWasSelected ) {\n\t\t\twhile ( ++i < len ) {\n\t\t\t\tif ( !options[i].getAttribute( 'disabled' ) ) {\n\t\t\t\t\tvalue = options[i].getAttribute( 'value' );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// This is an optimisation (aka hack) that allows us to forgo some\n\t\t// other more expensive work\n\t\t// TODO does it still work? seems at odds with new architecture\n\t\tif ( value !== undefined ) {\n\t\t\tthis.element.attributeByName.value.value = value;\n\t\t}\n\n\t\treturn value;\n\t};\n\n\tSingleSelectBinding.prototype.getValue = function getValue () {\n\t\tvar options = this.node.options;\n\t\tvar len = options.length;\n\n\t\tvar i;\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tvar option = options[i];\n\n\t\t\tif ( options[i].selected && !options[i].disabled ) {\n\t\t\t\treturn option._ractive ? option._ractive.value : option.value;\n\t\t\t}\n\t\t}\n\t};\n\n\tSingleSelectBinding.prototype.render = function render () {\n\t\tBinding$$1.prototype.render.call(this);\n\t\tthis.node.addEventListener( 'change', handleDomEvent, false );\n\t};\n\n\tSingleSelectBinding.prototype.setFromNode = function setFromNode ( node ) {\n\t\tvar option = getSelectedOptions( node )[0];\n\t\tthis.model.set( option._ractive ? option._ractive.value : option.value );\n\t};\n\n\t// TODO this method is an anomaly... is it necessary?\n\tSingleSelectBinding.prototype.setValue = function setValue ( value ) {\n\t\tthis.model.set( value );\n\t};\n\n\tSingleSelectBinding.prototype.unrender = function unrender () {\n\t\tthis.node.removeEventListener( 'change', handleDomEvent, false );\n\t};\n\n\treturn SingleSelectBinding;\n}(Binding));\n\nfunction isBindable ( attribute ) {\n\treturn attribute &&\n\t\t   attribute.template.f &&\n\t       attribute.template.f.length === 1 &&\n\t       attribute.template.f[0].t === INTERPOLATOR &&\n\t       !attribute.template.f[0].s;\n}\n\nfunction selectBinding ( element ) {\n\tvar attributes = element.attributeByName;\n\n\t// contenteditable - bind if the contenteditable attribute is true\n\t// or is bindable and may thus become true...\n\tif ( element.getAttribute( 'contenteditable' ) || isBindable( attributes.contenteditable ) ) {\n\t\t// ...and this element also has a value attribute to bind\n\t\treturn isBindable( attributes.value ) ? ContentEditableBinding : null;\n\t}\n\n\t// <input>\n\tif ( element.name === 'input' ) {\n\t\tvar type = element.getAttribute( 'type' );\n\n\t\tif ( type === 'radio' || type === 'checkbox' ) {\n\t\t\tvar bindName = isBindable( attributes.name );\n\t\t\tvar bindChecked = isBindable( attributes.checked );\n\n\t\t\t// for radios we can either bind the name attribute, or the checked attribute - not both\n\t\t\tif ( bindName && bindChecked ) {\n\t\t\t\tif ( type === 'radio' ) {\n\t\t\t\t\twarnIfDebug( 'A radio input can have two-way binding on its name attribute, or its checked attribute - not both', { ractive: element.root });\n\t\t\t\t} else {\n\t\t\t\t\t// A checkbox with bindings for both name and checked - see https://github.com/ractivejs/ractive/issues/1749\n\t\t\t\t\treturn CheckboxBinding;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( bindName ) {\n\t\t\t\treturn type === 'radio' ? RadioNameBinding : CheckboxNameBinding;\n\t\t\t}\n\n\t\t\tif ( bindChecked ) {\n\t\t\t\treturn type === 'radio' ? RadioBinding : CheckboxBinding;\n\t\t\t}\n\t\t}\n\n\t\tif ( type === 'file' && isBindable( attributes.value ) ) {\n\t\t\treturn Binding;\n\t\t}\n\n\t\tif ( isBindable( attributes.value ) ) {\n\t\t\treturn ( type === 'number' || type === 'range' ) ? NumericBinding : GenericBinding;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t// <select>\n\tif ( element.name === 'select' && isBindable( attributes.value ) ) {\n\t\treturn element.getAttribute( 'multiple' ) ? MultipleSelectBinding : SingleSelectBinding;\n\t}\n\n\t// <textarea>\n\tif ( element.name === 'textarea' && isBindable( attributes.value ) ) {\n\t\treturn GenericBinding;\n\t}\n}\n\nfunction makeDirty$2 ( query ) {\n\tquery.makeDirty();\n}\n\nvar endsWithSemi = /;\\s*$/;\n\nvar Element = (function (Item$$1) {\n\tfunction Element ( options ) {\n\t\tvar this$1 = this;\n\n\t\tItem$$1.call( this, options );\n\n\t\tthis.liveQueries = []; // TODO rare case. can we handle differently?\n\n\t\tthis.name = options.template.e.toLowerCase();\n\t\tthis.isVoid = voidElementNames.test( this.name );\n\n\t\t// find parent element\n\t\tthis.parent = findElement( this.parentFragment, false );\n\n\t\tif ( this.parent && this.parent.name === 'option' ) {\n\t\t\tthrow new Error( (\"An <option> element cannot contain other elements (encountered <\" + (this.name) + \">)\") );\n\t\t}\n\n\t\tthis.decorators = [];\n\n\t\t// create attributes\n\t\tthis.attributeByName = {};\n\n\t\tthis.attributes = [];\n\t\tvar leftovers = [];\n\t\t( this.template.m || [] ).forEach( function ( template ) {\n\t\t\tswitch ( template.t ) {\n\t\t\t\tcase ATTRIBUTE:\n\t\t\t\tcase BINDING_FLAG:\n\t\t\t\tcase DECORATOR:\n\t\t\t\tcase EVENT:\n\t\t\t\tcase TRANSITION:\n\t\t\t\t\tthis$1.attributes.push( createItem({\n\t\t\t\t\t\towner: this$1,\n\t\t\t\t\t\tparentFragment: this$1.parentFragment,\n\t\t\t\t\t\ttemplate: template\n\t\t\t\t\t}) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tleftovers.push( template );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tthis.attributes.push( new ConditionalAttribute({\n\t\t\towner: this,\n\t\t\tparentFragment: this.parentFragment,\n\t\t\ttemplate: leftovers\n\t\t}) );\n\n\t\tvar i = this.attributes.length;\n\t\twhile ( i-- ) {\n\t\t\tvar attr = this$1.attributes[ i ];\n\t\t\tif ( attr.name === 'type' ) this$1.attributes.unshift( this$1.attributes.splice( i, 1 )[ 0 ] );\n\t\t\telse if ( attr.name === 'max' ) this$1.attributes.unshift( this$1.attributes.splice( i, 1 )[ 0 ] );\n\t\t\telse if ( attr.name === 'min' ) this$1.attributes.unshift( this$1.attributes.splice( i, 1 )[ 0 ] );\n\t\t\telse if ( attr.name === 'class' ) this$1.attributes.unshift( this$1.attributes.splice( i, 1 )[ 0 ] );\n\t\t\telse if ( attr.name === 'value' ) {\n\t\t\t\tthis$1.attributes.push( this$1.attributes.splice( i, 1 )[ 0 ] );\n\t\t\t}\n\t\t}\n\n\t\t// create children\n\t\tif ( options.template.f && !options.deferContent ) {\n\t\t\tthis.fragment = new Fragment({\n\t\t\t\ttemplate: options.template.f,\n\t\t\t\towner: this,\n\t\t\t\tcssIds: null\n\t\t\t});\n\t\t}\n\n\t\tthis.binding = null; // filled in later\n\t}\n\n\tElement.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\tElement.prototype.constructor = Element;\n\n\tElement.prototype.bind = function bind$1 () {\n\t\tthis.attributes.binding = true;\n\t\tthis.attributes.forEach( bind$2 );\n\t\tthis.attributes.binding = false;\n\n\t\tif ( this.fragment ) this.fragment.bind();\n\n\t\t// create two-way binding if necessary\n\t\tif ( !this.binding ) this.recreateTwowayBinding();\n\t};\n\n\tElement.prototype.createTwowayBinding = function createTwowayBinding () {\n\t\tvar shouldBind = 'twoway' in this ? this.twoway : this.ractive.twoway;\n\n\t\tif ( !shouldBind ) return null;\n\n\t\tvar Binding = selectBinding( this );\n\n\t\tif ( !Binding ) return null;\n\n\t\tvar binding = new Binding( this );\n\n\t\treturn binding && binding.model ?\n\t\t\tbinding :\n\t\t\tnull;\n\t};\n\n\tElement.prototype.destroyed = function destroyed () {\n\t\tthis.attributes.forEach( function ( a ) { return a.destroyed(); } );\n\t\tif ( this.fragment ) this.fragment.destroyed();\n\t};\n\n\tElement.prototype.detach = function detach () {\n\t\t// if this element is no longer rendered, the transitions are complete and the attributes can be torn down\n\t\tif ( !this.rendered ) this.destroyed();\n\n\t\treturn detachNode( this.node );\n\t};\n\n\tElement.prototype.find = function find ( selector ) {\n\t\tif ( matches( this.node, selector ) ) return this.node;\n\t\tif ( this.fragment ) {\n\t\t\treturn this.fragment.find( selector );\n\t\t}\n\t};\n\n\tElement.prototype.findAll = function findAll ( selector, query ) {\n\t\t// Add this node to the query, if applicable, and register the\n\t\t// query on this element\n\t\tvar matches$$1 = query.test( this.node );\n\t\tif ( matches$$1 ) {\n\t\t\tquery.add( this.node );\n\t\t\tif ( query.live ) this.liveQueries.push( query );\n\t\t}\n\n\t\tif ( this.fragment ) {\n\t\t\tthis.fragment.findAll( selector, query );\n\t\t}\n\t};\n\n\tElement.prototype.findComponent = function findComponent ( name ) {\n\t\tif ( this.fragment ) {\n\t\t\treturn this.fragment.findComponent( name );\n\t\t}\n\t};\n\n\tElement.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\tif ( this.fragment ) {\n\t\t\tthis.fragment.findAllComponents( name, query );\n\t\t}\n\t};\n\n\tElement.prototype.findNextNode = function findNextNode () {\n\t\treturn null;\n\t};\n\n\tElement.prototype.firstNode = function firstNode () {\n\t\treturn this.node;\n\t};\n\n\tElement.prototype.getAttribute = function getAttribute ( name ) {\n\t\tvar attribute = this.attributeByName[ name ];\n\t\treturn attribute ? attribute.getValue() : undefined;\n\t};\n\n\tElement.prototype.recreateTwowayBinding = function recreateTwowayBinding () {\n\t\tif ( this.binding ) {\n\t\t\tthis.binding.unbind();\n\t\t\tthis.binding.unrender();\n\t\t}\n\n\t\tif ( this.binding = this.createTwowayBinding() ) {\n\t\t\tthis.binding.bind();\n\t\t\tif ( this.rendered ) this.binding.render();\n\t\t}\n\t};\n\n\tElement.prototype.render = function render$1 ( target, occupants ) {\n\t\t// TODO determine correct namespace\n\t\tvar this$1 = this;\n\n\t\tthis.namespace = getNamespace( this );\n\n\t\tvar node;\n\t\tvar existing = false;\n\n\t\tif ( occupants ) {\n\t\t\tvar n;\n\t\t\twhile ( ( n = occupants.shift() ) ) {\n\t\t\t\tif ( n.nodeName.toUpperCase() === this$1.template.e.toUpperCase() && n.namespaceURI === this$1.namespace ) {\n\t\t\t\t\tthis$1.node = node = n;\n\t\t\t\t\texisting = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tdetachNode( n );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( !node ) {\n\t\t\tnode = createElement( this.template.e, this.namespace, this.getAttribute( 'is' ) );\n\t\t\tthis.node = node;\n\t\t}\n\n\t\tdefineProperty( node, '_ractive', {\n\t\t\tvalue: {\n\t\t\t\tproxy: this\n\t\t\t}\n\t\t});\n\n\t\t// Is this a top-level node of a component? If so, we may need to add\n\t\t// a data-ractive-css attribute, for CSS encapsulation\n\t\tif ( this.parentFragment.cssIds ) {\n\t\t\tnode.setAttribute( 'data-ractive-css', this.parentFragment.cssIds.map( function ( x ) { return (\"{\" + x + \"}\"); } ).join( ' ' ) );\n\t\t}\n\n\t\tif ( existing && this.foundNode ) this.foundNode( node );\n\n\t\tif ( this.fragment ) {\n\t\t\tvar children = existing ? toArray( node.childNodes ) : undefined;\n\n\t\t\tthis.fragment.render( node, children );\n\n\t\t\t// clean up leftover children\n\t\t\tif ( children ) {\n\t\t\t\tchildren.forEach( detachNode );\n\t\t\t}\n\t\t}\n\n\t\tif ( existing ) {\n\t\t\t// store initial values for two-way binding\n\t\t\tif ( this.binding && this.binding.wasUndefined ) this.binding.setFromNode( node );\n\t\t\t// remove unused attributes\n\t\t\tvar i = node.attributes.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tvar name = node.attributes[i].name;\n\t\t\t\tif ( !( name in this$1.attributeByName ) ) node.removeAttribute( name );\n\t\t\t}\n\t\t}\n\n\t\tthis.attributes.forEach( render$1$1 );\n\n\t\tif ( this.binding ) this.binding.render();\n\n\t\tupdateLiveQueries$1( this );\n\n\t\tif ( this._introTransition && this.ractive.transitionsEnabled ) {\n\t\t\tthis._introTransition.isIntro = true;\n\t\t\trunloop.registerTransition( this._introTransition );\n\t\t}\n\n\t\tif ( !existing ) {\n\t\t\ttarget.appendChild( node );\n\t\t}\n\n\t\tthis.rendered = true;\n\t};\n\n\tElement.prototype.shuffled = function shuffled () {\n\t\tthis.liveQueries.forEach( makeDirty$2 );\n\t\tItem$$1.prototype.shuffled.call(this);\n\t};\n\n\tElement.prototype.toString = function toString () {\n\t\tvar tagName = this.template.e;\n\n\t\tvar attrs = this.attributes.map( stringifyAttribute ).join( '' );\n\n\t\t// Special case - selected options\n\t\tif ( this.name === 'option' && this.isSelected() ) {\n\t\t\tattrs += ' selected';\n\t\t}\n\n\t\t// Special case - two-way radio name bindings\n\t\tif ( this.name === 'input' && inputIsCheckedRadio( this ) ) {\n\t\t\tattrs += ' checked';\n\t\t}\n\n\t\t// Special case style and class attributes and directives\n\t\tvar style, cls;\n\t\tthis.attributes.forEach( function ( attr ) {\n\t\t\tif ( attr.name === 'class' ) {\n\t\t\t\tcls = ( cls || '' ) + ( cls ? ' ' : '' ) + safeAttributeString( attr.getString() );\n\t\t\t} else if ( attr.name === 'style' ) {\n\t\t\t\tstyle = ( style || '' ) + ( style ? ' ' : '' ) + safeAttributeString( attr.getString() );\n\t\t\t\tif ( style && !endsWithSemi.test( style ) ) style += ';';\n\t\t\t} else if ( attr.styleName ) {\n\t\t\t\tstyle = ( style || '' ) + ( style ? ' ' : '' ) +  \"\" + (decamelize( attr.styleName )) + \": \" + (safeAttributeString( attr.getString() )) + \";\";\n\t\t\t} else if ( attr.inlineClass && attr.getValue() ) {\n\t\t\t\tcls = ( cls || '' ) + ( cls ? ' ' : '' ) + attr.inlineClass;\n\t\t\t}\n\t\t});\n\t\t// put classes first, then inline style\n\t\tif ( style !== undefined ) attrs = ' style' + ( style ? (\"=\\\"\" + style + \"\\\"\") : '' ) + attrs;\n\t\tif ( cls !== undefined ) attrs = ' class' + (cls ? (\"=\\\"\" + cls + \"\\\"\") : '') + attrs;\n\n\t\tvar str = \"<\" + tagName + \"\" + attrs + \">\";\n\n\t\tif ( this.isVoid ) return str;\n\n\t\t// Special case - textarea\n\t\tif ( this.name === 'textarea' && this.getAttribute( 'value' ) !== undefined ) {\n\t\t\tstr += escapeHtml( this.getAttribute( 'value' ) );\n\t\t}\n\n\t\t// Special case - contenteditable\n\t\telse if ( this.getAttribute( 'contenteditable' ) !== undefined ) {\n\t\t\tstr += ( this.getAttribute( 'value' ) || '' );\n\t\t}\n\n\t\tif ( this.fragment ) {\n\t\t\tstr += this.fragment.toString( !/^(?:script|style)$/i.test( this.template.e ) ); // escape text unless script/style\n\t\t}\n\n\t\tstr += \"</\" + tagName + \">\";\n\t\treturn str;\n\t};\n\n\tElement.prototype.unbind = function unbind$1 () {\n\t\tthis.attributes.forEach( unbind$1$1 );\n\n\t\tif ( this.binding ) this.binding.unbind();\n\t\tif ( this.fragment ) this.fragment.unbind();\n\t};\n\n\tElement.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\tif ( !this.rendered ) return;\n\t\tthis.rendered = false;\n\n\t\t// unrendering before intro completed? complete it now\n\t\t// TODO should be an API for aborting transitions\n\t\tvar transition = this._introTransition;\n\t\tif ( transition && transition.complete ) transition.complete();\n\n\t\t// Detach as soon as we can\n\t\tif ( this.name === 'option' ) {\n\t\t\t// <option> elements detach immediately, so that\n\t\t\t// their parent <select> element syncs correctly, and\n\t\t\t// since option elements can't have transitions anyway\n\t\t\tthis.detach();\n\t\t} else if ( shouldDestroy ) {\n\t\t\trunloop.detachWhenReady( this );\n\t\t}\n\n\t\tif ( this.fragment ) this.fragment.unrender();\n\n\t\tif ( this.binding ) this.binding.unrender();\n\n\t\t// outro transition\n\t\tif ( this._outroTransition && this.ractive.transitionsEnabled ) {\n\t\t\tthis._outroTransition.isIntro = false;\n\t\t\trunloop.registerTransition( this._outroTransition );\n\t\t}\n\n\t\tremoveFromLiveQueries( this );\n\t\t// TODO forms are a special case\n\t};\n\n\tElement.prototype.update = function update$1 () {\n\t\tif ( this.dirty ) {\n\t\t\tthis.dirty = false;\n\n\t\t\tthis.attributes.forEach( update$1$1 );\n\n\t\t\tif ( this.fragment ) this.fragment.update();\n\t\t}\n\t};\n\n\treturn Element;\n}(Item));\n\nfunction inputIsCheckedRadio ( element ) {\n\tvar attributes = element.attributeByName;\n\n\tvar typeAttribute  = attributes.type;\n\tvar valueAttribute = attributes.value;\n\tvar nameAttribute  = attributes.name;\n\n\tif ( !typeAttribute || ( typeAttribute.value !== 'radio' ) || !valueAttribute || !nameAttribute.interpolator ) {\n\t\treturn;\n\t}\n\n\tif ( valueAttribute.getValue() === nameAttribute.interpolator.model.get() ) {\n\t\treturn true;\n\t}\n}\n\nfunction stringifyAttribute ( attribute ) {\n\tvar str = attribute.toString();\n\treturn str ? ' ' + str : '';\n}\n\nfunction removeFromLiveQueries ( element ) {\n\tvar i = element.liveQueries.length;\n\twhile ( i-- ) {\n\t\tvar query = element.liveQueries[i];\n\t\tquery.remove( element.node );\n\t}\n}\n\nfunction getNamespace ( element ) {\n\t// Use specified namespace...\n\tvar xmlns$$1 = element.getAttribute( 'xmlns' );\n\tif ( xmlns$$1 ) return xmlns$$1;\n\n\t// ...or SVG namespace, if this is an <svg> element\n\tif ( element.name === 'svg' ) return svg$1;\n\n\tvar parent = element.parent;\n\n\tif ( parent ) {\n\t\t// ...or HTML, if the parent is a <foreignObject>\n\t\tif ( parent.name === 'foreignobject' ) return html;\n\n\t\t// ...or inherit from the parent node\n\t\treturn parent.node.namespaceURI;\n\t}\n\n\treturn element.ractive.el.namespaceURI;\n}\n\nvar Form = (function (Element$$1) {\n\tfunction Form ( options ) {\n\t\tElement$$1.call( this, options );\n\t\tthis.formBindings = [];\n\t}\n\n\tForm.prototype = Object.create( Element$$1 && Element$$1.prototype );\n\tForm.prototype.constructor = Form;\n\n\tForm.prototype.render = function render ( target, occupants ) {\n\t\tElement$$1.prototype.render.call( this, target, occupants );\n\t\tthis.node.addEventListener( 'reset', handleReset, false );\n\t};\n\n\tForm.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\tthis.node.removeEventListener( 'reset', handleReset, false );\n\t\tElement$$1.prototype.unrender.call( this, shouldDestroy );\n\t};\n\n\treturn Form;\n}(Element));\n\nfunction handleReset () {\n\tvar element = this._ractive.proxy;\n\n\trunloop.start();\n\telement.formBindings.forEach( updateModel$2 );\n\trunloop.end();\n}\n\nfunction updateModel$2 ( binding ) {\n\tbinding.model.set( binding.resetValue );\n}\n\nvar Mustache = (function (Item$$1) {\n\tfunction Mustache ( options ) {\n\t\tItem$$1.call( this, options );\n\n\t\tthis.parentFragment = options.parentFragment;\n\t\tthis.template = options.template;\n\t\tthis.index = options.index;\n\t\tif ( options.owner ) this.parent = options.owner;\n\n\t\tthis.isStatic = !!options.template.s;\n\n\t\tthis.model = null;\n\t\tthis.dirty = false;\n\t}\n\n\tMustache.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\tMustache.prototype.constructor = Mustache;\n\n\tMustache.prototype.bind = function bind () {\n\t\t// try to find a model for this view\n\t\tvar this$1 = this;\n\n\t\tvar model = resolve$3( this.parentFragment, this.template );\n\t\tvar value = model ? model.get() : undefined;\n\n\t\tif ( this.isStatic ) {\n\t\t\tthis.model = { get: function () { return value; } };\n\t\t\treturn;\n\t\t}\n\n\t\tif ( model ) {\n\t\t\tmodel.register( this );\n\t\t\tthis.model = model;\n\t\t} else {\n\t\t\tthis.resolver = this.parentFragment.resolve( this.template.r, function ( model ) {\n\t\t\t\tthis$1.model = model;\n\t\t\t\tmodel.register( this$1 );\n\n\t\t\t\tthis$1.handleChange();\n\t\t\t\tthis$1.resolver = null;\n\t\t\t});\n\t\t}\n\t};\n\n\tMustache.prototype.handleChange = function handleChange () {\n\t\tthis.bubble();\n\t};\n\n\tMustache.prototype.rebinding = function rebinding ( next, previous, safe ) {\n\t\tnext = rebindMatch( this.template, next, previous );\n\t\tif ( this['static'] ) return false;\n\t\tif ( next === this.model ) return false;\n\n\t\tif ( this.model ) {\n\t\t\tthis.model.unregister( this );\n\t\t}\n\t\tif ( next ) next.addShuffleRegister( this, 'mark' );\n\t\tthis.model = next;\n\t\tif ( !safe ) this.handleChange();\n\t\treturn true;\n\t};\n\n\tMustache.prototype.unbind = function unbind () {\n\t\tif ( !this.isStatic ) {\n\t\t\tthis.model && this.model.unregister( this );\n\t\t\tthis.model = undefined;\n\t\t\tthis.resolver && this.resolver.unbind();\n\t\t}\n\t};\n\n\treturn Mustache;\n}(Item));\n\nvar Interpolator = (function (Mustache$$1) {\n\tfunction Interpolator () {\n\t\tMustache$$1.apply(this, arguments);\n\t}\n\n\tInterpolator.prototype = Object.create( Mustache$$1 && Mustache$$1.prototype );\n\tInterpolator.prototype.constructor = Interpolator;\n\n\tInterpolator.prototype.bubble = function bubble () {\n\t\tif ( this.owner ) this.owner.bubble();\n\t\tMustache$$1.prototype.bubble.call(this);\n\t};\n\n\tInterpolator.prototype.detach = function detach () {\n\t\treturn detachNode( this.node );\n\t};\n\n\tInterpolator.prototype.firstNode = function firstNode () {\n\t\treturn this.node;\n\t};\n\n\tInterpolator.prototype.getString = function getString () {\n\t\treturn this.model ? safeToStringValue( this.model.get() ) : '';\n\t};\n\n\tInterpolator.prototype.render = function render ( target, occupants ) {\n\t\tif ( inAttributes() ) return;\n\t\tvar value = this.getString();\n\n\t\tthis.rendered = true;\n\n\t\tif ( occupants ) {\n\t\t\tvar n = occupants[0];\n\t\t\tif ( n && n.nodeType === 3 ) {\n\t\t\t\toccupants.shift();\n\t\t\t\tif ( n.nodeValue !== value ) {\n\t\t\t\t\tn.nodeValue = value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn = this.node = doc.createTextNode( value );\n\t\t\t\tif ( occupants[0] ) {\n\t\t\t\t\ttarget.insertBefore( n, occupants[0] );\n\t\t\t\t} else {\n\t\t\t\t\ttarget.appendChild( n );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.node = n;\n\t\t} else {\n\t\t\tthis.node = doc.createTextNode( value );\n\t\t\ttarget.appendChild( this.node );\n\t\t}\n\t};\n\n\tInterpolator.prototype.toString = function toString ( escape ) {\n\t\tvar string = this.getString();\n\t\treturn escape ? escapeHtml( string ) : string;\n\t};\n\n\tInterpolator.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\tif ( shouldDestroy ) this.detach();\n\t\tthis.rendered = false;\n\t};\n\n\tInterpolator.prototype.update = function update () {\n\t\tif ( this.dirty ) {\n\t\t\tthis.dirty = false;\n\t\t\tif ( this.rendered ) {\n\t\t\t\tthis.node.data = this.getString();\n\t\t\t}\n\t\t}\n\t};\n\n\tInterpolator.prototype.valueOf = function valueOf () {\n\t\treturn this.model ? this.model.get() : undefined;\n\t};\n\n\treturn Interpolator;\n}(Mustache));\n\nvar Input = (function (Element$$1) {\n\tfunction Input () {\n\t\tElement$$1.apply(this, arguments);\n\t}\n\n\tInput.prototype = Object.create( Element$$1 && Element$$1.prototype );\n\tInput.prototype.constructor = Input;\n\n\tInput.prototype.render = function render ( target, occupants ) {\n\t\tElement$$1.prototype.render.call( this, target, occupants );\n\t\tthis.node.defaultValue = this.node.value;\n\t};\n\n\treturn Input;\n}(Element));\n\nvar Mapping = (function (Item$$1) {\n\tfunction Mapping ( options ) {\n\t\tItem$$1.call( this, options );\n\n\t\tthis.name = options.template.n;\n\n\t\tthis.owner = options.owner || options.parentFragment.owner || options.element || findElement( options.parentFragment );\n\t\tthis.element = options.element || (this.owner.attributeByName ? this.owner : findElement( options.parentFragment ) );\n\t\tthis.parentFragment = this.element.parentFragment; // shared\n\t\tthis.ractive = this.parentFragment.ractive;\n\n\t\tthis.fragment = null;\n\n\t\tthis.element.attributeByName[ this.name ] = this;\n\n\t\tthis.value = options.template.f;\n\t}\n\n\tMapping.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\tMapping.prototype.constructor = Mapping;\n\n\tMapping.prototype.bind = function bind () {\n\t\tif ( this.fragment ) {\n\t\t\tthis.fragment.bind();\n\t\t}\n\n\t\tvar template = this.template.f;\n\t\tvar viewmodel = this.element.instance.viewmodel;\n\n\t\tif ( template === 0 ) {\n\t\t\t// empty attributes are `true`\n\t\t\tviewmodel.joinKey( this.name ).set( true );\n\t\t}\n\n\t\telse if ( typeof template === 'string' ) {\n\t\t\tvar parsed = parseJSON( template );\n\t\t\tviewmodel.joinKey( this.name ).set( parsed ? parsed.value : template );\n\t\t}\n\n\t\telse if ( isArray( template ) ) {\n\t\t\tcreateMapping( this, true );\n\t\t}\n\t};\n\n\tMapping.prototype.render = function render () {};\n\n\tMapping.prototype.unbind = function unbind () {\n\t\tif ( this.fragment ) this.fragment.unbind();\n\t\tif ( this.boundFragment ) this.boundFragment.unbind();\n\n\t\tif ( this.element.bound ) {\n\t\t\tif ( this.link.target === this.model ) this.link.owner.unlink();\n\t\t}\n\t};\n\n\tMapping.prototype.unrender = function unrender () {};\n\n\tMapping.prototype.update = function update () {\n\t\tif ( this.dirty ) {\n\t\t\tthis.dirty = false;\n\t\t\tif ( this.fragment ) this.fragment.update();\n\t\t\tif ( this.boundFragment ) this.boundFragment.update();\n\t\t\tif ( this.rendered ) this.updateDelegate();\n\t\t}\n\t};\n\n\treturn Mapping;\n}(Item));\n\nfunction createMapping ( item ) {\n\tvar template = item.template.f;\n\tvar viewmodel = item.element.instance.viewmodel;\n\tvar childData = viewmodel.value;\n\n\tif ( template.length === 1 && template[0].t === INTERPOLATOR ) {\n\t\titem.model = resolve$3( item.parentFragment, template[0] );\n\n\t\tif ( !item.model ) {\n\t\t\twarnOnceIfDebug( (\"The \" + (item.name) + \"='{{\" + (template[0].r) + \"}}' mapping is ambiguous, and may cause unexpected results. Consider initialising your data to eliminate the ambiguity\"), { ractive: item.element.instance }); // TODO add docs page explaining item\n\t\t\titem.parentFragment.ractive.get( item.name ); // side-effect: create mappings as necessary\n\t\t\titem.model = item.parentFragment.findContext().joinKey( item.name );\n\t\t}\n\n\t\titem.link = viewmodel.createLink( item.name, item.model, template[0].r );\n\n\t\tif ( item.model.get() === undefined && item.name in childData ) {\n\t\t\titem.model.set( childData[ item.name ] );\n\t\t}\n\t}\n\n\telse {\n\t\titem.boundFragment = new Fragment({\n\t\t\towner: item,\n\t\t\ttemplate: template\n\t\t}).bind();\n\n\t\titem.model = viewmodel.joinKey( item.name );\n\t\titem.model.set( item.boundFragment.valueOf() );\n\n\t\t// item is a *bit* of a hack\n\t\titem.boundFragment.bubble = function () {\n\t\t\tFragment.prototype.bubble.call( item.boundFragment );\n\t\t\t// defer this to avoid mucking around model deps if there happens to be an expression involved\n\t\t\trunloop.scheduleTask(function () {\n\t\t\t\titem.boundFragment.update();\n\t\t\t\titem.model.set( item.boundFragment.valueOf() );\n\t\t\t});\n\t\t};\n\t}\n}\n\nfunction findParentSelect ( element ) {\n\twhile ( element ) {\n\t\tif ( element.name === 'select' ) return element;\n\t\telement = element.parent;\n\t}\n}\n\nvar Option = (function (Element$$1) {\n\tfunction Option ( options ) {\n\t\tvar template = options.template;\n\t\tif ( !template.a ) template.a = {};\n\n\t\t// If the value attribute is missing, use the element's content,\n\t\t// as long as it isn't disabled\n\t\tif ( template.a.value === undefined && !( 'disabled' in template.a ) ) {\n\t\t\ttemplate.a.value = template.f || '';\n\t\t}\n\n\t\tElement$$1.call( this, options );\n\n\t\tthis.select = findParentSelect( this.parent );\n\t}\n\n\tOption.prototype = Object.create( Element$$1 && Element$$1.prototype );\n\tOption.prototype.constructor = Option;\n\n\tOption.prototype.bind = function bind () {\n\t\tif ( !this.select ) {\n\t\t\tElement$$1.prototype.bind.call(this);\n\t\t\treturn;\n\t\t}\n\n\t\t// If the select has a value, it overrides the `selected` attribute on\n\t\t// this option - so we delete the attribute\n\t\tvar selectedAttribute = this.attributeByName.selected;\n\t\tif ( selectedAttribute && this.select.getAttribute( 'value' ) !== undefined ) {\n\t\t\tvar index = this.attributes.indexOf( selectedAttribute );\n\t\t\tthis.attributes.splice( index, 1 );\n\t\t\tdelete this.attributeByName.selected;\n\t\t}\n\n\t\tElement$$1.prototype.bind.call(this);\n\t\tthis.select.options.push( this );\n\t};\n\n\tOption.prototype.bubble = function bubble () {\n\t\t// if we're using content as value, may need to update here\n\t\tvar value = this.getAttribute( 'value' );\n\t\tif ( this.node.value !== value ) {\n\t\t\tthis.node._ractive.value = value;\n\t\t}\n\t\tElement$$1.prototype.bubble.call(this);\n\t};\n\n\tOption.prototype.getAttribute = function getAttribute ( name ) {\n\t\tvar attribute = this.attributeByName[ name ];\n\t\treturn attribute ? attribute.getValue() : name === 'value' && this.fragment ? this.fragment.valueOf() : undefined;\n\t};\n\n\tOption.prototype.isSelected = function isSelected () {\n\t\tvar optionValue = this.getAttribute( 'value' );\n\n\t\tif ( optionValue === undefined || !this.select ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar selectValue = this.select.getAttribute( 'value' );\n\n\t\tif ( selectValue == optionValue ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( this.select.getAttribute( 'multiple' ) && isArray( selectValue ) ) {\n\t\t\tvar i = selectValue.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( selectValue[i] == optionValue ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tOption.prototype.render = function render ( target, occupants ) {\n\t\tElement$$1.prototype.render.call( this, target, occupants );\n\n\t\tif ( !this.attributeByName.value ) {\n\t\t\tthis.node._ractive.value = this.getAttribute( 'value' );\n\t\t}\n\t};\n\n\tOption.prototype.unbind = function unbind () {\n\t\tElement$$1.prototype.unbind.call(this);\n\n\t\tif ( this.select ) {\n\t\t\tremoveFromArray( this.select.options, this );\n\t\t}\n\t};\n\n\treturn Option;\n}(Element));\n\nfunction getPartialTemplate ( ractive, name, parentFragment ) {\n\t// If the partial in instance or view heirarchy instances, great\n\tvar partial = getPartialFromRegistry( ractive, name, parentFragment || {} );\n\tif ( partial ) return partial;\n\n\t// Does it exist on the page as a script tag?\n\tpartial = parser.fromId( name, { noThrow: true } );\n\tif ( partial ) {\n\t\t// parse and register to this ractive instance\n\t\tvar parsed = parser.parseFor( partial, ractive );\n\n\t\t// register extra partials on the ractive instance if they don't already exist\n\t\tif ( parsed.p ) fillGaps( ractive.partials, parsed.p );\n\n\t\t// register (and return main partial if there are others in the template)\n\t\treturn ractive.partials[ name ] = parsed.t;\n\t}\n}\n\nfunction getPartialFromRegistry ( ractive, name, parentFragment ) {\n\t// if there was an instance up-hierarchy, cool\n\tvar partial = findParentPartial( name, parentFragment.owner );\n\tif ( partial ) return partial;\n\n\t// find first instance in the ractive or view hierarchy that has this partial\n\tvar instance = findInstance( 'partials', ractive, name );\n\n\tif ( !instance ) { return; }\n\n\tpartial = instance.partials[ name ];\n\n\t// partial is a function?\n\tvar fn;\n\tif ( typeof partial === 'function' ) {\n\t\tfn = partial.bind( instance );\n\t\tfn.isOwner = instance.partials.hasOwnProperty(name);\n\t\tpartial = fn.call( ractive, parser );\n\t}\n\n\tif ( !partial && partial !== '' ) {\n\t\twarnIfDebug( noRegistryFunctionReturn, name, 'partial', 'partial', { ractive: ractive });\n\t\treturn;\n\t}\n\n\t// If this was added manually to the registry,\n\t// but hasn't been parsed, parse it now\n\tif ( !parser.isParsed( partial ) ) {\n\t\t// use the parseOptions of the ractive instance on which it was found\n\t\tvar parsed = parser.parseFor( partial, instance );\n\n\t\t// Partials cannot contain nested partials!\n\t\t// TODO add a test for this\n\t\tif ( parsed.p ) {\n\t\t\twarnIfDebug( 'Partials ({{>%s}}) cannot contain nested inline partials', name, { ractive: ractive });\n\t\t}\n\n\t\t// if fn, use instance to store result, otherwise needs to go\n\t\t// in the correct point in prototype chain on instance or constructor\n\t\tvar target = fn ? instance : findOwner( instance, name );\n\n\t\t// may be a template with partials, which need to be registered and main template extracted\n\t\ttarget.partials[ name ] = partial = parsed.t;\n\t}\n\n\t// store for reset\n\tif ( fn ) partial._fn = fn;\n\n\treturn partial.v ? partial.t : partial;\n}\n\nfunction findOwner ( ractive, key ) {\n\treturn ractive.partials.hasOwnProperty( key )\n\t\t? ractive\n\t\t: findConstructor( ractive.constructor, key);\n}\n\nfunction findConstructor ( constructor, key ) {\n\tif ( !constructor ) { return; }\n\treturn constructor.partials.hasOwnProperty( key )\n\t\t? constructor\n\t\t: findConstructor( constructor._Parent, key );\n}\n\nfunction findParentPartial( name, parent ) {\n\tif ( parent ) {\n\t\tif ( parent.template && parent.template.p && parent.template.p[name] ) {\n\t\t\treturn parent.template.p[name];\n\t\t} else if ( parent.parentFragment && parent.parentFragment.owner ) {\n\t\t\treturn findParentPartial( name, parent.parentFragment.owner );\n\t\t}\n\t}\n}\n\nvar Partial = (function (Mustache$$1) {\n\tfunction Partial () {\n\t\tMustache$$1.apply(this, arguments);\n\t}\n\n\tPartial.prototype = Object.create( Mustache$$1 && Mustache$$1.prototype );\n\tPartial.prototype.constructor = Partial;\n\n\tPartial.prototype.bind = function bind () {\n\t\t// keep track of the reference name for future resets\n\t\tthis.refName = this.template.r;\n\n\t\t// name matches take priority over expressions\n\t\tvar template = this.refName ? getPartialTemplate( this.ractive, this.refName, this.parentFragment ) || null : null;\n\t\tvar templateObj;\n\n\t\tif ( template ) {\n\t\t\tthis.named = true;\n\t\t\tthis.setTemplate( this.template.r, template );\n\t\t}\n\n\t\tif ( !template ) {\n\t\t\tMustache$$1.prototype.bind.call(this);\n\t\t\tif ( this.model && ( templateObj = this.model.get() ) && typeof templateObj === 'object' && ( typeof templateObj.template === 'string' || isArray( templateObj.t ) ) ) {\n\t\t\t\tif ( templateObj.template ) {\n\t\t\t\t\tthis.source = templateObj.template;\n\t\t\t\t\ttemplateObj = parsePartial( this.template.r, templateObj.template, this.ractive );\n\t\t\t\t} else {\n\t\t\t\t\tthis.source = templateObj.t;\n\t\t\t\t}\n\t\t\t\tthis.setTemplate( this.template.r, templateObj.t );\n\t\t\t} else if ( ( !this.model || typeof this.model.get() !== 'string' ) && this.refName ) {\n\t\t\t\tthis.setTemplate( this.refName, template );\n\t\t\t} else {\n\t\t\t\tthis.setTemplate( this.model.get() );\n\t\t\t}\n\t\t}\n\n\t\tthis.fragment = new Fragment({\n\t\t\towner: this,\n\t\t\ttemplate: this.partialTemplate\n\t\t}).bind();\n\t};\n\n\tPartial.prototype.destroyed = function destroyed () {\n\t\tthis.fragment.destroyed();\n\t};\n\n\tPartial.prototype.detach = function detach () {\n\t\treturn this.fragment.detach();\n\t};\n\n\tPartial.prototype.find = function find ( selector ) {\n\t\treturn this.fragment.find( selector );\n\t};\n\n\tPartial.prototype.findAll = function findAll ( selector, query ) {\n\t\tthis.fragment.findAll( selector, query );\n\t};\n\n\tPartial.prototype.findComponent = function findComponent ( name ) {\n\t\treturn this.fragment.findComponent( name );\n\t};\n\n\tPartial.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\tthis.fragment.findAllComponents( name, query );\n\t};\n\n\tPartial.prototype.firstNode = function firstNode ( skipParent ) {\n\t\treturn this.fragment.firstNode( skipParent );\n\t};\n\n\tPartial.prototype.forceResetTemplate = function forceResetTemplate () {\n\t\tvar this$1 = this;\n\n\t\tthis.partialTemplate = undefined;\n\n\t\t// on reset, check for the reference name first\n\t\tif ( this.refName ) {\n\t\t\tthis.partialTemplate = getPartialTemplate( this.ractive, this.refName, this.parentFragment );\n\t\t}\n\n\t\t// then look for the resolved name\n\t\tif ( !this.partialTemplate ) {\n\t\t\tthis.partialTemplate = getPartialTemplate( this.ractive, this.name, this.parentFragment );\n\t\t}\n\n\t\tif ( !this.partialTemplate ) {\n\t\t\twarnOnceIfDebug( (\"Could not find template for partial '\" + (this.name) + \"'\") );\n\t\t\tthis.partialTemplate = [];\n\t\t}\n\n\t\tif ( this.inAttribute ) {\n\t\t\tdoInAttributes( function () { return this$1.fragment.resetTemplate( this$1.partialTemplate ); } );\n\t\t} else {\n\t\t\tthis.fragment.resetTemplate( this.partialTemplate );\n\t\t}\n\n\t\tthis.bubble();\n\t};\n\n\tPartial.prototype.render = function render ( target, occupants ) {\n\t\tthis.fragment.render( target, occupants );\n\t};\n\n\tPartial.prototype.setTemplate = function setTemplate ( name, template ) {\n\t\tthis.name = name;\n\n\t\tif ( !template && template !== null ) template = getPartialTemplate( this.ractive, name, this.parentFragment );\n\n\t\tif ( !template ) {\n\t\t\twarnOnceIfDebug( (\"Could not find template for partial '\" + name + \"'\") );\n\t\t}\n\n\t\tthis.partialTemplate = template || [];\n\t};\n\n\tPartial.prototype.toString = function toString ( escape ) {\n\t\treturn this.fragment.toString( escape );\n\t};\n\n\tPartial.prototype.unbind = function unbind () {\n\t\tMustache$$1.prototype.unbind.call(this);\n\t\tthis.fragment.unbind();\n\t};\n\n\tPartial.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\tthis.fragment.unrender( shouldDestroy );\n\t};\n\n\tPartial.prototype.update = function update () {\n\t\tvar template;\n\n\t\tif ( this.dirty ) {\n\t\t\tthis.dirty = false;\n\n\t\t\tif ( !this.named ) {\n\t\t\t\tif ( this.model ) {\n\t\t\t\t\ttemplate = this.model.get();\n\t\t\t\t}\n\n\t\t\t\tif ( template && typeof template === 'string' && template !== this.name ) {\n\t\t\t\t\tthis.setTemplate( template );\n\t\t\t\t\tthis.fragment.resetTemplate( this.partialTemplate );\n\t\t\t\t} else if ( template && typeof template === 'object' && ( typeof template.template === 'string' || isArray( template.t ) ) ) {\n\t\t\t\t\tif ( template.t !== this.source && template.template !== this.source ) {\n\t\t\t\t\t\tif ( template.template ) {\n\t\t\t\t\t\t\tthis.source = template.template;\n\t\t\t\t\t\t\ttemplate = parsePartial( this.name, template.template, this.ractive );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.source = template.t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setTemplate( this.name, template.t );\n\t\t\t\t\t\tthis.fragment.resetTemplate( this.partialTemplate );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.fragment.update();\n\t\t}\n\t};\n\n\treturn Partial;\n}(Mustache));\n\nfunction parsePartial( name, partial, ractive ) {\n\tvar parsed;\n\n\ttry {\n\t\tparsed = parser.parse( partial, parser.getParseOptions( ractive ) );\n\t} catch (e) {\n\t\twarnIfDebug( (\"Could not parse partial from expression '\" + name + \"'\\n\" + (e.message)) );\n\t}\n\n\treturn parsed || { t: [] };\n}\n\nvar RepeatedFragment = function RepeatedFragment ( options ) {\n\tthis.parent = options.owner.parentFragment;\n\n\t// bit of a hack, so reference resolution works without another\n\t// layer of indirection\n\tthis.parentFragment = this;\n\tthis.owner = options.owner;\n\tthis.ractive = this.parent.ractive;\n\n\t// encapsulated styles should be inherited until they get applied by an element\n\tthis.cssIds = 'cssIds' in options ? options.cssIds : ( this.parent ? this.parent.cssIds : null );\n\n\tthis.context = null;\n\tthis.rendered = false;\n\tthis.iterations = [];\n\n\tthis.template = options.template;\n\n\tthis.indexRef = options.indexRef;\n\tthis.keyRef = options.keyRef;\n\n\tthis.pendingNewIndices = null;\n\tthis.previousIterations = null;\n\n\t// track array versus object so updates of type rest\n\tthis.isArray = false;\n};\n\nRepeatedFragment.prototype.bind = function bind ( context ) {\n\tvar this$1 = this;\n\n\t\tthis.context = context;\n\tvar value = context.get();\n\n\t// {{#each array}}...\n\tif ( this.isArray = isArray( value ) ) {\n\t\t// we can't use map, because of sparse arrays\n\t\tthis.iterations = [];\n\t\tvar max = value.length;\n\t\tfor ( var i = 0; i < max; i += 1 ) {\n\t\t\tthis$1.iterations[i] = this$1.createIteration( i, i );\n\t\t}\n\t}\n\n\t// {{#each object}}...\n\telse if ( isObject( value ) ) {\n\t\tthis.isArray = false;\n\n\t\t// TODO this is a dreadful hack. There must be a neater way\n\t\tif ( this.indexRef ) {\n\t\t\tvar refs = this.indexRef.split( ',' );\n\t\t\tthis.keyRef = refs[0];\n\t\t\tthis.indexRef = refs[1];\n\t\t}\n\n\t\tthis.iterations = Object.keys( value ).map( function ( key, index ) {\n\t\t\treturn this$1.createIteration( key, index );\n\t\t});\n\t}\n\n\treturn this;\n};\n\nRepeatedFragment.prototype.bubble = function bubble () {\n\tthis.owner.bubble();\n};\n\nRepeatedFragment.prototype.createIteration = function createIteration ( key, index ) {\n\tvar fragment = new Fragment({\n\t\towner: this,\n\t\ttemplate: this.template\n\t});\n\n\t// TODO this is a bit hacky\n\tfragment.key = key;\n\tfragment.index = index;\n\tfragment.isIteration = true;\n\n\tvar model = this.context.joinKey( key );\n\n\t// set up an iteration alias if there is one\n\tif ( this.owner.template.z ) {\n\t\tfragment.aliases = {};\n\t\tfragment.aliases[ this.owner.template.z[0].n ] = model;\n\t}\n\n\treturn fragment.bind( model );\n};\n\nRepeatedFragment.prototype.destroyed = function destroyed () {\n\tthis.iterations.forEach( function ( i ) { return i.destroyed(); } );\n};\n\nRepeatedFragment.prototype.detach = function detach () {\n\tvar docFrag = createDocumentFragment();\n\tthis.iterations.forEach( function ( fragment ) { return docFrag.appendChild( fragment.detach() ); } );\n\treturn docFrag;\n};\n\nRepeatedFragment.prototype.find = function find ( selector ) {\n\tvar this$1 = this;\n\n\t\tvar len = this.iterations.length;\n\tvar i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tvar found = this$1.iterations[i].find( selector );\n\t\tif ( found ) return found;\n\t}\n};\n\nRepeatedFragment.prototype.findAll = function findAll ( selector, query ) {\n\tvar this$1 = this;\n\n\t\tvar len = this.iterations.length;\n\tvar i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tthis$1.iterations[i].findAll( selector, query );\n\t}\n};\n\nRepeatedFragment.prototype.findComponent = function findComponent ( name ) {\n\tvar this$1 = this;\n\n\t\tvar len = this.iterations.length;\n\tvar i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tvar found = this$1.iterations[i].findComponent( name );\n\t\tif ( found ) return found;\n\t}\n};\n\nRepeatedFragment.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\tvar this$1 = this;\n\n\t\tvar len = this.iterations.length;\n\tvar i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tthis$1.iterations[i].findAllComponents( name, query );\n\t}\n};\n\nRepeatedFragment.prototype.findNextNode = function findNextNode ( iteration ) {\n\tvar this$1 = this;\n\n\t\tif ( iteration.index < this.iterations.length - 1 ) {\n\t\tfor ( var i = iteration.index + 1; i < this$1.iterations.length; i++ ) {\n\t\t\tvar node = this$1.iterations[ i ].firstNode( true );\n\t\t\tif ( node ) return node;\n\t\t}\n\t}\n\n\treturn this.owner.findNextNode();\n};\n\nRepeatedFragment.prototype.firstNode = function firstNode ( skipParent ) {\n\treturn this.iterations[0] ? this.iterations[0].firstNode( skipParent ) : null;\n};\n\nRepeatedFragment.prototype.rebinding = function rebinding ( next ) {\n\tvar this$1 = this;\n\n\t\tthis.context = next;\n\tthis.iterations.forEach( function ( fragment ) {\n\t\tvar model = next ? next.joinKey( fragment.key || fragment.index ) : undefined;\n\t\tfragment.context = model;\n\t\tif ( this$1.owner.template.z ) {\n\t\t\tfragment.aliases = {};\n\t\t\tfragment.aliases[ this$1.owner.template.z[0].n ] = model;\n\t\t}\n\t});\n};\n\nRepeatedFragment.prototype.render = function render ( target, occupants ) {\n\t// TODO use docFrag.cloneNode...\n\n\tif ( this.iterations ) {\n\t\tthis.iterations.forEach( function ( fragment ) { return fragment.render( target, occupants ); } );\n\t}\n\n\tthis.rendered = true;\n};\n\nRepeatedFragment.prototype.shuffle = function shuffle ( newIndices ) {\n\tvar this$1 = this;\n\n\t\tif ( !this.pendingNewIndices ) this.previousIterations = this.iterations.slice();\n\n\tif ( !this.pendingNewIndices ) this.pendingNewIndices = [];\n\n\tthis.pendingNewIndices.push( newIndices );\n\n\tvar iterations = [];\n\n\tnewIndices.forEach( function ( newIndex, oldIndex ) {\n\t\tif ( newIndex === -1 ) return;\n\n\t\tvar fragment = this$1.iterations[ oldIndex ];\n\t\titerations[ newIndex ] = fragment;\n\n\t\tif ( newIndex !== oldIndex && fragment ) fragment.dirty = true;\n\t});\n\n\tthis.iterations = iterations;\n\n\tthis.bubble();\n};\n\nRepeatedFragment.prototype.shuffled = function shuffled () {\n\tthis.iterations.forEach( function ( i ) { return i.shuffled(); } );\n};\n\nRepeatedFragment.prototype.toString = function toString$1 ( escape ) {\n\treturn this.iterations ?\n\t\tthis.iterations.map( escape ? toEscapedString : toString$2 ).join( '' ) :\n\t\t'';\n};\n\nRepeatedFragment.prototype.unbind = function unbind$1 () {\n\tthis.iterations.forEach( unbind$1$1 );\n\treturn this;\n};\n\nRepeatedFragment.prototype.unrender = function unrender$1 ( shouldDestroy ) {\n\tthis.iterations.forEach( shouldDestroy ? unrenderAndDestroy : unrender$1$1 );\n\tif ( this.pendingNewIndices && this.previousIterations ) {\n\t\tthis.previousIterations.forEach( function ( fragment ) {\n\t\t\tif ( fragment.rendered ) shouldDestroy ? unrenderAndDestroy( fragment ) : unrender$1$1( fragment );\n\t\t});\n\t}\n\tthis.rendered = false;\n};\n\n// TODO smart update\nRepeatedFragment.prototype.update = function update$1 () {\n\t// skip dirty check, since this is basically just a facade\n\n\tvar this$1 = this;\n\n\t\tif ( this.pendingNewIndices ) {\n\t\tthis.updatePostShuffle();\n\t\treturn;\n\t}\n\n\tif ( this.updating ) return;\n\tthis.updating = true;\n\n\tvar value = this.context.get(),\n\t\t\t  wasArray = this.isArray;\n\n\tvar toRemove;\n\tvar oldKeys;\n\tvar reset = true;\n\tvar i;\n\n\tif ( this.isArray = isArray( value ) ) {\n\t\tif ( wasArray ) {\n\t\t\treset = false;\n\t\t\tif ( this.iterations.length > value.length ) {\n\t\t\t\ttoRemove = this.iterations.splice( value.length );\n\t\t\t}\n\t\t}\n\t} else if ( isObject( value ) && !wasArray ) {\n\t\treset = false;\n\t\ttoRemove = [];\n\t\toldKeys = {};\n\t\ti = this.iterations.length;\n\n\t\twhile ( i-- ) {\n\t\t\tvar fragment$1 = this$1.iterations[i];\n\t\t\tif ( fragment$1.key in value ) {\n\t\t\t\toldKeys[ fragment$1.key ] = true;\n\t\t\t} else {\n\t\t\t\tthis$1.iterations.splice( i, 1 );\n\t\t\t\ttoRemove.push( fragment$1 );\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( reset ) {\n\t\ttoRemove = this.iterations;\n\t\tthis.iterations = [];\n\t}\n\n\tif ( toRemove ) {\n\t\ttoRemove.forEach( function ( fragment ) {\n\t\t\tfragment.unbind();\n\t\t\tfragment.unrender( true );\n\t\t});\n\t}\n\n\t// update the remaining ones\n\tthis.iterations.forEach( update$1$1 );\n\n\t// add new iterations\n\tvar newLength = isArray( value ) ?\n\t\tvalue.length :\n\t\tisObject( value ) ?\n\t\t\tObject.keys( value ).length :\n\t\t\t0;\n\n\tvar docFrag;\n\tvar fragment;\n\n\tif ( newLength > this.iterations.length ) {\n\t\tdocFrag = this.rendered ? createDocumentFragment() : null;\n\t\ti = this.iterations.length;\n\n\t\tif ( isArray( value ) ) {\n\t\t\twhile ( i < value.length ) {\n\t\t\t\tfragment = this$1.createIteration( i, i );\n\n\t\t\t\tthis$1.iterations.push( fragment );\n\t\t\t\tif ( this$1.rendered ) fragment.render( docFrag );\n\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t}\n\n\t\telse if ( isObject( value ) ) {\n\t\t\t// TODO this is a dreadful hack. There must be a neater way\n\t\t\tif ( this.indexRef && !this.keyRef ) {\n\t\t\t\tvar refs = this.indexRef.split( ',' );\n\t\t\t\tthis.keyRef = refs[0];\n\t\t\t\tthis.indexRef = refs[1];\n\t\t\t}\n\n\t\t\tObject.keys( value ).forEach( function ( key ) {\n\t\t\t\tif ( !oldKeys || !( key in oldKeys ) ) {\n\t\t\t\t\tfragment = this$1.createIteration( key, i );\n\n\t\t\t\t\tthis$1.iterations.push( fragment );\n\t\t\t\t\tif ( this$1.rendered ) fragment.render( docFrag );\n\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif ( this.rendered ) {\n\t\t\tvar parentNode = this.parent.findParentNode();\n\t\t\tvar anchor = this.parent.findNextNode( this.owner );\n\n\t\t\tparentNode.insertBefore( docFrag, anchor );\n\t\t}\n\t}\n\n\tthis.updating = false;\n};\n\nRepeatedFragment.prototype.updatePostShuffle = function updatePostShuffle () {\n\tvar this$1 = this;\n\n\t\tvar newIndices = this.pendingNewIndices[ 0 ];\n\n\t// map first shuffle through\n\tthis.pendingNewIndices.slice( 1 ).forEach( function ( indices ) {\n\t\tnewIndices.forEach( function ( newIndex, oldIndex ) {\n\t\t\tnewIndices[ oldIndex ] = indices[ newIndex ];\n\t\t});\n\t});\n\n\t// This algorithm (for detaching incorrectly-ordered fragments from the DOM and\n\t// storing them in a document fragment for later reinsertion) seems a bit hokey,\n\t// but it seems to work for now\n\tvar len = this.context.get().length, oldLen = this.previousIterations.length;\n\tvar i;\n\tvar removed = {};\n\n\tnewIndices.forEach( function ( newIndex, oldIndex ) {\n\t\tvar fragment = this$1.previousIterations[ oldIndex ];\n\t\tthis$1.previousIterations[ oldIndex ] = null;\n\n\t\tif ( newIndex === -1 ) {\n\t\t\tremoved[ oldIndex ] = fragment;\n\t\t} else if ( fragment.index !== newIndex ) {\n\t\t\tvar model = this$1.context.joinKey( newIndex );\n\t\t\tfragment.index = newIndex;\n\t\t\tfragment.context = model;\n\t\t\tif ( this$1.owner.template.z ) {\n\t\t\t\tfragment.aliases = {};\n\t\t\t\tfragment.aliases[ this$1.owner.template.z[0].n ] = model;\n\t\t\t}\n\t\t}\n\t});\n\n\t// if the array was spliced outside of ractive, sometimes there are leftover fragments not in the newIndices\n\tthis.previousIterations.forEach( function ( frag, i ) {\n\t\tif ( frag ) removed[ i ] = frag;\n\t});\n\n\t// create new/move existing iterations\n\tvar docFrag = this.rendered ? createDocumentFragment() : null;\n\tvar parentNode = this.rendered ? this.parent.findParentNode() : null;\n\n\tvar contiguous = 'startIndex' in newIndices;\n\ti = contiguous ? newIndices.startIndex : 0;\n\n\tfor ( i; i < len; i++ ) {\n\t\tvar frag = this$1.iterations[i];\n\n\t\tif ( frag && contiguous ) {\n\t\t\t// attach any built-up iterations\n\t\t\tif ( this$1.rendered ) {\n\t\t\t\tif ( removed[i] ) docFrag.appendChild( removed[i].detach() );\n\t\t\t\tif ( docFrag.childNodes.length  ) parentNode.insertBefore( docFrag, frag.firstNode() );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( !frag ) this$1.iterations[i] = this$1.createIteration( i, i );\n\n\t\tif ( this$1.rendered ) {\n\t\t\tif ( removed[i] ) docFrag.appendChild( removed[i].detach() );\n\n\t\t\tif ( frag ) docFrag.appendChild( frag.detach() );\n\t\t\telse {\n\t\t\t\tthis$1.iterations[i].render( docFrag );\n\t\t\t}\n\t\t}\n\t}\n\n\t// append any leftovers\n\tif ( this.rendered ) {\n\t\tfor ( i = len; i < oldLen; i++ ) {\n\t\t\tif ( removed[i] ) docFrag.appendChild( removed[i].detach() );\n\t\t}\n\n\t\tif ( docFrag.childNodes.length ) {\n\t\t\tparentNode.insertBefore( docFrag, this.owner.findNextNode() );\n\t\t}\n\t}\n\n\t// trigger removal on old nodes\n\tObject.keys( removed ).forEach( function ( k ) { return removed[k].unbind().unrender( true ); } );\n\n\tthis.iterations.forEach( update$1$1 );\n\n\tthis.pendingNewIndices = null;\n\n\tthis.shuffled();\n};\n\nfunction isEmpty ( value ) {\n\treturn !value ||\n\t       ( isArray( value ) && value.length === 0 ) ||\n\t\t   ( isObject( value ) && Object.keys( value ).length === 0 );\n}\n\nfunction getType ( value, hasIndexRef ) {\n\tif ( hasIndexRef || isArray( value ) ) return SECTION_EACH;\n\tif ( isObject( value ) || typeof value === 'function' ) return SECTION_IF_WITH;\n\tif ( value === undefined ) return null;\n\treturn SECTION_IF;\n}\n\nvar Section = (function (Mustache$$1) {\n\tfunction Section ( options ) {\n\t\tMustache$$1.call( this, options );\n\n\t\tthis.sectionType = options.template.n || null;\n\t\tthis.templateSectionType = this.sectionType;\n\t\tthis.subordinate = options.template.l === 1;\n\t\tthis.fragment = null;\n\t}\n\n\tSection.prototype = Object.create( Mustache$$1 && Mustache$$1.prototype );\n\tSection.prototype.constructor = Section;\n\n\tSection.prototype.bind = function bind () {\n\t\tMustache$$1.prototype.bind.call(this);\n\n\t\tif ( this.subordinate ) {\n\t\t\tthis.sibling = this.parentFragment.items[ this.parentFragment.items.indexOf( this ) - 1 ];\n\t\t\tthis.sibling.nextSibling = this;\n\t\t}\n\n\t\t// if we managed to bind, we need to create children\n\t\tif ( this.model ) {\n\t\t\tthis.dirty = true;\n\t\t\tthis.update();\n\t\t} else if ( this.sectionType && this.sectionType === SECTION_UNLESS && ( !this.sibling || !this.sibling.isTruthy() ) ) {\n\t\t\tthis.fragment = new Fragment({\n\t\t\t\towner: this,\n\t\t\t\ttemplate: this.template.f\n\t\t\t}).bind();\n\t\t}\n\t};\n\n\tSection.prototype.destroyed = function destroyed () {\n\t\tif ( this.fragment ) this.fragment.destroyed();\n\t};\n\n\tSection.prototype.detach = function detach () {\n\t\treturn this.fragment ? this.fragment.detach() : createDocumentFragment();\n\t};\n\n\tSection.prototype.find = function find ( selector ) {\n\t\tif ( this.fragment ) {\n\t\t\treturn this.fragment.find( selector );\n\t\t}\n\t};\n\n\tSection.prototype.findAll = function findAll ( selector, query ) {\n\t\tif ( this.fragment ) {\n\t\t\tthis.fragment.findAll( selector, query );\n\t\t}\n\t};\n\n\tSection.prototype.findComponent = function findComponent ( name ) {\n\t\tif ( this.fragment ) {\n\t\t\treturn this.fragment.findComponent( name );\n\t\t}\n\t};\n\n\tSection.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\t\tif ( this.fragment ) {\n\t\t\tthis.fragment.findAllComponents( name, query );\n\t\t}\n\t};\n\n\tSection.prototype.firstNode = function firstNode ( skipParent ) {\n\t\treturn this.fragment && this.fragment.firstNode( skipParent );\n\t};\n\n\tSection.prototype.isTruthy = function isTruthy () {\n\t\tif ( this.subordinate && this.sibling.isTruthy() ) return true;\n\t\tvar value = !this.model ? undefined : this.model.isRoot ? this.model.value : this.model.get();\n\t\treturn !!value && !isEmpty( value );\n\t};\n\n\tSection.prototype.rebinding = function rebinding ( next, previous, safe ) {\n\t\tif ( Mustache$$1.prototype.rebinding.call( this, next, previous, safe ) ) {\n\t\t\tif ( this.fragment && this.sectionType !== SECTION_IF && this.sectionType !== SECTION_UNLESS ) {\n\t\t\t\tthis.fragment.rebinding( next, previous );\n\t\t\t}\n\t\t}\n\t};\n\n\tSection.prototype.render = function render ( target, occupants ) {\n\t\tthis.rendered = true;\n\t\tif ( this.fragment ) this.fragment.render( target, occupants );\n\t};\n\n\tSection.prototype.shuffle = function shuffle ( newIndices ) {\n\t\tif ( this.fragment && this.sectionType === SECTION_EACH ) {\n\t\t\tthis.fragment.shuffle( newIndices );\n\t\t}\n\t};\n\n\tSection.prototype.toString = function toString ( escape ) {\n\t\treturn this.fragment ? this.fragment.toString( escape ) : '';\n\t};\n\n\tSection.prototype.unbind = function unbind () {\n\t\tMustache$$1.prototype.unbind.call(this);\n\t\tif ( this.fragment ) this.fragment.unbind();\n\t};\n\n\tSection.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\tif ( this.rendered && this.fragment ) this.fragment.unrender( shouldDestroy );\n\t\tthis.rendered = false;\n\t};\n\n\tSection.prototype.update = function update () {\n\t\tif ( !this.dirty ) return;\n\n\t\tif ( this.fragment && this.sectionType !== SECTION_IF && this.sectionType !== SECTION_UNLESS ) {\n\t\t\tthis.fragment.context = this.model;\n\t\t}\n\n\t\tif ( !this.model && this.sectionType !== SECTION_UNLESS ) return;\n\n\t\tthis.dirty = false;\n\n\t\tvar value = !this.model ? undefined : this.model.isRoot ? this.model.value : this.model.get();\n\t\tvar siblingFalsey = !this.subordinate || !this.sibling.isTruthy();\n\t\tvar lastType = this.sectionType;\n\n\t\t// watch for switching section types\n\t\tif ( this.sectionType === null || this.templateSectionType === null ) this.sectionType = getType( value, this.template.i );\n\t\tif ( lastType && lastType !== this.sectionType && this.fragment ) {\n\t\t\tif ( this.rendered ) {\n\t\t\t\tthis.fragment.unbind().unrender( true );\n\t\t\t}\n\n\t\t\tthis.fragment = null;\n\t\t}\n\n\t\tvar newFragment;\n\n\t\tif ( this.sectionType === SECTION_EACH ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\tthis.fragment.update();\n\t\t\t} else {\n\t\t\t\t// TODO can this happen?\n\t\t\t\tnewFragment = new RepeatedFragment({\n\t\t\t\t\towner: this,\n\t\t\t\t\ttemplate: this.template.f,\n\t\t\t\t\tindexRef: this.template.i\n\t\t\t\t}).bind( this.model );\n\t\t\t}\n\t\t}\n\n\t\t// WITH is now IF_WITH; WITH is only used for {{>partial context}}\n\t\telse if ( this.sectionType === SECTION_WITH ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\tthis.fragment.update();\n\t\t\t} else {\n\t\t\t\tnewFragment = new Fragment({\n\t\t\t\t\towner: this,\n\t\t\t\t\ttemplate: this.template.f\n\t\t\t\t}).bind( this.model );\n\t\t\t}\n\t\t}\n\n\t\telse if ( this.sectionType === SECTION_IF_WITH ) {\n\t\t\tif ( this.fragment ) {\n\t\t\t\tif ( isEmpty( value ) ) {\n\t\t\t\t\tif ( this.rendered ) {\n\t\t\t\t\t\tthis.fragment.unbind().unrender( true );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.fragment = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragment.update();\n\t\t\t\t}\n\t\t\t} else if ( !isEmpty( value ) ) {\n\t\t\t\tnewFragment = new Fragment({\n\t\t\t\t\towner: this,\n\t\t\t\t\ttemplate: this.template.f\n\t\t\t\t}).bind( this.model );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tvar fragmentShouldExist = siblingFalsey && ( this.sectionType === SECTION_UNLESS ? isEmpty( value ) : !!value && !isEmpty( value ) );\n\n\t\t\tif ( this.fragment ) {\n\t\t\t\tif ( fragmentShouldExist ) {\n\t\t\t\t\tthis.fragment.update();\n\t\t\t\t} else {\n\t\t\t\t\tif ( this.rendered ) {\n\t\t\t\t\t\tthis.fragment.unbind().unrender( true );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.fragment = null;\n\t\t\t\t}\n\t\t\t} else if ( fragmentShouldExist ) {\n\t\t\t\tnewFragment = new Fragment({\n\t\t\t\t\towner: this,\n\t\t\t\t\ttemplate: this.template.f\n\t\t\t\t}).bind( null );\n\t\t\t}\n\t\t}\n\n\t\tif ( newFragment ) {\n\t\t\tif ( this.rendered ) {\n\t\t\t\tvar parentNode = this.parentFragment.findParentNode();\n\t\t\t\tvar anchor = this.parentFragment.findNextNode( this );\n\n\t\t\t\tif ( anchor ) {\n\t\t\t\t\tvar docFrag = createDocumentFragment();\n\t\t\t\t\tnewFragment.render( docFrag );\n\n\t\t\t\t\t// we use anchor.parentNode, not parentNode, because the sibling\n\t\t\t\t\t// may be temporarily detached as a result of a shuffle\n\t\t\t\t\tanchor.parentNode.insertBefore( docFrag, anchor );\n\t\t\t\t} else {\n\t\t\t\t\tnewFragment.render( parentNode );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.fragment = newFragment;\n\t\t}\n\n\t\tif ( this.nextSibling ) {\n\t\t\tthis.nextSibling.dirty = true;\n\t\t\tthis.nextSibling.update();\n\t\t}\n\t};\n\n\treturn Section;\n}(Mustache));\n\nfunction valueContains ( selectValue, optionValue ) {\n\tvar i = selectValue.length;\n\twhile ( i-- ) {\n\t\tif ( selectValue[i] == optionValue ) return true;\n\t}\n}\n\nvar Select = (function (Element$$1) {\n\tfunction Select ( options ) {\n\t\tElement$$1.call( this, options );\n\t\tthis.options = [];\n\t}\n\n\tSelect.prototype = Object.create( Element$$1 && Element$$1.prototype );\n\tSelect.prototype.constructor = Select;\n\n\tSelect.prototype.foundNode = function foundNode ( node ) {\n\t\tif ( this.binding ) {\n\t\t\tvar selectedOptions = getSelectedOptions( node );\n\n\t\t\tif ( selectedOptions.length > 0 ) {\n\t\t\t\tthis.selectedOptions = selectedOptions;\n\t\t\t}\n\t\t}\n\t};\n\n\tSelect.prototype.render = function render ( target, occupants ) {\n\t\tElement$$1.prototype.render.call( this, target, occupants );\n\t\tthis.sync();\n\n\t\tvar node = this.node;\n\n\t\tvar i = node.options.length;\n\t\twhile ( i-- ) {\n\t\t\tnode.options[i].defaultSelected = node.options[i].selected;\n\t\t}\n\n\t\tthis.rendered = true;\n\t};\n\n\tSelect.prototype.sync = function sync () {\n\t\tvar this$1 = this;\n\n\t\tvar selectNode = this.node;\n\n\t\tif ( !selectNode ) return;\n\n\t\tvar options = toArray( selectNode.options );\n\n\t\tif ( this.selectedOptions ) {\n\t\t\toptions.forEach( function ( o ) {\n\t\t\t\tif ( this$1.selectedOptions.indexOf( o ) >= 0 ) o.selected = true;\n\t\t\t\telse o.selected = false;\n\t\t\t});\n\t\t\tthis.binding.setFromNode( selectNode );\n\t\t\tdelete this.selectedOptions;\n\t\t\treturn;\n\t\t}\n\n\t\tvar selectValue = this.getAttribute( 'value' );\n\t\tvar isMultiple = this.getAttribute( 'multiple' );\n\n\t\t// If the <select> has a specified value, that should override\n\t\t// these options\n\t\tif ( selectValue !== undefined ) {\n\t\t\tvar optionWasSelected;\n\n\t\t\toptions.forEach( function ( o ) {\n\t\t\t\tvar optionValue = o._ractive ? o._ractive.value : o.value;\n\t\t\t\tvar shouldSelect = isMultiple ? valueContains( selectValue, optionValue ) : selectValue == optionValue;\n\n\t\t\t\tif ( shouldSelect ) {\n\t\t\t\t\toptionWasSelected = true;\n\t\t\t\t}\n\n\t\t\t\to.selected = shouldSelect;\n\t\t\t});\n\n\t\t\tif ( !optionWasSelected && !isMultiple ) {\n\t\t\t\tif ( this.binding ) {\n\t\t\t\t\tthis.binding.forceUpdate();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise the value should be initialised according to which\n\t\t// <option> element is selected, if twoway binding is in effect\n\t\telse if ( this.binding ) {\n\t\t\tthis.binding.forceUpdate();\n\t\t}\n\t};\n\n\tSelect.prototype.update = function update () {\n\t\tElement$$1.prototype.update.call(this);\n\t\tthis.sync();\n\t};\n\n\treturn Select;\n}(Element));\n\nvar Textarea = (function (Input$$1) {\n\tfunction Textarea( options ) {\n\t\tvar template = options.template;\n\n\t\toptions.deferContent = true;\n\n\t\tInput$$1.call( this, options );\n\n\t\t// check for single interpolator binding\n\t\tif ( !this.attributeByName.value ) {\n\t\t\tif ( template.f && isBindable( { template: template } ) ) {\n\t\t\t\tthis.attributes.push( createItem( {\n\t\t\t\t\towner: this,\n\t\t\t\t\ttemplate: { t: ATTRIBUTE, f: template.f, n: 'value' },\n\t\t\t\t\tparentFragment: this.parentFragment\n\t\t\t\t} ) );\n\t\t\t} else {\n\t\t\t\tthis.fragment = new Fragment({ owner: this, cssIds: null, template: template.f });\n\t\t\t}\n\t\t}\n\t}\n\n\tTextarea.prototype = Object.create( Input$$1 && Input$$1.prototype );\n\tTextarea.prototype.constructor = Textarea;\n\n\tTextarea.prototype.bubble = function bubble () {\n\t\tvar this$1 = this;\n\n\t\tif ( !this.dirty ) {\n\t\t\tthis.dirty = true;\n\n\t\t\tif ( this.rendered && !this.binding && this.fragment ) {\n\t\t\t\trunloop.scheduleTask( function () {\n\t\t\t\t\tthis$1.dirty = false;\n\t\t\t\t\tthis$1.node.value = this$1.fragment.toString();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.parentFragment.bubble(); // default behaviour\n\t\t}\n\t};\n\n\treturn Textarea;\n}(Input));\n\nvar Text = (function (Item$$1) {\n\tfunction Text ( options ) {\n\t\tItem$$1.call( this, options );\n\t\tthis.type = TEXT;\n\t}\n\n\tText.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\tText.prototype.constructor = Text;\n\n\tText.prototype.bind = function bind () {\n\t\t// noop\n\t};\n\n\tText.prototype.detach = function detach () {\n\t\treturn detachNode( this.node );\n\t};\n\n\tText.prototype.firstNode = function firstNode () {\n\t\treturn this.node;\n\t};\n\n\tText.prototype.render = function render ( target, occupants ) {\n\t\tif ( inAttributes() ) return;\n\t\tthis.rendered = true;\n\n\t\tif ( occupants ) {\n\t\t\tvar n = occupants[0];\n\t\t\tif ( n && n.nodeType === 3 ) {\n\t\t\t\toccupants.shift();\n\t\t\t\tif ( n.nodeValue !== this.template ) {\n\t\t\t\t\tn.nodeValue = this.template;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn = this.node = doc.createTextNode( this.template );\n\t\t\t\tif ( occupants[0] ) {\n\t\t\t\t\ttarget.insertBefore( n, occupants[0] );\n\t\t\t\t} else {\n\t\t\t\t\ttarget.appendChild( n );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.node = n;\n\t\t} else {\n\t\t\tthis.node = doc.createTextNode( this.template );\n\t\t\ttarget.appendChild( this.node );\n\t\t}\n\t};\n\n\tText.prototype.toString = function toString ( escape ) {\n\t\treturn escape ? escapeHtml( this.template ) : this.template;\n\t};\n\n\tText.prototype.unbind = function unbind () {\n\t\t// noop\n\t};\n\n\tText.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\tif ( this.rendered && shouldDestroy ) this.detach();\n\t\tthis.rendered = false;\n\t};\n\n\tText.prototype.update = function update () {\n\t\t// noop\n\t};\n\n\tText.prototype.valueOf = function valueOf () {\n\t\treturn this.template;\n\t};\n\n\treturn Text;\n}(Item));\n\nvar prefix;\n\nif ( !isClient ) {\n\tprefix = null;\n} else {\n\tvar prefixCache = {};\n\tvar testStyle = createElement( 'div' ).style;\n\n\tprefix = function ( prop ) {\n\t\tprop = camelCase( prop );\n\n\t\tif ( !prefixCache[ prop ] ) {\n\t\t\tif ( testStyle[ prop ] !== undefined ) {\n\t\t\t\tprefixCache[ prop ] = prop;\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\t// test vendors...\n\t\t\t\tvar capped = prop.charAt( 0 ).toUpperCase() + prop.substring( 1 );\n\n\t\t\t\tvar i = vendors.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tvar vendor = vendors[i];\n\t\t\t\t\tif ( testStyle[ vendor + capped ] !== undefined ) {\n\t\t\t\t\t\tprefixCache[ prop ] = vendor + capped;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn prefixCache[ prop ];\n\t};\n}\n\nvar prefix$1 = prefix;\n\nvar visible;\nvar hidden = 'hidden';\n\nif ( doc ) {\n\tvar prefix$2;\n\n\tif ( hidden in doc ) {\n\t\tprefix$2 = '';\n\t} else {\n\t\tvar i$1 = vendors.length;\n\t\twhile ( i$1-- ) {\n\t\t\tvar vendor = vendors[i$1];\n\t\t\thidden = vendor + 'Hidden';\n\n\t\t\tif ( hidden in doc ) {\n\t\t\t\tprefix$2 = vendor;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( prefix$2 !== undefined ) {\n\t\tdoc.addEventListener( prefix$2 + 'visibilitychange', onChange );\n\t\tonChange();\n\t} else {\n\t\t// gah, we're in an old browser\n\t\tif ( 'onfocusout' in doc ) {\n\t\t\tdoc.addEventListener( 'focusout', onHide );\n\t\t\tdoc.addEventListener( 'focusin', onShow );\n\t\t}\n\n\t\telse {\n\t\t\twin.addEventListener( 'pagehide', onHide );\n\t\t\twin.addEventListener( 'blur', onHide );\n\n\t\t\twin.addEventListener( 'pageshow', onShow );\n\t\t\twin.addEventListener( 'focus', onShow );\n\t\t}\n\n\t\tvisible = true; // until proven otherwise. Not ideal but hey\n\t}\n}\n\nfunction onChange () {\n\tvisible = !doc[ hidden ];\n}\n\nfunction onHide () {\n\tvisible = false;\n}\n\nfunction onShow () {\n\tvisible = true;\n}\n\nvar unprefixPattern = new RegExp( '^-(?:' + vendors.join( '|' ) + ')-' );\n\nvar unprefix = function ( prop ) {\n\treturn prop.replace( unprefixPattern, '' );\n};\n\nvar vendorPattern = new RegExp( '^(?:' + vendors.join( '|' ) + ')([A-Z])' );\n\nvar hyphenate = function ( str ) {\n\tif ( !str ) return ''; // edge case\n\n\tif ( vendorPattern.test( str ) ) str = '-' + str;\n\n\treturn str.replace( /[A-Z]/g, function ( match ) { return '-' + match.toLowerCase(); } );\n};\n\nvar createTransitions;\n\nif ( !isClient ) {\n\tcreateTransitions = null;\n} else {\n\tvar testStyle$1 = createElement( 'div' ).style;\n\tvar linear$1 = function ( x ) { return x; };\n\n\tvar canUseCssTransitions = {};\n\tvar cannotUseCssTransitions = {};\n\n\t// determine some facts about our environment\n\tvar TRANSITION$1;\n\tvar TRANSITIONEND;\n\tvar CSS_TRANSITIONS_ENABLED;\n\tvar TRANSITION_DURATION;\n\tvar TRANSITION_PROPERTY;\n\tvar TRANSITION_TIMING_FUNCTION;\n\n\tif ( testStyle$1.transition !== undefined ) {\n\t\tTRANSITION$1 = 'transition';\n\t\tTRANSITIONEND = 'transitionend';\n\t\tCSS_TRANSITIONS_ENABLED = true;\n\t} else if ( testStyle$1.webkitTransition !== undefined ) {\n\t\tTRANSITION$1 = 'webkitTransition';\n\t\tTRANSITIONEND = 'webkitTransitionEnd';\n\t\tCSS_TRANSITIONS_ENABLED = true;\n\t} else {\n\t\tCSS_TRANSITIONS_ENABLED = false;\n\t}\n\n\tif ( TRANSITION$1 ) {\n\t\tTRANSITION_DURATION = TRANSITION$1 + 'Duration';\n\t\tTRANSITION_PROPERTY = TRANSITION$1 + 'Property';\n\t\tTRANSITION_TIMING_FUNCTION = TRANSITION$1 + 'TimingFunction';\n\t}\n\n\tcreateTransitions = function ( t, to, options, changedProperties, resolve ) {\n\n\t\t// Wait a beat (otherwise the target styles will be applied immediately)\n\t\t// TODO use a fastdom-style mechanism?\n\t\tsetTimeout( function () {\n\t\t\tvar jsTransitionsComplete;\n\t\t\tvar cssTransitionsComplete;\n\t\t\tvar cssTimeout;\n\n\t\t\tfunction transitionDone () { clearTimeout( cssTimeout ); }\n\n\t\t\tfunction checkComplete () {\n\t\t\t\tif ( jsTransitionsComplete && cssTransitionsComplete ) {\n\t\t\t\t\tt.unregisterCompleteHandler( transitionDone );\n\t\t\t\t\t// will changes to events and fire have an unexpected consequence here?\n\t\t\t\t\tt.ractive.fire( t.name + ':end', t.node, t.isIntro );\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// this is used to keep track of which elements can use CSS to animate\n\t\t\t// which properties\n\t\t\tvar hashPrefix = ( t.node.namespaceURI || '' ) + t.node.tagName;\n\n\t\t\t// need to reset transition properties\n\t\t\tvar style = t.node.style;\n\t\t\tvar previous = {\n\t\t\t\tproperty: style[ TRANSITION_PROPERTY ],\n\t\t\t\ttiming: style[ TRANSITION_TIMING_FUNCTION ],\n\t\t\t\tduration: style[ TRANSITION_DURATION ]\n\t\t\t};\n\n\t\t\tstyle[ TRANSITION_PROPERTY ] = changedProperties.map( prefix$1 ).map( hyphenate ).join( ',' );\n\t\t\tstyle[ TRANSITION_TIMING_FUNCTION ] = hyphenate( options.easing || 'linear' );\n\t\t\tstyle[ TRANSITION_DURATION ] = ( options.duration / 1000 ) + 's';\n\n\t\t\tfunction transitionEndHandler ( event ) {\n\t\t\t\tvar index = changedProperties.indexOf( camelCase( unprefix( event.propertyName ) ) );\n\n\t\t\t\tif ( index !== -1 ) {\n\t\t\t\t\tchangedProperties.splice( index, 1 );\n\t\t\t\t}\n\n\t\t\t\tif ( changedProperties.length ) {\n\t\t\t\t\t// still transitioning...\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tclearTimeout( cssTimeout );\n\t\t\t\tcssTransitionsDone();\n\t\t\t}\n\n\t\t\tfunction cssTransitionsDone () {\n\t\t\t\tstyle[ TRANSITION_PROPERTY ] = previous.property;\n\t\t\t\tstyle[ TRANSITION_TIMING_FUNCTION ] = previous.duration;\n\t\t\t\tstyle[ TRANSITION_DURATION ] = previous.timing;\n\n\t\t\t\tt.node.removeEventListener( TRANSITIONEND, transitionEndHandler, false );\n\n\t\t\t\tcssTransitionsComplete = true;\n\t\t\t\tcheckComplete();\n\t\t\t}\n\n\t\t\tt.node.addEventListener( TRANSITIONEND, transitionEndHandler, false );\n\n\t\t\t// safety net in case transitionend never fires\n\t\t\tcssTimeout = setTimeout( function () {\n\t\t\t\tchangedProperties = [];\n\t\t\t\tcssTransitionsDone();\n\t\t\t}, options.duration + ( options.delay || 0 ) + 50 );\n\t\t\tt.registerCompleteHandler( transitionDone );\n\n\t\t\tsetTimeout( function () {\n\t\t\t\tvar i = changedProperties.length;\n\t\t\t\tvar hash;\n\t\t\t\tvar originalValue;\n\t\t\t\tvar index;\n\t\t\t\tvar propertiesToTransitionInJs = [];\n\t\t\t\tvar prop;\n\t\t\t\tvar suffix;\n\t\t\t\tvar interpolator;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tprop = changedProperties[i];\n\t\t\t\t\thash = hashPrefix + prop;\n\n\t\t\t\t\tif ( CSS_TRANSITIONS_ENABLED && !cannotUseCssTransitions[ hash ] ) {\n\t\t\t\t\t\tstyle[ prefix$1( prop ) ] = to[ prop ];\n\n\t\t\t\t\t\t// If we're not sure if CSS transitions are supported for\n\t\t\t\t\t\t// this tag/property combo, find out now\n\t\t\t\t\t\tif ( !canUseCssTransitions[ hash ] ) {\n\t\t\t\t\t\t\toriginalValue = t.getStyle( prop );\n\n\t\t\t\t\t\t\t// if this property is transitionable in this browser,\n\t\t\t\t\t\t\t// the current style will be different from the target style\n\t\t\t\t\t\t\tcanUseCssTransitions[ hash ] = ( t.getStyle( prop ) != to[ prop ] );\n\t\t\t\t\t\t\tcannotUseCssTransitions[ hash ] = !canUseCssTransitions[ hash ];\n\n\t\t\t\t\t\t\t// Reset, if we're going to use timers after all\n\t\t\t\t\t\t\tif ( cannotUseCssTransitions[ hash ] ) {\n\t\t\t\t\t\t\t\tstyle[ prefix$1( prop ) ] = originalValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !CSS_TRANSITIONS_ENABLED || cannotUseCssTransitions[ hash ] ) {\n\t\t\t\t\t\t// we need to fall back to timer-based stuff\n\t\t\t\t\t\tif ( originalValue === undefined ) {\n\t\t\t\t\t\t\toriginalValue = t.getStyle( prop );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// need to remove this from changedProperties, otherwise transitionEndHandler\n\t\t\t\t\t\t// will get confused\n\t\t\t\t\t\tindex = changedProperties.indexOf( prop );\n\t\t\t\t\t\tif ( index === -1 ) {\n\t\t\t\t\t\t\twarnIfDebug( 'Something very strange happened with transitions. Please raise an issue at https://github.com/ractivejs/ractive/issues - thanks!', { node: t.node });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchangedProperties.splice( index, 1 );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// TODO Determine whether this property is animatable at all\n\n\t\t\t\t\t\tsuffix = /[^\\d]*$/.exec( to[ prop ] )[0];\n\t\t\t\t\t\tinterpolator = interpolate( parseFloat( originalValue ), parseFloat( to[ prop ] ) ) || ( function () { return to[ prop ]; } );\n\n\t\t\t\t\t\t// ...then kick off a timer-based transition\n\t\t\t\t\t\tpropertiesToTransitionInJs.push({\n\t\t\t\t\t\t\tname: prefix$1( prop ),\n\t\t\t\t\t\t\tinterpolator: interpolator,\n\t\t\t\t\t\t\tsuffix: suffix\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// javascript transitions\n\t\t\t\tif ( propertiesToTransitionInJs.length ) {\n\t\t\t\t\tvar easing;\n\n\t\t\t\t\tif ( typeof options.easing === 'string' ) {\n\t\t\t\t\t\teasing = t.ractive.easing[ options.easing ];\n\n\t\t\t\t\t\tif ( !easing ) {\n\t\t\t\t\t\t\twarnOnceIfDebug( missingPlugin( options.easing, 'easing' ) );\n\t\t\t\t\t\t\teasing = linear$1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ( typeof options.easing === 'function' ) {\n\t\t\t\t\t\teasing = options.easing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\teasing = linear$1;\n\t\t\t\t\t}\n\n\t\t\t\t\tnew Ticker({\n\t\t\t\t\t\tduration: options.duration,\n\t\t\t\t\t\teasing: easing,\n\t\t\t\t\t\tstep: function ( pos ) {\n\t\t\t\t\t\t\tvar i = propertiesToTransitionInJs.length;\n\t\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\t\tvar prop = propertiesToTransitionInJs[i];\n\t\t\t\t\t\t\t\tt.node.style[ prop.name ] = prop.interpolator( pos ) + prop.suffix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplete: function () {\n\t\t\t\t\t\t\tjsTransitionsComplete = true;\n\t\t\t\t\t\t\tcheckComplete();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tjsTransitionsComplete = true;\n\t\t\t\t}\n\n\t\t\t\tif ( !changedProperties.length ) {\n\t\t\t\t\t// We need to cancel the transitionEndHandler, and deal with\n\t\t\t\t\t// the fact that it will never fire\n\t\t\t\t\tt.node.removeEventListener( TRANSITIONEND, transitionEndHandler, false );\n\t\t\t\t\tcssTransitionsComplete = true;\n\t\t\t\t\tcheckComplete();\n\t\t\t\t}\n\t\t\t}, 0 );\n\t\t}, options.delay || 0 );\n\t};\n}\n\nvar createTransitions$1 = createTransitions;\n\nfunction resetStyle ( node, style ) {\n\tif ( style ) {\n\t\tnode.setAttribute( 'style', style );\n\t} else {\n\t\t// Next line is necessary, to remove empty style attribute!\n\t\t// See http://stackoverflow.com/a/7167553\n\t\tnode.getAttribute( 'style' );\n\t\tnode.removeAttribute( 'style' );\n\t}\n}\n\nvar getComputedStyle = win && ( win.getComputedStyle || legacy.getComputedStyle );\nvar resolved$1 = Promise$1.resolve();\n\nvar names = {\n\tt0: 'intro-outro',\n\tt1: 'intro',\n\tt2: 'outro'\n};\n\nvar Transition = function Transition ( options ) {\n\tthis.owner = options.owner || options.parentFragment.owner || findElement( options.parentFragment );\n\tthis.element = this.owner.attributeByName ? this.owner : findElement( options.parentFragment );\n\tthis.ractive = this.owner.ractive;\n\tthis.template = options.template;\n\tthis.parentFragment = options.parentFragment;\n\tthis.options = options;\n\tthis.onComplete = [];\n};\n\nTransition.prototype.animateStyle = function animateStyle ( style, value, options ) {\n\tvar this$1 = this;\n\n\t\tif ( arguments.length === 4 ) {\n\t\tthrow new Error( 't.animateStyle() returns a promise - use .then() instead of passing a callback' );\n\t}\n\n\t// Special case - page isn't visible. Don't animate anything, because\n\t// that way you'll never get CSS transitionend events\n\tif ( !visible ) {\n\t\tthis.setStyle( style, value );\n\t\treturn resolved$1;\n\t}\n\n\tvar to;\n\n\tif ( typeof style === 'string' ) {\n\t\tto = {};\n\t\tto[ style ] = value;\n\t} else {\n\t\tto = style;\n\n\t\t// shuffle arguments\n\t\toptions = value;\n\t}\n\n\t// As of 0.3.9, transition authors should supply an `option` object with\n\t// `duration` and `easing` properties (and optional `delay`), plus a\n\t// callback function that gets called after the animation completes\n\n\t// TODO remove this check in a future version\n\tif ( !options ) {\n\t\twarnOnceIfDebug( 'The \"%s\" transition does not supply an options object to `t.animateStyle()`. This will break in a future version of Ractive. For more info see https://github.com/RactiveJS/Ractive/issues/340', this.name );\n\t\toptions = this;\n\t}\n\n\treturn new Promise$1( function ( fulfil ) {\n\t\t// Edge case - if duration is zero, set style synchronously and complete\n\t\tif ( !options.duration ) {\n\t\t\tthis$1.setStyle( to );\n\t\t\tfulfil();\n\t\t\treturn;\n\t\t}\n\n\t\t// Get a list of the properties we're animating\n\t\tvar propertyNames = Object.keys( to );\n\t\tvar changedProperties = [];\n\n\t\t// Store the current styles\n\t\tvar computedStyle = getComputedStyle( this$1.owner.node );\n\n\t\tvar i = propertyNames.length;\n\t\twhile ( i-- ) {\n\t\t\tvar prop = propertyNames[i];\n\t\t\tvar current = computedStyle[ prefix$1( prop ) ];\n\n\t\t\tif ( current === '0px' ) current = 0;\n\n\t\t\t// we need to know if we're actually changing anything\n\t\t\tif ( current != to[ prop ] ) { // use != instead of !==, so we can compare strings with numbers\n\t\t\t\tchangedProperties.push( prop );\n\n\t\t\t\t// make the computed style explicit, so we can animate where\n\t\t\t\t// e.g. height='auto'\n\t\t\t\tthis$1.owner.node.style[ prefix$1( prop ) ] = current;\n\t\t\t}\n\t\t}\n\n\t\t// If we're not actually changing anything, the transitionend event\n\t\t// will never fire! So we complete early\n\t\tif ( !changedProperties.length ) {\n\t\t\tfulfil();\n\t\t\treturn;\n\t\t}\n\n\t\tcreateTransitions$1( this$1, to, options, changedProperties, fulfil );\n\t});\n};\n\nTransition.prototype.bind = function bind () {\n\tvar this$1 = this;\n\n\t\tvar options = this.options;\n\tif ( options.template ) {\n\t\tif ( options.template.v === 't0' || options.template.v == 't1' ) this.element._introTransition = this;\n\t\tif ( options.template.v === 't0' || options.template.v == 't2' ) this.element._outroTransition = this;\n\t\tthis.eventName = names[ options.template.v ];\n\t}\n\n\tvar ractive = this.owner.ractive;\n\n\tif ( options.name ) {\n\t\tthis.name = options.name;\n\t} else {\n\t\tvar name = options.template.f;\n\t\tif ( typeof name.n === 'string' ) name = name.n;\n\n\t\tif ( typeof name !== 'string' ) {\n\t\t\tvar fragment = new Fragment({\n\t\t\t\towner: this.owner,\n\t\t\t\ttemplate: name.n\n\t\t\t}).bind(); // TODO need a way to capture values without bind()\n\n\t\t\tname = fragment.toString();\n\t\t\tfragment.unbind();\n\n\t\t\tif ( name === '' ) {\n\t\t\t\t// empty string okay, just no transition\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.name = name;\n\t}\n\n\tif ( options.params ) {\n\t\tthis.params = options.params;\n\t} else {\n\t\tif ( options.template.f.a && !options.template.f.a.s ) {\n\t\t\tthis.params = options.template.f.a;\n\t\t}\n\n\t\telse if ( options.template.f.d ) {\n\t\t\t// TODO is there a way to interpret dynamic arguments without all the\n\t\t\t// 'dependency thrashing'?\n\t\t\tvar fragment$1 = new Fragment({\n\t\t\t\towner: this.owner,\n\t\t\t\ttemplate: options.template.f.d\n\t\t\t}).bind();\n\n\t\t\tthis.params = fragment$1.getArgsList();\n\t\t\tfragment$1.unbind();\n\t\t}\n\t}\n\n\tif ( typeof this.name === 'function' ) {\n\t\tthis._fn = this.name;\n\t\tthis.name = this._fn.name;\n\t} else {\n\t\tthis._fn = findInViewHierarchy( 'transitions', ractive, this.name );\n\t}\n\n\tif ( !this._fn ) {\n\t\twarnOnceIfDebug( missingPlugin( this.name, 'transition' ), { ractive: ractive });\n\t}\n\n\t// TODO: dry up after deprecation is done\n\tif ( options.template && this.template.f.a && this.template.f.a.s ) {\n\t\tthis.resolvers = [];\n\t\tthis.models = this.template.f.a.r.map( function ( ref, i ) {\n\t\t\tvar resolver;\n\t\t\tvar model = resolveReference( this$1.parentFragment, ref );\n\t\t\tif ( !model ) {\n\t\t\t\tresolver = this$1.parentFragment.resolve( ref, function ( model ) {\n\t\t\t\t\tthis$1.models[i] = model;\n\t\t\t\t\tremoveFromArray( this$1.resolvers, resolver );\n\t\t\t\t\tmodel.register( this$1 );\n\t\t\t\t});\n\n\t\t\t\tthis$1.resolvers.push( resolver );\n\t\t\t} else model.register( this$1 );\n\n\t\t\treturn model;\n\t\t});\n\t\tthis.argsFn = getFunction( this.template.f.a.s, this.template.f.a.r.length );\n\t}\n};\n\nTransition.prototype.destroyed = function destroyed () {};\n\nTransition.prototype.getStyle = function getStyle ( props ) {\n\tvar computedStyle = getComputedStyle( this.owner.node );\n\n\tif ( typeof props === 'string' ) {\n\t\tvar value = computedStyle[ prefix$1( props ) ];\n\t\treturn value === '0px' ? 0 : value;\n\t}\n\n\tif ( !isArray( props ) ) {\n\t\tthrow new Error( 'Transition$getStyle must be passed a string, or an array of strings representing CSS properties' );\n\t}\n\n\tvar styles = {};\n\n\tvar i = props.length;\n\twhile ( i-- ) {\n\t\tvar prop = props[i];\n\t\tvar value$1 = computedStyle[ prefix$1( prop ) ];\n\n\t\tif ( value$1 === '0px' ) value$1 = 0;\n\t\tstyles[ prop ] = value$1;\n\t}\n\n\treturn styles;\n};\n\nTransition.prototype.processParams = function processParams ( params, defaults ) {\n\tif ( typeof params === 'number' ) {\n\t\tparams = { duration: params };\n\t}\n\n\telse if ( typeof params === 'string' ) {\n\t\tif ( params === 'slow' ) {\n\t\t\tparams = { duration: 600 };\n\t\t} else if ( params === 'fast' ) {\n\t\t\tparams = { duration: 200 };\n\t\t} else {\n\t\t\tparams = { duration: 400 };\n\t\t}\n\t} else if ( !params ) {\n\t\tparams = {};\n\t}\n\n\treturn extend$1( {}, defaults, params );\n};\n\nTransition.prototype.rebinding = function rebinding ( next, previous ) {\n\tvar idx = this.models.indexOf( previous );\n\tif ( !~idx ) return;\n\n\tnext = rebindMatch( this.template.f.a.r[ idx ], next, previous );\n\tif ( next === previous ) return;\n\n\tprevious.unregister( this );\n\tthis.models.splice( idx, 1, next );\n\tif ( next ) next.addShuffleRegister( this, 'mark' );\n};\n\nTransition.prototype.registerCompleteHandler = function registerCompleteHandler ( fn ) {\n\taddToArray( this.onComplete, fn );\n};\n\nTransition.prototype.render = function render () {};\n\nTransition.prototype.setStyle = function setStyle ( style, value ) {\n\tif ( typeof style === 'string' ) {\n\t\tthis.owner.node.style[ prefix$1( style ) ] = value;\n\t}\n\n\telse {\n\t\tvar prop;\n\t\tfor ( prop in style ) {\n\t\t\tif ( style.hasOwnProperty( prop ) ) {\n\t\t\t\tthis.owner.node.style[ prefix$1( prop ) ] = style[ prop ];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this;\n};\n\nTransition.prototype.start = function start () {\n\tvar this$1 = this;\n\n\t\tvar node = this.node = this.element.node;\n\tvar originalStyle = node.getAttribute( 'style' );\n\n\tvar completed;\n\tvar args = this.params;\n\n\t// create t.complete() - we don't want this on the prototype,\n\t// because we don't want `this` silliness when passing it as\n\t// an argument\n\tthis.complete = function ( noReset ) {\n\t\tif ( completed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis$1.onComplete.forEach( function ( fn ) { return fn(); } );\n\t\tif ( !noReset && this$1.isIntro ) {\n\t\t\tresetStyle( node, originalStyle);\n\t\t}\n\n\t\tthis$1._manager.remove( this$1 );\n\n\t\tcompleted = true;\n\t};\n\n\t// If the transition function doesn't exist, abort\n\tif ( !this._fn ) {\n\t\tthis.complete();\n\t\treturn;\n\t}\n\n\t// get expression args if supplied\n\tif ( this.argsFn ) {\n\t\tvar values = this.models.map( function ( model ) {\n\t\t\tif ( !model ) return undefined;\n\n\t\t\treturn model.get();\n\t\t});\n\t\targs = this.argsFn.apply( this.ractive, values );\n\t}\n\n\tvar promise = this._fn.apply( this.ractive, [ this ].concat( args ) );\n\tif ( promise ) promise.then( this.complete );\n};\n\nTransition.prototype.toString = function toString () { return ''; };\n\nTransition.prototype.unbind = function unbind$1 () {\n\tif ( this.resolvers ) this.resolvers.forEach( unbind$1$1 );\n};\n\nTransition.prototype.unregisterCompleteHandler = function unregisterCompleteHandler ( fn ) {\n\tremoveFromArray( this.onComplete, fn );\n};\n\nTransition.prototype.unrender = function unrender () {};\n\nTransition.prototype.update = function update () {};\n\nvar elementCache = {};\n\nvar ieBug;\nvar ieBlacklist;\n\ntry {\n\tcreateElement( 'table' ).innerHTML = 'foo';\n} catch ( err ) {\n\tieBug = true;\n\n\tieBlacklist = {\n\t\tTABLE:  [ '<table class=\"x\">', '</table>' ],\n\t\tTHEAD:  [ '<table><thead class=\"x\">', '</thead></table>' ],\n\t\tTBODY:  [ '<table><tbody class=\"x\">', '</tbody></table>' ],\n\t\tTR:     [ '<table><tr class=\"x\">', '</tr></table>' ],\n\t\tSELECT: [ '<select class=\"x\">', '</select>' ]\n\t};\n}\n\nvar insertHtml = function ( html$$1, node, docFrag ) {\n\tvar nodes = [];\n\n\t// render 0 and false\n\tif ( html$$1 == null || html$$1 === '' ) return nodes;\n\n\tvar container;\n\tvar wrapper;\n\tvar selectedOption;\n\n\tif ( ieBug && ( wrapper = ieBlacklist[ node.tagName ] ) ) {\n\t\tcontainer = element( 'DIV' );\n\t\tcontainer.innerHTML = wrapper[0] + html$$1 + wrapper[1];\n\t\tcontainer = container.querySelector( '.x' );\n\n\t\tif ( container.tagName === 'SELECT' ) {\n\t\t\tselectedOption = container.options[ container.selectedIndex ];\n\t\t}\n\t}\n\n\telse if ( node.namespaceURI === svg$1 ) {\n\t\tcontainer = element( 'DIV' );\n\t\tcontainer.innerHTML = '<svg class=\"x\">' + html$$1 + '</svg>';\n\t\tcontainer = container.querySelector( '.x' );\n\t}\n\n\telse if ( node.tagName === 'TEXTAREA' ) {\n\t\tcontainer = createElement( 'div' );\n\n\t\tif ( typeof container.textContent !== 'undefined' ) {\n\t\t\tcontainer.textContent = html$$1;\n\t\t} else {\n\t\t\tcontainer.innerHTML = html$$1;\n\t\t}\n\t}\n\n\telse {\n\t\tcontainer = element( node.tagName );\n\t\tcontainer.innerHTML = html$$1;\n\n\t\tif ( container.tagName === 'SELECT' ) {\n\t\t\tselectedOption = container.options[ container.selectedIndex ];\n\t\t}\n\t}\n\n\tvar child;\n\twhile ( child = container.firstChild ) {\n\t\tnodes.push( child );\n\t\tdocFrag.appendChild( child );\n\t}\n\n\t// This is really annoying. Extracting <option> nodes from the\n\t// temporary container <select> causes the remaining ones to\n\t// become selected. So now we have to deselect them. IE8, you\n\t// amaze me. You really do\n\t// ...and now Chrome too\n\tvar i;\n\tif ( node.tagName === 'SELECT' ) {\n\t\ti = nodes.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( nodes[i] !== selectedOption ) {\n\t\t\t\tnodes[i].selected = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn nodes;\n};\n\nfunction element ( tagName ) {\n\treturn elementCache[ tagName ] || ( elementCache[ tagName ] = createElement( tagName ) );\n}\n\nvar Triple = (function (Mustache$$1) {\n\tfunction Triple ( options ) {\n\t\tMustache$$1.call( this, options );\n\t}\n\n\tTriple.prototype = Object.create( Mustache$$1 && Mustache$$1.prototype );\n\tTriple.prototype.constructor = Triple;\n\n\tTriple.prototype.detach = function detach () {\n\t\tvar docFrag = createDocumentFragment();\n\t\tthis.nodes.forEach( function ( node ) { return docFrag.appendChild( node ); } );\n\t\treturn docFrag;\n\t};\n\n\tTriple.prototype.find = function find ( selector ) {\n\t\tvar this$1 = this;\n\n\t\tvar len = this.nodes.length;\n\t\tvar i;\n\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tvar node = this$1.nodes[i];\n\n\t\t\tif ( node.nodeType !== 1 ) continue;\n\n\t\t\tif ( matches( node, selector ) ) return node;\n\n\t\t\tvar queryResult = node.querySelector( selector );\n\t\t\tif ( queryResult ) return queryResult;\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tTriple.prototype.findAll = function findAll ( selector, query ) {\n\t\tvar this$1 = this;\n\n\t\tvar len = this.nodes.length;\n\t\tvar i;\n\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tvar node = this$1.nodes[i];\n\n\t\t\tif ( node.nodeType !== 1 ) continue;\n\n\t\t\tif ( query.test( node ) ) query.add( node );\n\n\t\t\tvar queryAllResult = node.querySelectorAll( selector );\n\t\t\tif ( queryAllResult ) {\n\t\t\t\tvar numNodes = queryAllResult.length;\n\t\t\t\tvar j;\n\n\t\t\t\tfor ( j = 0; j < numNodes; j += 1 ) {\n\t\t\t\t\tquery.add( queryAllResult[j] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tTriple.prototype.findComponent = function findComponent () {\n\t\treturn null;\n\t};\n\n\tTriple.prototype.firstNode = function firstNode () {\n\t\treturn this.nodes[0];\n\t};\n\n\tTriple.prototype.render = function render ( target ) {\n\t\tvar html = this.model ? this.model.get() : '';\n\t\tthis.nodes = insertHtml( html, this.parentFragment.findParentNode(), target );\n\t\tthis.rendered = true;\n\t};\n\n\tTriple.prototype.toString = function toString () {\n\t\treturn this.model && this.model.get() != null ? decodeCharacterReferences( '' + this.model.get() ) : '';\n\t};\n\n\tTriple.prototype.unrender = function unrender () {\n\t\tif ( this.nodes ) this.nodes.forEach( function ( node ) { return detachNode( node ); } );\n\t\tthis.rendered = false;\n\t};\n\n\tTriple.prototype.update = function update () {\n\t\tif ( this.rendered && this.dirty ) {\n\t\t\tthis.dirty = false;\n\n\t\t\tthis.unrender();\n\t\t\tvar docFrag = createDocumentFragment();\n\t\t\tthis.render( docFrag );\n\n\t\t\tvar parentNode = this.parentFragment.findParentNode();\n\t\t\tvar anchor = this.parentFragment.findNextNode( this );\n\n\t\t\tparentNode.insertBefore( docFrag, anchor );\n\t\t}\n\t};\n\n\treturn Triple;\n}(Mustache));\n\nvar Yielder = (function (Item$$1) {\n\tfunction Yielder ( options ) {\n\t\tItem$$1.call( this, options );\n\n\t\tthis.container = options.parentFragment.ractive;\n\t\tthis.component = this.container.component;\n\n\t\tthis.containerFragment = options.parentFragment;\n\t\tthis.parentFragment = this.component.parentFragment;\n\n\t\t// {{yield}} is equivalent to {{yield content}}\n\t\tthis.name = options.template.n || '';\n\t}\n\n\tYielder.prototype = Object.create( Item$$1 && Item$$1.prototype );\n\tYielder.prototype.constructor = Yielder;\n\n\tYielder.prototype.bind = function bind () {\n\t\tvar name = this.name;\n\n\t\t( this.component.yielders[ name ] || ( this.component.yielders[ name ] = [] ) ).push( this );\n\n\t\t// TODO don't parse here\n\t\tvar template = this.container._inlinePartials[ name || 'content' ];\n\n\t\tif ( typeof template === 'string' ) {\n\t\t\ttemplate = parse( template ).t;\n\t\t}\n\n\t\tif ( !template ) {\n\t\t\twarnIfDebug( (\"Could not find template for partial \\\"\" + name + \"\\\"\"), { ractive: this.ractive });\n\t\t\ttemplate = [];\n\t\t}\n\n\t\tthis.fragment = new Fragment({\n\t\t\towner: this,\n\t\t\tractive: this.container.parent,\n\t\t\ttemplate: template\n\t\t}).bind();\n\t};\n\n\tYielder.prototype.bubble = function bubble () {\n\t\tif ( !this.dirty ) {\n\t\t\tthis.containerFragment.bubble();\n\t\t\tthis.dirty = true;\n\t\t}\n\t};\n\n\tYielder.prototype.detach = function detach () {\n\t\treturn this.fragment.detach();\n\t};\n\n\tYielder.prototype.find = function find ( selector ) {\n\t\treturn this.fragment.find( selector );\n\t};\n\n\tYielder.prototype.findAll = function findAll ( selector, queryResult ) {\n\t\tthis.fragment.find( selector, queryResult );\n\t};\n\n\tYielder.prototype.findComponent = function findComponent ( name ) {\n\t\treturn this.fragment.findComponent( name );\n\t};\n\n\tYielder.prototype.findAllComponents = function findAllComponents ( name, queryResult ) {\n\t\tthis.fragment.findAllComponents( name, queryResult );\n\t};\n\n\tYielder.prototype.findNextNode = function findNextNode() {\n\t\treturn this.containerFragment.findNextNode( this );\n\t};\n\n\tYielder.prototype.firstNode = function firstNode ( skipParent ) {\n\t\treturn this.fragment.firstNode( skipParent );\n\t};\n\n\tYielder.prototype.render = function render ( target, occupants ) {\n\t\treturn this.fragment.render( target, occupants );\n\t};\n\n\tYielder.prototype.setTemplate = function setTemplate ( name ) {\n\t\tvar template = this.parentFragment.ractive.partials[ name ];\n\n\t\tif ( typeof template === 'string' ) {\n\t\t\ttemplate = parse( template ).t;\n\t\t}\n\n\t\tthis.partialTemplate = template || []; // TODO warn on missing partial\n\t};\n\n\tYielder.prototype.toString = function toString ( escape ) {\n\t\treturn this.fragment.toString( escape );\n\t};\n\n\tYielder.prototype.unbind = function unbind () {\n\t\tthis.fragment.unbind();\n\t\tremoveFromArray( this.component.yielders[ this.name ], this );\n\t};\n\n\tYielder.prototype.unrender = function unrender ( shouldDestroy ) {\n\t\tthis.fragment.unrender( shouldDestroy );\n\t};\n\n\tYielder.prototype.update = function update () {\n\t\tthis.dirty = false;\n\t\tthis.fragment.update();\n\t};\n\n\treturn Yielder;\n}(Item));\n\n// finds the component constructor in the registry or view hierarchy registries\nfunction getComponentConstructor ( ractive, name ) {\n\tvar instance = findInstance( 'components', ractive, name );\n\tvar Component;\n\n\tif ( instance ) {\n\t\tComponent = instance.components[ name ];\n\n\t\t// best test we have for not Ractive.extend\n\t\tif ( !Component._Parent ) {\n\t\t\t// function option, execute and store for reset\n\t\t\tvar fn = Component.bind( instance );\n\t\t\tfn.isOwner = instance.components.hasOwnProperty( name );\n\t\t\tComponent = fn();\n\n\t\t\tif ( !Component ) {\n\t\t\t\twarnIfDebug( noRegistryFunctionReturn, name, 'component', 'component', { ractive: ractive });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( typeof Component === 'string' ) {\n\t\t\t\t// allow string lookup\n\t\t\t\tComponent = getComponentConstructor( ractive, Component );\n\t\t\t}\n\n\t\t\tComponent._fn = fn;\n\t\t\tinstance.components[ name ] = Component;\n\t\t}\n\t}\n\n\treturn Component;\n}\n\nvar constructors = {};\nconstructors[ ALIAS ] = Alias;\nconstructors[ DOCTYPE ] = Doctype;\nconstructors[ INTERPOLATOR ] = Interpolator;\nconstructors[ PARTIAL ] = Partial;\nconstructors[ SECTION ] = Section;\nconstructors[ TRIPLE ] = Triple;\nconstructors[ YIELDER ] = Yielder;\n\nconstructors[ ATTRIBUTE ] = Attribute;\nconstructors[ BINDING_FLAG ] = BindingFlag;\nconstructors[ DECORATOR ] = Decorator;\nconstructors[ EVENT ] = EventDirective;\nconstructors[ TRANSITION ] = Transition;\n\nvar specialElements = {\n\tdoctype: Doctype,\n\tform: Form,\n\tinput: Input,\n\toption: Option,\n\tselect: Select,\n\ttextarea: Textarea\n};\n\nfunction createItem ( options ) {\n\tif ( typeof options.template === 'string' ) {\n\t\treturn new Text( options );\n\t}\n\n\tif ( options.template.t === ELEMENT ) {\n\t\t// could be component or element\n\t\tvar ComponentConstructor = getComponentConstructor( options.parentFragment.ractive, options.template.e );\n\t\tif ( ComponentConstructor ) {\n\t\t\treturn new Component( options, ComponentConstructor );\n\t\t}\n\n\t\tvar tagName = options.template.e.toLowerCase();\n\n\t\tvar ElementConstructor = specialElements[ tagName ] || Element;\n\t\treturn new ElementConstructor( options );\n\t}\n\n\tvar Item;\n\n\t// component mappings are a special case of attribute\n\tif ( options.template.t === ATTRIBUTE ) {\n\t\tvar el = options.owner;\n\t\tif ( !el || ( el.type !== COMPONENT && el.type !== ELEMENT ) ) {\n\t\t\tel = findElement( options.parentFragment );\n\t\t}\n\t\toptions.element = el;\n\n\t\tItem = el.type === COMPONENT ? Mapping : Attribute;\n\t} else {\n\t\tItem = constructors[ options.template.t ];\n\t}\n\n\tif ( !Item ) throw new Error( (\"Unrecognised item type \" + (options.template.t)) );\n\n\treturn new Item( options );\n}\n\n// TODO all this code needs to die\nfunction processItems ( items, values, guid, counter ) {\n\tif ( counter === void 0 ) counter = 0;\n\n\treturn items.map( function ( item ) {\n\t\tif ( item.type === TEXT ) {\n\t\t\treturn item.template;\n\t\t}\n\n\t\tif ( item.fragment ) {\n\t\t\tif ( item.fragment.iterations ) {\n\t\t\t\treturn item.fragment.iterations.map( function ( fragment ) {\n\t\t\t\t\treturn processItems( fragment.items, values, guid, counter );\n\t\t\t\t}).join( '' );\n\t\t\t} else {\n\t\t\t\treturn processItems( item.fragment.items, values, guid, counter );\n\t\t\t}\n\t\t}\n\n\t\tvar placeholderId = \"\" + guid + \"-\" + (counter++);\n\t\tvar model = item.model || item.newModel;\n\n\t\tvalues[ placeholderId ] = model ?\n\t\t\tmodel.wrapper ?\n\t\t\t\tmodel.wrapper.value :\n\t\t\t\tmodel.get() :\n\t\t\tundefined;\n\n\t\treturn '${' + placeholderId + '}';\n\t}).join( '' );\n}\n\nfunction unrenderAndDestroy$1 ( item ) {\n\titem.unrender( true );\n}\n\nvar Fragment = function Fragment ( options ) {\n\tthis.owner = options.owner; // The item that owns this fragment - an element, section, partial, or attribute\n\n\tthis.isRoot = !options.owner.parentFragment;\n\tthis.parent = this.isRoot ? null : this.owner.parentFragment;\n\tthis.ractive = options.ractive || ( this.isRoot ? options.owner : this.parent.ractive );\n\n\tthis.componentParent = ( this.isRoot && this.ractive.component ) ? this.ractive.component.parentFragment : null;\n\n\tthis.context = null;\n\tthis.rendered = false;\n\n\t// encapsulated styles should be inherited until they get applied by an element\n\tthis.cssIds = 'cssIds' in options ? options.cssIds : ( this.parent ? this.parent.cssIds : null );\n\n\tthis.resolvers = [];\n\n\tthis.dirty = false;\n\tthis.dirtyArgs = this.dirtyValue = true; // TODO getArgsList is nonsense - should deprecate legacy directives style\n\n\tthis.template = options.template || [];\n\tthis.createItems();\n};\n\nFragment.prototype.bind = function bind$1 ( context ) {\n\tthis.context = context;\n\tthis.items.forEach( bind$2 );\n\tthis.bound = true;\n\n\t// in rare cases, a forced resolution (or similar) will cause the\n\t// fragment to be dirty before it's even finished binding. In those\n\t// cases we update immediately\n\tif ( this.dirty ) this.update();\n\n\treturn this;\n};\n\nFragment.prototype.bubble = function bubble () {\n\tthis.dirtyArgs = this.dirtyValue = true;\n\n\tif ( !this.dirty ) {\n\t\tthis.dirty = true;\n\n\t\tif ( this.isRoot ) { // TODO encapsulate 'is component root, but not overall root' check?\n\t\t\tif ( this.ractive.component ) {\n\t\t\t\tthis.ractive.component.bubble();\n\t\t\t} else if ( this.bound ) {\n\t\t\t\trunloop.addFragment( this );\n\t\t\t}\n\t\t} else {\n\t\t\tthis.owner.bubble();\n\t\t}\n\t}\n};\n\nFragment.prototype.createItems = function createItems () {\n\t// this is a hot code path\n\tvar this$1 = this;\n\n\t\tvar max = this.template.length;\n\tthis.items = [];\n\tfor ( var i = 0; i < max; i++ ) {\n\t\tthis$1.items[i] = createItem({ parentFragment: this$1, template: this$1.template[i], index: i });\n\t}\n};\n\nFragment.prototype.destroyed = function destroyed () {\n\tthis.items.forEach( function ( i ) { return i.destroyed(); } );\n};\n\nFragment.prototype.detach = function detach () {\n\tvar docFrag = createDocumentFragment();\n\tthis.items.forEach( function ( item ) { return docFrag.appendChild( item.detach() ); } );\n\treturn docFrag;\n};\n\nFragment.prototype.find = function find ( selector ) {\n\tvar this$1 = this;\n\n\t\tvar len = this.items.length;\n\tvar i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tvar found = this$1.items[i].find( selector );\n\t\tif ( found ) return found;\n\t}\n};\n\nFragment.prototype.findAll = function findAll ( selector, query ) {\n\tvar this$1 = this;\n\n\t\tif ( this.items ) {\n\t\tvar len = this.items.length;\n\t\tvar i;\n\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tvar item = this$1.items[i];\n\n\t\t\tif ( item.findAll ) {\n\t\t\t\titem.findAll( selector, query );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn query;\n};\n\nFragment.prototype.findComponent = function findComponent ( name ) {\n\tvar this$1 = this;\n\n\t\tvar len = this.items.length;\n\tvar i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tvar found = this$1.items[i].findComponent( name );\n\t\tif ( found ) return found;\n\t}\n};\n\nFragment.prototype.findAllComponents = function findAllComponents ( name, query ) {\n\tvar this$1 = this;\n\n\t\tif ( this.items ) {\n\t\tvar len = this.items.length;\n\t\tvar i;\n\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tvar item = this$1.items[i];\n\n\t\t\tif ( item.findAllComponents ) {\n\t\t\t\titem.findAllComponents( name, query );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn query;\n};\n\nFragment.prototype.findContext = function findContext () {\n\tvar fragment = this;\n\twhile ( fragment && !fragment.context ) fragment = fragment.parent;\n\tif ( !fragment ) return this.ractive.viewmodel;\n\telse return fragment.context;\n};\n\nFragment.prototype.findNextNode = function findNextNode ( item ) {\n\t// search for the next node going forward\n\tvar this$1 = this;\n\n\t\tfor ( var i = item.index + 1; i < this$1.items.length; i++ ) {\n\t\tif ( !this$1.items[ i ] ) continue;\n\n\t\tvar node = this$1.items[ i ].firstNode( true );\n\t\tif ( node ) return node;\n\t}\n\n\t// if this is the root fragment, and there are no more items,\n\t// it means we're at the end...\n\tif ( this.isRoot ) {\n\t\tif ( this.ractive.component ) {\n\t\t\treturn this.ractive.component.parentFragment.findNextNode( this.ractive.component );\n\t\t}\n\n\t\t// TODO possible edge case with other content\n\t\t// appended to this.ractive.el?\n\t\treturn null;\n\t}\n\n\treturn this.owner.findNextNode( this ); // the argument is in case the parent is a RepeatedFragment\n};\n\nFragment.prototype.findParentNode = function findParentNode () {\n\tvar fragment = this;\n\n\tdo {\n\t\tif ( fragment.owner.type === ELEMENT ) {\n\t\t\treturn fragment.owner.node;\n\t\t}\n\n\t\tif ( fragment.isRoot && !fragment.ractive.component ) { // TODO encapsulate check\n\t\t\treturn fragment.ractive.el;\n\t\t}\n\n\t\tif ( fragment.owner.type === YIELDER ) {\n\t\t\tfragment = fragment.owner.containerFragment;\n\t\t} else {\n\t\t\tfragment = fragment.componentParent || fragment.parent; // TODO ugh\n\t\t}\n\t} while ( fragment );\n\n\tthrow new Error( 'Could not find parent node' ); // TODO link to issue tracker\n};\n\nFragment.prototype.findRepeatingFragment = function findRepeatingFragment () {\n\tvar fragment = this;\n\t// TODO better check than fragment.parent.iterations\n\twhile ( ( fragment.parent || fragment.componentParent ) && !fragment.isIteration ) {\n\t\tfragment = fragment.parent || fragment.componentParent;\n\t}\n\n\treturn fragment;\n};\n\nFragment.prototype.firstNode = function firstNode ( skipParent ) {\n\tvar this$1 = this;\n\n\t\tvar node;\n\tfor ( var i = 0; i < this$1.items.length; i++ ) {\n\t\tnode = this$1.items[i].firstNode( true );\n\n\t\tif ( node ) {\n\t\t\treturn node;\n\t\t}\n\t}\n\n\tif ( skipParent ) return null;\n\n\treturn this.parent.findNextNode( this.owner );\n};\n\n// TODO ideally, this would be deprecated in favour of an\n// expression-like approach\nFragment.prototype.getArgsList = function getArgsList () {\n\tif ( this.dirtyArgs ) {\n\t\tvar values = {};\n\t\tvar source = processItems( this.items, values, this.ractive._guid );\n\t\tvar parsed = parseJSON( '[' + source + ']', values );\n\n\t\tthis.argsList = parsed ?\n\t\t\tparsed.value :\n\t\t\t[ this.toString() ];\n\n\t\tthis.dirtyArgs = false;\n\t}\n\n\treturn this.argsList;\n};\n\nFragment.prototype.rebinding = function rebinding ( next ) {\n\tthis.context = next;\n};\n\nFragment.prototype.render = function render ( target, occupants ) {\n\tif ( this.rendered ) throw new Error( 'Fragment is already rendered!' );\n\tthis.rendered = true;\n\n\tthis.items.forEach( function ( item ) { return item.render( target, occupants ); } );\n};\n\nFragment.prototype.resetTemplate = function resetTemplate ( template ) {\n\tvar wasBound = this.bound;\n\tvar wasRendered = this.rendered;\n\n\t// TODO ensure transitions are disabled globally during reset\n\n\tif ( wasBound ) {\n\t\tif ( wasRendered ) this.unrender( true );\n\t\tthis.unbind();\n\t}\n\n\tthis.template = template;\n\tthis.createItems();\n\n\tif ( wasBound ) {\n\t\tthis.bind( this.context );\n\n\t\tif ( wasRendered ) {\n\t\t\tvar parentNode = this.findParentNode();\n\t\t\tvar anchor = this.parent ? this.parent.findNextNode( this.owner ) : null;\n\n\t\t\tif ( anchor ) {\n\t\t\t\tvar docFrag = createDocumentFragment();\n\t\t\t\tthis.render( docFrag );\n\t\t\t\tparentNode.insertBefore( docFrag, anchor );\n\t\t\t} else {\n\t\t\t\tthis.render( parentNode );\n\t\t\t}\n\t\t}\n\t}\n};\n\nFragment.prototype.resolve = function resolve ( template, callback ) {\n\tif ( !this.context && this.parent.resolve ) {\n\t\treturn this.parent.resolve( template, callback );\n\t}\n\n\tvar resolver = new ReferenceResolver( this, template, callback );\n\tthis.resolvers.push( resolver );\n\n\treturn resolver; // so we can e.g. force resolution\n};\n\nFragment.prototype.shuffled = function shuffled () {\n\tthis.items.forEach( function ( i ) { return i.shuffled(); } );\n};\n\nFragment.prototype.toHtml = function toHtml () {\n\treturn this.toString();\n};\n\nFragment.prototype.toString = function toString$1 ( escape ) {\n\treturn this.items.map( escape ? toEscapedString : toString$2 ).join( '' );\n};\n\nFragment.prototype.unbind = function unbind$1 () {\n\tthis.items.forEach( unbind$1$1 );\n\tthis.bound = false;\n\n\treturn this;\n};\n\nFragment.prototype.unrender = function unrender$1 ( shouldDestroy ) {\n\tthis.items.forEach( shouldDestroy ? unrenderAndDestroy$1 : unrender$1$1 );\n\tthis.rendered = false;\n};\n\nFragment.prototype.update = function update$1 () {\n\tif ( this.dirty ) {\n\t\tif ( !this.updating ) {\n\t\t\tthis.dirty = false;\n\t\t\tthis.updating = true;\n\t\t\tthis.items.forEach( update$1$1 );\n\t\t\tthis.updating = false;\n\t\t} else if ( this.isRoot ) {\n\t\t\trunloop.addFragmentToRoot( this );\n\t\t}\n\t}\n};\n\nFragment.prototype.valueOf = function valueOf () {\n\tif ( this.items.length === 1 ) {\n\t\treturn this.items[0].valueOf();\n\t}\n\n\tif ( this.dirtyValue ) {\n\t\tvar values = {};\n\t\tvar source = processItems( this.items, values, this.ractive._guid );\n\t\tvar parsed = parseJSON( source, values );\n\n\t\tthis.value = parsed ?\n\t\t\tparsed.value :\n\t\t\tthis.toString();\n\n\t\tthis.dirtyValue = false;\n\t}\n\n\treturn this.value;\n};\n\n// TODO should resetTemplate be asynchronous? i.e. should it be a case\n// of outro, update template, intro? I reckon probably not, since that\n// could be achieved with unrender-resetTemplate-render. Also, it should\n// conceptually be similar to resetPartial, which couldn't be async\n\nfunction Ractive$resetTemplate ( template ) {\n\ttemplateConfigurator.init( null, this, { template: template });\n\n\tvar transitionsEnabled = this.transitionsEnabled;\n\tthis.transitionsEnabled = false;\n\n\t// Is this is a component, we need to set the `shouldDestroy`\n\t// flag, otherwise it will assume by default that a parent node\n\t// will be detached, and therefore it doesn't need to bother\n\t// detaching its own nodes\n\tvar component = this.component;\n\tif ( component ) component.shouldDestroy = true;\n\tthis.unrender();\n\tif ( component ) component.shouldDestroy = false;\n\n\t// remove existing fragment and create new one\n\tthis.fragment.unbind().unrender( true );\n\n\tthis.fragment = new Fragment({\n\t\ttemplate: this.template,\n\t\troot: this,\n\t\towner: this\n\t});\n\n\tvar docFrag = createDocumentFragment();\n\tthis.fragment.bind( this.viewmodel ).render( docFrag );\n\n\t// if this is a component, its el may not be valid, so find a\n\t// target based on the component container\n\tif ( component ) {\n\t\tthis.fragment.findParentNode().insertBefore( docFrag, component.findNextNode() );\n\t} else {\n\t\tthis.el.insertBefore( docFrag, this.anchor );\n\t}\n\n\tthis.transitionsEnabled = transitionsEnabled;\n}\n\nvar reverse$1 = makeArrayMethod( 'reverse' ).path;\n\nfunction Ractive$set ( keypath, value ) {\n\tvar ractive = this;\n\n\treturn set$1( ractive, build( ractive, keypath, value ) );\n}\n\nvar shift$1 = makeArrayMethod( 'shift' ).path;\n\nvar sort$1 = makeArrayMethod( 'sort' ).path;\n\nvar splice$1 = makeArrayMethod( 'splice' ).path;\n\nfunction Ractive$subtract ( keypath, d ) {\n\treturn add$1( this, keypath, ( d === undefined ? -1 : -d ) );\n}\n\nvar teardownHook$1 = new Hook( 'teardown' );\n\n// Teardown. This goes through the root fragment and all its children, removing observers\n// and generally cleaning up after itself\n\nfunction Ractive$teardown () {\n\tif ( this.torndown ) {\n\t\twarnIfDebug( 'ractive.teardown() was called on a Ractive instance that was already torn down' );\n\t\treturn Promise$1.resolve();\n\t}\n\n\tthis.torndown = true;\n\tthis.fragment.unbind();\n\tthis.viewmodel.teardown();\n\n\tthis._observers.forEach( cancel$1 );\n\n\tif ( this.fragment.rendered && this.el.__ractive_instances__ ) {\n\t\tremoveFromArray( this.el.__ractive_instances__, this );\n\t}\n\n\tthis.shouldDestroy = true;\n\tvar promise = ( this.fragment.rendered ? this.unrender() : Promise$1.resolve() );\n\n\tteardownHook$1.fire( this );\n\n\treturn promise;\n}\n\nfunction Ractive$toggle ( keypath ) {\n\tif ( typeof keypath !== 'string' ) {\n\t\tthrow new TypeError( badArguments );\n\t}\n\n\treturn set$1( this, gather( this, keypath ).map( function ( m ) { return [ m, !m.get() ]; } ) );\n}\n\nfunction Ractive$toCSS() {\n\tvar cssIds = [ this.cssId ].concat( this.findAllComponents().map( function ( c ) { return c.cssId; } ) );\n\tvar uniqueCssIds = Object.keys(cssIds.reduce( function ( ids, id ) { return (ids[id] = true, ids); }, {}));\n\treturn getCSS( uniqueCssIds );\n}\n\nfunction Ractive$toHTML () {\n\treturn this.fragment.toString( true );\n}\n\nfunction Ractive$transition ( name, node, params ) {\n\n\tif ( node instanceof HTMLElement ) {\n\t\t// good to go\n\t}\n\telse if ( isObject( node ) ) {\n\t\t// omitted, use event node\n\t\tparams = node;\n\t}\n\n\t// if we allow query selector, then it won't work\n\t// simple params like \"fast\"\n\n\t// else if ( typeof node === 'string' ) {\n\t// \t// query selector\n\t// \tnode = this.find( node )\n\t// }\n\n\tnode = node || this.event.node;\n\n\tif ( !node || !node._ractive ) {\n\t\tfatal( (\"No node was supplied for transition \" + name) );\n\t}\n\n\tparams = params || {};\n\tvar owner = node._ractive.proxy;\n\tvar transition = new Transition({ owner: owner, parentFragment: owner.parentFragment, name: name, params: params });\n\ttransition.bind();\n\n\tvar promise = runloop.start( this, true );\n\trunloop.registerTransition( transition );\n\trunloop.end();\n\n\tpromise.then( function () { return transition.unbind(); } );\n\treturn promise;\n}\n\nfunction unlink$2( here ) {\n\tvar promise = runloop.start();\n\tthis.viewmodel.joinAll( splitKeypath( here ), { lastLink: false } ).unlink();\n\trunloop.end();\n\treturn promise;\n}\n\nvar unrenderHook$1 = new Hook( 'unrender' );\n\nfunction Ractive$unrender () {\n\tif ( !this.fragment.rendered ) {\n\t\twarnIfDebug( 'ractive.unrender() was called on a Ractive instance that was not rendered' );\n\t\treturn Promise$1.resolve();\n\t}\n\n\tvar promise = runloop.start( this, true );\n\n\t// If this is a component, and the component isn't marked for destruction,\n\t// don't detach nodes from the DOM unnecessarily\n\tvar shouldDestroy = !this.component || this.component.shouldDestroy || this.shouldDestroy;\n\tthis.fragment.unrender( shouldDestroy );\n\n\tremoveFromArray( this.el.__ractive_instances__, this );\n\n\tunrenderHook$1.fire( this );\n\n\trunloop.end();\n\treturn promise;\n}\n\nvar unshift$1 = makeArrayMethod( 'unshift' ).path;\n\nfunction Ractive$updateModel ( keypath, cascade ) {\n\tvar promise = runloop.start( this, true );\n\n\tif ( !keypath ) {\n\t\tthis.viewmodel.updateFromBindings( true );\n\t} else {\n\t\tthis.viewmodel.joinAll( splitKeypath( keypath ) ).updateFromBindings( cascade !== false );\n\t}\n\n\trunloop.end();\n\n\treturn promise;\n}\n\nvar proto = {\n\tadd: Ractive$add,\n\tanimate: Ractive$animate,\n\tdetach: Ractive$detach,\n\tfind: Ractive$find,\n\tfindAll: Ractive$findAll,\n\tfindAllComponents: Ractive$findAllComponents,\n\tfindComponent: Ractive$findComponent,\n\tfindContainer: Ractive$findContainer,\n\tfindParent: Ractive$findParent,\n\tfire: Ractive$fire,\n\tget: Ractive$get,\n\tgetNodeInfo: getNodeInfo,\n\tinsert: Ractive$insert,\n\tlink: link$2,\n\tmerge: thisRactive$merge,\n\tobserve: observe,\n\tobserveList: observeList,\n\tobserveOnce: observeOnce,\n\t// TODO reinstate these\n\t// observeListOnce,\n\toff: Ractive$off,\n\ton: Ractive$on,\n\tonce: Ractive$once,\n\tpop: pop$1,\n\tpush: push$1,\n\trender: Ractive$render,\n\treset: Ractive$reset,\n\tresetPartial: resetPartial,\n\tresetTemplate: Ractive$resetTemplate,\n\treverse: reverse$1,\n\tset: Ractive$set,\n\tshift: shift$1,\n\tsort: sort$1,\n\tsplice: splice$1,\n\tsubtract: Ractive$subtract,\n\tteardown: Ractive$teardown,\n\ttoggle: Ractive$toggle,\n\ttoCSS: Ractive$toCSS,\n\ttoCss: Ractive$toCSS,\n\ttoHTML: Ractive$toHTML,\n\ttoHtml: Ractive$toHTML,\n\ttransition: Ractive$transition,\n\tunlink: unlink$2,\n\tunrender: Ractive$unrender,\n\tunshift: unshift$1,\n\tupdate: Ractive$update,\n\tupdateModel: Ractive$updateModel\n};\n\nvar wrap$1 = function ( method, superMethod, force ) {\n\n\tif ( force || needsSuper( method, superMethod ) )  {\n\n\t\treturn function () {\n\n\t\t\tvar hasSuper = ( '_super' in this ), _super = this._super, result;\n\n\t\t\tthis._super = superMethod;\n\n\t\t\tresult = method.apply( this, arguments );\n\n\t\t\tif ( hasSuper ) {\n\t\t\t\tthis._super = _super;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\telse {\n\t\treturn method;\n\t}\n};\n\nfunction needsSuper ( method, superMethod ) {\n\treturn typeof superMethod === 'function' && /_super/.test( method );\n}\n\nfunction unwrap ( Child ) {\n\tvar options = {};\n\n\twhile ( Child ) {\n\t\taddRegistries( Child, options );\n\t\taddOtherOptions( Child, options );\n\n\t\tif ( Child._Parent !== Ractive ) {\n\t\t\tChild = Child._Parent;\n\t\t} else {\n\t\t\tChild = false;\n\t\t}\n\t}\n\n\treturn options;\n}\n\nfunction addRegistries ( Child, options ) {\n\tregistries.forEach( function ( r ) {\n\t\taddRegistry(\n\t\t\tr.useDefaults ? Child.prototype : Child,\n\t\t\toptions, r.name );\n\t});\n}\n\nfunction addRegistry ( target, options, name ) {\n\tvar registry, keys = Object.keys( target[ name ] );\n\n\tif ( !keys.length ) { return; }\n\n\tif ( !( registry = options[ name ] ) ) {\n\t\tregistry = options[ name ] = {};\n\t}\n\n\tkeys\n\t\t.filter( function ( key ) { return !( key in registry ); } )\n\t\t.forEach( function ( key ) { return registry[ key ] = target[ name ][ key ]; } );\n}\n\nfunction addOtherOptions ( Child, options ) {\n\tObject.keys( Child.prototype ).forEach( function ( key ) {\n\t\tif ( key === 'computed' ) { return; }\n\n\t\tvar value = Child.prototype[ key ];\n\n\t\tif ( !( key in options ) ) {\n\t\t\toptions[ key ] = value._method ? value._method : value;\n\t\t}\n\n\t\t// is it a wrapped function?\n\t\telse if ( typeof options[ key ] === 'function'\n\t\t\t\t&& typeof value === 'function'\n\t\t\t\t&& options[ key ]._method ) {\n\n\t\t\tvar result, needsSuper = value._method;\n\n\t\t\tif ( needsSuper ) { value = value._method; }\n\n\t\t\t// rewrap bound directly to parent fn\n\t\t\tresult = wrap$1( options[ key ]._method, value );\n\n\t\t\tif ( needsSuper ) { result._method = result; }\n\n\t\t\toptions[ key ] = result;\n\t\t}\n\t});\n}\n\nfunction extend$3 () {\n\tvar options = [], len = arguments.length;\n\twhile ( len-- ) options[ len ] = arguments[ len ];\n\n\tif( !options.length ) {\n\t\treturn extendOne( this );\n\t} else {\n\t\treturn options.reduce( extendOne, this );\n\t}\n}\n\nfunction extendOne ( Parent, options ) {\n\tif ( options === void 0 ) options = {};\n\n\tvar Child, proto;\n\n\t// if we're extending with another Ractive instance...\n\t//\n\t//   var Human = Ractive.extend(...), Spider = Ractive.extend(...);\n\t//   var Spiderman = Human.extend( Spider );\n\t//\n\t// ...inherit prototype methods and default options as well\n\tif ( options.prototype instanceof Ractive ) {\n\t\toptions = unwrap( options );\n\t}\n\n\tChild = function ( options ) {\n\t\tif ( !( this instanceof Child ) ) return new Child( options );\n\n\t\tconstruct( this, options || {} );\n\t\tinitialise( this, options || {}, {} );\n\t};\n\n\tproto = create( Parent.prototype );\n\tproto.constructor = Child;\n\n\t// Static properties\n\tdefineProperties( Child, {\n\t\t// alias prototype as defaults\n\t\tdefaults: { value: proto },\n\n\t\t// extendable\n\t\textend: { value: extend$3, writable: true, configurable: true },\n\n\t\t// Parent - for IE8, can't use Object.getPrototypeOf\n\t\t_Parent: { value: Parent }\n\t});\n\n\t// extend configuration\n\tconfig.extend( Parent, proto, options );\n\n\tdataConfigurator.extend( Parent, proto, options );\n\n\tif ( options.computed ) {\n\t\tproto.computed = extend$1( create( Parent.prototype.computed ), options.computed );\n\t}\n\n\tChild.prototype = proto;\n\n\treturn Child;\n}\n\nfunction joinKeys () {\n\tvar keys = [], len = arguments.length;\n\twhile ( len-- ) keys[ len ] = arguments[ len ];\n\n\treturn keys.map( escapeKey ).join( '.' );\n}\n\nfunction splitKeypath$1 ( keypath ) {\n\treturn splitKeypath( keypath ).map( unescapeKey );\n}\n\n// Ractive.js makes liberal use of things like Array.prototype.indexOf. In\n// older browsers, these are made available via a shim - here, we do a quick\n// pre-flight check to make sure that either a) we're not in a shit browser,\n// or b) we're using a Ractive-legacy.js build\nvar FUNCTION = 'function';\n\nif (\n\ttypeof Date.now !== FUNCTION                 ||\n\ttypeof String.prototype.trim !== FUNCTION    ||\n\ttypeof Object.keys !== FUNCTION              ||\n\ttypeof Array.prototype.indexOf !== FUNCTION  ||\n\ttypeof Array.prototype.forEach !== FUNCTION  ||\n\ttypeof Array.prototype.map !== FUNCTION      ||\n\ttypeof Array.prototype.filter !== FUNCTION   ||\n\t( win && typeof win.addEventListener !== FUNCTION )\n) {\n\tthrow new Error( 'It looks like you\\'re attempting to use Ractive.js in an older browser. You\\'ll need to use one of the \\'legacy builds\\' in order to continue - see http://docs.ractivejs.org/latest/legacy-builds for more information.' );\n}\n\nfunction Ractive ( options ) {\n\tif ( !( this instanceof Ractive ) ) return new Ractive( options );\n\n\tconstruct( this, options || {} );\n\tinitialise( this, options || {}, {} );\n}\n\nextend$1( Ractive.prototype, proto, defaults );\nRactive.prototype.constructor = Ractive;\n\n// alias prototype as `defaults`\nRactive.defaults = Ractive.prototype;\n\n// static properties\ndefineProperties( Ractive, {\n\n\t// debug flag\n\tDEBUG:          { writable: true, value: true },\n\tDEBUG_PROMISES: { writable: true, value: true },\n\n\t// static methods:\n\textend:         { value: extend$3 },\n\tescapeKey:      { value: escapeKey },\n\tgetNodeInfo:    { value: staticInfo },\n\tjoinKeys:       { value: joinKeys },\n\tparse:          { value: parse },\n\tsplitKeypath:   { value: splitKeypath$1 },\n\tunescapeKey:    { value: unescapeKey },\n\tgetCSS:         { value: getCSS },\n\n\t// namespaced constructors\n\tPromise:        { value: Promise$1 },\n\n\t// support\n\tenhance:        { writable: true, value: false },\n\tsvg:            { value: svg },\n\tmagic:          { value: magic },\n\n\t// version\n\tVERSION:        { value: '0.8.0' },\n\n\t// plugins\n\tadaptors:       { writable: true, value: {} },\n\tcomponents:     { writable: true, value: {} },\n\tdecorators:     { writable: true, value: {} },\n\teasing:         { writable: true, value: easing },\n\tevents:         { writable: true, value: {} },\n\tinterpolators:  { writable: true, value: interpolators },\n\tpartials:       { writable: true, value: {} },\n\ttransitions:    { writable: true, value: {} }\n});\n\nreturn Ractive;\n\n})));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ractive/ractive.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"container\\\">\\t\\n    <div>\\n        <h3>Progressbar Width Handler</h3>\\n    </div>\\n\\t<div class=\\\"row-1\\\">\\n        <!-- Uses Ractive Component to encapsulate the progressbar template -->\\n\\t   <ProgressbarHandler />\\n    </div>\\t\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/views/app.html\n ** module id = 2\n ** module chunks = 0\n **/","/* Name- progressbarHandler.js\r\n  Description- The Ractive Component - ProgressbarHandler\r\n  Version- 1.0\r\n*/\r\n\r\nimport Ractive from 'ractive';  \r\nimport Template from '../../views/progressbar.html'; /* Imports template to be used in ractive component */\r\n\r\n/* Creates a ractive component encapsulating properties and methods */\r\nvar ProgressbarHandler = Ractive.extend({  \r\n    isolated: true,\r\n    template: Template,\r\n\r\n    /* Event handler method to be called upon width change button clicks */\r\n    changeInterval: function (val) {\r\n        \r\n        /* Holds the selected progress bar value from drop down */\r\n        var selectedBar = this.get('selectedProgressBar');\r\n        if(selectedBar == null) return;\r\n        \r\n        var keyPath = 'progressbars[' + selectedBar + '].value';\r\n        var keyPath1 = 'progressbars[' + selectedBar + '].showvalue';\r\n        \r\n        if(this.get(keyPath1) < 0) \r\n        {\r\n            this.set(keyPath, 0);\r\n            this.set(keyPath1, 0);\r\n        }\r\n        var nextVal = this.get(keyPath1) + val;\r\n        this.set(keyPath1, nextVal);\r\n        this.animate(keyPath, nextVal);        \r\n    },\r\n    \r\n    /* Initializes data */\r\n    data: function () {\r\n        return {\r\n            selectedProgressBar: 'select',\r\n            progressbars: [\r\n                { name: 'ProgressBar1', value: 0, showvalue: 0 },\r\n                { name: 'ProgressBar2', value: 0, showvalue: 0 },\r\n                { name: 'ProgressBar3', value: 0, showvalue: 0 }\r\n            ],\r\n            intervals: [ +25, +10, -10, -25 ]\r\n        };\r\n    }    \r\n});\r\n\r\nexport default ProgressbarHandler;  \n\n\n/** WEBPACK FOOTER **\n ** ./app/js/components/progressbarHandler.js\n **/","module.exports = \"    <!-- This is the main template to show the progressbar content -->\\r\\n    <!-- Loop over the 'progressbars' property of ractive instance and show -->\\r\\n    {{#each progressbars}}\\r\\n        <div class=\\\"row-pb\\\">\\r\\n            <div class=\\\"display-label\\\">{{showvalue < 0 ? 0 : showvalue}}%</div>\\r\\n            <div class=\\\"progress-bar{{value > 100 ? 'R' : 'B'}}\\\" style=\\\"width: {{value > 100 ? 100 : ( value < 0 ? 0 : value )}}%\\\"></div>\\r\\n        </div>\\r\\n    {{/each}}\\r\\n\\r\\n    <!-- Progress-bar drop-down -->\\r\\n    <select value=\\\"{{selectedProgressBar}}\\\" class=\\\"row-select\\\">\\r\\n        <option selected value=\\\"select\\\">Select Progress Bar</option>\\r\\n        {{#each progressbars :index}}\\r\\n            <option value=\\\"{{index}}\\\">{{name}}</option>\\r\\n        {{/each}}\\r\\n    </select>\\r\\n\\r\\n    <!-- Width change buttons -->\\r\\n    {{#each intervals}}\\r\\n        <button disabled=\\\"{{selectedProgressBar == 'select'}}\\\" \\r\\n                on-click=\\\"@this.changeInterval(this)\\\" class=\\\"btns\\\">\\r\\n            {{this > 0 ? \\\"+\\\" : \\\"\\\"}}{{this}}\\r\\n        </button>\\r\\n    {{/each}}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/views/progressbar.html\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}